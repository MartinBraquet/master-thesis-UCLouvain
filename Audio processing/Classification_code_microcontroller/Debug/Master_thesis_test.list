
Master_thesis_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d9b4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000ba4  0800da78  0800da78  0001da78  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800e61c  0800e61c  000202dc  2**0
                  CONTENTS
  4 .ARM          00000000  0800e61c  0800e61c  000202dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800e61c  0800e61c  000202dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800e61c  0800e61c  0001e61c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800e620  0800e620  0001e620  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002dc  20000000  0800e624  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004194  200002dc  0800e900  000202dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20004470  0800e900  00024470  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000202dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001146e  00000000  00000000  00020304  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000025d1  00000000  00000000  00031772  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000a90  00000000  00000000  00033d48  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000938  00000000  00000000  000347d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00016033  00000000  00000000  00035110  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000b91d  00000000  00000000  0004b143  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0008496d  00000000  00000000  00056a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000db3cd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003b8c  00000000  00000000  000db448  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200002dc 	.word	0x200002dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800da5c 	.word	0x0800da5c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200002e0 	.word	0x200002e0
 8000104:	0800da5c 	.word	0x0800da5c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f8f0 	bl	8000414 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__divsi3>:
 8000240:	4603      	mov	r3, r0
 8000242:	430b      	orrs	r3, r1
 8000244:	d47f      	bmi.n	8000346 <__divsi3+0x106>
 8000246:	2200      	movs	r2, #0
 8000248:	0843      	lsrs	r3, r0, #1
 800024a:	428b      	cmp	r3, r1
 800024c:	d374      	bcc.n	8000338 <__divsi3+0xf8>
 800024e:	0903      	lsrs	r3, r0, #4
 8000250:	428b      	cmp	r3, r1
 8000252:	d35f      	bcc.n	8000314 <__divsi3+0xd4>
 8000254:	0a03      	lsrs	r3, r0, #8
 8000256:	428b      	cmp	r3, r1
 8000258:	d344      	bcc.n	80002e4 <__divsi3+0xa4>
 800025a:	0b03      	lsrs	r3, r0, #12
 800025c:	428b      	cmp	r3, r1
 800025e:	d328      	bcc.n	80002b2 <__divsi3+0x72>
 8000260:	0c03      	lsrs	r3, r0, #16
 8000262:	428b      	cmp	r3, r1
 8000264:	d30d      	bcc.n	8000282 <__divsi3+0x42>
 8000266:	22ff      	movs	r2, #255	; 0xff
 8000268:	0209      	lsls	r1, r1, #8
 800026a:	ba12      	rev	r2, r2
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d302      	bcc.n	8000278 <__divsi3+0x38>
 8000272:	1212      	asrs	r2, r2, #8
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	d065      	beq.n	8000344 <__divsi3+0x104>
 8000278:	0b03      	lsrs	r3, r0, #12
 800027a:	428b      	cmp	r3, r1
 800027c:	d319      	bcc.n	80002b2 <__divsi3+0x72>
 800027e:	e000      	b.n	8000282 <__divsi3+0x42>
 8000280:	0a09      	lsrs	r1, r1, #8
 8000282:	0bc3      	lsrs	r3, r0, #15
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x4c>
 8000288:	03cb      	lsls	r3, r1, #15
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b83      	lsrs	r3, r0, #14
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x58>
 8000294:	038b      	lsls	r3, r1, #14
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b43      	lsrs	r3, r0, #13
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x64>
 80002a0:	034b      	lsls	r3, r1, #13
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b03      	lsrs	r3, r0, #12
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x70>
 80002ac:	030b      	lsls	r3, r1, #12
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0ac3      	lsrs	r3, r0, #11
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x7c>
 80002b8:	02cb      	lsls	r3, r1, #11
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a83      	lsrs	r3, r0, #10
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x88>
 80002c4:	028b      	lsls	r3, r1, #10
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a43      	lsrs	r3, r0, #9
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x94>
 80002d0:	024b      	lsls	r3, r1, #9
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a03      	lsrs	r3, r0, #8
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0xa0>
 80002dc:	020b      	lsls	r3, r1, #8
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	d2cd      	bcs.n	8000280 <__divsi3+0x40>
 80002e4:	09c3      	lsrs	r3, r0, #7
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xae>
 80002ea:	01cb      	lsls	r3, r1, #7
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0983      	lsrs	r3, r0, #6
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xba>
 80002f6:	018b      	lsls	r3, r1, #6
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0943      	lsrs	r3, r0, #5
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xc6>
 8000302:	014b      	lsls	r3, r1, #5
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0903      	lsrs	r3, r0, #4
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xd2>
 800030e:	010b      	lsls	r3, r1, #4
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	08c3      	lsrs	r3, r0, #3
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xde>
 800031a:	00cb      	lsls	r3, r1, #3
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	0883      	lsrs	r3, r0, #2
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xea>
 8000326:	008b      	lsls	r3, r1, #2
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0843      	lsrs	r3, r0, #1
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xf6>
 8000332:	004b      	lsls	r3, r1, #1
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	1a41      	subs	r1, r0, r1
 800033a:	d200      	bcs.n	800033e <__divsi3+0xfe>
 800033c:	4601      	mov	r1, r0
 800033e:	4152      	adcs	r2, r2
 8000340:	4610      	mov	r0, r2
 8000342:	4770      	bx	lr
 8000344:	e05d      	b.n	8000402 <__divsi3+0x1c2>
 8000346:	0fca      	lsrs	r2, r1, #31
 8000348:	d000      	beq.n	800034c <__divsi3+0x10c>
 800034a:	4249      	negs	r1, r1
 800034c:	1003      	asrs	r3, r0, #32
 800034e:	d300      	bcc.n	8000352 <__divsi3+0x112>
 8000350:	4240      	negs	r0, r0
 8000352:	4053      	eors	r3, r2
 8000354:	2200      	movs	r2, #0
 8000356:	469c      	mov	ip, r3
 8000358:	0903      	lsrs	r3, r0, #4
 800035a:	428b      	cmp	r3, r1
 800035c:	d32d      	bcc.n	80003ba <__divsi3+0x17a>
 800035e:	0a03      	lsrs	r3, r0, #8
 8000360:	428b      	cmp	r3, r1
 8000362:	d312      	bcc.n	800038a <__divsi3+0x14a>
 8000364:	22fc      	movs	r2, #252	; 0xfc
 8000366:	0189      	lsls	r1, r1, #6
 8000368:	ba12      	rev	r2, r2
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d30c      	bcc.n	800038a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	1192      	asrs	r2, r2, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d308      	bcc.n	800038a <__divsi3+0x14a>
 8000378:	0189      	lsls	r1, r1, #6
 800037a:	1192      	asrs	r2, r2, #6
 800037c:	428b      	cmp	r3, r1
 800037e:	d304      	bcc.n	800038a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	d03a      	beq.n	80003fa <__divsi3+0x1ba>
 8000384:	1192      	asrs	r2, r2, #6
 8000386:	e000      	b.n	800038a <__divsi3+0x14a>
 8000388:	0989      	lsrs	r1, r1, #6
 800038a:	09c3      	lsrs	r3, r0, #7
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x154>
 8000390:	01cb      	lsls	r3, r1, #7
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0983      	lsrs	r3, r0, #6
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x160>
 800039c:	018b      	lsls	r3, r1, #6
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0943      	lsrs	r3, r0, #5
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x16c>
 80003a8:	014b      	lsls	r3, r1, #5
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0903      	lsrs	r3, r0, #4
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x178>
 80003b4:	010b      	lsls	r3, r1, #4
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	08c3      	lsrs	r3, r0, #3
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x184>
 80003c0:	00cb      	lsls	r3, r1, #3
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	0883      	lsrs	r3, r0, #2
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x190>
 80003cc:	008b      	lsls	r3, r1, #2
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	d2d9      	bcs.n	8000388 <__divsi3+0x148>
 80003d4:	0843      	lsrs	r3, r0, #1
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d301      	bcc.n	80003de <__divsi3+0x19e>
 80003da:	004b      	lsls	r3, r1, #1
 80003dc:	1ac0      	subs	r0, r0, r3
 80003de:	4152      	adcs	r2, r2
 80003e0:	1a41      	subs	r1, r0, r1
 80003e2:	d200      	bcs.n	80003e6 <__divsi3+0x1a6>
 80003e4:	4601      	mov	r1, r0
 80003e6:	4663      	mov	r3, ip
 80003e8:	4152      	adcs	r2, r2
 80003ea:	105b      	asrs	r3, r3, #1
 80003ec:	4610      	mov	r0, r2
 80003ee:	d301      	bcc.n	80003f4 <__divsi3+0x1b4>
 80003f0:	4240      	negs	r0, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d500      	bpl.n	80003f8 <__divsi3+0x1b8>
 80003f6:	4249      	negs	r1, r1
 80003f8:	4770      	bx	lr
 80003fa:	4663      	mov	r3, ip
 80003fc:	105b      	asrs	r3, r3, #1
 80003fe:	d300      	bcc.n	8000402 <__divsi3+0x1c2>
 8000400:	4240      	negs	r0, r0
 8000402:	b501      	push	{r0, lr}
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f805 	bl	8000414 <__aeabi_idiv0>
 800040a:	bd02      	pop	{r1, pc}

0800040c <__aeabi_idivmod>:
 800040c:	2900      	cmp	r1, #0
 800040e:	d0f8      	beq.n	8000402 <__divsi3+0x1c2>
 8000410:	e716      	b.n	8000240 <__divsi3>
 8000412:	4770      	bx	lr

08000414 <__aeabi_idiv0>:
 8000414:	4770      	bx	lr
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdrcmple>:
 8000418:	4684      	mov	ip, r0
 800041a:	1c10      	adds	r0, r2, #0
 800041c:	4662      	mov	r2, ip
 800041e:	468c      	mov	ip, r1
 8000420:	1c19      	adds	r1, r3, #0
 8000422:	4663      	mov	r3, ip
 8000424:	e000      	b.n	8000428 <__aeabi_cdcmpeq>
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdcmpeq>:
 8000428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800042a:	f001 fe5d 	bl	80020e8 <__ledf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	d401      	bmi.n	8000436 <__aeabi_cdcmpeq+0xe>
 8000432:	2100      	movs	r1, #0
 8000434:	42c8      	cmn	r0, r1
 8000436:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000438 <__aeabi_dcmpeq>:
 8000438:	b510      	push	{r4, lr}
 800043a:	f001 fdb5 	bl	8001fa8 <__eqdf2>
 800043e:	4240      	negs	r0, r0
 8000440:	3001      	adds	r0, #1
 8000442:	bd10      	pop	{r4, pc}

08000444 <__aeabi_dcmplt>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f001 fe4f 	bl	80020e8 <__ledf2>
 800044a:	2800      	cmp	r0, #0
 800044c:	db01      	blt.n	8000452 <__aeabi_dcmplt+0xe>
 800044e:	2000      	movs	r0, #0
 8000450:	bd10      	pop	{r4, pc}
 8000452:	2001      	movs	r0, #1
 8000454:	bd10      	pop	{r4, pc}
 8000456:	46c0      	nop			; (mov r8, r8)

08000458 <__aeabi_dcmple>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fe45 	bl	80020e8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	dd01      	ble.n	8000466 <__aeabi_dcmple+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmpgt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fdd7 	bl	8002020 <__gedf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dc01      	bgt.n	800047a <__aeabi_dcmpgt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpge>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fdcd 	bl	8002020 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	da01      	bge.n	800048e <__aeabi_dcmpge+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_cfrcmple>:
 8000494:	4684      	mov	ip, r0
 8000496:	1c08      	adds	r0, r1, #0
 8000498:	4661      	mov	r1, ip
 800049a:	e7ff      	b.n	800049c <__aeabi_cfcmpeq>

0800049c <__aeabi_cfcmpeq>:
 800049c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800049e:	f000 fba9 	bl	8000bf4 <__lesf2>
 80004a2:	2800      	cmp	r0, #0
 80004a4:	d401      	bmi.n	80004aa <__aeabi_cfcmpeq+0xe>
 80004a6:	2100      	movs	r1, #0
 80004a8:	42c8      	cmn	r0, r1
 80004aa:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004ac <__aeabi_fcmpeq>:
 80004ac:	b510      	push	{r4, lr}
 80004ae:	f000 fb2b 	bl	8000b08 <__eqsf2>
 80004b2:	4240      	negs	r0, r0
 80004b4:	3001      	adds	r0, #1
 80004b6:	bd10      	pop	{r4, pc}

080004b8 <__aeabi_fcmplt>:
 80004b8:	b510      	push	{r4, lr}
 80004ba:	f000 fb9b 	bl	8000bf4 <__lesf2>
 80004be:	2800      	cmp	r0, #0
 80004c0:	db01      	blt.n	80004c6 <__aeabi_fcmplt+0xe>
 80004c2:	2000      	movs	r0, #0
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	2001      	movs	r0, #1
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)

080004cc <__aeabi_fcmple>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 fb91 	bl	8000bf4 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	dd01      	ble.n	80004da <__aeabi_fcmple+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmpgt>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fb39 	bl	8000b58 <__gesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dc01      	bgt.n	80004ee <__aeabi_fcmpgt+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpge>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fb2f 	bl	8000b58 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	da01      	bge.n	8000502 <__aeabi_fcmpge+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__clzsi2>:
 8000508:	211c      	movs	r1, #28
 800050a:	2301      	movs	r3, #1
 800050c:	041b      	lsls	r3, r3, #16
 800050e:	4298      	cmp	r0, r3
 8000510:	d301      	bcc.n	8000516 <__clzsi2+0xe>
 8000512:	0c00      	lsrs	r0, r0, #16
 8000514:	3910      	subs	r1, #16
 8000516:	0a1b      	lsrs	r3, r3, #8
 8000518:	4298      	cmp	r0, r3
 800051a:	d301      	bcc.n	8000520 <__clzsi2+0x18>
 800051c:	0a00      	lsrs	r0, r0, #8
 800051e:	3908      	subs	r1, #8
 8000520:	091b      	lsrs	r3, r3, #4
 8000522:	4298      	cmp	r0, r3
 8000524:	d301      	bcc.n	800052a <__clzsi2+0x22>
 8000526:	0900      	lsrs	r0, r0, #4
 8000528:	3904      	subs	r1, #4
 800052a:	a202      	add	r2, pc, #8	; (adr r2, 8000534 <__clzsi2+0x2c>)
 800052c:	5c10      	ldrb	r0, [r2, r0]
 800052e:	1840      	adds	r0, r0, r1
 8000530:	4770      	bx	lr
 8000532:	46c0      	nop			; (mov r8, r8)
 8000534:	02020304 	.word	0x02020304
 8000538:	01010101 	.word	0x01010101
	...

08000544 <__aeabi_f2uiz>:
 8000544:	219e      	movs	r1, #158	; 0x9e
 8000546:	b510      	push	{r4, lr}
 8000548:	05c9      	lsls	r1, r1, #23
 800054a:	1c04      	adds	r4, r0, #0
 800054c:	f7ff ffd2 	bl	80004f4 <__aeabi_fcmpge>
 8000550:	2800      	cmp	r0, #0
 8000552:	d103      	bne.n	800055c <__aeabi_f2uiz+0x18>
 8000554:	1c20      	adds	r0, r4, #0
 8000556:	f000 fea9 	bl	80012ac <__aeabi_f2iz>
 800055a:	bd10      	pop	{r4, pc}
 800055c:	219e      	movs	r1, #158	; 0x9e
 800055e:	1c20      	adds	r0, r4, #0
 8000560:	05c9      	lsls	r1, r1, #23
 8000562:	f000 fcc9 	bl	8000ef8 <__aeabi_fsub>
 8000566:	f000 fea1 	bl	80012ac <__aeabi_f2iz>
 800056a:	2380      	movs	r3, #128	; 0x80
 800056c:	061b      	lsls	r3, r3, #24
 800056e:	469c      	mov	ip, r3
 8000570:	4460      	add	r0, ip
 8000572:	e7f2      	b.n	800055a <__aeabi_f2uiz+0x16>

08000574 <__aeabi_d2uiz>:
 8000574:	b570      	push	{r4, r5, r6, lr}
 8000576:	2200      	movs	r2, #0
 8000578:	4b0c      	ldr	r3, [pc, #48]	; (80005ac <__aeabi_d2uiz+0x38>)
 800057a:	0004      	movs	r4, r0
 800057c:	000d      	movs	r5, r1
 800057e:	f7ff ff7f 	bl	8000480 <__aeabi_dcmpge>
 8000582:	2800      	cmp	r0, #0
 8000584:	d104      	bne.n	8000590 <__aeabi_d2uiz+0x1c>
 8000586:	0020      	movs	r0, r4
 8000588:	0029      	movs	r1, r5
 800058a:	f002 fbeb 	bl	8002d64 <__aeabi_d2iz>
 800058e:	bd70      	pop	{r4, r5, r6, pc}
 8000590:	4b06      	ldr	r3, [pc, #24]	; (80005ac <__aeabi_d2uiz+0x38>)
 8000592:	2200      	movs	r2, #0
 8000594:	0020      	movs	r0, r4
 8000596:	0029      	movs	r1, r5
 8000598:	f002 f880 	bl	800269c <__aeabi_dsub>
 800059c:	f002 fbe2 	bl	8002d64 <__aeabi_d2iz>
 80005a0:	2380      	movs	r3, #128	; 0x80
 80005a2:	061b      	lsls	r3, r3, #24
 80005a4:	469c      	mov	ip, r3
 80005a6:	4460      	add	r0, ip
 80005a8:	e7f1      	b.n	800058e <__aeabi_d2uiz+0x1a>
 80005aa:	46c0      	nop			; (mov r8, r8)
 80005ac:	41e00000 	.word	0x41e00000

080005b0 <__aeabi_fadd>:
 80005b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b2:	4647      	mov	r7, r8
 80005b4:	46ce      	mov	lr, r9
 80005b6:	0243      	lsls	r3, r0, #9
 80005b8:	0a5b      	lsrs	r3, r3, #9
 80005ba:	0044      	lsls	r4, r0, #1
 80005bc:	0fc2      	lsrs	r2, r0, #31
 80005be:	469c      	mov	ip, r3
 80005c0:	0048      	lsls	r0, r1, #1
 80005c2:	00dd      	lsls	r5, r3, #3
 80005c4:	024b      	lsls	r3, r1, #9
 80005c6:	0e24      	lsrs	r4, r4, #24
 80005c8:	0a5b      	lsrs	r3, r3, #9
 80005ca:	0e00      	lsrs	r0, r0, #24
 80005cc:	b580      	push	{r7, lr}
 80005ce:	4698      	mov	r8, r3
 80005d0:	0026      	movs	r6, r4
 80005d2:	4691      	mov	r9, r2
 80005d4:	0fc9      	lsrs	r1, r1, #31
 80005d6:	00db      	lsls	r3, r3, #3
 80005d8:	1a27      	subs	r7, r4, r0
 80005da:	428a      	cmp	r2, r1
 80005dc:	d029      	beq.n	8000632 <__aeabi_fadd+0x82>
 80005de:	2f00      	cmp	r7, #0
 80005e0:	dd15      	ble.n	800060e <__aeabi_fadd+0x5e>
 80005e2:	2800      	cmp	r0, #0
 80005e4:	d14a      	bne.n	800067c <__aeabi_fadd+0xcc>
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	d000      	beq.n	80005ec <__aeabi_fadd+0x3c>
 80005ea:	e095      	b.n	8000718 <__aeabi_fadd+0x168>
 80005ec:	08ed      	lsrs	r5, r5, #3
 80005ee:	2cff      	cmp	r4, #255	; 0xff
 80005f0:	d100      	bne.n	80005f4 <__aeabi_fadd+0x44>
 80005f2:	e088      	b.n	8000706 <__aeabi_fadd+0x156>
 80005f4:	026b      	lsls	r3, r5, #9
 80005f6:	0a5b      	lsrs	r3, r3, #9
 80005f8:	b2e6      	uxtb	r6, r4
 80005fa:	025b      	lsls	r3, r3, #9
 80005fc:	05f6      	lsls	r6, r6, #23
 80005fe:	0a58      	lsrs	r0, r3, #9
 8000600:	4330      	orrs	r0, r6
 8000602:	07d2      	lsls	r2, r2, #31
 8000604:	4310      	orrs	r0, r2
 8000606:	bc0c      	pop	{r2, r3}
 8000608:	4690      	mov	r8, r2
 800060a:	4699      	mov	r9, r3
 800060c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800060e:	2f00      	cmp	r7, #0
 8000610:	d000      	beq.n	8000614 <__aeabi_fadd+0x64>
 8000612:	e087      	b.n	8000724 <__aeabi_fadd+0x174>
 8000614:	1c60      	adds	r0, r4, #1
 8000616:	b2c0      	uxtb	r0, r0
 8000618:	2801      	cmp	r0, #1
 800061a:	dc00      	bgt.n	800061e <__aeabi_fadd+0x6e>
 800061c:	e0b6      	b.n	800078c <__aeabi_fadd+0x1dc>
 800061e:	1aee      	subs	r6, r5, r3
 8000620:	0172      	lsls	r2, r6, #5
 8000622:	d500      	bpl.n	8000626 <__aeabi_fadd+0x76>
 8000624:	e0c5      	b.n	80007b2 <__aeabi_fadd+0x202>
 8000626:	2e00      	cmp	r6, #0
 8000628:	d13d      	bne.n	80006a6 <__aeabi_fadd+0xf6>
 800062a:	2200      	movs	r2, #0
 800062c:	2600      	movs	r6, #0
 800062e:	2300      	movs	r3, #0
 8000630:	e7e3      	b.n	80005fa <__aeabi_fadd+0x4a>
 8000632:	2f00      	cmp	r7, #0
 8000634:	dc00      	bgt.n	8000638 <__aeabi_fadd+0x88>
 8000636:	e096      	b.n	8000766 <__aeabi_fadd+0x1b6>
 8000638:	2800      	cmp	r0, #0
 800063a:	d05d      	beq.n	80006f8 <__aeabi_fadd+0x148>
 800063c:	2cff      	cmp	r4, #255	; 0xff
 800063e:	d060      	beq.n	8000702 <__aeabi_fadd+0x152>
 8000640:	2280      	movs	r2, #128	; 0x80
 8000642:	04d2      	lsls	r2, r2, #19
 8000644:	4313      	orrs	r3, r2
 8000646:	2f1b      	cmp	r7, #27
 8000648:	dd00      	ble.n	800064c <__aeabi_fadd+0x9c>
 800064a:	e0ec      	b.n	8000826 <__aeabi_fadd+0x276>
 800064c:	2220      	movs	r2, #32
 800064e:	1bd2      	subs	r2, r2, r7
 8000650:	0018      	movs	r0, r3
 8000652:	4093      	lsls	r3, r2
 8000654:	40f8      	lsrs	r0, r7
 8000656:	1e5a      	subs	r2, r3, #1
 8000658:	4193      	sbcs	r3, r2
 800065a:	4303      	orrs	r3, r0
 800065c:	18ed      	adds	r5, r5, r3
 800065e:	016b      	lsls	r3, r5, #5
 8000660:	d57b      	bpl.n	800075a <__aeabi_fadd+0x1aa>
 8000662:	3401      	adds	r4, #1
 8000664:	2cff      	cmp	r4, #255	; 0xff
 8000666:	d100      	bne.n	800066a <__aeabi_fadd+0xba>
 8000668:	e0b7      	b.n	80007da <__aeabi_fadd+0x22a>
 800066a:	2201      	movs	r2, #1
 800066c:	2607      	movs	r6, #7
 800066e:	402a      	ands	r2, r5
 8000670:	086b      	lsrs	r3, r5, #1
 8000672:	4d9a      	ldr	r5, [pc, #616]	; (80008dc <__aeabi_fadd+0x32c>)
 8000674:	401d      	ands	r5, r3
 8000676:	4315      	orrs	r5, r2
 8000678:	402e      	ands	r6, r5
 800067a:	e029      	b.n	80006d0 <__aeabi_fadd+0x120>
 800067c:	2cff      	cmp	r4, #255	; 0xff
 800067e:	d0b5      	beq.n	80005ec <__aeabi_fadd+0x3c>
 8000680:	2280      	movs	r2, #128	; 0x80
 8000682:	04d2      	lsls	r2, r2, #19
 8000684:	4313      	orrs	r3, r2
 8000686:	2f1b      	cmp	r7, #27
 8000688:	dd00      	ble.n	800068c <__aeabi_fadd+0xdc>
 800068a:	e0b2      	b.n	80007f2 <__aeabi_fadd+0x242>
 800068c:	2220      	movs	r2, #32
 800068e:	1bd2      	subs	r2, r2, r7
 8000690:	0019      	movs	r1, r3
 8000692:	4093      	lsls	r3, r2
 8000694:	40f9      	lsrs	r1, r7
 8000696:	1e5a      	subs	r2, r3, #1
 8000698:	4193      	sbcs	r3, r2
 800069a:	430b      	orrs	r3, r1
 800069c:	1aed      	subs	r5, r5, r3
 800069e:	016b      	lsls	r3, r5, #5
 80006a0:	d55b      	bpl.n	800075a <__aeabi_fadd+0x1aa>
 80006a2:	01ad      	lsls	r5, r5, #6
 80006a4:	09ae      	lsrs	r6, r5, #6
 80006a6:	0030      	movs	r0, r6
 80006a8:	f7ff ff2e 	bl	8000508 <__clzsi2>
 80006ac:	3805      	subs	r0, #5
 80006ae:	4086      	lsls	r6, r0
 80006b0:	4284      	cmp	r4, r0
 80006b2:	dc65      	bgt.n	8000780 <__aeabi_fadd+0x1d0>
 80006b4:	1b04      	subs	r4, r0, r4
 80006b6:	0033      	movs	r3, r6
 80006b8:	2020      	movs	r0, #32
 80006ba:	3401      	adds	r4, #1
 80006bc:	40e3      	lsrs	r3, r4
 80006be:	1b04      	subs	r4, r0, r4
 80006c0:	40a6      	lsls	r6, r4
 80006c2:	1e75      	subs	r5, r6, #1
 80006c4:	41ae      	sbcs	r6, r5
 80006c6:	4333      	orrs	r3, r6
 80006c8:	2607      	movs	r6, #7
 80006ca:	001d      	movs	r5, r3
 80006cc:	2400      	movs	r4, #0
 80006ce:	401e      	ands	r6, r3
 80006d0:	2201      	movs	r2, #1
 80006d2:	464b      	mov	r3, r9
 80006d4:	401a      	ands	r2, r3
 80006d6:	2e00      	cmp	r6, #0
 80006d8:	d004      	beq.n	80006e4 <__aeabi_fadd+0x134>
 80006da:	230f      	movs	r3, #15
 80006dc:	402b      	ands	r3, r5
 80006de:	2b04      	cmp	r3, #4
 80006e0:	d000      	beq.n	80006e4 <__aeabi_fadd+0x134>
 80006e2:	3504      	adds	r5, #4
 80006e4:	016b      	lsls	r3, r5, #5
 80006e6:	d400      	bmi.n	80006ea <__aeabi_fadd+0x13a>
 80006e8:	e780      	b.n	80005ec <__aeabi_fadd+0x3c>
 80006ea:	3401      	adds	r4, #1
 80006ec:	b2e6      	uxtb	r6, r4
 80006ee:	2cff      	cmp	r4, #255	; 0xff
 80006f0:	d12f      	bne.n	8000752 <__aeabi_fadd+0x1a2>
 80006f2:	26ff      	movs	r6, #255	; 0xff
 80006f4:	2300      	movs	r3, #0
 80006f6:	e780      	b.n	80005fa <__aeabi_fadd+0x4a>
 80006f8:	2b00      	cmp	r3, #0
 80006fa:	d152      	bne.n	80007a2 <__aeabi_fadd+0x1f2>
 80006fc:	2cff      	cmp	r4, #255	; 0xff
 80006fe:	d000      	beq.n	8000702 <__aeabi_fadd+0x152>
 8000700:	e774      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000702:	000a      	movs	r2, r1
 8000704:	08ed      	lsrs	r5, r5, #3
 8000706:	2d00      	cmp	r5, #0
 8000708:	d0f3      	beq.n	80006f2 <__aeabi_fadd+0x142>
 800070a:	2380      	movs	r3, #128	; 0x80
 800070c:	03db      	lsls	r3, r3, #15
 800070e:	432b      	orrs	r3, r5
 8000710:	025b      	lsls	r3, r3, #9
 8000712:	0a5b      	lsrs	r3, r3, #9
 8000714:	26ff      	movs	r6, #255	; 0xff
 8000716:	e770      	b.n	80005fa <__aeabi_fadd+0x4a>
 8000718:	3f01      	subs	r7, #1
 800071a:	2f00      	cmp	r7, #0
 800071c:	d0be      	beq.n	800069c <__aeabi_fadd+0xec>
 800071e:	2cff      	cmp	r4, #255	; 0xff
 8000720:	d1b1      	bne.n	8000686 <__aeabi_fadd+0xd6>
 8000722:	e763      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000724:	2c00      	cmp	r4, #0
 8000726:	d047      	beq.n	80007b8 <__aeabi_fadd+0x208>
 8000728:	28ff      	cmp	r0, #255	; 0xff
 800072a:	d069      	beq.n	8000800 <__aeabi_fadd+0x250>
 800072c:	2480      	movs	r4, #128	; 0x80
 800072e:	04e4      	lsls	r4, r4, #19
 8000730:	427a      	negs	r2, r7
 8000732:	4325      	orrs	r5, r4
 8000734:	2a1b      	cmp	r2, #27
 8000736:	dd00      	ble.n	800073a <__aeabi_fadd+0x18a>
 8000738:	e0c5      	b.n	80008c6 <__aeabi_fadd+0x316>
 800073a:	002c      	movs	r4, r5
 800073c:	2620      	movs	r6, #32
 800073e:	40d4      	lsrs	r4, r2
 8000740:	1ab2      	subs	r2, r6, r2
 8000742:	4095      	lsls	r5, r2
 8000744:	1e6a      	subs	r2, r5, #1
 8000746:	4195      	sbcs	r5, r2
 8000748:	4325      	orrs	r5, r4
 800074a:	1b5d      	subs	r5, r3, r5
 800074c:	0004      	movs	r4, r0
 800074e:	4689      	mov	r9, r1
 8000750:	e7a5      	b.n	800069e <__aeabi_fadd+0xee>
 8000752:	01ab      	lsls	r3, r5, #6
 8000754:	0a5b      	lsrs	r3, r3, #9
 8000756:	e750      	b.n	80005fa <__aeabi_fadd+0x4a>
 8000758:	2400      	movs	r4, #0
 800075a:	2201      	movs	r2, #1
 800075c:	464b      	mov	r3, r9
 800075e:	401a      	ands	r2, r3
 8000760:	076b      	lsls	r3, r5, #29
 8000762:	d1ba      	bne.n	80006da <__aeabi_fadd+0x12a>
 8000764:	e742      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000766:	2f00      	cmp	r7, #0
 8000768:	d13b      	bne.n	80007e2 <__aeabi_fadd+0x232>
 800076a:	3401      	adds	r4, #1
 800076c:	b2e0      	uxtb	r0, r4
 800076e:	2801      	cmp	r0, #1
 8000770:	dd4a      	ble.n	8000808 <__aeabi_fadd+0x258>
 8000772:	2cff      	cmp	r4, #255	; 0xff
 8000774:	d0bd      	beq.n	80006f2 <__aeabi_fadd+0x142>
 8000776:	2607      	movs	r6, #7
 8000778:	18ed      	adds	r5, r5, r3
 800077a:	086d      	lsrs	r5, r5, #1
 800077c:	402e      	ands	r6, r5
 800077e:	e7a7      	b.n	80006d0 <__aeabi_fadd+0x120>
 8000780:	2307      	movs	r3, #7
 8000782:	4d57      	ldr	r5, [pc, #348]	; (80008e0 <__aeabi_fadd+0x330>)
 8000784:	1a24      	subs	r4, r4, r0
 8000786:	4035      	ands	r5, r6
 8000788:	401e      	ands	r6, r3
 800078a:	e7a1      	b.n	80006d0 <__aeabi_fadd+0x120>
 800078c:	2c00      	cmp	r4, #0
 800078e:	d11b      	bne.n	80007c8 <__aeabi_fadd+0x218>
 8000790:	2d00      	cmp	r5, #0
 8000792:	d16e      	bne.n	8000872 <__aeabi_fadd+0x2c2>
 8000794:	2b00      	cmp	r3, #0
 8000796:	d100      	bne.n	800079a <__aeabi_fadd+0x1ea>
 8000798:	e09a      	b.n	80008d0 <__aeabi_fadd+0x320>
 800079a:	000a      	movs	r2, r1
 800079c:	001d      	movs	r5, r3
 800079e:	003c      	movs	r4, r7
 80007a0:	e724      	b.n	80005ec <__aeabi_fadd+0x3c>
 80007a2:	3f01      	subs	r7, #1
 80007a4:	2f00      	cmp	r7, #0
 80007a6:	d100      	bne.n	80007aa <__aeabi_fadd+0x1fa>
 80007a8:	e758      	b.n	800065c <__aeabi_fadd+0xac>
 80007aa:	2cff      	cmp	r4, #255	; 0xff
 80007ac:	d000      	beq.n	80007b0 <__aeabi_fadd+0x200>
 80007ae:	e74a      	b.n	8000646 <__aeabi_fadd+0x96>
 80007b0:	e7a7      	b.n	8000702 <__aeabi_fadd+0x152>
 80007b2:	1b5e      	subs	r6, r3, r5
 80007b4:	4689      	mov	r9, r1
 80007b6:	e776      	b.n	80006a6 <__aeabi_fadd+0xf6>
 80007b8:	2d00      	cmp	r5, #0
 80007ba:	d11c      	bne.n	80007f6 <__aeabi_fadd+0x246>
 80007bc:	000a      	movs	r2, r1
 80007be:	28ff      	cmp	r0, #255	; 0xff
 80007c0:	d01f      	beq.n	8000802 <__aeabi_fadd+0x252>
 80007c2:	0004      	movs	r4, r0
 80007c4:	001d      	movs	r5, r3
 80007c6:	e711      	b.n	80005ec <__aeabi_fadd+0x3c>
 80007c8:	2d00      	cmp	r5, #0
 80007ca:	d15d      	bne.n	8000888 <__aeabi_fadd+0x2d8>
 80007cc:	2b00      	cmp	r3, #0
 80007ce:	d117      	bne.n	8000800 <__aeabi_fadd+0x250>
 80007d0:	2380      	movs	r3, #128	; 0x80
 80007d2:	2200      	movs	r2, #0
 80007d4:	03db      	lsls	r3, r3, #15
 80007d6:	26ff      	movs	r6, #255	; 0xff
 80007d8:	e70f      	b.n	80005fa <__aeabi_fadd+0x4a>
 80007da:	000a      	movs	r2, r1
 80007dc:	26ff      	movs	r6, #255	; 0xff
 80007de:	2300      	movs	r3, #0
 80007e0:	e70b      	b.n	80005fa <__aeabi_fadd+0x4a>
 80007e2:	2c00      	cmp	r4, #0
 80007e4:	d121      	bne.n	800082a <__aeabi_fadd+0x27a>
 80007e6:	2d00      	cmp	r5, #0
 80007e8:	d166      	bne.n	80008b8 <__aeabi_fadd+0x308>
 80007ea:	28ff      	cmp	r0, #255	; 0xff
 80007ec:	d1e9      	bne.n	80007c2 <__aeabi_fadd+0x212>
 80007ee:	001d      	movs	r5, r3
 80007f0:	e787      	b.n	8000702 <__aeabi_fadd+0x152>
 80007f2:	2301      	movs	r3, #1
 80007f4:	e752      	b.n	800069c <__aeabi_fadd+0xec>
 80007f6:	1c7a      	adds	r2, r7, #1
 80007f8:	d0a7      	beq.n	800074a <__aeabi_fadd+0x19a>
 80007fa:	43fa      	mvns	r2, r7
 80007fc:	28ff      	cmp	r0, #255	; 0xff
 80007fe:	d199      	bne.n	8000734 <__aeabi_fadd+0x184>
 8000800:	000a      	movs	r2, r1
 8000802:	001d      	movs	r5, r3
 8000804:	24ff      	movs	r4, #255	; 0xff
 8000806:	e6f1      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000808:	2e00      	cmp	r6, #0
 800080a:	d121      	bne.n	8000850 <__aeabi_fadd+0x2a0>
 800080c:	2d00      	cmp	r5, #0
 800080e:	d04f      	beq.n	80008b0 <__aeabi_fadd+0x300>
 8000810:	2b00      	cmp	r3, #0
 8000812:	d04c      	beq.n	80008ae <__aeabi_fadd+0x2fe>
 8000814:	18ed      	adds	r5, r5, r3
 8000816:	016b      	lsls	r3, r5, #5
 8000818:	d59e      	bpl.n	8000758 <__aeabi_fadd+0x1a8>
 800081a:	4b31      	ldr	r3, [pc, #196]	; (80008e0 <__aeabi_fadd+0x330>)
 800081c:	3607      	adds	r6, #7
 800081e:	402e      	ands	r6, r5
 8000820:	2401      	movs	r4, #1
 8000822:	401d      	ands	r5, r3
 8000824:	e754      	b.n	80006d0 <__aeabi_fadd+0x120>
 8000826:	2301      	movs	r3, #1
 8000828:	e718      	b.n	800065c <__aeabi_fadd+0xac>
 800082a:	28ff      	cmp	r0, #255	; 0xff
 800082c:	d0df      	beq.n	80007ee <__aeabi_fadd+0x23e>
 800082e:	2480      	movs	r4, #128	; 0x80
 8000830:	04e4      	lsls	r4, r4, #19
 8000832:	427f      	negs	r7, r7
 8000834:	4325      	orrs	r5, r4
 8000836:	2f1b      	cmp	r7, #27
 8000838:	dc4d      	bgt.n	80008d6 <__aeabi_fadd+0x326>
 800083a:	2620      	movs	r6, #32
 800083c:	1bf6      	subs	r6, r6, r7
 800083e:	002c      	movs	r4, r5
 8000840:	40b5      	lsls	r5, r6
 8000842:	40fc      	lsrs	r4, r7
 8000844:	1e6a      	subs	r2, r5, #1
 8000846:	4195      	sbcs	r5, r2
 8000848:	4325      	orrs	r5, r4
 800084a:	18ed      	adds	r5, r5, r3
 800084c:	0004      	movs	r4, r0
 800084e:	e706      	b.n	800065e <__aeabi_fadd+0xae>
 8000850:	2d00      	cmp	r5, #0
 8000852:	d0cc      	beq.n	80007ee <__aeabi_fadd+0x23e>
 8000854:	2b00      	cmp	r3, #0
 8000856:	d100      	bne.n	800085a <__aeabi_fadd+0x2aa>
 8000858:	e753      	b.n	8000702 <__aeabi_fadd+0x152>
 800085a:	2180      	movs	r1, #128	; 0x80
 800085c:	4660      	mov	r0, ip
 800085e:	03c9      	lsls	r1, r1, #15
 8000860:	4208      	tst	r0, r1
 8000862:	d003      	beq.n	800086c <__aeabi_fadd+0x2bc>
 8000864:	4640      	mov	r0, r8
 8000866:	4208      	tst	r0, r1
 8000868:	d100      	bne.n	800086c <__aeabi_fadd+0x2bc>
 800086a:	001d      	movs	r5, r3
 800086c:	2101      	movs	r1, #1
 800086e:	4011      	ands	r1, r2
 8000870:	e747      	b.n	8000702 <__aeabi_fadd+0x152>
 8000872:	2b00      	cmp	r3, #0
 8000874:	d100      	bne.n	8000878 <__aeabi_fadd+0x2c8>
 8000876:	e6b9      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000878:	1aea      	subs	r2, r5, r3
 800087a:	0150      	lsls	r0, r2, #5
 800087c:	d525      	bpl.n	80008ca <__aeabi_fadd+0x31a>
 800087e:	2607      	movs	r6, #7
 8000880:	1b5d      	subs	r5, r3, r5
 8000882:	402e      	ands	r6, r5
 8000884:	4689      	mov	r9, r1
 8000886:	e723      	b.n	80006d0 <__aeabi_fadd+0x120>
 8000888:	24ff      	movs	r4, #255	; 0xff
 800088a:	2b00      	cmp	r3, #0
 800088c:	d100      	bne.n	8000890 <__aeabi_fadd+0x2e0>
 800088e:	e6ad      	b.n	80005ec <__aeabi_fadd+0x3c>
 8000890:	2280      	movs	r2, #128	; 0x80
 8000892:	4660      	mov	r0, ip
 8000894:	03d2      	lsls	r2, r2, #15
 8000896:	4210      	tst	r0, r2
 8000898:	d004      	beq.n	80008a4 <__aeabi_fadd+0x2f4>
 800089a:	4640      	mov	r0, r8
 800089c:	4210      	tst	r0, r2
 800089e:	d101      	bne.n	80008a4 <__aeabi_fadd+0x2f4>
 80008a0:	001d      	movs	r5, r3
 80008a2:	4689      	mov	r9, r1
 80008a4:	2201      	movs	r2, #1
 80008a6:	464b      	mov	r3, r9
 80008a8:	24ff      	movs	r4, #255	; 0xff
 80008aa:	401a      	ands	r2, r3
 80008ac:	e69e      	b.n	80005ec <__aeabi_fadd+0x3c>
 80008ae:	002b      	movs	r3, r5
 80008b0:	08dd      	lsrs	r5, r3, #3
 80008b2:	000a      	movs	r2, r1
 80008b4:	2400      	movs	r4, #0
 80008b6:	e69d      	b.n	80005f4 <__aeabi_fadd+0x44>
 80008b8:	1c7a      	adds	r2, r7, #1
 80008ba:	d0c6      	beq.n	800084a <__aeabi_fadd+0x29a>
 80008bc:	43ff      	mvns	r7, r7
 80008be:	28ff      	cmp	r0, #255	; 0xff
 80008c0:	d1b9      	bne.n	8000836 <__aeabi_fadd+0x286>
 80008c2:	001d      	movs	r5, r3
 80008c4:	e71d      	b.n	8000702 <__aeabi_fadd+0x152>
 80008c6:	2501      	movs	r5, #1
 80008c8:	e73f      	b.n	800074a <__aeabi_fadd+0x19a>
 80008ca:	1e15      	subs	r5, r2, #0
 80008cc:	d000      	beq.n	80008d0 <__aeabi_fadd+0x320>
 80008ce:	e744      	b.n	800075a <__aeabi_fadd+0x1aa>
 80008d0:	2200      	movs	r2, #0
 80008d2:	2300      	movs	r3, #0
 80008d4:	e691      	b.n	80005fa <__aeabi_fadd+0x4a>
 80008d6:	2501      	movs	r5, #1
 80008d8:	e7b7      	b.n	800084a <__aeabi_fadd+0x29a>
 80008da:	46c0      	nop			; (mov r8, r8)
 80008dc:	7dffffff 	.word	0x7dffffff
 80008e0:	fbffffff 	.word	0xfbffffff

080008e4 <__aeabi_fdiv>:
 80008e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008e6:	4657      	mov	r7, sl
 80008e8:	464e      	mov	r6, r9
 80008ea:	4645      	mov	r5, r8
 80008ec:	46de      	mov	lr, fp
 80008ee:	0244      	lsls	r4, r0, #9
 80008f0:	b5e0      	push	{r5, r6, r7, lr}
 80008f2:	0046      	lsls	r6, r0, #1
 80008f4:	4688      	mov	r8, r1
 80008f6:	0a64      	lsrs	r4, r4, #9
 80008f8:	0e36      	lsrs	r6, r6, #24
 80008fa:	0fc7      	lsrs	r7, r0, #31
 80008fc:	2e00      	cmp	r6, #0
 80008fe:	d063      	beq.n	80009c8 <__aeabi_fdiv+0xe4>
 8000900:	2eff      	cmp	r6, #255	; 0xff
 8000902:	d024      	beq.n	800094e <__aeabi_fdiv+0x6a>
 8000904:	2380      	movs	r3, #128	; 0x80
 8000906:	00e4      	lsls	r4, r4, #3
 8000908:	04db      	lsls	r3, r3, #19
 800090a:	431c      	orrs	r4, r3
 800090c:	2300      	movs	r3, #0
 800090e:	4699      	mov	r9, r3
 8000910:	469b      	mov	fp, r3
 8000912:	3e7f      	subs	r6, #127	; 0x7f
 8000914:	4643      	mov	r3, r8
 8000916:	4642      	mov	r2, r8
 8000918:	025d      	lsls	r5, r3, #9
 800091a:	0fd2      	lsrs	r2, r2, #31
 800091c:	005b      	lsls	r3, r3, #1
 800091e:	0a6d      	lsrs	r5, r5, #9
 8000920:	0e1b      	lsrs	r3, r3, #24
 8000922:	4690      	mov	r8, r2
 8000924:	4692      	mov	sl, r2
 8000926:	d065      	beq.n	80009f4 <__aeabi_fdiv+0x110>
 8000928:	2bff      	cmp	r3, #255	; 0xff
 800092a:	d055      	beq.n	80009d8 <__aeabi_fdiv+0xf4>
 800092c:	2280      	movs	r2, #128	; 0x80
 800092e:	2100      	movs	r1, #0
 8000930:	00ed      	lsls	r5, r5, #3
 8000932:	04d2      	lsls	r2, r2, #19
 8000934:	3b7f      	subs	r3, #127	; 0x7f
 8000936:	4315      	orrs	r5, r2
 8000938:	1af6      	subs	r6, r6, r3
 800093a:	4643      	mov	r3, r8
 800093c:	464a      	mov	r2, r9
 800093e:	407b      	eors	r3, r7
 8000940:	2a0f      	cmp	r2, #15
 8000942:	d900      	bls.n	8000946 <__aeabi_fdiv+0x62>
 8000944:	e08d      	b.n	8000a62 <__aeabi_fdiv+0x17e>
 8000946:	486d      	ldr	r0, [pc, #436]	; (8000afc <__aeabi_fdiv+0x218>)
 8000948:	0092      	lsls	r2, r2, #2
 800094a:	5882      	ldr	r2, [r0, r2]
 800094c:	4697      	mov	pc, r2
 800094e:	2c00      	cmp	r4, #0
 8000950:	d154      	bne.n	80009fc <__aeabi_fdiv+0x118>
 8000952:	2308      	movs	r3, #8
 8000954:	4699      	mov	r9, r3
 8000956:	3b06      	subs	r3, #6
 8000958:	26ff      	movs	r6, #255	; 0xff
 800095a:	469b      	mov	fp, r3
 800095c:	e7da      	b.n	8000914 <__aeabi_fdiv+0x30>
 800095e:	2500      	movs	r5, #0
 8000960:	4653      	mov	r3, sl
 8000962:	2902      	cmp	r1, #2
 8000964:	d01b      	beq.n	800099e <__aeabi_fdiv+0xba>
 8000966:	2903      	cmp	r1, #3
 8000968:	d100      	bne.n	800096c <__aeabi_fdiv+0x88>
 800096a:	e0bf      	b.n	8000aec <__aeabi_fdiv+0x208>
 800096c:	2901      	cmp	r1, #1
 800096e:	d028      	beq.n	80009c2 <__aeabi_fdiv+0xde>
 8000970:	0030      	movs	r0, r6
 8000972:	307f      	adds	r0, #127	; 0x7f
 8000974:	2800      	cmp	r0, #0
 8000976:	dd20      	ble.n	80009ba <__aeabi_fdiv+0xd6>
 8000978:	076a      	lsls	r2, r5, #29
 800097a:	d004      	beq.n	8000986 <__aeabi_fdiv+0xa2>
 800097c:	220f      	movs	r2, #15
 800097e:	402a      	ands	r2, r5
 8000980:	2a04      	cmp	r2, #4
 8000982:	d000      	beq.n	8000986 <__aeabi_fdiv+0xa2>
 8000984:	3504      	adds	r5, #4
 8000986:	012a      	lsls	r2, r5, #4
 8000988:	d503      	bpl.n	8000992 <__aeabi_fdiv+0xae>
 800098a:	0030      	movs	r0, r6
 800098c:	4a5c      	ldr	r2, [pc, #368]	; (8000b00 <__aeabi_fdiv+0x21c>)
 800098e:	3080      	adds	r0, #128	; 0x80
 8000990:	4015      	ands	r5, r2
 8000992:	28fe      	cmp	r0, #254	; 0xfe
 8000994:	dc03      	bgt.n	800099e <__aeabi_fdiv+0xba>
 8000996:	01ac      	lsls	r4, r5, #6
 8000998:	0a64      	lsrs	r4, r4, #9
 800099a:	b2c2      	uxtb	r2, r0
 800099c:	e001      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 800099e:	22ff      	movs	r2, #255	; 0xff
 80009a0:	2400      	movs	r4, #0
 80009a2:	0264      	lsls	r4, r4, #9
 80009a4:	05d2      	lsls	r2, r2, #23
 80009a6:	0a60      	lsrs	r0, r4, #9
 80009a8:	07db      	lsls	r3, r3, #31
 80009aa:	4310      	orrs	r0, r2
 80009ac:	4318      	orrs	r0, r3
 80009ae:	bc3c      	pop	{r2, r3, r4, r5}
 80009b0:	4690      	mov	r8, r2
 80009b2:	4699      	mov	r9, r3
 80009b4:	46a2      	mov	sl, r4
 80009b6:	46ab      	mov	fp, r5
 80009b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009ba:	2201      	movs	r2, #1
 80009bc:	1a10      	subs	r0, r2, r0
 80009be:	281b      	cmp	r0, #27
 80009c0:	dd7c      	ble.n	8000abc <__aeabi_fdiv+0x1d8>
 80009c2:	2200      	movs	r2, #0
 80009c4:	2400      	movs	r4, #0
 80009c6:	e7ec      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 80009c8:	2c00      	cmp	r4, #0
 80009ca:	d11d      	bne.n	8000a08 <__aeabi_fdiv+0x124>
 80009cc:	2304      	movs	r3, #4
 80009ce:	4699      	mov	r9, r3
 80009d0:	3b03      	subs	r3, #3
 80009d2:	2600      	movs	r6, #0
 80009d4:	469b      	mov	fp, r3
 80009d6:	e79d      	b.n	8000914 <__aeabi_fdiv+0x30>
 80009d8:	3eff      	subs	r6, #255	; 0xff
 80009da:	2d00      	cmp	r5, #0
 80009dc:	d120      	bne.n	8000a20 <__aeabi_fdiv+0x13c>
 80009de:	2102      	movs	r1, #2
 80009e0:	4643      	mov	r3, r8
 80009e2:	464a      	mov	r2, r9
 80009e4:	407b      	eors	r3, r7
 80009e6:	430a      	orrs	r2, r1
 80009e8:	2a0f      	cmp	r2, #15
 80009ea:	d8d8      	bhi.n	800099e <__aeabi_fdiv+0xba>
 80009ec:	4845      	ldr	r0, [pc, #276]	; (8000b04 <__aeabi_fdiv+0x220>)
 80009ee:	0092      	lsls	r2, r2, #2
 80009f0:	5882      	ldr	r2, [r0, r2]
 80009f2:	4697      	mov	pc, r2
 80009f4:	2d00      	cmp	r5, #0
 80009f6:	d119      	bne.n	8000a2c <__aeabi_fdiv+0x148>
 80009f8:	2101      	movs	r1, #1
 80009fa:	e7f1      	b.n	80009e0 <__aeabi_fdiv+0xfc>
 80009fc:	230c      	movs	r3, #12
 80009fe:	4699      	mov	r9, r3
 8000a00:	3b09      	subs	r3, #9
 8000a02:	26ff      	movs	r6, #255	; 0xff
 8000a04:	469b      	mov	fp, r3
 8000a06:	e785      	b.n	8000914 <__aeabi_fdiv+0x30>
 8000a08:	0020      	movs	r0, r4
 8000a0a:	f7ff fd7d 	bl	8000508 <__clzsi2>
 8000a0e:	2676      	movs	r6, #118	; 0x76
 8000a10:	1f43      	subs	r3, r0, #5
 8000a12:	409c      	lsls	r4, r3
 8000a14:	2300      	movs	r3, #0
 8000a16:	4276      	negs	r6, r6
 8000a18:	1a36      	subs	r6, r6, r0
 8000a1a:	4699      	mov	r9, r3
 8000a1c:	469b      	mov	fp, r3
 8000a1e:	e779      	b.n	8000914 <__aeabi_fdiv+0x30>
 8000a20:	464a      	mov	r2, r9
 8000a22:	2303      	movs	r3, #3
 8000a24:	431a      	orrs	r2, r3
 8000a26:	4691      	mov	r9, r2
 8000a28:	2103      	movs	r1, #3
 8000a2a:	e786      	b.n	800093a <__aeabi_fdiv+0x56>
 8000a2c:	0028      	movs	r0, r5
 8000a2e:	f7ff fd6b 	bl	8000508 <__clzsi2>
 8000a32:	1f43      	subs	r3, r0, #5
 8000a34:	1836      	adds	r6, r6, r0
 8000a36:	409d      	lsls	r5, r3
 8000a38:	3676      	adds	r6, #118	; 0x76
 8000a3a:	2100      	movs	r1, #0
 8000a3c:	e77d      	b.n	800093a <__aeabi_fdiv+0x56>
 8000a3e:	2480      	movs	r4, #128	; 0x80
 8000a40:	2300      	movs	r3, #0
 8000a42:	03e4      	lsls	r4, r4, #15
 8000a44:	22ff      	movs	r2, #255	; 0xff
 8000a46:	e7ac      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000a48:	2500      	movs	r5, #0
 8000a4a:	2380      	movs	r3, #128	; 0x80
 8000a4c:	03db      	lsls	r3, r3, #15
 8000a4e:	421c      	tst	r4, r3
 8000a50:	d028      	beq.n	8000aa4 <__aeabi_fdiv+0x1c0>
 8000a52:	421d      	tst	r5, r3
 8000a54:	d126      	bne.n	8000aa4 <__aeabi_fdiv+0x1c0>
 8000a56:	432b      	orrs	r3, r5
 8000a58:	025c      	lsls	r4, r3, #9
 8000a5a:	0a64      	lsrs	r4, r4, #9
 8000a5c:	4643      	mov	r3, r8
 8000a5e:	22ff      	movs	r2, #255	; 0xff
 8000a60:	e79f      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000a62:	0162      	lsls	r2, r4, #5
 8000a64:	016c      	lsls	r4, r5, #5
 8000a66:	42a2      	cmp	r2, r4
 8000a68:	d224      	bcs.n	8000ab4 <__aeabi_fdiv+0x1d0>
 8000a6a:	211b      	movs	r1, #27
 8000a6c:	2500      	movs	r5, #0
 8000a6e:	3e01      	subs	r6, #1
 8000a70:	2701      	movs	r7, #1
 8000a72:	0010      	movs	r0, r2
 8000a74:	006d      	lsls	r5, r5, #1
 8000a76:	0052      	lsls	r2, r2, #1
 8000a78:	2800      	cmp	r0, #0
 8000a7a:	db01      	blt.n	8000a80 <__aeabi_fdiv+0x19c>
 8000a7c:	4294      	cmp	r4, r2
 8000a7e:	d801      	bhi.n	8000a84 <__aeabi_fdiv+0x1a0>
 8000a80:	1b12      	subs	r2, r2, r4
 8000a82:	433d      	orrs	r5, r7
 8000a84:	3901      	subs	r1, #1
 8000a86:	2900      	cmp	r1, #0
 8000a88:	d1f3      	bne.n	8000a72 <__aeabi_fdiv+0x18e>
 8000a8a:	0014      	movs	r4, r2
 8000a8c:	1e62      	subs	r2, r4, #1
 8000a8e:	4194      	sbcs	r4, r2
 8000a90:	4325      	orrs	r5, r4
 8000a92:	e76d      	b.n	8000970 <__aeabi_fdiv+0x8c>
 8000a94:	46ba      	mov	sl, r7
 8000a96:	4659      	mov	r1, fp
 8000a98:	0025      	movs	r5, r4
 8000a9a:	4653      	mov	r3, sl
 8000a9c:	2902      	cmp	r1, #2
 8000a9e:	d000      	beq.n	8000aa2 <__aeabi_fdiv+0x1be>
 8000aa0:	e761      	b.n	8000966 <__aeabi_fdiv+0x82>
 8000aa2:	e77c      	b.n	800099e <__aeabi_fdiv+0xba>
 8000aa4:	2380      	movs	r3, #128	; 0x80
 8000aa6:	03db      	lsls	r3, r3, #15
 8000aa8:	431c      	orrs	r4, r3
 8000aaa:	0264      	lsls	r4, r4, #9
 8000aac:	0a64      	lsrs	r4, r4, #9
 8000aae:	003b      	movs	r3, r7
 8000ab0:	22ff      	movs	r2, #255	; 0xff
 8000ab2:	e776      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000ab4:	1b12      	subs	r2, r2, r4
 8000ab6:	211a      	movs	r1, #26
 8000ab8:	2501      	movs	r5, #1
 8000aba:	e7d9      	b.n	8000a70 <__aeabi_fdiv+0x18c>
 8000abc:	369e      	adds	r6, #158	; 0x9e
 8000abe:	002a      	movs	r2, r5
 8000ac0:	40b5      	lsls	r5, r6
 8000ac2:	002c      	movs	r4, r5
 8000ac4:	40c2      	lsrs	r2, r0
 8000ac6:	1e65      	subs	r5, r4, #1
 8000ac8:	41ac      	sbcs	r4, r5
 8000aca:	4314      	orrs	r4, r2
 8000acc:	0762      	lsls	r2, r4, #29
 8000ace:	d004      	beq.n	8000ada <__aeabi_fdiv+0x1f6>
 8000ad0:	220f      	movs	r2, #15
 8000ad2:	4022      	ands	r2, r4
 8000ad4:	2a04      	cmp	r2, #4
 8000ad6:	d000      	beq.n	8000ada <__aeabi_fdiv+0x1f6>
 8000ad8:	3404      	adds	r4, #4
 8000ada:	0162      	lsls	r2, r4, #5
 8000adc:	d403      	bmi.n	8000ae6 <__aeabi_fdiv+0x202>
 8000ade:	01a4      	lsls	r4, r4, #6
 8000ae0:	0a64      	lsrs	r4, r4, #9
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	e75d      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000ae6:	2201      	movs	r2, #1
 8000ae8:	2400      	movs	r4, #0
 8000aea:	e75a      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000aec:	2480      	movs	r4, #128	; 0x80
 8000aee:	03e4      	lsls	r4, r4, #15
 8000af0:	432c      	orrs	r4, r5
 8000af2:	0264      	lsls	r4, r4, #9
 8000af4:	0a64      	lsrs	r4, r4, #9
 8000af6:	22ff      	movs	r2, #255	; 0xff
 8000af8:	e753      	b.n	80009a2 <__aeabi_fdiv+0xbe>
 8000afa:	46c0      	nop			; (mov r8, r8)
 8000afc:	0800dbd8 	.word	0x0800dbd8
 8000b00:	f7ffffff 	.word	0xf7ffffff
 8000b04:	0800dc18 	.word	0x0800dc18

08000b08 <__eqsf2>:
 8000b08:	b570      	push	{r4, r5, r6, lr}
 8000b0a:	0042      	lsls	r2, r0, #1
 8000b0c:	024e      	lsls	r6, r1, #9
 8000b0e:	004c      	lsls	r4, r1, #1
 8000b10:	0245      	lsls	r5, r0, #9
 8000b12:	0a6d      	lsrs	r5, r5, #9
 8000b14:	0e12      	lsrs	r2, r2, #24
 8000b16:	0fc3      	lsrs	r3, r0, #31
 8000b18:	0a76      	lsrs	r6, r6, #9
 8000b1a:	0e24      	lsrs	r4, r4, #24
 8000b1c:	0fc9      	lsrs	r1, r1, #31
 8000b1e:	2aff      	cmp	r2, #255	; 0xff
 8000b20:	d00f      	beq.n	8000b42 <__eqsf2+0x3a>
 8000b22:	2cff      	cmp	r4, #255	; 0xff
 8000b24:	d011      	beq.n	8000b4a <__eqsf2+0x42>
 8000b26:	2001      	movs	r0, #1
 8000b28:	42a2      	cmp	r2, r4
 8000b2a:	d000      	beq.n	8000b2e <__eqsf2+0x26>
 8000b2c:	bd70      	pop	{r4, r5, r6, pc}
 8000b2e:	42b5      	cmp	r5, r6
 8000b30:	d1fc      	bne.n	8000b2c <__eqsf2+0x24>
 8000b32:	428b      	cmp	r3, r1
 8000b34:	d00d      	beq.n	8000b52 <__eqsf2+0x4a>
 8000b36:	2a00      	cmp	r2, #0
 8000b38:	d1f8      	bne.n	8000b2c <__eqsf2+0x24>
 8000b3a:	0028      	movs	r0, r5
 8000b3c:	1e45      	subs	r5, r0, #1
 8000b3e:	41a8      	sbcs	r0, r5
 8000b40:	e7f4      	b.n	8000b2c <__eqsf2+0x24>
 8000b42:	2001      	movs	r0, #1
 8000b44:	2d00      	cmp	r5, #0
 8000b46:	d1f1      	bne.n	8000b2c <__eqsf2+0x24>
 8000b48:	e7eb      	b.n	8000b22 <__eqsf2+0x1a>
 8000b4a:	2001      	movs	r0, #1
 8000b4c:	2e00      	cmp	r6, #0
 8000b4e:	d1ed      	bne.n	8000b2c <__eqsf2+0x24>
 8000b50:	e7e9      	b.n	8000b26 <__eqsf2+0x1e>
 8000b52:	2000      	movs	r0, #0
 8000b54:	e7ea      	b.n	8000b2c <__eqsf2+0x24>
 8000b56:	46c0      	nop			; (mov r8, r8)

08000b58 <__gesf2>:
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	004a      	lsls	r2, r1, #1
 8000b5c:	024e      	lsls	r6, r1, #9
 8000b5e:	0245      	lsls	r5, r0, #9
 8000b60:	0044      	lsls	r4, r0, #1
 8000b62:	0a6d      	lsrs	r5, r5, #9
 8000b64:	0e24      	lsrs	r4, r4, #24
 8000b66:	0fc3      	lsrs	r3, r0, #31
 8000b68:	0a76      	lsrs	r6, r6, #9
 8000b6a:	0e12      	lsrs	r2, r2, #24
 8000b6c:	0fc9      	lsrs	r1, r1, #31
 8000b6e:	2cff      	cmp	r4, #255	; 0xff
 8000b70:	d015      	beq.n	8000b9e <__gesf2+0x46>
 8000b72:	2aff      	cmp	r2, #255	; 0xff
 8000b74:	d00e      	beq.n	8000b94 <__gesf2+0x3c>
 8000b76:	2c00      	cmp	r4, #0
 8000b78:	d115      	bne.n	8000ba6 <__gesf2+0x4e>
 8000b7a:	2a00      	cmp	r2, #0
 8000b7c:	d101      	bne.n	8000b82 <__gesf2+0x2a>
 8000b7e:	2e00      	cmp	r6, #0
 8000b80:	d01c      	beq.n	8000bbc <__gesf2+0x64>
 8000b82:	2d00      	cmp	r5, #0
 8000b84:	d014      	beq.n	8000bb0 <__gesf2+0x58>
 8000b86:	428b      	cmp	r3, r1
 8000b88:	d027      	beq.n	8000bda <__gesf2+0x82>
 8000b8a:	2002      	movs	r0, #2
 8000b8c:	3b01      	subs	r3, #1
 8000b8e:	4018      	ands	r0, r3
 8000b90:	3801      	subs	r0, #1
 8000b92:	bd70      	pop	{r4, r5, r6, pc}
 8000b94:	2e00      	cmp	r6, #0
 8000b96:	d0ee      	beq.n	8000b76 <__gesf2+0x1e>
 8000b98:	2002      	movs	r0, #2
 8000b9a:	4240      	negs	r0, r0
 8000b9c:	e7f9      	b.n	8000b92 <__gesf2+0x3a>
 8000b9e:	2d00      	cmp	r5, #0
 8000ba0:	d1fa      	bne.n	8000b98 <__gesf2+0x40>
 8000ba2:	2aff      	cmp	r2, #255	; 0xff
 8000ba4:	d00e      	beq.n	8000bc4 <__gesf2+0x6c>
 8000ba6:	2a00      	cmp	r2, #0
 8000ba8:	d10e      	bne.n	8000bc8 <__gesf2+0x70>
 8000baa:	2e00      	cmp	r6, #0
 8000bac:	d0ed      	beq.n	8000b8a <__gesf2+0x32>
 8000bae:	e00b      	b.n	8000bc8 <__gesf2+0x70>
 8000bb0:	2301      	movs	r3, #1
 8000bb2:	3901      	subs	r1, #1
 8000bb4:	4399      	bics	r1, r3
 8000bb6:	0008      	movs	r0, r1
 8000bb8:	3001      	adds	r0, #1
 8000bba:	e7ea      	b.n	8000b92 <__gesf2+0x3a>
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	2d00      	cmp	r5, #0
 8000bc0:	d0e7      	beq.n	8000b92 <__gesf2+0x3a>
 8000bc2:	e7e2      	b.n	8000b8a <__gesf2+0x32>
 8000bc4:	2e00      	cmp	r6, #0
 8000bc6:	d1e7      	bne.n	8000b98 <__gesf2+0x40>
 8000bc8:	428b      	cmp	r3, r1
 8000bca:	d1de      	bne.n	8000b8a <__gesf2+0x32>
 8000bcc:	4294      	cmp	r4, r2
 8000bce:	dd05      	ble.n	8000bdc <__gesf2+0x84>
 8000bd0:	2102      	movs	r1, #2
 8000bd2:	1e58      	subs	r0, r3, #1
 8000bd4:	4008      	ands	r0, r1
 8000bd6:	3801      	subs	r0, #1
 8000bd8:	e7db      	b.n	8000b92 <__gesf2+0x3a>
 8000bda:	2400      	movs	r4, #0
 8000bdc:	42a2      	cmp	r2, r4
 8000bde:	dc04      	bgt.n	8000bea <__gesf2+0x92>
 8000be0:	42b5      	cmp	r5, r6
 8000be2:	d8d2      	bhi.n	8000b8a <__gesf2+0x32>
 8000be4:	2000      	movs	r0, #0
 8000be6:	42b5      	cmp	r5, r6
 8000be8:	d2d3      	bcs.n	8000b92 <__gesf2+0x3a>
 8000bea:	1e58      	subs	r0, r3, #1
 8000bec:	2301      	movs	r3, #1
 8000bee:	4398      	bics	r0, r3
 8000bf0:	3001      	adds	r0, #1
 8000bf2:	e7ce      	b.n	8000b92 <__gesf2+0x3a>

08000bf4 <__lesf2>:
 8000bf4:	b530      	push	{r4, r5, lr}
 8000bf6:	0042      	lsls	r2, r0, #1
 8000bf8:	0244      	lsls	r4, r0, #9
 8000bfa:	024d      	lsls	r5, r1, #9
 8000bfc:	0fc3      	lsrs	r3, r0, #31
 8000bfe:	0048      	lsls	r0, r1, #1
 8000c00:	0a64      	lsrs	r4, r4, #9
 8000c02:	0e12      	lsrs	r2, r2, #24
 8000c04:	0a6d      	lsrs	r5, r5, #9
 8000c06:	0e00      	lsrs	r0, r0, #24
 8000c08:	0fc9      	lsrs	r1, r1, #31
 8000c0a:	2aff      	cmp	r2, #255	; 0xff
 8000c0c:	d012      	beq.n	8000c34 <__lesf2+0x40>
 8000c0e:	28ff      	cmp	r0, #255	; 0xff
 8000c10:	d00c      	beq.n	8000c2c <__lesf2+0x38>
 8000c12:	2a00      	cmp	r2, #0
 8000c14:	d112      	bne.n	8000c3c <__lesf2+0x48>
 8000c16:	2800      	cmp	r0, #0
 8000c18:	d119      	bne.n	8000c4e <__lesf2+0x5a>
 8000c1a:	2d00      	cmp	r5, #0
 8000c1c:	d117      	bne.n	8000c4e <__lesf2+0x5a>
 8000c1e:	2c00      	cmp	r4, #0
 8000c20:	d02b      	beq.n	8000c7a <__lesf2+0x86>
 8000c22:	2002      	movs	r0, #2
 8000c24:	3b01      	subs	r3, #1
 8000c26:	4018      	ands	r0, r3
 8000c28:	3801      	subs	r0, #1
 8000c2a:	e026      	b.n	8000c7a <__lesf2+0x86>
 8000c2c:	2d00      	cmp	r5, #0
 8000c2e:	d0f0      	beq.n	8000c12 <__lesf2+0x1e>
 8000c30:	2002      	movs	r0, #2
 8000c32:	e022      	b.n	8000c7a <__lesf2+0x86>
 8000c34:	2c00      	cmp	r4, #0
 8000c36:	d1fb      	bne.n	8000c30 <__lesf2+0x3c>
 8000c38:	28ff      	cmp	r0, #255	; 0xff
 8000c3a:	d01f      	beq.n	8000c7c <__lesf2+0x88>
 8000c3c:	2800      	cmp	r0, #0
 8000c3e:	d11f      	bne.n	8000c80 <__lesf2+0x8c>
 8000c40:	2d00      	cmp	r5, #0
 8000c42:	d11d      	bne.n	8000c80 <__lesf2+0x8c>
 8000c44:	2002      	movs	r0, #2
 8000c46:	3b01      	subs	r3, #1
 8000c48:	4018      	ands	r0, r3
 8000c4a:	3801      	subs	r0, #1
 8000c4c:	e015      	b.n	8000c7a <__lesf2+0x86>
 8000c4e:	2c00      	cmp	r4, #0
 8000c50:	d00e      	beq.n	8000c70 <__lesf2+0x7c>
 8000c52:	428b      	cmp	r3, r1
 8000c54:	d1e5      	bne.n	8000c22 <__lesf2+0x2e>
 8000c56:	2200      	movs	r2, #0
 8000c58:	4290      	cmp	r0, r2
 8000c5a:	dc04      	bgt.n	8000c66 <__lesf2+0x72>
 8000c5c:	42ac      	cmp	r4, r5
 8000c5e:	d8e0      	bhi.n	8000c22 <__lesf2+0x2e>
 8000c60:	2000      	movs	r0, #0
 8000c62:	42ac      	cmp	r4, r5
 8000c64:	d209      	bcs.n	8000c7a <__lesf2+0x86>
 8000c66:	1e58      	subs	r0, r3, #1
 8000c68:	2301      	movs	r3, #1
 8000c6a:	4398      	bics	r0, r3
 8000c6c:	3001      	adds	r0, #1
 8000c6e:	e004      	b.n	8000c7a <__lesf2+0x86>
 8000c70:	2301      	movs	r3, #1
 8000c72:	3901      	subs	r1, #1
 8000c74:	4399      	bics	r1, r3
 8000c76:	0008      	movs	r0, r1
 8000c78:	3001      	adds	r0, #1
 8000c7a:	bd30      	pop	{r4, r5, pc}
 8000c7c:	2d00      	cmp	r5, #0
 8000c7e:	d1d7      	bne.n	8000c30 <__lesf2+0x3c>
 8000c80:	428b      	cmp	r3, r1
 8000c82:	d1ce      	bne.n	8000c22 <__lesf2+0x2e>
 8000c84:	4282      	cmp	r2, r0
 8000c86:	dde7      	ble.n	8000c58 <__lesf2+0x64>
 8000c88:	2102      	movs	r1, #2
 8000c8a:	1e58      	subs	r0, r3, #1
 8000c8c:	4008      	ands	r0, r1
 8000c8e:	3801      	subs	r0, #1
 8000c90:	e7f3      	b.n	8000c7a <__lesf2+0x86>
 8000c92:	46c0      	nop			; (mov r8, r8)

08000c94 <__aeabi_fmul>:
 8000c94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c96:	464e      	mov	r6, r9
 8000c98:	4657      	mov	r7, sl
 8000c9a:	4645      	mov	r5, r8
 8000c9c:	46de      	mov	lr, fp
 8000c9e:	b5e0      	push	{r5, r6, r7, lr}
 8000ca0:	0243      	lsls	r3, r0, #9
 8000ca2:	0a5b      	lsrs	r3, r3, #9
 8000ca4:	0045      	lsls	r5, r0, #1
 8000ca6:	b083      	sub	sp, #12
 8000ca8:	1c0f      	adds	r7, r1, #0
 8000caa:	4699      	mov	r9, r3
 8000cac:	0e2d      	lsrs	r5, r5, #24
 8000cae:	0fc6      	lsrs	r6, r0, #31
 8000cb0:	2d00      	cmp	r5, #0
 8000cb2:	d057      	beq.n	8000d64 <__aeabi_fmul+0xd0>
 8000cb4:	2dff      	cmp	r5, #255	; 0xff
 8000cb6:	d024      	beq.n	8000d02 <__aeabi_fmul+0x6e>
 8000cb8:	2080      	movs	r0, #128	; 0x80
 8000cba:	00db      	lsls	r3, r3, #3
 8000cbc:	04c0      	lsls	r0, r0, #19
 8000cbe:	4318      	orrs	r0, r3
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	4681      	mov	r9, r0
 8000cc4:	469a      	mov	sl, r3
 8000cc6:	469b      	mov	fp, r3
 8000cc8:	3d7f      	subs	r5, #127	; 0x7f
 8000cca:	027c      	lsls	r4, r7, #9
 8000ccc:	007a      	lsls	r2, r7, #1
 8000cce:	0ffb      	lsrs	r3, r7, #31
 8000cd0:	0a64      	lsrs	r4, r4, #9
 8000cd2:	0e12      	lsrs	r2, r2, #24
 8000cd4:	4698      	mov	r8, r3
 8000cd6:	d023      	beq.n	8000d20 <__aeabi_fmul+0x8c>
 8000cd8:	2aff      	cmp	r2, #255	; 0xff
 8000cda:	d04b      	beq.n	8000d74 <__aeabi_fmul+0xe0>
 8000cdc:	00e3      	lsls	r3, r4, #3
 8000cde:	2480      	movs	r4, #128	; 0x80
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	04e4      	lsls	r4, r4, #19
 8000ce4:	3a7f      	subs	r2, #127	; 0x7f
 8000ce6:	431c      	orrs	r4, r3
 8000ce8:	18ad      	adds	r5, r5, r2
 8000cea:	1c6b      	adds	r3, r5, #1
 8000cec:	4647      	mov	r7, r8
 8000cee:	9301      	str	r3, [sp, #4]
 8000cf0:	4653      	mov	r3, sl
 8000cf2:	4077      	eors	r7, r6
 8000cf4:	003a      	movs	r2, r7
 8000cf6:	2b0f      	cmp	r3, #15
 8000cf8:	d848      	bhi.n	8000d8c <__aeabi_fmul+0xf8>
 8000cfa:	497d      	ldr	r1, [pc, #500]	; (8000ef0 <__aeabi_fmul+0x25c>)
 8000cfc:	009b      	lsls	r3, r3, #2
 8000cfe:	58cb      	ldr	r3, [r1, r3]
 8000d00:	469f      	mov	pc, r3
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d000      	beq.n	8000d08 <__aeabi_fmul+0x74>
 8000d06:	e085      	b.n	8000e14 <__aeabi_fmul+0x180>
 8000d08:	3308      	adds	r3, #8
 8000d0a:	469a      	mov	sl, r3
 8000d0c:	3b06      	subs	r3, #6
 8000d0e:	469b      	mov	fp, r3
 8000d10:	027c      	lsls	r4, r7, #9
 8000d12:	007a      	lsls	r2, r7, #1
 8000d14:	0ffb      	lsrs	r3, r7, #31
 8000d16:	25ff      	movs	r5, #255	; 0xff
 8000d18:	0a64      	lsrs	r4, r4, #9
 8000d1a:	0e12      	lsrs	r2, r2, #24
 8000d1c:	4698      	mov	r8, r3
 8000d1e:	d1db      	bne.n	8000cd8 <__aeabi_fmul+0x44>
 8000d20:	2c00      	cmp	r4, #0
 8000d22:	d000      	beq.n	8000d26 <__aeabi_fmul+0x92>
 8000d24:	e090      	b.n	8000e48 <__aeabi_fmul+0x1b4>
 8000d26:	4652      	mov	r2, sl
 8000d28:	2301      	movs	r3, #1
 8000d2a:	431a      	orrs	r2, r3
 8000d2c:	4692      	mov	sl, r2
 8000d2e:	2001      	movs	r0, #1
 8000d30:	e7db      	b.n	8000cea <__aeabi_fmul+0x56>
 8000d32:	464c      	mov	r4, r9
 8000d34:	4658      	mov	r0, fp
 8000d36:	0017      	movs	r7, r2
 8000d38:	2802      	cmp	r0, #2
 8000d3a:	d024      	beq.n	8000d86 <__aeabi_fmul+0xf2>
 8000d3c:	2803      	cmp	r0, #3
 8000d3e:	d100      	bne.n	8000d42 <__aeabi_fmul+0xae>
 8000d40:	e0cf      	b.n	8000ee2 <__aeabi_fmul+0x24e>
 8000d42:	2200      	movs	r2, #0
 8000d44:	2300      	movs	r3, #0
 8000d46:	2801      	cmp	r0, #1
 8000d48:	d14d      	bne.n	8000de6 <__aeabi_fmul+0x152>
 8000d4a:	0258      	lsls	r0, r3, #9
 8000d4c:	05d2      	lsls	r2, r2, #23
 8000d4e:	0a40      	lsrs	r0, r0, #9
 8000d50:	07ff      	lsls	r7, r7, #31
 8000d52:	4310      	orrs	r0, r2
 8000d54:	4338      	orrs	r0, r7
 8000d56:	b003      	add	sp, #12
 8000d58:	bc3c      	pop	{r2, r3, r4, r5}
 8000d5a:	4690      	mov	r8, r2
 8000d5c:	4699      	mov	r9, r3
 8000d5e:	46a2      	mov	sl, r4
 8000d60:	46ab      	mov	fp, r5
 8000d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d15b      	bne.n	8000e20 <__aeabi_fmul+0x18c>
 8000d68:	2304      	movs	r3, #4
 8000d6a:	469a      	mov	sl, r3
 8000d6c:	3b03      	subs	r3, #3
 8000d6e:	2500      	movs	r5, #0
 8000d70:	469b      	mov	fp, r3
 8000d72:	e7aa      	b.n	8000cca <__aeabi_fmul+0x36>
 8000d74:	35ff      	adds	r5, #255	; 0xff
 8000d76:	2c00      	cmp	r4, #0
 8000d78:	d160      	bne.n	8000e3c <__aeabi_fmul+0x1a8>
 8000d7a:	4652      	mov	r2, sl
 8000d7c:	2302      	movs	r3, #2
 8000d7e:	431a      	orrs	r2, r3
 8000d80:	4692      	mov	sl, r2
 8000d82:	2002      	movs	r0, #2
 8000d84:	e7b1      	b.n	8000cea <__aeabi_fmul+0x56>
 8000d86:	22ff      	movs	r2, #255	; 0xff
 8000d88:	2300      	movs	r3, #0
 8000d8a:	e7de      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000d8c:	464b      	mov	r3, r9
 8000d8e:	0c1b      	lsrs	r3, r3, #16
 8000d90:	469c      	mov	ip, r3
 8000d92:	464b      	mov	r3, r9
 8000d94:	0426      	lsls	r6, r4, #16
 8000d96:	0c36      	lsrs	r6, r6, #16
 8000d98:	0418      	lsls	r0, r3, #16
 8000d9a:	4661      	mov	r1, ip
 8000d9c:	0033      	movs	r3, r6
 8000d9e:	0c22      	lsrs	r2, r4, #16
 8000da0:	4664      	mov	r4, ip
 8000da2:	0c00      	lsrs	r0, r0, #16
 8000da4:	4343      	muls	r3, r0
 8000da6:	434e      	muls	r6, r1
 8000da8:	4350      	muls	r0, r2
 8000daa:	4354      	muls	r4, r2
 8000dac:	1980      	adds	r0, r0, r6
 8000dae:	0c1a      	lsrs	r2, r3, #16
 8000db0:	1812      	adds	r2, r2, r0
 8000db2:	4296      	cmp	r6, r2
 8000db4:	d903      	bls.n	8000dbe <__aeabi_fmul+0x12a>
 8000db6:	2180      	movs	r1, #128	; 0x80
 8000db8:	0249      	lsls	r1, r1, #9
 8000dba:	468c      	mov	ip, r1
 8000dbc:	4464      	add	r4, ip
 8000dbe:	041b      	lsls	r3, r3, #16
 8000dc0:	0c1b      	lsrs	r3, r3, #16
 8000dc2:	0410      	lsls	r0, r2, #16
 8000dc4:	18c0      	adds	r0, r0, r3
 8000dc6:	0183      	lsls	r3, r0, #6
 8000dc8:	1e5e      	subs	r6, r3, #1
 8000dca:	41b3      	sbcs	r3, r6
 8000dcc:	0e80      	lsrs	r0, r0, #26
 8000dce:	4318      	orrs	r0, r3
 8000dd0:	0c13      	lsrs	r3, r2, #16
 8000dd2:	191b      	adds	r3, r3, r4
 8000dd4:	019b      	lsls	r3, r3, #6
 8000dd6:	4303      	orrs	r3, r0
 8000dd8:	001c      	movs	r4, r3
 8000dda:	0123      	lsls	r3, r4, #4
 8000ddc:	d579      	bpl.n	8000ed2 <__aeabi_fmul+0x23e>
 8000dde:	2301      	movs	r3, #1
 8000de0:	0862      	lsrs	r2, r4, #1
 8000de2:	401c      	ands	r4, r3
 8000de4:	4314      	orrs	r4, r2
 8000de6:	9a01      	ldr	r2, [sp, #4]
 8000de8:	327f      	adds	r2, #127	; 0x7f
 8000dea:	2a00      	cmp	r2, #0
 8000dec:	dd4d      	ble.n	8000e8a <__aeabi_fmul+0x1f6>
 8000dee:	0763      	lsls	r3, r4, #29
 8000df0:	d004      	beq.n	8000dfc <__aeabi_fmul+0x168>
 8000df2:	230f      	movs	r3, #15
 8000df4:	4023      	ands	r3, r4
 8000df6:	2b04      	cmp	r3, #4
 8000df8:	d000      	beq.n	8000dfc <__aeabi_fmul+0x168>
 8000dfa:	3404      	adds	r4, #4
 8000dfc:	0123      	lsls	r3, r4, #4
 8000dfe:	d503      	bpl.n	8000e08 <__aeabi_fmul+0x174>
 8000e00:	4b3c      	ldr	r3, [pc, #240]	; (8000ef4 <__aeabi_fmul+0x260>)
 8000e02:	9a01      	ldr	r2, [sp, #4]
 8000e04:	401c      	ands	r4, r3
 8000e06:	3280      	adds	r2, #128	; 0x80
 8000e08:	2afe      	cmp	r2, #254	; 0xfe
 8000e0a:	dcbc      	bgt.n	8000d86 <__aeabi_fmul+0xf2>
 8000e0c:	01a3      	lsls	r3, r4, #6
 8000e0e:	0a5b      	lsrs	r3, r3, #9
 8000e10:	b2d2      	uxtb	r2, r2
 8000e12:	e79a      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000e14:	230c      	movs	r3, #12
 8000e16:	469a      	mov	sl, r3
 8000e18:	3b09      	subs	r3, #9
 8000e1a:	25ff      	movs	r5, #255	; 0xff
 8000e1c:	469b      	mov	fp, r3
 8000e1e:	e754      	b.n	8000cca <__aeabi_fmul+0x36>
 8000e20:	0018      	movs	r0, r3
 8000e22:	f7ff fb71 	bl	8000508 <__clzsi2>
 8000e26:	464a      	mov	r2, r9
 8000e28:	1f43      	subs	r3, r0, #5
 8000e2a:	2576      	movs	r5, #118	; 0x76
 8000e2c:	409a      	lsls	r2, r3
 8000e2e:	2300      	movs	r3, #0
 8000e30:	426d      	negs	r5, r5
 8000e32:	4691      	mov	r9, r2
 8000e34:	1a2d      	subs	r5, r5, r0
 8000e36:	469a      	mov	sl, r3
 8000e38:	469b      	mov	fp, r3
 8000e3a:	e746      	b.n	8000cca <__aeabi_fmul+0x36>
 8000e3c:	4652      	mov	r2, sl
 8000e3e:	2303      	movs	r3, #3
 8000e40:	431a      	orrs	r2, r3
 8000e42:	4692      	mov	sl, r2
 8000e44:	2003      	movs	r0, #3
 8000e46:	e750      	b.n	8000cea <__aeabi_fmul+0x56>
 8000e48:	0020      	movs	r0, r4
 8000e4a:	f7ff fb5d 	bl	8000508 <__clzsi2>
 8000e4e:	1f43      	subs	r3, r0, #5
 8000e50:	1a2d      	subs	r5, r5, r0
 8000e52:	409c      	lsls	r4, r3
 8000e54:	3d76      	subs	r5, #118	; 0x76
 8000e56:	2000      	movs	r0, #0
 8000e58:	e747      	b.n	8000cea <__aeabi_fmul+0x56>
 8000e5a:	2380      	movs	r3, #128	; 0x80
 8000e5c:	2700      	movs	r7, #0
 8000e5e:	03db      	lsls	r3, r3, #15
 8000e60:	22ff      	movs	r2, #255	; 0xff
 8000e62:	e772      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000e64:	4642      	mov	r2, r8
 8000e66:	e766      	b.n	8000d36 <__aeabi_fmul+0xa2>
 8000e68:	464c      	mov	r4, r9
 8000e6a:	0032      	movs	r2, r6
 8000e6c:	4658      	mov	r0, fp
 8000e6e:	e762      	b.n	8000d36 <__aeabi_fmul+0xa2>
 8000e70:	2380      	movs	r3, #128	; 0x80
 8000e72:	464a      	mov	r2, r9
 8000e74:	03db      	lsls	r3, r3, #15
 8000e76:	421a      	tst	r2, r3
 8000e78:	d022      	beq.n	8000ec0 <__aeabi_fmul+0x22c>
 8000e7a:	421c      	tst	r4, r3
 8000e7c:	d120      	bne.n	8000ec0 <__aeabi_fmul+0x22c>
 8000e7e:	4323      	orrs	r3, r4
 8000e80:	025b      	lsls	r3, r3, #9
 8000e82:	0a5b      	lsrs	r3, r3, #9
 8000e84:	4647      	mov	r7, r8
 8000e86:	22ff      	movs	r2, #255	; 0xff
 8000e88:	e75f      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	1a9a      	subs	r2, r3, r2
 8000e8e:	2a1b      	cmp	r2, #27
 8000e90:	dc21      	bgt.n	8000ed6 <__aeabi_fmul+0x242>
 8000e92:	0023      	movs	r3, r4
 8000e94:	9901      	ldr	r1, [sp, #4]
 8000e96:	40d3      	lsrs	r3, r2
 8000e98:	319e      	adds	r1, #158	; 0x9e
 8000e9a:	408c      	lsls	r4, r1
 8000e9c:	001a      	movs	r2, r3
 8000e9e:	0023      	movs	r3, r4
 8000ea0:	1e5c      	subs	r4, r3, #1
 8000ea2:	41a3      	sbcs	r3, r4
 8000ea4:	4313      	orrs	r3, r2
 8000ea6:	075a      	lsls	r2, r3, #29
 8000ea8:	d004      	beq.n	8000eb4 <__aeabi_fmul+0x220>
 8000eaa:	220f      	movs	r2, #15
 8000eac:	401a      	ands	r2, r3
 8000eae:	2a04      	cmp	r2, #4
 8000eb0:	d000      	beq.n	8000eb4 <__aeabi_fmul+0x220>
 8000eb2:	3304      	adds	r3, #4
 8000eb4:	015a      	lsls	r2, r3, #5
 8000eb6:	d411      	bmi.n	8000edc <__aeabi_fmul+0x248>
 8000eb8:	019b      	lsls	r3, r3, #6
 8000eba:	0a5b      	lsrs	r3, r3, #9
 8000ebc:	2200      	movs	r2, #0
 8000ebe:	e744      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000ec0:	2380      	movs	r3, #128	; 0x80
 8000ec2:	464a      	mov	r2, r9
 8000ec4:	03db      	lsls	r3, r3, #15
 8000ec6:	4313      	orrs	r3, r2
 8000ec8:	025b      	lsls	r3, r3, #9
 8000eca:	0a5b      	lsrs	r3, r3, #9
 8000ecc:	0037      	movs	r7, r6
 8000ece:	22ff      	movs	r2, #255	; 0xff
 8000ed0:	e73b      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000ed2:	9501      	str	r5, [sp, #4]
 8000ed4:	e787      	b.n	8000de6 <__aeabi_fmul+0x152>
 8000ed6:	2200      	movs	r2, #0
 8000ed8:	2300      	movs	r3, #0
 8000eda:	e736      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000edc:	2201      	movs	r2, #1
 8000ede:	2300      	movs	r3, #0
 8000ee0:	e733      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000ee2:	2380      	movs	r3, #128	; 0x80
 8000ee4:	03db      	lsls	r3, r3, #15
 8000ee6:	4323      	orrs	r3, r4
 8000ee8:	025b      	lsls	r3, r3, #9
 8000eea:	0a5b      	lsrs	r3, r3, #9
 8000eec:	22ff      	movs	r2, #255	; 0xff
 8000eee:	e72c      	b.n	8000d4a <__aeabi_fmul+0xb6>
 8000ef0:	0800dc58 	.word	0x0800dc58
 8000ef4:	f7ffffff 	.word	0xf7ffffff

08000ef8 <__aeabi_fsub>:
 8000ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000efa:	4647      	mov	r7, r8
 8000efc:	46ce      	mov	lr, r9
 8000efe:	0044      	lsls	r4, r0, #1
 8000f00:	0fc2      	lsrs	r2, r0, #31
 8000f02:	b580      	push	{r7, lr}
 8000f04:	0247      	lsls	r7, r0, #9
 8000f06:	0248      	lsls	r0, r1, #9
 8000f08:	0a40      	lsrs	r0, r0, #9
 8000f0a:	4684      	mov	ip, r0
 8000f0c:	4666      	mov	r6, ip
 8000f0e:	0048      	lsls	r0, r1, #1
 8000f10:	0a7f      	lsrs	r7, r7, #9
 8000f12:	0e24      	lsrs	r4, r4, #24
 8000f14:	00f6      	lsls	r6, r6, #3
 8000f16:	0025      	movs	r5, r4
 8000f18:	4690      	mov	r8, r2
 8000f1a:	00fb      	lsls	r3, r7, #3
 8000f1c:	0e00      	lsrs	r0, r0, #24
 8000f1e:	0fc9      	lsrs	r1, r1, #31
 8000f20:	46b1      	mov	r9, r6
 8000f22:	28ff      	cmp	r0, #255	; 0xff
 8000f24:	d100      	bne.n	8000f28 <__aeabi_fsub+0x30>
 8000f26:	e085      	b.n	8001034 <__aeabi_fsub+0x13c>
 8000f28:	2601      	movs	r6, #1
 8000f2a:	4071      	eors	r1, r6
 8000f2c:	1a26      	subs	r6, r4, r0
 8000f2e:	4291      	cmp	r1, r2
 8000f30:	d057      	beq.n	8000fe2 <__aeabi_fsub+0xea>
 8000f32:	2e00      	cmp	r6, #0
 8000f34:	dd43      	ble.n	8000fbe <__aeabi_fsub+0xc6>
 8000f36:	2800      	cmp	r0, #0
 8000f38:	d000      	beq.n	8000f3c <__aeabi_fsub+0x44>
 8000f3a:	e07f      	b.n	800103c <__aeabi_fsub+0x144>
 8000f3c:	4649      	mov	r1, r9
 8000f3e:	2900      	cmp	r1, #0
 8000f40:	d100      	bne.n	8000f44 <__aeabi_fsub+0x4c>
 8000f42:	e0aa      	b.n	800109a <__aeabi_fsub+0x1a2>
 8000f44:	3e01      	subs	r6, #1
 8000f46:	2e00      	cmp	r6, #0
 8000f48:	d000      	beq.n	8000f4c <__aeabi_fsub+0x54>
 8000f4a:	e0f7      	b.n	800113c <__aeabi_fsub+0x244>
 8000f4c:	1a5b      	subs	r3, r3, r1
 8000f4e:	015a      	lsls	r2, r3, #5
 8000f50:	d400      	bmi.n	8000f54 <__aeabi_fsub+0x5c>
 8000f52:	e08b      	b.n	800106c <__aeabi_fsub+0x174>
 8000f54:	019b      	lsls	r3, r3, #6
 8000f56:	099c      	lsrs	r4, r3, #6
 8000f58:	0020      	movs	r0, r4
 8000f5a:	f7ff fad5 	bl	8000508 <__clzsi2>
 8000f5e:	3805      	subs	r0, #5
 8000f60:	4084      	lsls	r4, r0
 8000f62:	4285      	cmp	r5, r0
 8000f64:	dd00      	ble.n	8000f68 <__aeabi_fsub+0x70>
 8000f66:	e0d3      	b.n	8001110 <__aeabi_fsub+0x218>
 8000f68:	1b45      	subs	r5, r0, r5
 8000f6a:	0023      	movs	r3, r4
 8000f6c:	2020      	movs	r0, #32
 8000f6e:	3501      	adds	r5, #1
 8000f70:	40eb      	lsrs	r3, r5
 8000f72:	1b45      	subs	r5, r0, r5
 8000f74:	40ac      	lsls	r4, r5
 8000f76:	1e62      	subs	r2, r4, #1
 8000f78:	4194      	sbcs	r4, r2
 8000f7a:	4323      	orrs	r3, r4
 8000f7c:	2407      	movs	r4, #7
 8000f7e:	2500      	movs	r5, #0
 8000f80:	401c      	ands	r4, r3
 8000f82:	2201      	movs	r2, #1
 8000f84:	4641      	mov	r1, r8
 8000f86:	400a      	ands	r2, r1
 8000f88:	2c00      	cmp	r4, #0
 8000f8a:	d004      	beq.n	8000f96 <__aeabi_fsub+0x9e>
 8000f8c:	210f      	movs	r1, #15
 8000f8e:	4019      	ands	r1, r3
 8000f90:	2904      	cmp	r1, #4
 8000f92:	d000      	beq.n	8000f96 <__aeabi_fsub+0x9e>
 8000f94:	3304      	adds	r3, #4
 8000f96:	0159      	lsls	r1, r3, #5
 8000f98:	d400      	bmi.n	8000f9c <__aeabi_fsub+0xa4>
 8000f9a:	e080      	b.n	800109e <__aeabi_fsub+0x1a6>
 8000f9c:	3501      	adds	r5, #1
 8000f9e:	b2ec      	uxtb	r4, r5
 8000fa0:	2dff      	cmp	r5, #255	; 0xff
 8000fa2:	d000      	beq.n	8000fa6 <__aeabi_fsub+0xae>
 8000fa4:	e0a3      	b.n	80010ee <__aeabi_fsub+0x1f6>
 8000fa6:	24ff      	movs	r4, #255	; 0xff
 8000fa8:	2300      	movs	r3, #0
 8000faa:	025b      	lsls	r3, r3, #9
 8000fac:	05e4      	lsls	r4, r4, #23
 8000fae:	0a58      	lsrs	r0, r3, #9
 8000fb0:	07d2      	lsls	r2, r2, #31
 8000fb2:	4320      	orrs	r0, r4
 8000fb4:	4310      	orrs	r0, r2
 8000fb6:	bc0c      	pop	{r2, r3}
 8000fb8:	4690      	mov	r8, r2
 8000fba:	4699      	mov	r9, r3
 8000fbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fbe:	2e00      	cmp	r6, #0
 8000fc0:	d174      	bne.n	80010ac <__aeabi_fsub+0x1b4>
 8000fc2:	1c60      	adds	r0, r4, #1
 8000fc4:	b2c0      	uxtb	r0, r0
 8000fc6:	2801      	cmp	r0, #1
 8000fc8:	dc00      	bgt.n	8000fcc <__aeabi_fsub+0xd4>
 8000fca:	e0a7      	b.n	800111c <__aeabi_fsub+0x224>
 8000fcc:	464a      	mov	r2, r9
 8000fce:	1a9c      	subs	r4, r3, r2
 8000fd0:	0162      	lsls	r2, r4, #5
 8000fd2:	d500      	bpl.n	8000fd6 <__aeabi_fsub+0xde>
 8000fd4:	e0b6      	b.n	8001144 <__aeabi_fsub+0x24c>
 8000fd6:	2c00      	cmp	r4, #0
 8000fd8:	d1be      	bne.n	8000f58 <__aeabi_fsub+0x60>
 8000fda:	2200      	movs	r2, #0
 8000fdc:	2400      	movs	r4, #0
 8000fde:	2300      	movs	r3, #0
 8000fe0:	e7e3      	b.n	8000faa <__aeabi_fsub+0xb2>
 8000fe2:	2e00      	cmp	r6, #0
 8000fe4:	dc00      	bgt.n	8000fe8 <__aeabi_fsub+0xf0>
 8000fe6:	e085      	b.n	80010f4 <__aeabi_fsub+0x1fc>
 8000fe8:	2800      	cmp	r0, #0
 8000fea:	d046      	beq.n	800107a <__aeabi_fsub+0x182>
 8000fec:	2cff      	cmp	r4, #255	; 0xff
 8000fee:	d049      	beq.n	8001084 <__aeabi_fsub+0x18c>
 8000ff0:	2280      	movs	r2, #128	; 0x80
 8000ff2:	4648      	mov	r0, r9
 8000ff4:	04d2      	lsls	r2, r2, #19
 8000ff6:	4310      	orrs	r0, r2
 8000ff8:	4681      	mov	r9, r0
 8000ffa:	2201      	movs	r2, #1
 8000ffc:	2e1b      	cmp	r6, #27
 8000ffe:	dc09      	bgt.n	8001014 <__aeabi_fsub+0x11c>
 8001000:	2020      	movs	r0, #32
 8001002:	464c      	mov	r4, r9
 8001004:	1b80      	subs	r0, r0, r6
 8001006:	4084      	lsls	r4, r0
 8001008:	464a      	mov	r2, r9
 800100a:	0020      	movs	r0, r4
 800100c:	40f2      	lsrs	r2, r6
 800100e:	1e44      	subs	r4, r0, #1
 8001010:	41a0      	sbcs	r0, r4
 8001012:	4302      	orrs	r2, r0
 8001014:	189b      	adds	r3, r3, r2
 8001016:	015a      	lsls	r2, r3, #5
 8001018:	d528      	bpl.n	800106c <__aeabi_fsub+0x174>
 800101a:	3501      	adds	r5, #1
 800101c:	2dff      	cmp	r5, #255	; 0xff
 800101e:	d100      	bne.n	8001022 <__aeabi_fsub+0x12a>
 8001020:	e0a8      	b.n	8001174 <__aeabi_fsub+0x27c>
 8001022:	2201      	movs	r2, #1
 8001024:	2407      	movs	r4, #7
 8001026:	4994      	ldr	r1, [pc, #592]	; (8001278 <__aeabi_fsub+0x380>)
 8001028:	401a      	ands	r2, r3
 800102a:	085b      	lsrs	r3, r3, #1
 800102c:	400b      	ands	r3, r1
 800102e:	4313      	orrs	r3, r2
 8001030:	401c      	ands	r4, r3
 8001032:	e7a6      	b.n	8000f82 <__aeabi_fsub+0x8a>
 8001034:	2e00      	cmp	r6, #0
 8001036:	d000      	beq.n	800103a <__aeabi_fsub+0x142>
 8001038:	e778      	b.n	8000f2c <__aeabi_fsub+0x34>
 800103a:	e775      	b.n	8000f28 <__aeabi_fsub+0x30>
 800103c:	2cff      	cmp	r4, #255	; 0xff
 800103e:	d054      	beq.n	80010ea <__aeabi_fsub+0x1f2>
 8001040:	2280      	movs	r2, #128	; 0x80
 8001042:	4649      	mov	r1, r9
 8001044:	04d2      	lsls	r2, r2, #19
 8001046:	4311      	orrs	r1, r2
 8001048:	4689      	mov	r9, r1
 800104a:	2201      	movs	r2, #1
 800104c:	2e1b      	cmp	r6, #27
 800104e:	dc09      	bgt.n	8001064 <__aeabi_fsub+0x16c>
 8001050:	2120      	movs	r1, #32
 8001052:	4648      	mov	r0, r9
 8001054:	1b89      	subs	r1, r1, r6
 8001056:	4088      	lsls	r0, r1
 8001058:	464a      	mov	r2, r9
 800105a:	0001      	movs	r1, r0
 800105c:	40f2      	lsrs	r2, r6
 800105e:	1e48      	subs	r0, r1, #1
 8001060:	4181      	sbcs	r1, r0
 8001062:	430a      	orrs	r2, r1
 8001064:	1a9b      	subs	r3, r3, r2
 8001066:	015a      	lsls	r2, r3, #5
 8001068:	d500      	bpl.n	800106c <__aeabi_fsub+0x174>
 800106a:	e773      	b.n	8000f54 <__aeabi_fsub+0x5c>
 800106c:	2201      	movs	r2, #1
 800106e:	4641      	mov	r1, r8
 8001070:	400a      	ands	r2, r1
 8001072:	0759      	lsls	r1, r3, #29
 8001074:	d000      	beq.n	8001078 <__aeabi_fsub+0x180>
 8001076:	e789      	b.n	8000f8c <__aeabi_fsub+0x94>
 8001078:	e011      	b.n	800109e <__aeabi_fsub+0x1a6>
 800107a:	4648      	mov	r0, r9
 800107c:	2800      	cmp	r0, #0
 800107e:	d158      	bne.n	8001132 <__aeabi_fsub+0x23a>
 8001080:	2cff      	cmp	r4, #255	; 0xff
 8001082:	d10c      	bne.n	800109e <__aeabi_fsub+0x1a6>
 8001084:	08db      	lsrs	r3, r3, #3
 8001086:	2b00      	cmp	r3, #0
 8001088:	d100      	bne.n	800108c <__aeabi_fsub+0x194>
 800108a:	e78c      	b.n	8000fa6 <__aeabi_fsub+0xae>
 800108c:	2080      	movs	r0, #128	; 0x80
 800108e:	03c0      	lsls	r0, r0, #15
 8001090:	4303      	orrs	r3, r0
 8001092:	025b      	lsls	r3, r3, #9
 8001094:	0a5b      	lsrs	r3, r3, #9
 8001096:	24ff      	movs	r4, #255	; 0xff
 8001098:	e787      	b.n	8000faa <__aeabi_fsub+0xb2>
 800109a:	2cff      	cmp	r4, #255	; 0xff
 800109c:	d025      	beq.n	80010ea <__aeabi_fsub+0x1f2>
 800109e:	08db      	lsrs	r3, r3, #3
 80010a0:	2dff      	cmp	r5, #255	; 0xff
 80010a2:	d0f0      	beq.n	8001086 <__aeabi_fsub+0x18e>
 80010a4:	025b      	lsls	r3, r3, #9
 80010a6:	0a5b      	lsrs	r3, r3, #9
 80010a8:	b2ec      	uxtb	r4, r5
 80010aa:	e77e      	b.n	8000faa <__aeabi_fsub+0xb2>
 80010ac:	2c00      	cmp	r4, #0
 80010ae:	d04d      	beq.n	800114c <__aeabi_fsub+0x254>
 80010b0:	28ff      	cmp	r0, #255	; 0xff
 80010b2:	d018      	beq.n	80010e6 <__aeabi_fsub+0x1ee>
 80010b4:	2480      	movs	r4, #128	; 0x80
 80010b6:	04e4      	lsls	r4, r4, #19
 80010b8:	4272      	negs	r2, r6
 80010ba:	4323      	orrs	r3, r4
 80010bc:	2a1b      	cmp	r2, #27
 80010be:	dd00      	ble.n	80010c2 <__aeabi_fsub+0x1ca>
 80010c0:	e0c4      	b.n	800124c <__aeabi_fsub+0x354>
 80010c2:	001c      	movs	r4, r3
 80010c4:	2520      	movs	r5, #32
 80010c6:	40d4      	lsrs	r4, r2
 80010c8:	1aaa      	subs	r2, r5, r2
 80010ca:	4093      	lsls	r3, r2
 80010cc:	1e5a      	subs	r2, r3, #1
 80010ce:	4193      	sbcs	r3, r2
 80010d0:	4323      	orrs	r3, r4
 80010d2:	464a      	mov	r2, r9
 80010d4:	0005      	movs	r5, r0
 80010d6:	1ad3      	subs	r3, r2, r3
 80010d8:	4688      	mov	r8, r1
 80010da:	e738      	b.n	8000f4e <__aeabi_fsub+0x56>
 80010dc:	1c72      	adds	r2, r6, #1
 80010de:	d0f8      	beq.n	80010d2 <__aeabi_fsub+0x1da>
 80010e0:	43f2      	mvns	r2, r6
 80010e2:	28ff      	cmp	r0, #255	; 0xff
 80010e4:	d1ea      	bne.n	80010bc <__aeabi_fsub+0x1c4>
 80010e6:	000a      	movs	r2, r1
 80010e8:	464b      	mov	r3, r9
 80010ea:	25ff      	movs	r5, #255	; 0xff
 80010ec:	e7d7      	b.n	800109e <__aeabi_fsub+0x1a6>
 80010ee:	019b      	lsls	r3, r3, #6
 80010f0:	0a5b      	lsrs	r3, r3, #9
 80010f2:	e75a      	b.n	8000faa <__aeabi_fsub+0xb2>
 80010f4:	2e00      	cmp	r6, #0
 80010f6:	d141      	bne.n	800117c <__aeabi_fsub+0x284>
 80010f8:	1c65      	adds	r5, r4, #1
 80010fa:	b2e9      	uxtb	r1, r5
 80010fc:	2901      	cmp	r1, #1
 80010fe:	dd45      	ble.n	800118c <__aeabi_fsub+0x294>
 8001100:	2dff      	cmp	r5, #255	; 0xff
 8001102:	d100      	bne.n	8001106 <__aeabi_fsub+0x20e>
 8001104:	e74f      	b.n	8000fa6 <__aeabi_fsub+0xae>
 8001106:	2407      	movs	r4, #7
 8001108:	444b      	add	r3, r9
 800110a:	085b      	lsrs	r3, r3, #1
 800110c:	401c      	ands	r4, r3
 800110e:	e738      	b.n	8000f82 <__aeabi_fsub+0x8a>
 8001110:	2207      	movs	r2, #7
 8001112:	4b5a      	ldr	r3, [pc, #360]	; (800127c <__aeabi_fsub+0x384>)
 8001114:	1a2d      	subs	r5, r5, r0
 8001116:	4023      	ands	r3, r4
 8001118:	4014      	ands	r4, r2
 800111a:	e732      	b.n	8000f82 <__aeabi_fsub+0x8a>
 800111c:	2c00      	cmp	r4, #0
 800111e:	d11d      	bne.n	800115c <__aeabi_fsub+0x264>
 8001120:	2b00      	cmp	r3, #0
 8001122:	d17a      	bne.n	800121a <__aeabi_fsub+0x322>
 8001124:	464b      	mov	r3, r9
 8001126:	2b00      	cmp	r3, #0
 8001128:	d100      	bne.n	800112c <__aeabi_fsub+0x234>
 800112a:	e091      	b.n	8001250 <__aeabi_fsub+0x358>
 800112c:	000a      	movs	r2, r1
 800112e:	2500      	movs	r5, #0
 8001130:	e7b5      	b.n	800109e <__aeabi_fsub+0x1a6>
 8001132:	3e01      	subs	r6, #1
 8001134:	2e00      	cmp	r6, #0
 8001136:	d119      	bne.n	800116c <__aeabi_fsub+0x274>
 8001138:	444b      	add	r3, r9
 800113a:	e76c      	b.n	8001016 <__aeabi_fsub+0x11e>
 800113c:	2cff      	cmp	r4, #255	; 0xff
 800113e:	d184      	bne.n	800104a <__aeabi_fsub+0x152>
 8001140:	25ff      	movs	r5, #255	; 0xff
 8001142:	e7ac      	b.n	800109e <__aeabi_fsub+0x1a6>
 8001144:	464a      	mov	r2, r9
 8001146:	4688      	mov	r8, r1
 8001148:	1ad4      	subs	r4, r2, r3
 800114a:	e705      	b.n	8000f58 <__aeabi_fsub+0x60>
 800114c:	2b00      	cmp	r3, #0
 800114e:	d1c5      	bne.n	80010dc <__aeabi_fsub+0x1e4>
 8001150:	000a      	movs	r2, r1
 8001152:	28ff      	cmp	r0, #255	; 0xff
 8001154:	d0c8      	beq.n	80010e8 <__aeabi_fsub+0x1f0>
 8001156:	0005      	movs	r5, r0
 8001158:	464b      	mov	r3, r9
 800115a:	e7a0      	b.n	800109e <__aeabi_fsub+0x1a6>
 800115c:	2b00      	cmp	r3, #0
 800115e:	d149      	bne.n	80011f4 <__aeabi_fsub+0x2fc>
 8001160:	464b      	mov	r3, r9
 8001162:	2b00      	cmp	r3, #0
 8001164:	d077      	beq.n	8001256 <__aeabi_fsub+0x35e>
 8001166:	000a      	movs	r2, r1
 8001168:	25ff      	movs	r5, #255	; 0xff
 800116a:	e798      	b.n	800109e <__aeabi_fsub+0x1a6>
 800116c:	2cff      	cmp	r4, #255	; 0xff
 800116e:	d000      	beq.n	8001172 <__aeabi_fsub+0x27a>
 8001170:	e743      	b.n	8000ffa <__aeabi_fsub+0x102>
 8001172:	e787      	b.n	8001084 <__aeabi_fsub+0x18c>
 8001174:	000a      	movs	r2, r1
 8001176:	24ff      	movs	r4, #255	; 0xff
 8001178:	2300      	movs	r3, #0
 800117a:	e716      	b.n	8000faa <__aeabi_fsub+0xb2>
 800117c:	2c00      	cmp	r4, #0
 800117e:	d115      	bne.n	80011ac <__aeabi_fsub+0x2b4>
 8001180:	2b00      	cmp	r3, #0
 8001182:	d157      	bne.n	8001234 <__aeabi_fsub+0x33c>
 8001184:	28ff      	cmp	r0, #255	; 0xff
 8001186:	d1e6      	bne.n	8001156 <__aeabi_fsub+0x25e>
 8001188:	464b      	mov	r3, r9
 800118a:	e77b      	b.n	8001084 <__aeabi_fsub+0x18c>
 800118c:	2c00      	cmp	r4, #0
 800118e:	d120      	bne.n	80011d2 <__aeabi_fsub+0x2da>
 8001190:	2b00      	cmp	r3, #0
 8001192:	d057      	beq.n	8001244 <__aeabi_fsub+0x34c>
 8001194:	4649      	mov	r1, r9
 8001196:	2900      	cmp	r1, #0
 8001198:	d053      	beq.n	8001242 <__aeabi_fsub+0x34a>
 800119a:	444b      	add	r3, r9
 800119c:	015a      	lsls	r2, r3, #5
 800119e:	d568      	bpl.n	8001272 <__aeabi_fsub+0x37a>
 80011a0:	2407      	movs	r4, #7
 80011a2:	4a36      	ldr	r2, [pc, #216]	; (800127c <__aeabi_fsub+0x384>)
 80011a4:	401c      	ands	r4, r3
 80011a6:	2501      	movs	r5, #1
 80011a8:	4013      	ands	r3, r2
 80011aa:	e6ea      	b.n	8000f82 <__aeabi_fsub+0x8a>
 80011ac:	28ff      	cmp	r0, #255	; 0xff
 80011ae:	d0eb      	beq.n	8001188 <__aeabi_fsub+0x290>
 80011b0:	2280      	movs	r2, #128	; 0x80
 80011b2:	04d2      	lsls	r2, r2, #19
 80011b4:	4276      	negs	r6, r6
 80011b6:	4313      	orrs	r3, r2
 80011b8:	2e1b      	cmp	r6, #27
 80011ba:	dc53      	bgt.n	8001264 <__aeabi_fsub+0x36c>
 80011bc:	2520      	movs	r5, #32
 80011be:	1bad      	subs	r5, r5, r6
 80011c0:	001a      	movs	r2, r3
 80011c2:	40ab      	lsls	r3, r5
 80011c4:	40f2      	lsrs	r2, r6
 80011c6:	1e5c      	subs	r4, r3, #1
 80011c8:	41a3      	sbcs	r3, r4
 80011ca:	4313      	orrs	r3, r2
 80011cc:	444b      	add	r3, r9
 80011ce:	0005      	movs	r5, r0
 80011d0:	e721      	b.n	8001016 <__aeabi_fsub+0x11e>
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d0d8      	beq.n	8001188 <__aeabi_fsub+0x290>
 80011d6:	4649      	mov	r1, r9
 80011d8:	2900      	cmp	r1, #0
 80011da:	d100      	bne.n	80011de <__aeabi_fsub+0x2e6>
 80011dc:	e752      	b.n	8001084 <__aeabi_fsub+0x18c>
 80011de:	2180      	movs	r1, #128	; 0x80
 80011e0:	03c9      	lsls	r1, r1, #15
 80011e2:	420f      	tst	r7, r1
 80011e4:	d100      	bne.n	80011e8 <__aeabi_fsub+0x2f0>
 80011e6:	e74d      	b.n	8001084 <__aeabi_fsub+0x18c>
 80011e8:	4660      	mov	r0, ip
 80011ea:	4208      	tst	r0, r1
 80011ec:	d000      	beq.n	80011f0 <__aeabi_fsub+0x2f8>
 80011ee:	e749      	b.n	8001084 <__aeabi_fsub+0x18c>
 80011f0:	464b      	mov	r3, r9
 80011f2:	e747      	b.n	8001084 <__aeabi_fsub+0x18c>
 80011f4:	4648      	mov	r0, r9
 80011f6:	25ff      	movs	r5, #255	; 0xff
 80011f8:	2800      	cmp	r0, #0
 80011fa:	d100      	bne.n	80011fe <__aeabi_fsub+0x306>
 80011fc:	e74f      	b.n	800109e <__aeabi_fsub+0x1a6>
 80011fe:	2280      	movs	r2, #128	; 0x80
 8001200:	03d2      	lsls	r2, r2, #15
 8001202:	4217      	tst	r7, r2
 8001204:	d004      	beq.n	8001210 <__aeabi_fsub+0x318>
 8001206:	4660      	mov	r0, ip
 8001208:	4210      	tst	r0, r2
 800120a:	d101      	bne.n	8001210 <__aeabi_fsub+0x318>
 800120c:	464b      	mov	r3, r9
 800120e:	4688      	mov	r8, r1
 8001210:	2201      	movs	r2, #1
 8001212:	4641      	mov	r1, r8
 8001214:	25ff      	movs	r5, #255	; 0xff
 8001216:	400a      	ands	r2, r1
 8001218:	e741      	b.n	800109e <__aeabi_fsub+0x1a6>
 800121a:	4648      	mov	r0, r9
 800121c:	2800      	cmp	r0, #0
 800121e:	d01f      	beq.n	8001260 <__aeabi_fsub+0x368>
 8001220:	1a1a      	subs	r2, r3, r0
 8001222:	0150      	lsls	r0, r2, #5
 8001224:	d520      	bpl.n	8001268 <__aeabi_fsub+0x370>
 8001226:	464a      	mov	r2, r9
 8001228:	2407      	movs	r4, #7
 800122a:	1ad3      	subs	r3, r2, r3
 800122c:	401c      	ands	r4, r3
 800122e:	4688      	mov	r8, r1
 8001230:	2500      	movs	r5, #0
 8001232:	e6a6      	b.n	8000f82 <__aeabi_fsub+0x8a>
 8001234:	1c74      	adds	r4, r6, #1
 8001236:	d0c9      	beq.n	80011cc <__aeabi_fsub+0x2d4>
 8001238:	43f6      	mvns	r6, r6
 800123a:	28ff      	cmp	r0, #255	; 0xff
 800123c:	d1bc      	bne.n	80011b8 <__aeabi_fsub+0x2c0>
 800123e:	464b      	mov	r3, r9
 8001240:	e720      	b.n	8001084 <__aeabi_fsub+0x18c>
 8001242:	4699      	mov	r9, r3
 8001244:	464b      	mov	r3, r9
 8001246:	2500      	movs	r5, #0
 8001248:	08db      	lsrs	r3, r3, #3
 800124a:	e72b      	b.n	80010a4 <__aeabi_fsub+0x1ac>
 800124c:	2301      	movs	r3, #1
 800124e:	e740      	b.n	80010d2 <__aeabi_fsub+0x1da>
 8001250:	2200      	movs	r2, #0
 8001252:	2300      	movs	r3, #0
 8001254:	e6a9      	b.n	8000faa <__aeabi_fsub+0xb2>
 8001256:	2380      	movs	r3, #128	; 0x80
 8001258:	2200      	movs	r2, #0
 800125a:	03db      	lsls	r3, r3, #15
 800125c:	24ff      	movs	r4, #255	; 0xff
 800125e:	e6a4      	b.n	8000faa <__aeabi_fsub+0xb2>
 8001260:	2500      	movs	r5, #0
 8001262:	e71c      	b.n	800109e <__aeabi_fsub+0x1a6>
 8001264:	2301      	movs	r3, #1
 8001266:	e7b1      	b.n	80011cc <__aeabi_fsub+0x2d4>
 8001268:	2a00      	cmp	r2, #0
 800126a:	d0f1      	beq.n	8001250 <__aeabi_fsub+0x358>
 800126c:	0013      	movs	r3, r2
 800126e:	2500      	movs	r5, #0
 8001270:	e6fc      	b.n	800106c <__aeabi_fsub+0x174>
 8001272:	2500      	movs	r5, #0
 8001274:	e6fa      	b.n	800106c <__aeabi_fsub+0x174>
 8001276:	46c0      	nop			; (mov r8, r8)
 8001278:	7dffffff 	.word	0x7dffffff
 800127c:	fbffffff 	.word	0xfbffffff

08001280 <__aeabi_fcmpun>:
 8001280:	0242      	lsls	r2, r0, #9
 8001282:	024b      	lsls	r3, r1, #9
 8001284:	0040      	lsls	r0, r0, #1
 8001286:	0049      	lsls	r1, r1, #1
 8001288:	0a52      	lsrs	r2, r2, #9
 800128a:	0a5b      	lsrs	r3, r3, #9
 800128c:	0e09      	lsrs	r1, r1, #24
 800128e:	0e00      	lsrs	r0, r0, #24
 8001290:	28ff      	cmp	r0, #255	; 0xff
 8001292:	d006      	beq.n	80012a2 <__aeabi_fcmpun+0x22>
 8001294:	2000      	movs	r0, #0
 8001296:	29ff      	cmp	r1, #255	; 0xff
 8001298:	d102      	bne.n	80012a0 <__aeabi_fcmpun+0x20>
 800129a:	0018      	movs	r0, r3
 800129c:	1e43      	subs	r3, r0, #1
 800129e:	4198      	sbcs	r0, r3
 80012a0:	4770      	bx	lr
 80012a2:	38fe      	subs	r0, #254	; 0xfe
 80012a4:	2a00      	cmp	r2, #0
 80012a6:	d1fb      	bne.n	80012a0 <__aeabi_fcmpun+0x20>
 80012a8:	e7f4      	b.n	8001294 <__aeabi_fcmpun+0x14>
 80012aa:	46c0      	nop			; (mov r8, r8)

080012ac <__aeabi_f2iz>:
 80012ac:	0241      	lsls	r1, r0, #9
 80012ae:	0042      	lsls	r2, r0, #1
 80012b0:	0fc3      	lsrs	r3, r0, #31
 80012b2:	0a49      	lsrs	r1, r1, #9
 80012b4:	0e12      	lsrs	r2, r2, #24
 80012b6:	2000      	movs	r0, #0
 80012b8:	2a7e      	cmp	r2, #126	; 0x7e
 80012ba:	d90d      	bls.n	80012d8 <__aeabi_f2iz+0x2c>
 80012bc:	2a9d      	cmp	r2, #157	; 0x9d
 80012be:	d80c      	bhi.n	80012da <__aeabi_f2iz+0x2e>
 80012c0:	2080      	movs	r0, #128	; 0x80
 80012c2:	0400      	lsls	r0, r0, #16
 80012c4:	4301      	orrs	r1, r0
 80012c6:	2a95      	cmp	r2, #149	; 0x95
 80012c8:	dc0a      	bgt.n	80012e0 <__aeabi_f2iz+0x34>
 80012ca:	2096      	movs	r0, #150	; 0x96
 80012cc:	1a82      	subs	r2, r0, r2
 80012ce:	40d1      	lsrs	r1, r2
 80012d0:	4248      	negs	r0, r1
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d100      	bne.n	80012d8 <__aeabi_f2iz+0x2c>
 80012d6:	0008      	movs	r0, r1
 80012d8:	4770      	bx	lr
 80012da:	4a03      	ldr	r2, [pc, #12]	; (80012e8 <__aeabi_f2iz+0x3c>)
 80012dc:	1898      	adds	r0, r3, r2
 80012de:	e7fb      	b.n	80012d8 <__aeabi_f2iz+0x2c>
 80012e0:	3a96      	subs	r2, #150	; 0x96
 80012e2:	4091      	lsls	r1, r2
 80012e4:	e7f4      	b.n	80012d0 <__aeabi_f2iz+0x24>
 80012e6:	46c0      	nop			; (mov r8, r8)
 80012e8:	7fffffff 	.word	0x7fffffff

080012ec <__aeabi_ui2f>:
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	1e04      	subs	r4, r0, #0
 80012f0:	d034      	beq.n	800135c <__aeabi_ui2f+0x70>
 80012f2:	f7ff f909 	bl	8000508 <__clzsi2>
 80012f6:	229e      	movs	r2, #158	; 0x9e
 80012f8:	1a12      	subs	r2, r2, r0
 80012fa:	2a96      	cmp	r2, #150	; 0x96
 80012fc:	dc07      	bgt.n	800130e <__aeabi_ui2f+0x22>
 80012fe:	b2d2      	uxtb	r2, r2
 8001300:	2808      	cmp	r0, #8
 8001302:	dd2e      	ble.n	8001362 <__aeabi_ui2f+0x76>
 8001304:	3808      	subs	r0, #8
 8001306:	4084      	lsls	r4, r0
 8001308:	0260      	lsls	r0, r4, #9
 800130a:	0a40      	lsrs	r0, r0, #9
 800130c:	e021      	b.n	8001352 <__aeabi_ui2f+0x66>
 800130e:	2a99      	cmp	r2, #153	; 0x99
 8001310:	dd09      	ble.n	8001326 <__aeabi_ui2f+0x3a>
 8001312:	0003      	movs	r3, r0
 8001314:	0021      	movs	r1, r4
 8001316:	331b      	adds	r3, #27
 8001318:	4099      	lsls	r1, r3
 800131a:	1e4b      	subs	r3, r1, #1
 800131c:	4199      	sbcs	r1, r3
 800131e:	2305      	movs	r3, #5
 8001320:	1a1b      	subs	r3, r3, r0
 8001322:	40dc      	lsrs	r4, r3
 8001324:	430c      	orrs	r4, r1
 8001326:	2805      	cmp	r0, #5
 8001328:	dd01      	ble.n	800132e <__aeabi_ui2f+0x42>
 800132a:	1f43      	subs	r3, r0, #5
 800132c:	409c      	lsls	r4, r3
 800132e:	0023      	movs	r3, r4
 8001330:	490d      	ldr	r1, [pc, #52]	; (8001368 <__aeabi_ui2f+0x7c>)
 8001332:	400b      	ands	r3, r1
 8001334:	0765      	lsls	r5, r4, #29
 8001336:	d009      	beq.n	800134c <__aeabi_ui2f+0x60>
 8001338:	250f      	movs	r5, #15
 800133a:	402c      	ands	r4, r5
 800133c:	2c04      	cmp	r4, #4
 800133e:	d005      	beq.n	800134c <__aeabi_ui2f+0x60>
 8001340:	3304      	adds	r3, #4
 8001342:	015c      	lsls	r4, r3, #5
 8001344:	d502      	bpl.n	800134c <__aeabi_ui2f+0x60>
 8001346:	229f      	movs	r2, #159	; 0x9f
 8001348:	400b      	ands	r3, r1
 800134a:	1a12      	subs	r2, r2, r0
 800134c:	019b      	lsls	r3, r3, #6
 800134e:	0a58      	lsrs	r0, r3, #9
 8001350:	b2d2      	uxtb	r2, r2
 8001352:	0240      	lsls	r0, r0, #9
 8001354:	05d2      	lsls	r2, r2, #23
 8001356:	0a40      	lsrs	r0, r0, #9
 8001358:	4310      	orrs	r0, r2
 800135a:	bd70      	pop	{r4, r5, r6, pc}
 800135c:	2200      	movs	r2, #0
 800135e:	2000      	movs	r0, #0
 8001360:	e7f7      	b.n	8001352 <__aeabi_ui2f+0x66>
 8001362:	0260      	lsls	r0, r4, #9
 8001364:	0a40      	lsrs	r0, r0, #9
 8001366:	e7f4      	b.n	8001352 <__aeabi_ui2f+0x66>
 8001368:	fbffffff 	.word	0xfbffffff

0800136c <__aeabi_dadd>:
 800136c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800136e:	464f      	mov	r7, r9
 8001370:	4646      	mov	r6, r8
 8001372:	46d6      	mov	lr, sl
 8001374:	000c      	movs	r4, r1
 8001376:	0309      	lsls	r1, r1, #12
 8001378:	b5c0      	push	{r6, r7, lr}
 800137a:	0a49      	lsrs	r1, r1, #9
 800137c:	0f47      	lsrs	r7, r0, #29
 800137e:	005e      	lsls	r6, r3, #1
 8001380:	4339      	orrs	r1, r7
 8001382:	031f      	lsls	r7, r3, #12
 8001384:	0fdb      	lsrs	r3, r3, #31
 8001386:	469c      	mov	ip, r3
 8001388:	0065      	lsls	r5, r4, #1
 800138a:	0a7b      	lsrs	r3, r7, #9
 800138c:	0f57      	lsrs	r7, r2, #29
 800138e:	431f      	orrs	r7, r3
 8001390:	0d6d      	lsrs	r5, r5, #21
 8001392:	0fe4      	lsrs	r4, r4, #31
 8001394:	0d76      	lsrs	r6, r6, #21
 8001396:	46a1      	mov	r9, r4
 8001398:	00c0      	lsls	r0, r0, #3
 800139a:	46b8      	mov	r8, r7
 800139c:	00d2      	lsls	r2, r2, #3
 800139e:	1bab      	subs	r3, r5, r6
 80013a0:	4564      	cmp	r4, ip
 80013a2:	d07b      	beq.n	800149c <__aeabi_dadd+0x130>
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	dd5f      	ble.n	8001468 <__aeabi_dadd+0xfc>
 80013a8:	2e00      	cmp	r6, #0
 80013aa:	d000      	beq.n	80013ae <__aeabi_dadd+0x42>
 80013ac:	e0a4      	b.n	80014f8 <__aeabi_dadd+0x18c>
 80013ae:	003e      	movs	r6, r7
 80013b0:	4316      	orrs	r6, r2
 80013b2:	d100      	bne.n	80013b6 <__aeabi_dadd+0x4a>
 80013b4:	e112      	b.n	80015dc <__aeabi_dadd+0x270>
 80013b6:	1e5e      	subs	r6, r3, #1
 80013b8:	2e00      	cmp	r6, #0
 80013ba:	d000      	beq.n	80013be <__aeabi_dadd+0x52>
 80013bc:	e19e      	b.n	80016fc <__aeabi_dadd+0x390>
 80013be:	1a87      	subs	r7, r0, r2
 80013c0:	4643      	mov	r3, r8
 80013c2:	42b8      	cmp	r0, r7
 80013c4:	4180      	sbcs	r0, r0
 80013c6:	2501      	movs	r5, #1
 80013c8:	1ac9      	subs	r1, r1, r3
 80013ca:	4240      	negs	r0, r0
 80013cc:	1a09      	subs	r1, r1, r0
 80013ce:	020b      	lsls	r3, r1, #8
 80013d0:	d400      	bmi.n	80013d4 <__aeabi_dadd+0x68>
 80013d2:	e131      	b.n	8001638 <__aeabi_dadd+0x2cc>
 80013d4:	0249      	lsls	r1, r1, #9
 80013d6:	0a4e      	lsrs	r6, r1, #9
 80013d8:	2e00      	cmp	r6, #0
 80013da:	d100      	bne.n	80013de <__aeabi_dadd+0x72>
 80013dc:	e16e      	b.n	80016bc <__aeabi_dadd+0x350>
 80013de:	0030      	movs	r0, r6
 80013e0:	f7ff f892 	bl	8000508 <__clzsi2>
 80013e4:	0003      	movs	r3, r0
 80013e6:	3b08      	subs	r3, #8
 80013e8:	2b1f      	cmp	r3, #31
 80013ea:	dd00      	ble.n	80013ee <__aeabi_dadd+0x82>
 80013ec:	e161      	b.n	80016b2 <__aeabi_dadd+0x346>
 80013ee:	2220      	movs	r2, #32
 80013f0:	0039      	movs	r1, r7
 80013f2:	1ad2      	subs	r2, r2, r3
 80013f4:	409e      	lsls	r6, r3
 80013f6:	40d1      	lsrs	r1, r2
 80013f8:	409f      	lsls	r7, r3
 80013fa:	430e      	orrs	r6, r1
 80013fc:	429d      	cmp	r5, r3
 80013fe:	dd00      	ble.n	8001402 <__aeabi_dadd+0x96>
 8001400:	e151      	b.n	80016a6 <__aeabi_dadd+0x33a>
 8001402:	1b5d      	subs	r5, r3, r5
 8001404:	1c6b      	adds	r3, r5, #1
 8001406:	2b1f      	cmp	r3, #31
 8001408:	dd00      	ble.n	800140c <__aeabi_dadd+0xa0>
 800140a:	e17c      	b.n	8001706 <__aeabi_dadd+0x39a>
 800140c:	2120      	movs	r1, #32
 800140e:	1ac9      	subs	r1, r1, r3
 8001410:	003d      	movs	r5, r7
 8001412:	0030      	movs	r0, r6
 8001414:	408f      	lsls	r7, r1
 8001416:	4088      	lsls	r0, r1
 8001418:	40dd      	lsrs	r5, r3
 800141a:	1e79      	subs	r1, r7, #1
 800141c:	418f      	sbcs	r7, r1
 800141e:	0031      	movs	r1, r6
 8001420:	2207      	movs	r2, #7
 8001422:	4328      	orrs	r0, r5
 8001424:	40d9      	lsrs	r1, r3
 8001426:	2500      	movs	r5, #0
 8001428:	4307      	orrs	r7, r0
 800142a:	403a      	ands	r2, r7
 800142c:	2a00      	cmp	r2, #0
 800142e:	d009      	beq.n	8001444 <__aeabi_dadd+0xd8>
 8001430:	230f      	movs	r3, #15
 8001432:	403b      	ands	r3, r7
 8001434:	2b04      	cmp	r3, #4
 8001436:	d005      	beq.n	8001444 <__aeabi_dadd+0xd8>
 8001438:	1d3b      	adds	r3, r7, #4
 800143a:	42bb      	cmp	r3, r7
 800143c:	41bf      	sbcs	r7, r7
 800143e:	427f      	negs	r7, r7
 8001440:	19c9      	adds	r1, r1, r7
 8001442:	001f      	movs	r7, r3
 8001444:	020b      	lsls	r3, r1, #8
 8001446:	d400      	bmi.n	800144a <__aeabi_dadd+0xde>
 8001448:	e226      	b.n	8001898 <__aeabi_dadd+0x52c>
 800144a:	1c6a      	adds	r2, r5, #1
 800144c:	4bc6      	ldr	r3, [pc, #792]	; (8001768 <__aeabi_dadd+0x3fc>)
 800144e:	0555      	lsls	r5, r2, #21
 8001450:	0d6d      	lsrs	r5, r5, #21
 8001452:	429a      	cmp	r2, r3
 8001454:	d100      	bne.n	8001458 <__aeabi_dadd+0xec>
 8001456:	e106      	b.n	8001666 <__aeabi_dadd+0x2fa>
 8001458:	4ac4      	ldr	r2, [pc, #784]	; (800176c <__aeabi_dadd+0x400>)
 800145a:	08ff      	lsrs	r7, r7, #3
 800145c:	400a      	ands	r2, r1
 800145e:	0753      	lsls	r3, r2, #29
 8001460:	0252      	lsls	r2, r2, #9
 8001462:	433b      	orrs	r3, r7
 8001464:	0b12      	lsrs	r2, r2, #12
 8001466:	e08e      	b.n	8001586 <__aeabi_dadd+0x21a>
 8001468:	2b00      	cmp	r3, #0
 800146a:	d000      	beq.n	800146e <__aeabi_dadd+0x102>
 800146c:	e0b8      	b.n	80015e0 <__aeabi_dadd+0x274>
 800146e:	1c6b      	adds	r3, r5, #1
 8001470:	055b      	lsls	r3, r3, #21
 8001472:	0d5b      	lsrs	r3, r3, #21
 8001474:	2b01      	cmp	r3, #1
 8001476:	dc00      	bgt.n	800147a <__aeabi_dadd+0x10e>
 8001478:	e130      	b.n	80016dc <__aeabi_dadd+0x370>
 800147a:	1a87      	subs	r7, r0, r2
 800147c:	4643      	mov	r3, r8
 800147e:	42b8      	cmp	r0, r7
 8001480:	41b6      	sbcs	r6, r6
 8001482:	1acb      	subs	r3, r1, r3
 8001484:	4276      	negs	r6, r6
 8001486:	1b9e      	subs	r6, r3, r6
 8001488:	0233      	lsls	r3, r6, #8
 800148a:	d500      	bpl.n	800148e <__aeabi_dadd+0x122>
 800148c:	e14c      	b.n	8001728 <__aeabi_dadd+0x3bc>
 800148e:	003b      	movs	r3, r7
 8001490:	4333      	orrs	r3, r6
 8001492:	d1a1      	bne.n	80013d8 <__aeabi_dadd+0x6c>
 8001494:	2200      	movs	r2, #0
 8001496:	2400      	movs	r4, #0
 8001498:	2500      	movs	r5, #0
 800149a:	e070      	b.n	800157e <__aeabi_dadd+0x212>
 800149c:	2b00      	cmp	r3, #0
 800149e:	dc00      	bgt.n	80014a2 <__aeabi_dadd+0x136>
 80014a0:	e0e5      	b.n	800166e <__aeabi_dadd+0x302>
 80014a2:	2e00      	cmp	r6, #0
 80014a4:	d100      	bne.n	80014a8 <__aeabi_dadd+0x13c>
 80014a6:	e083      	b.n	80015b0 <__aeabi_dadd+0x244>
 80014a8:	4eaf      	ldr	r6, [pc, #700]	; (8001768 <__aeabi_dadd+0x3fc>)
 80014aa:	42b5      	cmp	r5, r6
 80014ac:	d060      	beq.n	8001570 <__aeabi_dadd+0x204>
 80014ae:	2680      	movs	r6, #128	; 0x80
 80014b0:	0436      	lsls	r6, r6, #16
 80014b2:	4337      	orrs	r7, r6
 80014b4:	46b8      	mov	r8, r7
 80014b6:	2b38      	cmp	r3, #56	; 0x38
 80014b8:	dc00      	bgt.n	80014bc <__aeabi_dadd+0x150>
 80014ba:	e13e      	b.n	800173a <__aeabi_dadd+0x3ce>
 80014bc:	4643      	mov	r3, r8
 80014be:	4313      	orrs	r3, r2
 80014c0:	001f      	movs	r7, r3
 80014c2:	1e7a      	subs	r2, r7, #1
 80014c4:	4197      	sbcs	r7, r2
 80014c6:	183f      	adds	r7, r7, r0
 80014c8:	4287      	cmp	r7, r0
 80014ca:	4180      	sbcs	r0, r0
 80014cc:	4240      	negs	r0, r0
 80014ce:	1809      	adds	r1, r1, r0
 80014d0:	020b      	lsls	r3, r1, #8
 80014d2:	d400      	bmi.n	80014d6 <__aeabi_dadd+0x16a>
 80014d4:	e0b0      	b.n	8001638 <__aeabi_dadd+0x2cc>
 80014d6:	4ba4      	ldr	r3, [pc, #656]	; (8001768 <__aeabi_dadd+0x3fc>)
 80014d8:	3501      	adds	r5, #1
 80014da:	429d      	cmp	r5, r3
 80014dc:	d100      	bne.n	80014e0 <__aeabi_dadd+0x174>
 80014de:	e0c3      	b.n	8001668 <__aeabi_dadd+0x2fc>
 80014e0:	4aa2      	ldr	r2, [pc, #648]	; (800176c <__aeabi_dadd+0x400>)
 80014e2:	087b      	lsrs	r3, r7, #1
 80014e4:	400a      	ands	r2, r1
 80014e6:	2101      	movs	r1, #1
 80014e8:	400f      	ands	r7, r1
 80014ea:	431f      	orrs	r7, r3
 80014ec:	0851      	lsrs	r1, r2, #1
 80014ee:	07d3      	lsls	r3, r2, #31
 80014f0:	2207      	movs	r2, #7
 80014f2:	431f      	orrs	r7, r3
 80014f4:	403a      	ands	r2, r7
 80014f6:	e799      	b.n	800142c <__aeabi_dadd+0xc0>
 80014f8:	4e9b      	ldr	r6, [pc, #620]	; (8001768 <__aeabi_dadd+0x3fc>)
 80014fa:	42b5      	cmp	r5, r6
 80014fc:	d038      	beq.n	8001570 <__aeabi_dadd+0x204>
 80014fe:	2680      	movs	r6, #128	; 0x80
 8001500:	0436      	lsls	r6, r6, #16
 8001502:	4337      	orrs	r7, r6
 8001504:	46b8      	mov	r8, r7
 8001506:	2b38      	cmp	r3, #56	; 0x38
 8001508:	dd00      	ble.n	800150c <__aeabi_dadd+0x1a0>
 800150a:	e0dc      	b.n	80016c6 <__aeabi_dadd+0x35a>
 800150c:	2b1f      	cmp	r3, #31
 800150e:	dc00      	bgt.n	8001512 <__aeabi_dadd+0x1a6>
 8001510:	e130      	b.n	8001774 <__aeabi_dadd+0x408>
 8001512:	001e      	movs	r6, r3
 8001514:	4647      	mov	r7, r8
 8001516:	3e20      	subs	r6, #32
 8001518:	40f7      	lsrs	r7, r6
 800151a:	46bc      	mov	ip, r7
 800151c:	2b20      	cmp	r3, #32
 800151e:	d004      	beq.n	800152a <__aeabi_dadd+0x1be>
 8001520:	2640      	movs	r6, #64	; 0x40
 8001522:	1af3      	subs	r3, r6, r3
 8001524:	4646      	mov	r6, r8
 8001526:	409e      	lsls	r6, r3
 8001528:	4332      	orrs	r2, r6
 800152a:	0017      	movs	r7, r2
 800152c:	4663      	mov	r3, ip
 800152e:	1e7a      	subs	r2, r7, #1
 8001530:	4197      	sbcs	r7, r2
 8001532:	431f      	orrs	r7, r3
 8001534:	e0cc      	b.n	80016d0 <__aeabi_dadd+0x364>
 8001536:	2b00      	cmp	r3, #0
 8001538:	d100      	bne.n	800153c <__aeabi_dadd+0x1d0>
 800153a:	e204      	b.n	8001946 <__aeabi_dadd+0x5da>
 800153c:	4643      	mov	r3, r8
 800153e:	4313      	orrs	r3, r2
 8001540:	d100      	bne.n	8001544 <__aeabi_dadd+0x1d8>
 8001542:	e159      	b.n	80017f8 <__aeabi_dadd+0x48c>
 8001544:	074b      	lsls	r3, r1, #29
 8001546:	08c0      	lsrs	r0, r0, #3
 8001548:	4318      	orrs	r0, r3
 800154a:	2380      	movs	r3, #128	; 0x80
 800154c:	08c9      	lsrs	r1, r1, #3
 800154e:	031b      	lsls	r3, r3, #12
 8001550:	4219      	tst	r1, r3
 8001552:	d008      	beq.n	8001566 <__aeabi_dadd+0x1fa>
 8001554:	4645      	mov	r5, r8
 8001556:	08ed      	lsrs	r5, r5, #3
 8001558:	421d      	tst	r5, r3
 800155a:	d104      	bne.n	8001566 <__aeabi_dadd+0x1fa>
 800155c:	4643      	mov	r3, r8
 800155e:	08d0      	lsrs	r0, r2, #3
 8001560:	0759      	lsls	r1, r3, #29
 8001562:	4308      	orrs	r0, r1
 8001564:	0029      	movs	r1, r5
 8001566:	0f42      	lsrs	r2, r0, #29
 8001568:	00c9      	lsls	r1, r1, #3
 800156a:	4d7f      	ldr	r5, [pc, #508]	; (8001768 <__aeabi_dadd+0x3fc>)
 800156c:	4311      	orrs	r1, r2
 800156e:	00c0      	lsls	r0, r0, #3
 8001570:	074b      	lsls	r3, r1, #29
 8001572:	08ca      	lsrs	r2, r1, #3
 8001574:	497c      	ldr	r1, [pc, #496]	; (8001768 <__aeabi_dadd+0x3fc>)
 8001576:	08c0      	lsrs	r0, r0, #3
 8001578:	4303      	orrs	r3, r0
 800157a:	428d      	cmp	r5, r1
 800157c:	d068      	beq.n	8001650 <__aeabi_dadd+0x2e4>
 800157e:	0312      	lsls	r2, r2, #12
 8001580:	056d      	lsls	r5, r5, #21
 8001582:	0b12      	lsrs	r2, r2, #12
 8001584:	0d6d      	lsrs	r5, r5, #21
 8001586:	2100      	movs	r1, #0
 8001588:	0312      	lsls	r2, r2, #12
 800158a:	0018      	movs	r0, r3
 800158c:	0b13      	lsrs	r3, r2, #12
 800158e:	0d0a      	lsrs	r2, r1, #20
 8001590:	0512      	lsls	r2, r2, #20
 8001592:	431a      	orrs	r2, r3
 8001594:	4b76      	ldr	r3, [pc, #472]	; (8001770 <__aeabi_dadd+0x404>)
 8001596:	052d      	lsls	r5, r5, #20
 8001598:	4013      	ands	r3, r2
 800159a:	432b      	orrs	r3, r5
 800159c:	005b      	lsls	r3, r3, #1
 800159e:	07e4      	lsls	r4, r4, #31
 80015a0:	085b      	lsrs	r3, r3, #1
 80015a2:	4323      	orrs	r3, r4
 80015a4:	0019      	movs	r1, r3
 80015a6:	bc1c      	pop	{r2, r3, r4}
 80015a8:	4690      	mov	r8, r2
 80015aa:	4699      	mov	r9, r3
 80015ac:	46a2      	mov	sl, r4
 80015ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015b0:	003e      	movs	r6, r7
 80015b2:	4316      	orrs	r6, r2
 80015b4:	d012      	beq.n	80015dc <__aeabi_dadd+0x270>
 80015b6:	1e5e      	subs	r6, r3, #1
 80015b8:	2e00      	cmp	r6, #0
 80015ba:	d000      	beq.n	80015be <__aeabi_dadd+0x252>
 80015bc:	e100      	b.n	80017c0 <__aeabi_dadd+0x454>
 80015be:	1887      	adds	r7, r0, r2
 80015c0:	4287      	cmp	r7, r0
 80015c2:	4180      	sbcs	r0, r0
 80015c4:	4441      	add	r1, r8
 80015c6:	4240      	negs	r0, r0
 80015c8:	1809      	adds	r1, r1, r0
 80015ca:	2501      	movs	r5, #1
 80015cc:	020b      	lsls	r3, r1, #8
 80015ce:	d533      	bpl.n	8001638 <__aeabi_dadd+0x2cc>
 80015d0:	2502      	movs	r5, #2
 80015d2:	e785      	b.n	80014e0 <__aeabi_dadd+0x174>
 80015d4:	4664      	mov	r4, ip
 80015d6:	0033      	movs	r3, r6
 80015d8:	4641      	mov	r1, r8
 80015da:	0010      	movs	r0, r2
 80015dc:	001d      	movs	r5, r3
 80015de:	e7c7      	b.n	8001570 <__aeabi_dadd+0x204>
 80015e0:	2d00      	cmp	r5, #0
 80015e2:	d000      	beq.n	80015e6 <__aeabi_dadd+0x27a>
 80015e4:	e0da      	b.n	800179c <__aeabi_dadd+0x430>
 80015e6:	000c      	movs	r4, r1
 80015e8:	4304      	orrs	r4, r0
 80015ea:	d0f3      	beq.n	80015d4 <__aeabi_dadd+0x268>
 80015ec:	1c5c      	adds	r4, r3, #1
 80015ee:	d100      	bne.n	80015f2 <__aeabi_dadd+0x286>
 80015f0:	e19f      	b.n	8001932 <__aeabi_dadd+0x5c6>
 80015f2:	4c5d      	ldr	r4, [pc, #372]	; (8001768 <__aeabi_dadd+0x3fc>)
 80015f4:	42a6      	cmp	r6, r4
 80015f6:	d100      	bne.n	80015fa <__aeabi_dadd+0x28e>
 80015f8:	e12f      	b.n	800185a <__aeabi_dadd+0x4ee>
 80015fa:	43db      	mvns	r3, r3
 80015fc:	2b38      	cmp	r3, #56	; 0x38
 80015fe:	dd00      	ble.n	8001602 <__aeabi_dadd+0x296>
 8001600:	e166      	b.n	80018d0 <__aeabi_dadd+0x564>
 8001602:	2b1f      	cmp	r3, #31
 8001604:	dd00      	ble.n	8001608 <__aeabi_dadd+0x29c>
 8001606:	e183      	b.n	8001910 <__aeabi_dadd+0x5a4>
 8001608:	2420      	movs	r4, #32
 800160a:	0005      	movs	r5, r0
 800160c:	1ae4      	subs	r4, r4, r3
 800160e:	000f      	movs	r7, r1
 8001610:	40dd      	lsrs	r5, r3
 8001612:	40d9      	lsrs	r1, r3
 8001614:	40a0      	lsls	r0, r4
 8001616:	4643      	mov	r3, r8
 8001618:	40a7      	lsls	r7, r4
 800161a:	1a5b      	subs	r3, r3, r1
 800161c:	1e44      	subs	r4, r0, #1
 800161e:	41a0      	sbcs	r0, r4
 8001620:	4698      	mov	r8, r3
 8001622:	432f      	orrs	r7, r5
 8001624:	4338      	orrs	r0, r7
 8001626:	1a17      	subs	r7, r2, r0
 8001628:	42ba      	cmp	r2, r7
 800162a:	4192      	sbcs	r2, r2
 800162c:	4643      	mov	r3, r8
 800162e:	4252      	negs	r2, r2
 8001630:	1a99      	subs	r1, r3, r2
 8001632:	4664      	mov	r4, ip
 8001634:	0035      	movs	r5, r6
 8001636:	e6ca      	b.n	80013ce <__aeabi_dadd+0x62>
 8001638:	2207      	movs	r2, #7
 800163a:	403a      	ands	r2, r7
 800163c:	2a00      	cmp	r2, #0
 800163e:	d000      	beq.n	8001642 <__aeabi_dadd+0x2d6>
 8001640:	e6f6      	b.n	8001430 <__aeabi_dadd+0xc4>
 8001642:	074b      	lsls	r3, r1, #29
 8001644:	08ca      	lsrs	r2, r1, #3
 8001646:	4948      	ldr	r1, [pc, #288]	; (8001768 <__aeabi_dadd+0x3fc>)
 8001648:	08ff      	lsrs	r7, r7, #3
 800164a:	433b      	orrs	r3, r7
 800164c:	428d      	cmp	r5, r1
 800164e:	d196      	bne.n	800157e <__aeabi_dadd+0x212>
 8001650:	0019      	movs	r1, r3
 8001652:	4311      	orrs	r1, r2
 8001654:	d100      	bne.n	8001658 <__aeabi_dadd+0x2ec>
 8001656:	e19e      	b.n	8001996 <__aeabi_dadd+0x62a>
 8001658:	2180      	movs	r1, #128	; 0x80
 800165a:	0309      	lsls	r1, r1, #12
 800165c:	430a      	orrs	r2, r1
 800165e:	0312      	lsls	r2, r2, #12
 8001660:	0b12      	lsrs	r2, r2, #12
 8001662:	4d41      	ldr	r5, [pc, #260]	; (8001768 <__aeabi_dadd+0x3fc>)
 8001664:	e78f      	b.n	8001586 <__aeabi_dadd+0x21a>
 8001666:	0015      	movs	r5, r2
 8001668:	2200      	movs	r2, #0
 800166a:	2300      	movs	r3, #0
 800166c:	e78b      	b.n	8001586 <__aeabi_dadd+0x21a>
 800166e:	2b00      	cmp	r3, #0
 8001670:	d000      	beq.n	8001674 <__aeabi_dadd+0x308>
 8001672:	e0c7      	b.n	8001804 <__aeabi_dadd+0x498>
 8001674:	1c6b      	adds	r3, r5, #1
 8001676:	055f      	lsls	r7, r3, #21
 8001678:	0d7f      	lsrs	r7, r7, #21
 800167a:	2f01      	cmp	r7, #1
 800167c:	dc00      	bgt.n	8001680 <__aeabi_dadd+0x314>
 800167e:	e0f1      	b.n	8001864 <__aeabi_dadd+0x4f8>
 8001680:	4d39      	ldr	r5, [pc, #228]	; (8001768 <__aeabi_dadd+0x3fc>)
 8001682:	42ab      	cmp	r3, r5
 8001684:	d100      	bne.n	8001688 <__aeabi_dadd+0x31c>
 8001686:	e0b9      	b.n	80017fc <__aeabi_dadd+0x490>
 8001688:	1885      	adds	r5, r0, r2
 800168a:	000a      	movs	r2, r1
 800168c:	4285      	cmp	r5, r0
 800168e:	4189      	sbcs	r1, r1
 8001690:	4442      	add	r2, r8
 8001692:	4249      	negs	r1, r1
 8001694:	1851      	adds	r1, r2, r1
 8001696:	2207      	movs	r2, #7
 8001698:	07cf      	lsls	r7, r1, #31
 800169a:	086d      	lsrs	r5, r5, #1
 800169c:	432f      	orrs	r7, r5
 800169e:	0849      	lsrs	r1, r1, #1
 80016a0:	403a      	ands	r2, r7
 80016a2:	001d      	movs	r5, r3
 80016a4:	e6c2      	b.n	800142c <__aeabi_dadd+0xc0>
 80016a6:	2207      	movs	r2, #7
 80016a8:	4930      	ldr	r1, [pc, #192]	; (800176c <__aeabi_dadd+0x400>)
 80016aa:	1aed      	subs	r5, r5, r3
 80016ac:	4031      	ands	r1, r6
 80016ae:	403a      	ands	r2, r7
 80016b0:	e6bc      	b.n	800142c <__aeabi_dadd+0xc0>
 80016b2:	003e      	movs	r6, r7
 80016b4:	3828      	subs	r0, #40	; 0x28
 80016b6:	4086      	lsls	r6, r0
 80016b8:	2700      	movs	r7, #0
 80016ba:	e69f      	b.n	80013fc <__aeabi_dadd+0x90>
 80016bc:	0038      	movs	r0, r7
 80016be:	f7fe ff23 	bl	8000508 <__clzsi2>
 80016c2:	3020      	adds	r0, #32
 80016c4:	e68e      	b.n	80013e4 <__aeabi_dadd+0x78>
 80016c6:	4643      	mov	r3, r8
 80016c8:	4313      	orrs	r3, r2
 80016ca:	001f      	movs	r7, r3
 80016cc:	1e7a      	subs	r2, r7, #1
 80016ce:	4197      	sbcs	r7, r2
 80016d0:	1bc7      	subs	r7, r0, r7
 80016d2:	42b8      	cmp	r0, r7
 80016d4:	4180      	sbcs	r0, r0
 80016d6:	4240      	negs	r0, r0
 80016d8:	1a09      	subs	r1, r1, r0
 80016da:	e678      	b.n	80013ce <__aeabi_dadd+0x62>
 80016dc:	000e      	movs	r6, r1
 80016de:	003b      	movs	r3, r7
 80016e0:	4306      	orrs	r6, r0
 80016e2:	4313      	orrs	r3, r2
 80016e4:	2d00      	cmp	r5, #0
 80016e6:	d161      	bne.n	80017ac <__aeabi_dadd+0x440>
 80016e8:	2e00      	cmp	r6, #0
 80016ea:	d000      	beq.n	80016ee <__aeabi_dadd+0x382>
 80016ec:	e0f4      	b.n	80018d8 <__aeabi_dadd+0x56c>
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	d100      	bne.n	80016f4 <__aeabi_dadd+0x388>
 80016f2:	e11b      	b.n	800192c <__aeabi_dadd+0x5c0>
 80016f4:	4664      	mov	r4, ip
 80016f6:	0039      	movs	r1, r7
 80016f8:	0010      	movs	r0, r2
 80016fa:	e739      	b.n	8001570 <__aeabi_dadd+0x204>
 80016fc:	4f1a      	ldr	r7, [pc, #104]	; (8001768 <__aeabi_dadd+0x3fc>)
 80016fe:	42bb      	cmp	r3, r7
 8001700:	d07a      	beq.n	80017f8 <__aeabi_dadd+0x48c>
 8001702:	0033      	movs	r3, r6
 8001704:	e6ff      	b.n	8001506 <__aeabi_dadd+0x19a>
 8001706:	0030      	movs	r0, r6
 8001708:	3d1f      	subs	r5, #31
 800170a:	40e8      	lsrs	r0, r5
 800170c:	2b20      	cmp	r3, #32
 800170e:	d003      	beq.n	8001718 <__aeabi_dadd+0x3ac>
 8001710:	2140      	movs	r1, #64	; 0x40
 8001712:	1acb      	subs	r3, r1, r3
 8001714:	409e      	lsls	r6, r3
 8001716:	4337      	orrs	r7, r6
 8001718:	1e7b      	subs	r3, r7, #1
 800171a:	419f      	sbcs	r7, r3
 800171c:	2207      	movs	r2, #7
 800171e:	4307      	orrs	r7, r0
 8001720:	403a      	ands	r2, r7
 8001722:	2100      	movs	r1, #0
 8001724:	2500      	movs	r5, #0
 8001726:	e789      	b.n	800163c <__aeabi_dadd+0x2d0>
 8001728:	1a17      	subs	r7, r2, r0
 800172a:	4643      	mov	r3, r8
 800172c:	42ba      	cmp	r2, r7
 800172e:	41b6      	sbcs	r6, r6
 8001730:	1a59      	subs	r1, r3, r1
 8001732:	4276      	negs	r6, r6
 8001734:	1b8e      	subs	r6, r1, r6
 8001736:	4664      	mov	r4, ip
 8001738:	e64e      	b.n	80013d8 <__aeabi_dadd+0x6c>
 800173a:	2b1f      	cmp	r3, #31
 800173c:	dd00      	ble.n	8001740 <__aeabi_dadd+0x3d4>
 800173e:	e0ad      	b.n	800189c <__aeabi_dadd+0x530>
 8001740:	2620      	movs	r6, #32
 8001742:	4647      	mov	r7, r8
 8001744:	1af6      	subs	r6, r6, r3
 8001746:	40b7      	lsls	r7, r6
 8001748:	46b9      	mov	r9, r7
 800174a:	0017      	movs	r7, r2
 800174c:	46b2      	mov	sl, r6
 800174e:	40df      	lsrs	r7, r3
 8001750:	464e      	mov	r6, r9
 8001752:	433e      	orrs	r6, r7
 8001754:	0037      	movs	r7, r6
 8001756:	4656      	mov	r6, sl
 8001758:	40b2      	lsls	r2, r6
 800175a:	1e56      	subs	r6, r2, #1
 800175c:	41b2      	sbcs	r2, r6
 800175e:	4317      	orrs	r7, r2
 8001760:	4642      	mov	r2, r8
 8001762:	40da      	lsrs	r2, r3
 8001764:	1889      	adds	r1, r1, r2
 8001766:	e6ae      	b.n	80014c6 <__aeabi_dadd+0x15a>
 8001768:	000007ff 	.word	0x000007ff
 800176c:	ff7fffff 	.word	0xff7fffff
 8001770:	800fffff 	.word	0x800fffff
 8001774:	2620      	movs	r6, #32
 8001776:	4647      	mov	r7, r8
 8001778:	1af6      	subs	r6, r6, r3
 800177a:	40b7      	lsls	r7, r6
 800177c:	46b9      	mov	r9, r7
 800177e:	0017      	movs	r7, r2
 8001780:	46b2      	mov	sl, r6
 8001782:	40df      	lsrs	r7, r3
 8001784:	464e      	mov	r6, r9
 8001786:	433e      	orrs	r6, r7
 8001788:	0037      	movs	r7, r6
 800178a:	4656      	mov	r6, sl
 800178c:	40b2      	lsls	r2, r6
 800178e:	1e56      	subs	r6, r2, #1
 8001790:	41b2      	sbcs	r2, r6
 8001792:	4317      	orrs	r7, r2
 8001794:	4642      	mov	r2, r8
 8001796:	40da      	lsrs	r2, r3
 8001798:	1a89      	subs	r1, r1, r2
 800179a:	e799      	b.n	80016d0 <__aeabi_dadd+0x364>
 800179c:	4c7f      	ldr	r4, [pc, #508]	; (800199c <__aeabi_dadd+0x630>)
 800179e:	42a6      	cmp	r6, r4
 80017a0:	d05b      	beq.n	800185a <__aeabi_dadd+0x4ee>
 80017a2:	2480      	movs	r4, #128	; 0x80
 80017a4:	0424      	lsls	r4, r4, #16
 80017a6:	425b      	negs	r3, r3
 80017a8:	4321      	orrs	r1, r4
 80017aa:	e727      	b.n	80015fc <__aeabi_dadd+0x290>
 80017ac:	2e00      	cmp	r6, #0
 80017ae:	d10c      	bne.n	80017ca <__aeabi_dadd+0x45e>
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d100      	bne.n	80017b6 <__aeabi_dadd+0x44a>
 80017b4:	e0cb      	b.n	800194e <__aeabi_dadd+0x5e2>
 80017b6:	4664      	mov	r4, ip
 80017b8:	0039      	movs	r1, r7
 80017ba:	0010      	movs	r0, r2
 80017bc:	4d77      	ldr	r5, [pc, #476]	; (800199c <__aeabi_dadd+0x630>)
 80017be:	e6d7      	b.n	8001570 <__aeabi_dadd+0x204>
 80017c0:	4f76      	ldr	r7, [pc, #472]	; (800199c <__aeabi_dadd+0x630>)
 80017c2:	42bb      	cmp	r3, r7
 80017c4:	d018      	beq.n	80017f8 <__aeabi_dadd+0x48c>
 80017c6:	0033      	movs	r3, r6
 80017c8:	e675      	b.n	80014b6 <__aeabi_dadd+0x14a>
 80017ca:	2b00      	cmp	r3, #0
 80017cc:	d014      	beq.n	80017f8 <__aeabi_dadd+0x48c>
 80017ce:	074b      	lsls	r3, r1, #29
 80017d0:	08c0      	lsrs	r0, r0, #3
 80017d2:	4318      	orrs	r0, r3
 80017d4:	2380      	movs	r3, #128	; 0x80
 80017d6:	08c9      	lsrs	r1, r1, #3
 80017d8:	031b      	lsls	r3, r3, #12
 80017da:	4219      	tst	r1, r3
 80017dc:	d007      	beq.n	80017ee <__aeabi_dadd+0x482>
 80017de:	08fc      	lsrs	r4, r7, #3
 80017e0:	421c      	tst	r4, r3
 80017e2:	d104      	bne.n	80017ee <__aeabi_dadd+0x482>
 80017e4:	0779      	lsls	r1, r7, #29
 80017e6:	08d0      	lsrs	r0, r2, #3
 80017e8:	4308      	orrs	r0, r1
 80017ea:	46e1      	mov	r9, ip
 80017ec:	0021      	movs	r1, r4
 80017ee:	464c      	mov	r4, r9
 80017f0:	0f42      	lsrs	r2, r0, #29
 80017f2:	00c9      	lsls	r1, r1, #3
 80017f4:	4311      	orrs	r1, r2
 80017f6:	00c0      	lsls	r0, r0, #3
 80017f8:	4d68      	ldr	r5, [pc, #416]	; (800199c <__aeabi_dadd+0x630>)
 80017fa:	e6b9      	b.n	8001570 <__aeabi_dadd+0x204>
 80017fc:	001d      	movs	r5, r3
 80017fe:	2200      	movs	r2, #0
 8001800:	2300      	movs	r3, #0
 8001802:	e6c0      	b.n	8001586 <__aeabi_dadd+0x21a>
 8001804:	2d00      	cmp	r5, #0
 8001806:	d15b      	bne.n	80018c0 <__aeabi_dadd+0x554>
 8001808:	000d      	movs	r5, r1
 800180a:	4305      	orrs	r5, r0
 800180c:	d100      	bne.n	8001810 <__aeabi_dadd+0x4a4>
 800180e:	e6e2      	b.n	80015d6 <__aeabi_dadd+0x26a>
 8001810:	1c5d      	adds	r5, r3, #1
 8001812:	d100      	bne.n	8001816 <__aeabi_dadd+0x4aa>
 8001814:	e0b0      	b.n	8001978 <__aeabi_dadd+0x60c>
 8001816:	4d61      	ldr	r5, [pc, #388]	; (800199c <__aeabi_dadd+0x630>)
 8001818:	42ae      	cmp	r6, r5
 800181a:	d01f      	beq.n	800185c <__aeabi_dadd+0x4f0>
 800181c:	43db      	mvns	r3, r3
 800181e:	2b38      	cmp	r3, #56	; 0x38
 8001820:	dc71      	bgt.n	8001906 <__aeabi_dadd+0x59a>
 8001822:	2b1f      	cmp	r3, #31
 8001824:	dd00      	ble.n	8001828 <__aeabi_dadd+0x4bc>
 8001826:	e096      	b.n	8001956 <__aeabi_dadd+0x5ea>
 8001828:	2520      	movs	r5, #32
 800182a:	000f      	movs	r7, r1
 800182c:	1aed      	subs	r5, r5, r3
 800182e:	40af      	lsls	r7, r5
 8001830:	46b9      	mov	r9, r7
 8001832:	0007      	movs	r7, r0
 8001834:	46aa      	mov	sl, r5
 8001836:	40df      	lsrs	r7, r3
 8001838:	464d      	mov	r5, r9
 800183a:	433d      	orrs	r5, r7
 800183c:	002f      	movs	r7, r5
 800183e:	4655      	mov	r5, sl
 8001840:	40a8      	lsls	r0, r5
 8001842:	40d9      	lsrs	r1, r3
 8001844:	1e45      	subs	r5, r0, #1
 8001846:	41a8      	sbcs	r0, r5
 8001848:	4488      	add	r8, r1
 800184a:	4307      	orrs	r7, r0
 800184c:	18bf      	adds	r7, r7, r2
 800184e:	4297      	cmp	r7, r2
 8001850:	4192      	sbcs	r2, r2
 8001852:	4251      	negs	r1, r2
 8001854:	4441      	add	r1, r8
 8001856:	0035      	movs	r5, r6
 8001858:	e63a      	b.n	80014d0 <__aeabi_dadd+0x164>
 800185a:	4664      	mov	r4, ip
 800185c:	0035      	movs	r5, r6
 800185e:	4641      	mov	r1, r8
 8001860:	0010      	movs	r0, r2
 8001862:	e685      	b.n	8001570 <__aeabi_dadd+0x204>
 8001864:	000b      	movs	r3, r1
 8001866:	4303      	orrs	r3, r0
 8001868:	2d00      	cmp	r5, #0
 800186a:	d000      	beq.n	800186e <__aeabi_dadd+0x502>
 800186c:	e663      	b.n	8001536 <__aeabi_dadd+0x1ca>
 800186e:	2b00      	cmp	r3, #0
 8001870:	d0f5      	beq.n	800185e <__aeabi_dadd+0x4f2>
 8001872:	4643      	mov	r3, r8
 8001874:	4313      	orrs	r3, r2
 8001876:	d100      	bne.n	800187a <__aeabi_dadd+0x50e>
 8001878:	e67a      	b.n	8001570 <__aeabi_dadd+0x204>
 800187a:	1887      	adds	r7, r0, r2
 800187c:	4287      	cmp	r7, r0
 800187e:	4180      	sbcs	r0, r0
 8001880:	2207      	movs	r2, #7
 8001882:	4441      	add	r1, r8
 8001884:	4240      	negs	r0, r0
 8001886:	1809      	adds	r1, r1, r0
 8001888:	403a      	ands	r2, r7
 800188a:	020b      	lsls	r3, r1, #8
 800188c:	d400      	bmi.n	8001890 <__aeabi_dadd+0x524>
 800188e:	e6d5      	b.n	800163c <__aeabi_dadd+0x2d0>
 8001890:	4b43      	ldr	r3, [pc, #268]	; (80019a0 <__aeabi_dadd+0x634>)
 8001892:	3501      	adds	r5, #1
 8001894:	4019      	ands	r1, r3
 8001896:	e5c9      	b.n	800142c <__aeabi_dadd+0xc0>
 8001898:	0038      	movs	r0, r7
 800189a:	e669      	b.n	8001570 <__aeabi_dadd+0x204>
 800189c:	001e      	movs	r6, r3
 800189e:	4647      	mov	r7, r8
 80018a0:	3e20      	subs	r6, #32
 80018a2:	40f7      	lsrs	r7, r6
 80018a4:	46bc      	mov	ip, r7
 80018a6:	2b20      	cmp	r3, #32
 80018a8:	d004      	beq.n	80018b4 <__aeabi_dadd+0x548>
 80018aa:	2640      	movs	r6, #64	; 0x40
 80018ac:	1af3      	subs	r3, r6, r3
 80018ae:	4646      	mov	r6, r8
 80018b0:	409e      	lsls	r6, r3
 80018b2:	4332      	orrs	r2, r6
 80018b4:	0017      	movs	r7, r2
 80018b6:	4663      	mov	r3, ip
 80018b8:	1e7a      	subs	r2, r7, #1
 80018ba:	4197      	sbcs	r7, r2
 80018bc:	431f      	orrs	r7, r3
 80018be:	e602      	b.n	80014c6 <__aeabi_dadd+0x15a>
 80018c0:	4d36      	ldr	r5, [pc, #216]	; (800199c <__aeabi_dadd+0x630>)
 80018c2:	42ae      	cmp	r6, r5
 80018c4:	d0ca      	beq.n	800185c <__aeabi_dadd+0x4f0>
 80018c6:	2580      	movs	r5, #128	; 0x80
 80018c8:	042d      	lsls	r5, r5, #16
 80018ca:	425b      	negs	r3, r3
 80018cc:	4329      	orrs	r1, r5
 80018ce:	e7a6      	b.n	800181e <__aeabi_dadd+0x4b2>
 80018d0:	4308      	orrs	r0, r1
 80018d2:	1e41      	subs	r1, r0, #1
 80018d4:	4188      	sbcs	r0, r1
 80018d6:	e6a6      	b.n	8001626 <__aeabi_dadd+0x2ba>
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d100      	bne.n	80018de <__aeabi_dadd+0x572>
 80018dc:	e648      	b.n	8001570 <__aeabi_dadd+0x204>
 80018de:	1a87      	subs	r7, r0, r2
 80018e0:	4643      	mov	r3, r8
 80018e2:	42b8      	cmp	r0, r7
 80018e4:	41b6      	sbcs	r6, r6
 80018e6:	1acb      	subs	r3, r1, r3
 80018e8:	4276      	negs	r6, r6
 80018ea:	1b9e      	subs	r6, r3, r6
 80018ec:	0233      	lsls	r3, r6, #8
 80018ee:	d54b      	bpl.n	8001988 <__aeabi_dadd+0x61c>
 80018f0:	1a17      	subs	r7, r2, r0
 80018f2:	4643      	mov	r3, r8
 80018f4:	42ba      	cmp	r2, r7
 80018f6:	4192      	sbcs	r2, r2
 80018f8:	1a59      	subs	r1, r3, r1
 80018fa:	4252      	negs	r2, r2
 80018fc:	1a89      	subs	r1, r1, r2
 80018fe:	2207      	movs	r2, #7
 8001900:	4664      	mov	r4, ip
 8001902:	403a      	ands	r2, r7
 8001904:	e592      	b.n	800142c <__aeabi_dadd+0xc0>
 8001906:	4301      	orrs	r1, r0
 8001908:	000f      	movs	r7, r1
 800190a:	1e79      	subs	r1, r7, #1
 800190c:	418f      	sbcs	r7, r1
 800190e:	e79d      	b.n	800184c <__aeabi_dadd+0x4e0>
 8001910:	001c      	movs	r4, r3
 8001912:	000f      	movs	r7, r1
 8001914:	3c20      	subs	r4, #32
 8001916:	40e7      	lsrs	r7, r4
 8001918:	2b20      	cmp	r3, #32
 800191a:	d003      	beq.n	8001924 <__aeabi_dadd+0x5b8>
 800191c:	2440      	movs	r4, #64	; 0x40
 800191e:	1ae3      	subs	r3, r4, r3
 8001920:	4099      	lsls	r1, r3
 8001922:	4308      	orrs	r0, r1
 8001924:	1e41      	subs	r1, r0, #1
 8001926:	4188      	sbcs	r0, r1
 8001928:	4338      	orrs	r0, r7
 800192a:	e67c      	b.n	8001626 <__aeabi_dadd+0x2ba>
 800192c:	2200      	movs	r2, #0
 800192e:	2400      	movs	r4, #0
 8001930:	e625      	b.n	800157e <__aeabi_dadd+0x212>
 8001932:	1a17      	subs	r7, r2, r0
 8001934:	4643      	mov	r3, r8
 8001936:	42ba      	cmp	r2, r7
 8001938:	4192      	sbcs	r2, r2
 800193a:	1a59      	subs	r1, r3, r1
 800193c:	4252      	negs	r2, r2
 800193e:	1a89      	subs	r1, r1, r2
 8001940:	4664      	mov	r4, ip
 8001942:	0035      	movs	r5, r6
 8001944:	e543      	b.n	80013ce <__aeabi_dadd+0x62>
 8001946:	4641      	mov	r1, r8
 8001948:	0010      	movs	r0, r2
 800194a:	4d14      	ldr	r5, [pc, #80]	; (800199c <__aeabi_dadd+0x630>)
 800194c:	e610      	b.n	8001570 <__aeabi_dadd+0x204>
 800194e:	2280      	movs	r2, #128	; 0x80
 8001950:	2400      	movs	r4, #0
 8001952:	0312      	lsls	r2, r2, #12
 8001954:	e680      	b.n	8001658 <__aeabi_dadd+0x2ec>
 8001956:	001d      	movs	r5, r3
 8001958:	000f      	movs	r7, r1
 800195a:	3d20      	subs	r5, #32
 800195c:	40ef      	lsrs	r7, r5
 800195e:	46bc      	mov	ip, r7
 8001960:	2b20      	cmp	r3, #32
 8001962:	d003      	beq.n	800196c <__aeabi_dadd+0x600>
 8001964:	2540      	movs	r5, #64	; 0x40
 8001966:	1aeb      	subs	r3, r5, r3
 8001968:	4099      	lsls	r1, r3
 800196a:	4308      	orrs	r0, r1
 800196c:	0007      	movs	r7, r0
 800196e:	4663      	mov	r3, ip
 8001970:	1e78      	subs	r0, r7, #1
 8001972:	4187      	sbcs	r7, r0
 8001974:	431f      	orrs	r7, r3
 8001976:	e769      	b.n	800184c <__aeabi_dadd+0x4e0>
 8001978:	1887      	adds	r7, r0, r2
 800197a:	4297      	cmp	r7, r2
 800197c:	419b      	sbcs	r3, r3
 800197e:	4441      	add	r1, r8
 8001980:	425b      	negs	r3, r3
 8001982:	18c9      	adds	r1, r1, r3
 8001984:	0035      	movs	r5, r6
 8001986:	e5a3      	b.n	80014d0 <__aeabi_dadd+0x164>
 8001988:	003b      	movs	r3, r7
 800198a:	4333      	orrs	r3, r6
 800198c:	d0ce      	beq.n	800192c <__aeabi_dadd+0x5c0>
 800198e:	2207      	movs	r2, #7
 8001990:	0031      	movs	r1, r6
 8001992:	403a      	ands	r2, r7
 8001994:	e652      	b.n	800163c <__aeabi_dadd+0x2d0>
 8001996:	2300      	movs	r3, #0
 8001998:	001a      	movs	r2, r3
 800199a:	e5f4      	b.n	8001586 <__aeabi_dadd+0x21a>
 800199c:	000007ff 	.word	0x000007ff
 80019a0:	ff7fffff 	.word	0xff7fffff

080019a4 <__aeabi_ddiv>:
 80019a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019a6:	4657      	mov	r7, sl
 80019a8:	46de      	mov	lr, fp
 80019aa:	464e      	mov	r6, r9
 80019ac:	4645      	mov	r5, r8
 80019ae:	b5e0      	push	{r5, r6, r7, lr}
 80019b0:	4683      	mov	fp, r0
 80019b2:	0007      	movs	r7, r0
 80019b4:	030e      	lsls	r6, r1, #12
 80019b6:	0048      	lsls	r0, r1, #1
 80019b8:	b085      	sub	sp, #20
 80019ba:	4692      	mov	sl, r2
 80019bc:	001c      	movs	r4, r3
 80019be:	0b36      	lsrs	r6, r6, #12
 80019c0:	0d40      	lsrs	r0, r0, #21
 80019c2:	0fcd      	lsrs	r5, r1, #31
 80019c4:	2800      	cmp	r0, #0
 80019c6:	d100      	bne.n	80019ca <__aeabi_ddiv+0x26>
 80019c8:	e09d      	b.n	8001b06 <__aeabi_ddiv+0x162>
 80019ca:	4b95      	ldr	r3, [pc, #596]	; (8001c20 <__aeabi_ddiv+0x27c>)
 80019cc:	4298      	cmp	r0, r3
 80019ce:	d039      	beq.n	8001a44 <__aeabi_ddiv+0xa0>
 80019d0:	2380      	movs	r3, #128	; 0x80
 80019d2:	00f6      	lsls	r6, r6, #3
 80019d4:	041b      	lsls	r3, r3, #16
 80019d6:	431e      	orrs	r6, r3
 80019d8:	4a92      	ldr	r2, [pc, #584]	; (8001c24 <__aeabi_ddiv+0x280>)
 80019da:	0f7b      	lsrs	r3, r7, #29
 80019dc:	4333      	orrs	r3, r6
 80019de:	4699      	mov	r9, r3
 80019e0:	4694      	mov	ip, r2
 80019e2:	0003      	movs	r3, r0
 80019e4:	4463      	add	r3, ip
 80019e6:	9300      	str	r3, [sp, #0]
 80019e8:	2300      	movs	r3, #0
 80019ea:	2600      	movs	r6, #0
 80019ec:	00ff      	lsls	r7, r7, #3
 80019ee:	9302      	str	r3, [sp, #8]
 80019f0:	0323      	lsls	r3, r4, #12
 80019f2:	0b1b      	lsrs	r3, r3, #12
 80019f4:	4698      	mov	r8, r3
 80019f6:	0063      	lsls	r3, r4, #1
 80019f8:	0fe4      	lsrs	r4, r4, #31
 80019fa:	4652      	mov	r2, sl
 80019fc:	0d5b      	lsrs	r3, r3, #21
 80019fe:	9401      	str	r4, [sp, #4]
 8001a00:	d100      	bne.n	8001a04 <__aeabi_ddiv+0x60>
 8001a02:	e0b3      	b.n	8001b6c <__aeabi_ddiv+0x1c8>
 8001a04:	4986      	ldr	r1, [pc, #536]	; (8001c20 <__aeabi_ddiv+0x27c>)
 8001a06:	428b      	cmp	r3, r1
 8001a08:	d100      	bne.n	8001a0c <__aeabi_ddiv+0x68>
 8001a0a:	e09e      	b.n	8001b4a <__aeabi_ddiv+0x1a6>
 8001a0c:	4642      	mov	r2, r8
 8001a0e:	00d1      	lsls	r1, r2, #3
 8001a10:	2280      	movs	r2, #128	; 0x80
 8001a12:	0412      	lsls	r2, r2, #16
 8001a14:	430a      	orrs	r2, r1
 8001a16:	4651      	mov	r1, sl
 8001a18:	0f49      	lsrs	r1, r1, #29
 8001a1a:	4311      	orrs	r1, r2
 8001a1c:	468b      	mov	fp, r1
 8001a1e:	4981      	ldr	r1, [pc, #516]	; (8001c24 <__aeabi_ddiv+0x280>)
 8001a20:	4652      	mov	r2, sl
 8001a22:	468c      	mov	ip, r1
 8001a24:	9900      	ldr	r1, [sp, #0]
 8001a26:	4463      	add	r3, ip
 8001a28:	1acb      	subs	r3, r1, r3
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	00d2      	lsls	r2, r2, #3
 8001a2e:	9300      	str	r3, [sp, #0]
 8001a30:	002b      	movs	r3, r5
 8001a32:	4063      	eors	r3, r4
 8001a34:	469a      	mov	sl, r3
 8001a36:	2e0f      	cmp	r6, #15
 8001a38:	d900      	bls.n	8001a3c <__aeabi_ddiv+0x98>
 8001a3a:	e105      	b.n	8001c48 <__aeabi_ddiv+0x2a4>
 8001a3c:	4b7a      	ldr	r3, [pc, #488]	; (8001c28 <__aeabi_ddiv+0x284>)
 8001a3e:	00b6      	lsls	r6, r6, #2
 8001a40:	599b      	ldr	r3, [r3, r6]
 8001a42:	469f      	mov	pc, r3
 8001a44:	465b      	mov	r3, fp
 8001a46:	4333      	orrs	r3, r6
 8001a48:	4699      	mov	r9, r3
 8001a4a:	d000      	beq.n	8001a4e <__aeabi_ddiv+0xaa>
 8001a4c:	e0b8      	b.n	8001bc0 <__aeabi_ddiv+0x21c>
 8001a4e:	2302      	movs	r3, #2
 8001a50:	2608      	movs	r6, #8
 8001a52:	2700      	movs	r7, #0
 8001a54:	9000      	str	r0, [sp, #0]
 8001a56:	9302      	str	r3, [sp, #8]
 8001a58:	e7ca      	b.n	80019f0 <__aeabi_ddiv+0x4c>
 8001a5a:	46cb      	mov	fp, r9
 8001a5c:	003a      	movs	r2, r7
 8001a5e:	9902      	ldr	r1, [sp, #8]
 8001a60:	9501      	str	r5, [sp, #4]
 8001a62:	9b01      	ldr	r3, [sp, #4]
 8001a64:	469a      	mov	sl, r3
 8001a66:	2902      	cmp	r1, #2
 8001a68:	d027      	beq.n	8001aba <__aeabi_ddiv+0x116>
 8001a6a:	2903      	cmp	r1, #3
 8001a6c:	d100      	bne.n	8001a70 <__aeabi_ddiv+0xcc>
 8001a6e:	e280      	b.n	8001f72 <__aeabi_ddiv+0x5ce>
 8001a70:	2901      	cmp	r1, #1
 8001a72:	d044      	beq.n	8001afe <__aeabi_ddiv+0x15a>
 8001a74:	496d      	ldr	r1, [pc, #436]	; (8001c2c <__aeabi_ddiv+0x288>)
 8001a76:	9b00      	ldr	r3, [sp, #0]
 8001a78:	468c      	mov	ip, r1
 8001a7a:	4463      	add	r3, ip
 8001a7c:	001c      	movs	r4, r3
 8001a7e:	2c00      	cmp	r4, #0
 8001a80:	dd38      	ble.n	8001af4 <__aeabi_ddiv+0x150>
 8001a82:	0753      	lsls	r3, r2, #29
 8001a84:	d000      	beq.n	8001a88 <__aeabi_ddiv+0xe4>
 8001a86:	e213      	b.n	8001eb0 <__aeabi_ddiv+0x50c>
 8001a88:	08d2      	lsrs	r2, r2, #3
 8001a8a:	465b      	mov	r3, fp
 8001a8c:	01db      	lsls	r3, r3, #7
 8001a8e:	d509      	bpl.n	8001aa4 <__aeabi_ddiv+0x100>
 8001a90:	4659      	mov	r1, fp
 8001a92:	4b67      	ldr	r3, [pc, #412]	; (8001c30 <__aeabi_ddiv+0x28c>)
 8001a94:	4019      	ands	r1, r3
 8001a96:	468b      	mov	fp, r1
 8001a98:	2180      	movs	r1, #128	; 0x80
 8001a9a:	00c9      	lsls	r1, r1, #3
 8001a9c:	468c      	mov	ip, r1
 8001a9e:	9b00      	ldr	r3, [sp, #0]
 8001aa0:	4463      	add	r3, ip
 8001aa2:	001c      	movs	r4, r3
 8001aa4:	4b63      	ldr	r3, [pc, #396]	; (8001c34 <__aeabi_ddiv+0x290>)
 8001aa6:	429c      	cmp	r4, r3
 8001aa8:	dc07      	bgt.n	8001aba <__aeabi_ddiv+0x116>
 8001aaa:	465b      	mov	r3, fp
 8001aac:	0564      	lsls	r4, r4, #21
 8001aae:	075f      	lsls	r7, r3, #29
 8001ab0:	025b      	lsls	r3, r3, #9
 8001ab2:	4317      	orrs	r7, r2
 8001ab4:	0b1b      	lsrs	r3, r3, #12
 8001ab6:	0d62      	lsrs	r2, r4, #21
 8001ab8:	e002      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001aba:	2300      	movs	r3, #0
 8001abc:	2700      	movs	r7, #0
 8001abe:	4a58      	ldr	r2, [pc, #352]	; (8001c20 <__aeabi_ddiv+0x27c>)
 8001ac0:	2100      	movs	r1, #0
 8001ac2:	031b      	lsls	r3, r3, #12
 8001ac4:	0b1c      	lsrs	r4, r3, #12
 8001ac6:	0d0b      	lsrs	r3, r1, #20
 8001ac8:	051b      	lsls	r3, r3, #20
 8001aca:	4323      	orrs	r3, r4
 8001acc:	0514      	lsls	r4, r2, #20
 8001ace:	4a5a      	ldr	r2, [pc, #360]	; (8001c38 <__aeabi_ddiv+0x294>)
 8001ad0:	0038      	movs	r0, r7
 8001ad2:	4013      	ands	r3, r2
 8001ad4:	431c      	orrs	r4, r3
 8001ad6:	4653      	mov	r3, sl
 8001ad8:	0064      	lsls	r4, r4, #1
 8001ada:	07db      	lsls	r3, r3, #31
 8001adc:	0864      	lsrs	r4, r4, #1
 8001ade:	431c      	orrs	r4, r3
 8001ae0:	0021      	movs	r1, r4
 8001ae2:	b005      	add	sp, #20
 8001ae4:	bc3c      	pop	{r2, r3, r4, r5}
 8001ae6:	4690      	mov	r8, r2
 8001ae8:	4699      	mov	r9, r3
 8001aea:	46a2      	mov	sl, r4
 8001aec:	46ab      	mov	fp, r5
 8001aee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001af0:	2201      	movs	r2, #1
 8001af2:	4252      	negs	r2, r2
 8001af4:	2301      	movs	r3, #1
 8001af6:	1b1b      	subs	r3, r3, r4
 8001af8:	2b38      	cmp	r3, #56	; 0x38
 8001afa:	dc00      	bgt.n	8001afe <__aeabi_ddiv+0x15a>
 8001afc:	e1ad      	b.n	8001e5a <__aeabi_ddiv+0x4b6>
 8001afe:	2200      	movs	r2, #0
 8001b00:	2300      	movs	r3, #0
 8001b02:	2700      	movs	r7, #0
 8001b04:	e7dc      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001b06:	465b      	mov	r3, fp
 8001b08:	4333      	orrs	r3, r6
 8001b0a:	4699      	mov	r9, r3
 8001b0c:	d05e      	beq.n	8001bcc <__aeabi_ddiv+0x228>
 8001b0e:	2e00      	cmp	r6, #0
 8001b10:	d100      	bne.n	8001b14 <__aeabi_ddiv+0x170>
 8001b12:	e18a      	b.n	8001e2a <__aeabi_ddiv+0x486>
 8001b14:	0030      	movs	r0, r6
 8001b16:	f7fe fcf7 	bl	8000508 <__clzsi2>
 8001b1a:	0003      	movs	r3, r0
 8001b1c:	3b0b      	subs	r3, #11
 8001b1e:	2b1c      	cmp	r3, #28
 8001b20:	dd00      	ble.n	8001b24 <__aeabi_ddiv+0x180>
 8001b22:	e17b      	b.n	8001e1c <__aeabi_ddiv+0x478>
 8001b24:	221d      	movs	r2, #29
 8001b26:	1ad3      	subs	r3, r2, r3
 8001b28:	465a      	mov	r2, fp
 8001b2a:	0001      	movs	r1, r0
 8001b2c:	40da      	lsrs	r2, r3
 8001b2e:	3908      	subs	r1, #8
 8001b30:	408e      	lsls	r6, r1
 8001b32:	0013      	movs	r3, r2
 8001b34:	465f      	mov	r7, fp
 8001b36:	4333      	orrs	r3, r6
 8001b38:	4699      	mov	r9, r3
 8001b3a:	408f      	lsls	r7, r1
 8001b3c:	4b3f      	ldr	r3, [pc, #252]	; (8001c3c <__aeabi_ddiv+0x298>)
 8001b3e:	2600      	movs	r6, #0
 8001b40:	1a1b      	subs	r3, r3, r0
 8001b42:	9300      	str	r3, [sp, #0]
 8001b44:	2300      	movs	r3, #0
 8001b46:	9302      	str	r3, [sp, #8]
 8001b48:	e752      	b.n	80019f0 <__aeabi_ddiv+0x4c>
 8001b4a:	4641      	mov	r1, r8
 8001b4c:	4653      	mov	r3, sl
 8001b4e:	430b      	orrs	r3, r1
 8001b50:	493b      	ldr	r1, [pc, #236]	; (8001c40 <__aeabi_ddiv+0x29c>)
 8001b52:	469b      	mov	fp, r3
 8001b54:	468c      	mov	ip, r1
 8001b56:	9b00      	ldr	r3, [sp, #0]
 8001b58:	4463      	add	r3, ip
 8001b5a:	9300      	str	r3, [sp, #0]
 8001b5c:	465b      	mov	r3, fp
 8001b5e:	2b00      	cmp	r3, #0
 8001b60:	d13b      	bne.n	8001bda <__aeabi_ddiv+0x236>
 8001b62:	2302      	movs	r3, #2
 8001b64:	2200      	movs	r2, #0
 8001b66:	431e      	orrs	r6, r3
 8001b68:	2102      	movs	r1, #2
 8001b6a:	e761      	b.n	8001a30 <__aeabi_ddiv+0x8c>
 8001b6c:	4643      	mov	r3, r8
 8001b6e:	4313      	orrs	r3, r2
 8001b70:	469b      	mov	fp, r3
 8001b72:	d037      	beq.n	8001be4 <__aeabi_ddiv+0x240>
 8001b74:	4643      	mov	r3, r8
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d100      	bne.n	8001b7c <__aeabi_ddiv+0x1d8>
 8001b7a:	e162      	b.n	8001e42 <__aeabi_ddiv+0x49e>
 8001b7c:	4640      	mov	r0, r8
 8001b7e:	f7fe fcc3 	bl	8000508 <__clzsi2>
 8001b82:	0003      	movs	r3, r0
 8001b84:	3b0b      	subs	r3, #11
 8001b86:	2b1c      	cmp	r3, #28
 8001b88:	dd00      	ble.n	8001b8c <__aeabi_ddiv+0x1e8>
 8001b8a:	e153      	b.n	8001e34 <__aeabi_ddiv+0x490>
 8001b8c:	0002      	movs	r2, r0
 8001b8e:	4641      	mov	r1, r8
 8001b90:	3a08      	subs	r2, #8
 8001b92:	4091      	lsls	r1, r2
 8001b94:	4688      	mov	r8, r1
 8001b96:	211d      	movs	r1, #29
 8001b98:	1acb      	subs	r3, r1, r3
 8001b9a:	4651      	mov	r1, sl
 8001b9c:	40d9      	lsrs	r1, r3
 8001b9e:	000b      	movs	r3, r1
 8001ba0:	4641      	mov	r1, r8
 8001ba2:	430b      	orrs	r3, r1
 8001ba4:	469b      	mov	fp, r3
 8001ba6:	4653      	mov	r3, sl
 8001ba8:	4093      	lsls	r3, r2
 8001baa:	001a      	movs	r2, r3
 8001bac:	9b00      	ldr	r3, [sp, #0]
 8001bae:	4925      	ldr	r1, [pc, #148]	; (8001c44 <__aeabi_ddiv+0x2a0>)
 8001bb0:	469c      	mov	ip, r3
 8001bb2:	4460      	add	r0, ip
 8001bb4:	0003      	movs	r3, r0
 8001bb6:	468c      	mov	ip, r1
 8001bb8:	4463      	add	r3, ip
 8001bba:	9300      	str	r3, [sp, #0]
 8001bbc:	2100      	movs	r1, #0
 8001bbe:	e737      	b.n	8001a30 <__aeabi_ddiv+0x8c>
 8001bc0:	2303      	movs	r3, #3
 8001bc2:	46b1      	mov	r9, r6
 8001bc4:	9000      	str	r0, [sp, #0]
 8001bc6:	260c      	movs	r6, #12
 8001bc8:	9302      	str	r3, [sp, #8]
 8001bca:	e711      	b.n	80019f0 <__aeabi_ddiv+0x4c>
 8001bcc:	2300      	movs	r3, #0
 8001bce:	9300      	str	r3, [sp, #0]
 8001bd0:	3301      	adds	r3, #1
 8001bd2:	2604      	movs	r6, #4
 8001bd4:	2700      	movs	r7, #0
 8001bd6:	9302      	str	r3, [sp, #8]
 8001bd8:	e70a      	b.n	80019f0 <__aeabi_ddiv+0x4c>
 8001bda:	2303      	movs	r3, #3
 8001bdc:	46c3      	mov	fp, r8
 8001bde:	431e      	orrs	r6, r3
 8001be0:	2103      	movs	r1, #3
 8001be2:	e725      	b.n	8001a30 <__aeabi_ddiv+0x8c>
 8001be4:	3301      	adds	r3, #1
 8001be6:	431e      	orrs	r6, r3
 8001be8:	2200      	movs	r2, #0
 8001bea:	2101      	movs	r1, #1
 8001bec:	e720      	b.n	8001a30 <__aeabi_ddiv+0x8c>
 8001bee:	2300      	movs	r3, #0
 8001bf0:	469a      	mov	sl, r3
 8001bf2:	2380      	movs	r3, #128	; 0x80
 8001bf4:	2700      	movs	r7, #0
 8001bf6:	031b      	lsls	r3, r3, #12
 8001bf8:	4a09      	ldr	r2, [pc, #36]	; (8001c20 <__aeabi_ddiv+0x27c>)
 8001bfa:	e761      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001bfc:	2380      	movs	r3, #128	; 0x80
 8001bfe:	4649      	mov	r1, r9
 8001c00:	031b      	lsls	r3, r3, #12
 8001c02:	4219      	tst	r1, r3
 8001c04:	d100      	bne.n	8001c08 <__aeabi_ddiv+0x264>
 8001c06:	e0e2      	b.n	8001dce <__aeabi_ddiv+0x42a>
 8001c08:	4659      	mov	r1, fp
 8001c0a:	4219      	tst	r1, r3
 8001c0c:	d000      	beq.n	8001c10 <__aeabi_ddiv+0x26c>
 8001c0e:	e0de      	b.n	8001dce <__aeabi_ddiv+0x42a>
 8001c10:	430b      	orrs	r3, r1
 8001c12:	031b      	lsls	r3, r3, #12
 8001c14:	0017      	movs	r7, r2
 8001c16:	0b1b      	lsrs	r3, r3, #12
 8001c18:	46a2      	mov	sl, r4
 8001c1a:	4a01      	ldr	r2, [pc, #4]	; (8001c20 <__aeabi_ddiv+0x27c>)
 8001c1c:	e750      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001c1e:	46c0      	nop			; (mov r8, r8)
 8001c20:	000007ff 	.word	0x000007ff
 8001c24:	fffffc01 	.word	0xfffffc01
 8001c28:	0800dc98 	.word	0x0800dc98
 8001c2c:	000003ff 	.word	0x000003ff
 8001c30:	feffffff 	.word	0xfeffffff
 8001c34:	000007fe 	.word	0x000007fe
 8001c38:	800fffff 	.word	0x800fffff
 8001c3c:	fffffc0d 	.word	0xfffffc0d
 8001c40:	fffff801 	.word	0xfffff801
 8001c44:	000003f3 	.word	0x000003f3
 8001c48:	45d9      	cmp	r9, fp
 8001c4a:	d900      	bls.n	8001c4e <__aeabi_ddiv+0x2aa>
 8001c4c:	e0cb      	b.n	8001de6 <__aeabi_ddiv+0x442>
 8001c4e:	d100      	bne.n	8001c52 <__aeabi_ddiv+0x2ae>
 8001c50:	e0c6      	b.n	8001de0 <__aeabi_ddiv+0x43c>
 8001c52:	003c      	movs	r4, r7
 8001c54:	4648      	mov	r0, r9
 8001c56:	2700      	movs	r7, #0
 8001c58:	9b00      	ldr	r3, [sp, #0]
 8001c5a:	3b01      	subs	r3, #1
 8001c5c:	9300      	str	r3, [sp, #0]
 8001c5e:	465b      	mov	r3, fp
 8001c60:	0e16      	lsrs	r6, r2, #24
 8001c62:	021b      	lsls	r3, r3, #8
 8001c64:	431e      	orrs	r6, r3
 8001c66:	0213      	lsls	r3, r2, #8
 8001c68:	4698      	mov	r8, r3
 8001c6a:	0433      	lsls	r3, r6, #16
 8001c6c:	0c1b      	lsrs	r3, r3, #16
 8001c6e:	4699      	mov	r9, r3
 8001c70:	0c31      	lsrs	r1, r6, #16
 8001c72:	9101      	str	r1, [sp, #4]
 8001c74:	f7fe fae0 	bl	8000238 <__aeabi_uidivmod>
 8001c78:	464a      	mov	r2, r9
 8001c7a:	4342      	muls	r2, r0
 8001c7c:	040b      	lsls	r3, r1, #16
 8001c7e:	0c21      	lsrs	r1, r4, #16
 8001c80:	0005      	movs	r5, r0
 8001c82:	4319      	orrs	r1, r3
 8001c84:	428a      	cmp	r2, r1
 8001c86:	d907      	bls.n	8001c98 <__aeabi_ddiv+0x2f4>
 8001c88:	1989      	adds	r1, r1, r6
 8001c8a:	3d01      	subs	r5, #1
 8001c8c:	428e      	cmp	r6, r1
 8001c8e:	d803      	bhi.n	8001c98 <__aeabi_ddiv+0x2f4>
 8001c90:	428a      	cmp	r2, r1
 8001c92:	d901      	bls.n	8001c98 <__aeabi_ddiv+0x2f4>
 8001c94:	1e85      	subs	r5, r0, #2
 8001c96:	1989      	adds	r1, r1, r6
 8001c98:	1a88      	subs	r0, r1, r2
 8001c9a:	9901      	ldr	r1, [sp, #4]
 8001c9c:	f7fe facc 	bl	8000238 <__aeabi_uidivmod>
 8001ca0:	0409      	lsls	r1, r1, #16
 8001ca2:	468c      	mov	ip, r1
 8001ca4:	464a      	mov	r2, r9
 8001ca6:	0421      	lsls	r1, r4, #16
 8001ca8:	4664      	mov	r4, ip
 8001caa:	4342      	muls	r2, r0
 8001cac:	0c09      	lsrs	r1, r1, #16
 8001cae:	0003      	movs	r3, r0
 8001cb0:	4321      	orrs	r1, r4
 8001cb2:	428a      	cmp	r2, r1
 8001cb4:	d904      	bls.n	8001cc0 <__aeabi_ddiv+0x31c>
 8001cb6:	1989      	adds	r1, r1, r6
 8001cb8:	3b01      	subs	r3, #1
 8001cba:	428e      	cmp	r6, r1
 8001cbc:	d800      	bhi.n	8001cc0 <__aeabi_ddiv+0x31c>
 8001cbe:	e0f1      	b.n	8001ea4 <__aeabi_ddiv+0x500>
 8001cc0:	042d      	lsls	r5, r5, #16
 8001cc2:	431d      	orrs	r5, r3
 8001cc4:	46ab      	mov	fp, r5
 8001cc6:	4643      	mov	r3, r8
 8001cc8:	1a89      	subs	r1, r1, r2
 8001cca:	4642      	mov	r2, r8
 8001ccc:	0c28      	lsrs	r0, r5, #16
 8001cce:	0412      	lsls	r2, r2, #16
 8001cd0:	0c1d      	lsrs	r5, r3, #16
 8001cd2:	465b      	mov	r3, fp
 8001cd4:	0c14      	lsrs	r4, r2, #16
 8001cd6:	0022      	movs	r2, r4
 8001cd8:	041b      	lsls	r3, r3, #16
 8001cda:	0c1b      	lsrs	r3, r3, #16
 8001cdc:	435a      	muls	r2, r3
 8001cde:	9403      	str	r4, [sp, #12]
 8001ce0:	436b      	muls	r3, r5
 8001ce2:	4344      	muls	r4, r0
 8001ce4:	9502      	str	r5, [sp, #8]
 8001ce6:	4368      	muls	r0, r5
 8001ce8:	191b      	adds	r3, r3, r4
 8001cea:	0c15      	lsrs	r5, r2, #16
 8001cec:	18eb      	adds	r3, r5, r3
 8001cee:	429c      	cmp	r4, r3
 8001cf0:	d903      	bls.n	8001cfa <__aeabi_ddiv+0x356>
 8001cf2:	2480      	movs	r4, #128	; 0x80
 8001cf4:	0264      	lsls	r4, r4, #9
 8001cf6:	46a4      	mov	ip, r4
 8001cf8:	4460      	add	r0, ip
 8001cfa:	0c1c      	lsrs	r4, r3, #16
 8001cfc:	0415      	lsls	r5, r2, #16
 8001cfe:	041b      	lsls	r3, r3, #16
 8001d00:	0c2d      	lsrs	r5, r5, #16
 8001d02:	1820      	adds	r0, r4, r0
 8001d04:	195d      	adds	r5, r3, r5
 8001d06:	4281      	cmp	r1, r0
 8001d08:	d377      	bcc.n	8001dfa <__aeabi_ddiv+0x456>
 8001d0a:	d073      	beq.n	8001df4 <__aeabi_ddiv+0x450>
 8001d0c:	1a0c      	subs	r4, r1, r0
 8001d0e:	4aa2      	ldr	r2, [pc, #648]	; (8001f98 <__aeabi_ddiv+0x5f4>)
 8001d10:	1b7d      	subs	r5, r7, r5
 8001d12:	42af      	cmp	r7, r5
 8001d14:	41bf      	sbcs	r7, r7
 8001d16:	4694      	mov	ip, r2
 8001d18:	9b00      	ldr	r3, [sp, #0]
 8001d1a:	427f      	negs	r7, r7
 8001d1c:	4463      	add	r3, ip
 8001d1e:	1be0      	subs	r0, r4, r7
 8001d20:	001c      	movs	r4, r3
 8001d22:	4286      	cmp	r6, r0
 8001d24:	d100      	bne.n	8001d28 <__aeabi_ddiv+0x384>
 8001d26:	e0db      	b.n	8001ee0 <__aeabi_ddiv+0x53c>
 8001d28:	9901      	ldr	r1, [sp, #4]
 8001d2a:	f7fe fa85 	bl	8000238 <__aeabi_uidivmod>
 8001d2e:	464a      	mov	r2, r9
 8001d30:	4342      	muls	r2, r0
 8001d32:	040b      	lsls	r3, r1, #16
 8001d34:	0c29      	lsrs	r1, r5, #16
 8001d36:	0007      	movs	r7, r0
 8001d38:	4319      	orrs	r1, r3
 8001d3a:	428a      	cmp	r2, r1
 8001d3c:	d907      	bls.n	8001d4e <__aeabi_ddiv+0x3aa>
 8001d3e:	1989      	adds	r1, r1, r6
 8001d40:	3f01      	subs	r7, #1
 8001d42:	428e      	cmp	r6, r1
 8001d44:	d803      	bhi.n	8001d4e <__aeabi_ddiv+0x3aa>
 8001d46:	428a      	cmp	r2, r1
 8001d48:	d901      	bls.n	8001d4e <__aeabi_ddiv+0x3aa>
 8001d4a:	1e87      	subs	r7, r0, #2
 8001d4c:	1989      	adds	r1, r1, r6
 8001d4e:	1a88      	subs	r0, r1, r2
 8001d50:	9901      	ldr	r1, [sp, #4]
 8001d52:	f7fe fa71 	bl	8000238 <__aeabi_uidivmod>
 8001d56:	0409      	lsls	r1, r1, #16
 8001d58:	464a      	mov	r2, r9
 8001d5a:	4689      	mov	r9, r1
 8001d5c:	0429      	lsls	r1, r5, #16
 8001d5e:	464d      	mov	r5, r9
 8001d60:	4342      	muls	r2, r0
 8001d62:	0c09      	lsrs	r1, r1, #16
 8001d64:	0003      	movs	r3, r0
 8001d66:	4329      	orrs	r1, r5
 8001d68:	428a      	cmp	r2, r1
 8001d6a:	d907      	bls.n	8001d7c <__aeabi_ddiv+0x3d8>
 8001d6c:	1989      	adds	r1, r1, r6
 8001d6e:	3b01      	subs	r3, #1
 8001d70:	428e      	cmp	r6, r1
 8001d72:	d803      	bhi.n	8001d7c <__aeabi_ddiv+0x3d8>
 8001d74:	428a      	cmp	r2, r1
 8001d76:	d901      	bls.n	8001d7c <__aeabi_ddiv+0x3d8>
 8001d78:	1e83      	subs	r3, r0, #2
 8001d7a:	1989      	adds	r1, r1, r6
 8001d7c:	043f      	lsls	r7, r7, #16
 8001d7e:	1a89      	subs	r1, r1, r2
 8001d80:	003a      	movs	r2, r7
 8001d82:	9f03      	ldr	r7, [sp, #12]
 8001d84:	431a      	orrs	r2, r3
 8001d86:	0038      	movs	r0, r7
 8001d88:	0413      	lsls	r3, r2, #16
 8001d8a:	0c1b      	lsrs	r3, r3, #16
 8001d8c:	4358      	muls	r0, r3
 8001d8e:	4681      	mov	r9, r0
 8001d90:	9802      	ldr	r0, [sp, #8]
 8001d92:	0c15      	lsrs	r5, r2, #16
 8001d94:	436f      	muls	r7, r5
 8001d96:	4343      	muls	r3, r0
 8001d98:	4345      	muls	r5, r0
 8001d9a:	4648      	mov	r0, r9
 8001d9c:	0c00      	lsrs	r0, r0, #16
 8001d9e:	4684      	mov	ip, r0
 8001da0:	19db      	adds	r3, r3, r7
 8001da2:	4463      	add	r3, ip
 8001da4:	429f      	cmp	r7, r3
 8001da6:	d903      	bls.n	8001db0 <__aeabi_ddiv+0x40c>
 8001da8:	2080      	movs	r0, #128	; 0x80
 8001daa:	0240      	lsls	r0, r0, #9
 8001dac:	4684      	mov	ip, r0
 8001dae:	4465      	add	r5, ip
 8001db0:	4648      	mov	r0, r9
 8001db2:	0c1f      	lsrs	r7, r3, #16
 8001db4:	0400      	lsls	r0, r0, #16
 8001db6:	041b      	lsls	r3, r3, #16
 8001db8:	0c00      	lsrs	r0, r0, #16
 8001dba:	197d      	adds	r5, r7, r5
 8001dbc:	1818      	adds	r0, r3, r0
 8001dbe:	42a9      	cmp	r1, r5
 8001dc0:	d200      	bcs.n	8001dc4 <__aeabi_ddiv+0x420>
 8001dc2:	e084      	b.n	8001ece <__aeabi_ddiv+0x52a>
 8001dc4:	d100      	bne.n	8001dc8 <__aeabi_ddiv+0x424>
 8001dc6:	e07f      	b.n	8001ec8 <__aeabi_ddiv+0x524>
 8001dc8:	2301      	movs	r3, #1
 8001dca:	431a      	orrs	r2, r3
 8001dcc:	e657      	b.n	8001a7e <__aeabi_ddiv+0xda>
 8001dce:	2380      	movs	r3, #128	; 0x80
 8001dd0:	464a      	mov	r2, r9
 8001dd2:	031b      	lsls	r3, r3, #12
 8001dd4:	4313      	orrs	r3, r2
 8001dd6:	031b      	lsls	r3, r3, #12
 8001dd8:	0b1b      	lsrs	r3, r3, #12
 8001dda:	46aa      	mov	sl, r5
 8001ddc:	4a6f      	ldr	r2, [pc, #444]	; (8001f9c <__aeabi_ddiv+0x5f8>)
 8001dde:	e66f      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001de0:	42ba      	cmp	r2, r7
 8001de2:	d900      	bls.n	8001de6 <__aeabi_ddiv+0x442>
 8001de4:	e735      	b.n	8001c52 <__aeabi_ddiv+0x2ae>
 8001de6:	464b      	mov	r3, r9
 8001de8:	07dc      	lsls	r4, r3, #31
 8001dea:	0858      	lsrs	r0, r3, #1
 8001dec:	087b      	lsrs	r3, r7, #1
 8001dee:	431c      	orrs	r4, r3
 8001df0:	07ff      	lsls	r7, r7, #31
 8001df2:	e734      	b.n	8001c5e <__aeabi_ddiv+0x2ba>
 8001df4:	2400      	movs	r4, #0
 8001df6:	42af      	cmp	r7, r5
 8001df8:	d289      	bcs.n	8001d0e <__aeabi_ddiv+0x36a>
 8001dfa:	4447      	add	r7, r8
 8001dfc:	4547      	cmp	r7, r8
 8001dfe:	41a4      	sbcs	r4, r4
 8001e00:	465b      	mov	r3, fp
 8001e02:	4264      	negs	r4, r4
 8001e04:	19a4      	adds	r4, r4, r6
 8001e06:	1864      	adds	r4, r4, r1
 8001e08:	3b01      	subs	r3, #1
 8001e0a:	42a6      	cmp	r6, r4
 8001e0c:	d21e      	bcs.n	8001e4c <__aeabi_ddiv+0x4a8>
 8001e0e:	42a0      	cmp	r0, r4
 8001e10:	d86d      	bhi.n	8001eee <__aeabi_ddiv+0x54a>
 8001e12:	d100      	bne.n	8001e16 <__aeabi_ddiv+0x472>
 8001e14:	e0b6      	b.n	8001f84 <__aeabi_ddiv+0x5e0>
 8001e16:	1a24      	subs	r4, r4, r0
 8001e18:	469b      	mov	fp, r3
 8001e1a:	e778      	b.n	8001d0e <__aeabi_ddiv+0x36a>
 8001e1c:	0003      	movs	r3, r0
 8001e1e:	465a      	mov	r2, fp
 8001e20:	3b28      	subs	r3, #40	; 0x28
 8001e22:	409a      	lsls	r2, r3
 8001e24:	2700      	movs	r7, #0
 8001e26:	4691      	mov	r9, r2
 8001e28:	e688      	b.n	8001b3c <__aeabi_ddiv+0x198>
 8001e2a:	4658      	mov	r0, fp
 8001e2c:	f7fe fb6c 	bl	8000508 <__clzsi2>
 8001e30:	3020      	adds	r0, #32
 8001e32:	e672      	b.n	8001b1a <__aeabi_ddiv+0x176>
 8001e34:	0003      	movs	r3, r0
 8001e36:	4652      	mov	r2, sl
 8001e38:	3b28      	subs	r3, #40	; 0x28
 8001e3a:	409a      	lsls	r2, r3
 8001e3c:	4693      	mov	fp, r2
 8001e3e:	2200      	movs	r2, #0
 8001e40:	e6b4      	b.n	8001bac <__aeabi_ddiv+0x208>
 8001e42:	4650      	mov	r0, sl
 8001e44:	f7fe fb60 	bl	8000508 <__clzsi2>
 8001e48:	3020      	adds	r0, #32
 8001e4a:	e69a      	b.n	8001b82 <__aeabi_ddiv+0x1de>
 8001e4c:	42a6      	cmp	r6, r4
 8001e4e:	d1e2      	bne.n	8001e16 <__aeabi_ddiv+0x472>
 8001e50:	45b8      	cmp	r8, r7
 8001e52:	d9dc      	bls.n	8001e0e <__aeabi_ddiv+0x46a>
 8001e54:	1a34      	subs	r4, r6, r0
 8001e56:	469b      	mov	fp, r3
 8001e58:	e759      	b.n	8001d0e <__aeabi_ddiv+0x36a>
 8001e5a:	2b1f      	cmp	r3, #31
 8001e5c:	dc65      	bgt.n	8001f2a <__aeabi_ddiv+0x586>
 8001e5e:	4c50      	ldr	r4, [pc, #320]	; (8001fa0 <__aeabi_ddiv+0x5fc>)
 8001e60:	9900      	ldr	r1, [sp, #0]
 8001e62:	46a4      	mov	ip, r4
 8001e64:	465c      	mov	r4, fp
 8001e66:	4461      	add	r1, ip
 8001e68:	0008      	movs	r0, r1
 8001e6a:	408c      	lsls	r4, r1
 8001e6c:	0011      	movs	r1, r2
 8001e6e:	4082      	lsls	r2, r0
 8001e70:	40d9      	lsrs	r1, r3
 8001e72:	1e50      	subs	r0, r2, #1
 8001e74:	4182      	sbcs	r2, r0
 8001e76:	430c      	orrs	r4, r1
 8001e78:	4314      	orrs	r4, r2
 8001e7a:	465a      	mov	r2, fp
 8001e7c:	40da      	lsrs	r2, r3
 8001e7e:	0013      	movs	r3, r2
 8001e80:	0762      	lsls	r2, r4, #29
 8001e82:	d009      	beq.n	8001e98 <__aeabi_ddiv+0x4f4>
 8001e84:	220f      	movs	r2, #15
 8001e86:	4022      	ands	r2, r4
 8001e88:	2a04      	cmp	r2, #4
 8001e8a:	d005      	beq.n	8001e98 <__aeabi_ddiv+0x4f4>
 8001e8c:	0022      	movs	r2, r4
 8001e8e:	1d14      	adds	r4, r2, #4
 8001e90:	4294      	cmp	r4, r2
 8001e92:	4189      	sbcs	r1, r1
 8001e94:	4249      	negs	r1, r1
 8001e96:	185b      	adds	r3, r3, r1
 8001e98:	021a      	lsls	r2, r3, #8
 8001e9a:	d562      	bpl.n	8001f62 <__aeabi_ddiv+0x5be>
 8001e9c:	2201      	movs	r2, #1
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	2700      	movs	r7, #0
 8001ea2:	e60d      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001ea4:	428a      	cmp	r2, r1
 8001ea6:	d800      	bhi.n	8001eaa <__aeabi_ddiv+0x506>
 8001ea8:	e70a      	b.n	8001cc0 <__aeabi_ddiv+0x31c>
 8001eaa:	1e83      	subs	r3, r0, #2
 8001eac:	1989      	adds	r1, r1, r6
 8001eae:	e707      	b.n	8001cc0 <__aeabi_ddiv+0x31c>
 8001eb0:	230f      	movs	r3, #15
 8001eb2:	4013      	ands	r3, r2
 8001eb4:	2b04      	cmp	r3, #4
 8001eb6:	d100      	bne.n	8001eba <__aeabi_ddiv+0x516>
 8001eb8:	e5e6      	b.n	8001a88 <__aeabi_ddiv+0xe4>
 8001eba:	1d17      	adds	r7, r2, #4
 8001ebc:	4297      	cmp	r7, r2
 8001ebe:	4192      	sbcs	r2, r2
 8001ec0:	4253      	negs	r3, r2
 8001ec2:	449b      	add	fp, r3
 8001ec4:	08fa      	lsrs	r2, r7, #3
 8001ec6:	e5e0      	b.n	8001a8a <__aeabi_ddiv+0xe6>
 8001ec8:	2800      	cmp	r0, #0
 8001eca:	d100      	bne.n	8001ece <__aeabi_ddiv+0x52a>
 8001ecc:	e5d7      	b.n	8001a7e <__aeabi_ddiv+0xda>
 8001ece:	1871      	adds	r1, r6, r1
 8001ed0:	1e53      	subs	r3, r2, #1
 8001ed2:	42b1      	cmp	r1, r6
 8001ed4:	d327      	bcc.n	8001f26 <__aeabi_ddiv+0x582>
 8001ed6:	42a9      	cmp	r1, r5
 8001ed8:	d315      	bcc.n	8001f06 <__aeabi_ddiv+0x562>
 8001eda:	d058      	beq.n	8001f8e <__aeabi_ddiv+0x5ea>
 8001edc:	001a      	movs	r2, r3
 8001ede:	e773      	b.n	8001dc8 <__aeabi_ddiv+0x424>
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	dc00      	bgt.n	8001ee6 <__aeabi_ddiv+0x542>
 8001ee4:	e604      	b.n	8001af0 <__aeabi_ddiv+0x14c>
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	2200      	movs	r2, #0
 8001eea:	449b      	add	fp, r3
 8001eec:	e5cd      	b.n	8001a8a <__aeabi_ddiv+0xe6>
 8001eee:	2302      	movs	r3, #2
 8001ef0:	4447      	add	r7, r8
 8001ef2:	4547      	cmp	r7, r8
 8001ef4:	4189      	sbcs	r1, r1
 8001ef6:	425b      	negs	r3, r3
 8001ef8:	469c      	mov	ip, r3
 8001efa:	4249      	negs	r1, r1
 8001efc:	1989      	adds	r1, r1, r6
 8001efe:	190c      	adds	r4, r1, r4
 8001f00:	44e3      	add	fp, ip
 8001f02:	1a24      	subs	r4, r4, r0
 8001f04:	e703      	b.n	8001d0e <__aeabi_ddiv+0x36a>
 8001f06:	4643      	mov	r3, r8
 8001f08:	005f      	lsls	r7, r3, #1
 8001f0a:	4547      	cmp	r7, r8
 8001f0c:	419b      	sbcs	r3, r3
 8001f0e:	46b8      	mov	r8, r7
 8001f10:	425b      	negs	r3, r3
 8001f12:	199e      	adds	r6, r3, r6
 8001f14:	3a02      	subs	r2, #2
 8001f16:	1989      	adds	r1, r1, r6
 8001f18:	42a9      	cmp	r1, r5
 8001f1a:	d000      	beq.n	8001f1e <__aeabi_ddiv+0x57a>
 8001f1c:	e754      	b.n	8001dc8 <__aeabi_ddiv+0x424>
 8001f1e:	4540      	cmp	r0, r8
 8001f20:	d000      	beq.n	8001f24 <__aeabi_ddiv+0x580>
 8001f22:	e751      	b.n	8001dc8 <__aeabi_ddiv+0x424>
 8001f24:	e5ab      	b.n	8001a7e <__aeabi_ddiv+0xda>
 8001f26:	001a      	movs	r2, r3
 8001f28:	e7f6      	b.n	8001f18 <__aeabi_ddiv+0x574>
 8001f2a:	211f      	movs	r1, #31
 8001f2c:	465f      	mov	r7, fp
 8001f2e:	4249      	negs	r1, r1
 8001f30:	1b0c      	subs	r4, r1, r4
 8001f32:	40e7      	lsrs	r7, r4
 8001f34:	2b20      	cmp	r3, #32
 8001f36:	d007      	beq.n	8001f48 <__aeabi_ddiv+0x5a4>
 8001f38:	491a      	ldr	r1, [pc, #104]	; (8001fa4 <__aeabi_ddiv+0x600>)
 8001f3a:	9b00      	ldr	r3, [sp, #0]
 8001f3c:	468c      	mov	ip, r1
 8001f3e:	4463      	add	r3, ip
 8001f40:	0018      	movs	r0, r3
 8001f42:	465b      	mov	r3, fp
 8001f44:	4083      	lsls	r3, r0
 8001f46:	431a      	orrs	r2, r3
 8001f48:	1e50      	subs	r0, r2, #1
 8001f4a:	4182      	sbcs	r2, r0
 8001f4c:	433a      	orrs	r2, r7
 8001f4e:	2707      	movs	r7, #7
 8001f50:	2300      	movs	r3, #0
 8001f52:	4017      	ands	r7, r2
 8001f54:	d009      	beq.n	8001f6a <__aeabi_ddiv+0x5c6>
 8001f56:	210f      	movs	r1, #15
 8001f58:	2300      	movs	r3, #0
 8001f5a:	4011      	ands	r1, r2
 8001f5c:	0014      	movs	r4, r2
 8001f5e:	2904      	cmp	r1, #4
 8001f60:	d195      	bne.n	8001e8e <__aeabi_ddiv+0x4ea>
 8001f62:	0022      	movs	r2, r4
 8001f64:	075f      	lsls	r7, r3, #29
 8001f66:	025b      	lsls	r3, r3, #9
 8001f68:	0b1b      	lsrs	r3, r3, #12
 8001f6a:	08d2      	lsrs	r2, r2, #3
 8001f6c:	4317      	orrs	r7, r2
 8001f6e:	2200      	movs	r2, #0
 8001f70:	e5a6      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001f72:	2380      	movs	r3, #128	; 0x80
 8001f74:	4659      	mov	r1, fp
 8001f76:	031b      	lsls	r3, r3, #12
 8001f78:	430b      	orrs	r3, r1
 8001f7a:	031b      	lsls	r3, r3, #12
 8001f7c:	0017      	movs	r7, r2
 8001f7e:	0b1b      	lsrs	r3, r3, #12
 8001f80:	4a06      	ldr	r2, [pc, #24]	; (8001f9c <__aeabi_ddiv+0x5f8>)
 8001f82:	e59d      	b.n	8001ac0 <__aeabi_ddiv+0x11c>
 8001f84:	42bd      	cmp	r5, r7
 8001f86:	d8b2      	bhi.n	8001eee <__aeabi_ddiv+0x54a>
 8001f88:	469b      	mov	fp, r3
 8001f8a:	2400      	movs	r4, #0
 8001f8c:	e6bf      	b.n	8001d0e <__aeabi_ddiv+0x36a>
 8001f8e:	4580      	cmp	r8, r0
 8001f90:	d3b9      	bcc.n	8001f06 <__aeabi_ddiv+0x562>
 8001f92:	001a      	movs	r2, r3
 8001f94:	e7c3      	b.n	8001f1e <__aeabi_ddiv+0x57a>
 8001f96:	46c0      	nop			; (mov r8, r8)
 8001f98:	000003ff 	.word	0x000003ff
 8001f9c:	000007ff 	.word	0x000007ff
 8001fa0:	0000041e 	.word	0x0000041e
 8001fa4:	0000043e 	.word	0x0000043e

08001fa8 <__eqdf2>:
 8001fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001faa:	464f      	mov	r7, r9
 8001fac:	4646      	mov	r6, r8
 8001fae:	46d6      	mov	lr, sl
 8001fb0:	4684      	mov	ip, r0
 8001fb2:	b5c0      	push	{r6, r7, lr}
 8001fb4:	4680      	mov	r8, r0
 8001fb6:	4e19      	ldr	r6, [pc, #100]	; (800201c <__eqdf2+0x74>)
 8001fb8:	0318      	lsls	r0, r3, #12
 8001fba:	030f      	lsls	r7, r1, #12
 8001fbc:	004d      	lsls	r5, r1, #1
 8001fbe:	0b00      	lsrs	r0, r0, #12
 8001fc0:	005c      	lsls	r4, r3, #1
 8001fc2:	4682      	mov	sl, r0
 8001fc4:	0b3f      	lsrs	r7, r7, #12
 8001fc6:	0d6d      	lsrs	r5, r5, #21
 8001fc8:	0fc9      	lsrs	r1, r1, #31
 8001fca:	4691      	mov	r9, r2
 8001fcc:	0d64      	lsrs	r4, r4, #21
 8001fce:	0fdb      	lsrs	r3, r3, #31
 8001fd0:	2001      	movs	r0, #1
 8001fd2:	42b5      	cmp	r5, r6
 8001fd4:	d00a      	beq.n	8001fec <__eqdf2+0x44>
 8001fd6:	42b4      	cmp	r4, r6
 8001fd8:	d003      	beq.n	8001fe2 <__eqdf2+0x3a>
 8001fda:	42a5      	cmp	r5, r4
 8001fdc:	d101      	bne.n	8001fe2 <__eqdf2+0x3a>
 8001fde:	4557      	cmp	r7, sl
 8001fe0:	d00c      	beq.n	8001ffc <__eqdf2+0x54>
 8001fe2:	bc1c      	pop	{r2, r3, r4}
 8001fe4:	4690      	mov	r8, r2
 8001fe6:	4699      	mov	r9, r3
 8001fe8:	46a2      	mov	sl, r4
 8001fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fec:	4666      	mov	r6, ip
 8001fee:	433e      	orrs	r6, r7
 8001ff0:	d1f7      	bne.n	8001fe2 <__eqdf2+0x3a>
 8001ff2:	42ac      	cmp	r4, r5
 8001ff4:	d1f5      	bne.n	8001fe2 <__eqdf2+0x3a>
 8001ff6:	4654      	mov	r4, sl
 8001ff8:	4314      	orrs	r4, r2
 8001ffa:	d1f2      	bne.n	8001fe2 <__eqdf2+0x3a>
 8001ffc:	2001      	movs	r0, #1
 8001ffe:	45c8      	cmp	r8, r9
 8002000:	d1ef      	bne.n	8001fe2 <__eqdf2+0x3a>
 8002002:	4299      	cmp	r1, r3
 8002004:	d007      	beq.n	8002016 <__eqdf2+0x6e>
 8002006:	2d00      	cmp	r5, #0
 8002008:	d1eb      	bne.n	8001fe2 <__eqdf2+0x3a>
 800200a:	4663      	mov	r3, ip
 800200c:	431f      	orrs	r7, r3
 800200e:	0038      	movs	r0, r7
 8002010:	1e47      	subs	r7, r0, #1
 8002012:	41b8      	sbcs	r0, r7
 8002014:	e7e5      	b.n	8001fe2 <__eqdf2+0x3a>
 8002016:	2000      	movs	r0, #0
 8002018:	e7e3      	b.n	8001fe2 <__eqdf2+0x3a>
 800201a:	46c0      	nop			; (mov r8, r8)
 800201c:	000007ff 	.word	0x000007ff

08002020 <__gedf2>:
 8002020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002022:	464f      	mov	r7, r9
 8002024:	4646      	mov	r6, r8
 8002026:	46d6      	mov	lr, sl
 8002028:	004d      	lsls	r5, r1, #1
 800202a:	b5c0      	push	{r6, r7, lr}
 800202c:	030e      	lsls	r6, r1, #12
 800202e:	0fc9      	lsrs	r1, r1, #31
 8002030:	468a      	mov	sl, r1
 8002032:	492c      	ldr	r1, [pc, #176]	; (80020e4 <__gedf2+0xc4>)
 8002034:	031f      	lsls	r7, r3, #12
 8002036:	005c      	lsls	r4, r3, #1
 8002038:	4680      	mov	r8, r0
 800203a:	0b36      	lsrs	r6, r6, #12
 800203c:	0d6d      	lsrs	r5, r5, #21
 800203e:	4691      	mov	r9, r2
 8002040:	0b3f      	lsrs	r7, r7, #12
 8002042:	0d64      	lsrs	r4, r4, #21
 8002044:	0fdb      	lsrs	r3, r3, #31
 8002046:	428d      	cmp	r5, r1
 8002048:	d01e      	beq.n	8002088 <__gedf2+0x68>
 800204a:	428c      	cmp	r4, r1
 800204c:	d016      	beq.n	800207c <__gedf2+0x5c>
 800204e:	2d00      	cmp	r5, #0
 8002050:	d11e      	bne.n	8002090 <__gedf2+0x70>
 8002052:	4330      	orrs	r0, r6
 8002054:	4684      	mov	ip, r0
 8002056:	2c00      	cmp	r4, #0
 8002058:	d101      	bne.n	800205e <__gedf2+0x3e>
 800205a:	433a      	orrs	r2, r7
 800205c:	d023      	beq.n	80020a6 <__gedf2+0x86>
 800205e:	4662      	mov	r2, ip
 8002060:	2a00      	cmp	r2, #0
 8002062:	d01a      	beq.n	800209a <__gedf2+0x7a>
 8002064:	459a      	cmp	sl, r3
 8002066:	d029      	beq.n	80020bc <__gedf2+0x9c>
 8002068:	4651      	mov	r1, sl
 800206a:	2002      	movs	r0, #2
 800206c:	3901      	subs	r1, #1
 800206e:	4008      	ands	r0, r1
 8002070:	3801      	subs	r0, #1
 8002072:	bc1c      	pop	{r2, r3, r4}
 8002074:	4690      	mov	r8, r2
 8002076:	4699      	mov	r9, r3
 8002078:	46a2      	mov	sl, r4
 800207a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800207c:	0039      	movs	r1, r7
 800207e:	4311      	orrs	r1, r2
 8002080:	d0e5      	beq.n	800204e <__gedf2+0x2e>
 8002082:	2002      	movs	r0, #2
 8002084:	4240      	negs	r0, r0
 8002086:	e7f4      	b.n	8002072 <__gedf2+0x52>
 8002088:	4330      	orrs	r0, r6
 800208a:	d1fa      	bne.n	8002082 <__gedf2+0x62>
 800208c:	42ac      	cmp	r4, r5
 800208e:	d00f      	beq.n	80020b0 <__gedf2+0x90>
 8002090:	2c00      	cmp	r4, #0
 8002092:	d10f      	bne.n	80020b4 <__gedf2+0x94>
 8002094:	433a      	orrs	r2, r7
 8002096:	d0e7      	beq.n	8002068 <__gedf2+0x48>
 8002098:	e00c      	b.n	80020b4 <__gedf2+0x94>
 800209a:	2201      	movs	r2, #1
 800209c:	3b01      	subs	r3, #1
 800209e:	4393      	bics	r3, r2
 80020a0:	0018      	movs	r0, r3
 80020a2:	3001      	adds	r0, #1
 80020a4:	e7e5      	b.n	8002072 <__gedf2+0x52>
 80020a6:	4663      	mov	r3, ip
 80020a8:	2000      	movs	r0, #0
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d0e1      	beq.n	8002072 <__gedf2+0x52>
 80020ae:	e7db      	b.n	8002068 <__gedf2+0x48>
 80020b0:	433a      	orrs	r2, r7
 80020b2:	d1e6      	bne.n	8002082 <__gedf2+0x62>
 80020b4:	459a      	cmp	sl, r3
 80020b6:	d1d7      	bne.n	8002068 <__gedf2+0x48>
 80020b8:	42a5      	cmp	r5, r4
 80020ba:	dcd5      	bgt.n	8002068 <__gedf2+0x48>
 80020bc:	42a5      	cmp	r5, r4
 80020be:	db05      	blt.n	80020cc <__gedf2+0xac>
 80020c0:	42be      	cmp	r6, r7
 80020c2:	d8d1      	bhi.n	8002068 <__gedf2+0x48>
 80020c4:	d008      	beq.n	80020d8 <__gedf2+0xb8>
 80020c6:	2000      	movs	r0, #0
 80020c8:	42be      	cmp	r6, r7
 80020ca:	d2d2      	bcs.n	8002072 <__gedf2+0x52>
 80020cc:	4650      	mov	r0, sl
 80020ce:	2301      	movs	r3, #1
 80020d0:	3801      	subs	r0, #1
 80020d2:	4398      	bics	r0, r3
 80020d4:	3001      	adds	r0, #1
 80020d6:	e7cc      	b.n	8002072 <__gedf2+0x52>
 80020d8:	45c8      	cmp	r8, r9
 80020da:	d8c5      	bhi.n	8002068 <__gedf2+0x48>
 80020dc:	2000      	movs	r0, #0
 80020de:	45c8      	cmp	r8, r9
 80020e0:	d3f4      	bcc.n	80020cc <__gedf2+0xac>
 80020e2:	e7c6      	b.n	8002072 <__gedf2+0x52>
 80020e4:	000007ff 	.word	0x000007ff

080020e8 <__ledf2>:
 80020e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020ea:	464f      	mov	r7, r9
 80020ec:	4646      	mov	r6, r8
 80020ee:	46d6      	mov	lr, sl
 80020f0:	004d      	lsls	r5, r1, #1
 80020f2:	b5c0      	push	{r6, r7, lr}
 80020f4:	030e      	lsls	r6, r1, #12
 80020f6:	0fc9      	lsrs	r1, r1, #31
 80020f8:	468a      	mov	sl, r1
 80020fa:	492e      	ldr	r1, [pc, #184]	; (80021b4 <__ledf2+0xcc>)
 80020fc:	031f      	lsls	r7, r3, #12
 80020fe:	005c      	lsls	r4, r3, #1
 8002100:	4680      	mov	r8, r0
 8002102:	0b36      	lsrs	r6, r6, #12
 8002104:	0d6d      	lsrs	r5, r5, #21
 8002106:	4691      	mov	r9, r2
 8002108:	0b3f      	lsrs	r7, r7, #12
 800210a:	0d64      	lsrs	r4, r4, #21
 800210c:	0fdb      	lsrs	r3, r3, #31
 800210e:	428d      	cmp	r5, r1
 8002110:	d018      	beq.n	8002144 <__ledf2+0x5c>
 8002112:	428c      	cmp	r4, r1
 8002114:	d011      	beq.n	800213a <__ledf2+0x52>
 8002116:	2d00      	cmp	r5, #0
 8002118:	d118      	bne.n	800214c <__ledf2+0x64>
 800211a:	4330      	orrs	r0, r6
 800211c:	4684      	mov	ip, r0
 800211e:	2c00      	cmp	r4, #0
 8002120:	d11e      	bne.n	8002160 <__ledf2+0x78>
 8002122:	433a      	orrs	r2, r7
 8002124:	d11c      	bne.n	8002160 <__ledf2+0x78>
 8002126:	4663      	mov	r3, ip
 8002128:	2000      	movs	r0, #0
 800212a:	2b00      	cmp	r3, #0
 800212c:	d030      	beq.n	8002190 <__ledf2+0xa8>
 800212e:	4651      	mov	r1, sl
 8002130:	2002      	movs	r0, #2
 8002132:	3901      	subs	r1, #1
 8002134:	4008      	ands	r0, r1
 8002136:	3801      	subs	r0, #1
 8002138:	e02a      	b.n	8002190 <__ledf2+0xa8>
 800213a:	0039      	movs	r1, r7
 800213c:	4311      	orrs	r1, r2
 800213e:	d0ea      	beq.n	8002116 <__ledf2+0x2e>
 8002140:	2002      	movs	r0, #2
 8002142:	e025      	b.n	8002190 <__ledf2+0xa8>
 8002144:	4330      	orrs	r0, r6
 8002146:	d1fb      	bne.n	8002140 <__ledf2+0x58>
 8002148:	42ac      	cmp	r4, r5
 800214a:	d026      	beq.n	800219a <__ledf2+0xb2>
 800214c:	2c00      	cmp	r4, #0
 800214e:	d126      	bne.n	800219e <__ledf2+0xb6>
 8002150:	433a      	orrs	r2, r7
 8002152:	d124      	bne.n	800219e <__ledf2+0xb6>
 8002154:	4651      	mov	r1, sl
 8002156:	2002      	movs	r0, #2
 8002158:	3901      	subs	r1, #1
 800215a:	4008      	ands	r0, r1
 800215c:	3801      	subs	r0, #1
 800215e:	e017      	b.n	8002190 <__ledf2+0xa8>
 8002160:	4662      	mov	r2, ip
 8002162:	2a00      	cmp	r2, #0
 8002164:	d00f      	beq.n	8002186 <__ledf2+0x9e>
 8002166:	459a      	cmp	sl, r3
 8002168:	d1e1      	bne.n	800212e <__ledf2+0x46>
 800216a:	42a5      	cmp	r5, r4
 800216c:	db05      	blt.n	800217a <__ledf2+0x92>
 800216e:	42be      	cmp	r6, r7
 8002170:	d8dd      	bhi.n	800212e <__ledf2+0x46>
 8002172:	d019      	beq.n	80021a8 <__ledf2+0xc0>
 8002174:	2000      	movs	r0, #0
 8002176:	42be      	cmp	r6, r7
 8002178:	d20a      	bcs.n	8002190 <__ledf2+0xa8>
 800217a:	4650      	mov	r0, sl
 800217c:	2301      	movs	r3, #1
 800217e:	3801      	subs	r0, #1
 8002180:	4398      	bics	r0, r3
 8002182:	3001      	adds	r0, #1
 8002184:	e004      	b.n	8002190 <__ledf2+0xa8>
 8002186:	2201      	movs	r2, #1
 8002188:	3b01      	subs	r3, #1
 800218a:	4393      	bics	r3, r2
 800218c:	0018      	movs	r0, r3
 800218e:	3001      	adds	r0, #1
 8002190:	bc1c      	pop	{r2, r3, r4}
 8002192:	4690      	mov	r8, r2
 8002194:	4699      	mov	r9, r3
 8002196:	46a2      	mov	sl, r4
 8002198:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800219a:	433a      	orrs	r2, r7
 800219c:	d1d0      	bne.n	8002140 <__ledf2+0x58>
 800219e:	459a      	cmp	sl, r3
 80021a0:	d1c5      	bne.n	800212e <__ledf2+0x46>
 80021a2:	42a5      	cmp	r5, r4
 80021a4:	dcc3      	bgt.n	800212e <__ledf2+0x46>
 80021a6:	e7e0      	b.n	800216a <__ledf2+0x82>
 80021a8:	45c8      	cmp	r8, r9
 80021aa:	d8c0      	bhi.n	800212e <__ledf2+0x46>
 80021ac:	2000      	movs	r0, #0
 80021ae:	45c8      	cmp	r8, r9
 80021b0:	d3e3      	bcc.n	800217a <__ledf2+0x92>
 80021b2:	e7ed      	b.n	8002190 <__ledf2+0xa8>
 80021b4:	000007ff 	.word	0x000007ff

080021b8 <__aeabi_dmul>:
 80021b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021ba:	4657      	mov	r7, sl
 80021bc:	46de      	mov	lr, fp
 80021be:	464e      	mov	r6, r9
 80021c0:	4645      	mov	r5, r8
 80021c2:	b5e0      	push	{r5, r6, r7, lr}
 80021c4:	4683      	mov	fp, r0
 80021c6:	0006      	movs	r6, r0
 80021c8:	030f      	lsls	r7, r1, #12
 80021ca:	0048      	lsls	r0, r1, #1
 80021cc:	b087      	sub	sp, #28
 80021ce:	4692      	mov	sl, r2
 80021d0:	001d      	movs	r5, r3
 80021d2:	0b3f      	lsrs	r7, r7, #12
 80021d4:	0d40      	lsrs	r0, r0, #21
 80021d6:	0fcc      	lsrs	r4, r1, #31
 80021d8:	2800      	cmp	r0, #0
 80021da:	d100      	bne.n	80021de <__aeabi_dmul+0x26>
 80021dc:	e06f      	b.n	80022be <__aeabi_dmul+0x106>
 80021de:	4bde      	ldr	r3, [pc, #888]	; (8002558 <__aeabi_dmul+0x3a0>)
 80021e0:	4298      	cmp	r0, r3
 80021e2:	d038      	beq.n	8002256 <__aeabi_dmul+0x9e>
 80021e4:	2380      	movs	r3, #128	; 0x80
 80021e6:	00ff      	lsls	r7, r7, #3
 80021e8:	041b      	lsls	r3, r3, #16
 80021ea:	431f      	orrs	r7, r3
 80021ec:	0f73      	lsrs	r3, r6, #29
 80021ee:	433b      	orrs	r3, r7
 80021f0:	9301      	str	r3, [sp, #4]
 80021f2:	4bda      	ldr	r3, [pc, #872]	; (800255c <__aeabi_dmul+0x3a4>)
 80021f4:	2700      	movs	r7, #0
 80021f6:	4699      	mov	r9, r3
 80021f8:	2300      	movs	r3, #0
 80021fa:	469b      	mov	fp, r3
 80021fc:	00f6      	lsls	r6, r6, #3
 80021fe:	4481      	add	r9, r0
 8002200:	032b      	lsls	r3, r5, #12
 8002202:	0069      	lsls	r1, r5, #1
 8002204:	0b1b      	lsrs	r3, r3, #12
 8002206:	4652      	mov	r2, sl
 8002208:	4698      	mov	r8, r3
 800220a:	0d49      	lsrs	r1, r1, #21
 800220c:	0fed      	lsrs	r5, r5, #31
 800220e:	2900      	cmp	r1, #0
 8002210:	d100      	bne.n	8002214 <__aeabi_dmul+0x5c>
 8002212:	e085      	b.n	8002320 <__aeabi_dmul+0x168>
 8002214:	4bd0      	ldr	r3, [pc, #832]	; (8002558 <__aeabi_dmul+0x3a0>)
 8002216:	4299      	cmp	r1, r3
 8002218:	d100      	bne.n	800221c <__aeabi_dmul+0x64>
 800221a:	e073      	b.n	8002304 <__aeabi_dmul+0x14c>
 800221c:	4643      	mov	r3, r8
 800221e:	00da      	lsls	r2, r3, #3
 8002220:	2380      	movs	r3, #128	; 0x80
 8002222:	041b      	lsls	r3, r3, #16
 8002224:	4313      	orrs	r3, r2
 8002226:	4652      	mov	r2, sl
 8002228:	48cc      	ldr	r0, [pc, #816]	; (800255c <__aeabi_dmul+0x3a4>)
 800222a:	0f52      	lsrs	r2, r2, #29
 800222c:	4684      	mov	ip, r0
 800222e:	4313      	orrs	r3, r2
 8002230:	4652      	mov	r2, sl
 8002232:	2000      	movs	r0, #0
 8002234:	4461      	add	r1, ip
 8002236:	00d2      	lsls	r2, r2, #3
 8002238:	4489      	add	r9, r1
 800223a:	0021      	movs	r1, r4
 800223c:	4069      	eors	r1, r5
 800223e:	9100      	str	r1, [sp, #0]
 8002240:	468c      	mov	ip, r1
 8002242:	2101      	movs	r1, #1
 8002244:	4449      	add	r1, r9
 8002246:	468a      	mov	sl, r1
 8002248:	2f0f      	cmp	r7, #15
 800224a:	d900      	bls.n	800224e <__aeabi_dmul+0x96>
 800224c:	e090      	b.n	8002370 <__aeabi_dmul+0x1b8>
 800224e:	49c4      	ldr	r1, [pc, #784]	; (8002560 <__aeabi_dmul+0x3a8>)
 8002250:	00bf      	lsls	r7, r7, #2
 8002252:	59cf      	ldr	r7, [r1, r7]
 8002254:	46bf      	mov	pc, r7
 8002256:	465b      	mov	r3, fp
 8002258:	433b      	orrs	r3, r7
 800225a:	9301      	str	r3, [sp, #4]
 800225c:	d000      	beq.n	8002260 <__aeabi_dmul+0xa8>
 800225e:	e16a      	b.n	8002536 <__aeabi_dmul+0x37e>
 8002260:	2302      	movs	r3, #2
 8002262:	2708      	movs	r7, #8
 8002264:	2600      	movs	r6, #0
 8002266:	4681      	mov	r9, r0
 8002268:	469b      	mov	fp, r3
 800226a:	e7c9      	b.n	8002200 <__aeabi_dmul+0x48>
 800226c:	0032      	movs	r2, r6
 800226e:	4658      	mov	r0, fp
 8002270:	9b01      	ldr	r3, [sp, #4]
 8002272:	4661      	mov	r1, ip
 8002274:	9100      	str	r1, [sp, #0]
 8002276:	2802      	cmp	r0, #2
 8002278:	d100      	bne.n	800227c <__aeabi_dmul+0xc4>
 800227a:	e075      	b.n	8002368 <__aeabi_dmul+0x1b0>
 800227c:	2803      	cmp	r0, #3
 800227e:	d100      	bne.n	8002282 <__aeabi_dmul+0xca>
 8002280:	e1fe      	b.n	8002680 <__aeabi_dmul+0x4c8>
 8002282:	2801      	cmp	r0, #1
 8002284:	d000      	beq.n	8002288 <__aeabi_dmul+0xd0>
 8002286:	e12c      	b.n	80024e2 <__aeabi_dmul+0x32a>
 8002288:	2300      	movs	r3, #0
 800228a:	2700      	movs	r7, #0
 800228c:	2600      	movs	r6, #0
 800228e:	2500      	movs	r5, #0
 8002290:	033f      	lsls	r7, r7, #12
 8002292:	0d2a      	lsrs	r2, r5, #20
 8002294:	0b3f      	lsrs	r7, r7, #12
 8002296:	48b3      	ldr	r0, [pc, #716]	; (8002564 <__aeabi_dmul+0x3ac>)
 8002298:	0512      	lsls	r2, r2, #20
 800229a:	433a      	orrs	r2, r7
 800229c:	4002      	ands	r2, r0
 800229e:	051b      	lsls	r3, r3, #20
 80022a0:	4313      	orrs	r3, r2
 80022a2:	9a00      	ldr	r2, [sp, #0]
 80022a4:	005b      	lsls	r3, r3, #1
 80022a6:	07d1      	lsls	r1, r2, #31
 80022a8:	085b      	lsrs	r3, r3, #1
 80022aa:	430b      	orrs	r3, r1
 80022ac:	0030      	movs	r0, r6
 80022ae:	0019      	movs	r1, r3
 80022b0:	b007      	add	sp, #28
 80022b2:	bc3c      	pop	{r2, r3, r4, r5}
 80022b4:	4690      	mov	r8, r2
 80022b6:	4699      	mov	r9, r3
 80022b8:	46a2      	mov	sl, r4
 80022ba:	46ab      	mov	fp, r5
 80022bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022be:	465b      	mov	r3, fp
 80022c0:	433b      	orrs	r3, r7
 80022c2:	9301      	str	r3, [sp, #4]
 80022c4:	d100      	bne.n	80022c8 <__aeabi_dmul+0x110>
 80022c6:	e12f      	b.n	8002528 <__aeabi_dmul+0x370>
 80022c8:	2f00      	cmp	r7, #0
 80022ca:	d100      	bne.n	80022ce <__aeabi_dmul+0x116>
 80022cc:	e1a5      	b.n	800261a <__aeabi_dmul+0x462>
 80022ce:	0038      	movs	r0, r7
 80022d0:	f7fe f91a 	bl	8000508 <__clzsi2>
 80022d4:	0003      	movs	r3, r0
 80022d6:	3b0b      	subs	r3, #11
 80022d8:	2b1c      	cmp	r3, #28
 80022da:	dd00      	ble.n	80022de <__aeabi_dmul+0x126>
 80022dc:	e196      	b.n	800260c <__aeabi_dmul+0x454>
 80022de:	221d      	movs	r2, #29
 80022e0:	1ad3      	subs	r3, r2, r3
 80022e2:	465a      	mov	r2, fp
 80022e4:	0001      	movs	r1, r0
 80022e6:	40da      	lsrs	r2, r3
 80022e8:	465e      	mov	r6, fp
 80022ea:	3908      	subs	r1, #8
 80022ec:	408f      	lsls	r7, r1
 80022ee:	0013      	movs	r3, r2
 80022f0:	408e      	lsls	r6, r1
 80022f2:	433b      	orrs	r3, r7
 80022f4:	9301      	str	r3, [sp, #4]
 80022f6:	4b9c      	ldr	r3, [pc, #624]	; (8002568 <__aeabi_dmul+0x3b0>)
 80022f8:	2700      	movs	r7, #0
 80022fa:	1a1b      	subs	r3, r3, r0
 80022fc:	4699      	mov	r9, r3
 80022fe:	2300      	movs	r3, #0
 8002300:	469b      	mov	fp, r3
 8002302:	e77d      	b.n	8002200 <__aeabi_dmul+0x48>
 8002304:	4641      	mov	r1, r8
 8002306:	4653      	mov	r3, sl
 8002308:	430b      	orrs	r3, r1
 800230a:	4993      	ldr	r1, [pc, #588]	; (8002558 <__aeabi_dmul+0x3a0>)
 800230c:	468c      	mov	ip, r1
 800230e:	44e1      	add	r9, ip
 8002310:	2b00      	cmp	r3, #0
 8002312:	d000      	beq.n	8002316 <__aeabi_dmul+0x15e>
 8002314:	e11a      	b.n	800254c <__aeabi_dmul+0x394>
 8002316:	2202      	movs	r2, #2
 8002318:	2002      	movs	r0, #2
 800231a:	4317      	orrs	r7, r2
 800231c:	2200      	movs	r2, #0
 800231e:	e78c      	b.n	800223a <__aeabi_dmul+0x82>
 8002320:	4313      	orrs	r3, r2
 8002322:	d100      	bne.n	8002326 <__aeabi_dmul+0x16e>
 8002324:	e10d      	b.n	8002542 <__aeabi_dmul+0x38a>
 8002326:	4643      	mov	r3, r8
 8002328:	2b00      	cmp	r3, #0
 800232a:	d100      	bne.n	800232e <__aeabi_dmul+0x176>
 800232c:	e181      	b.n	8002632 <__aeabi_dmul+0x47a>
 800232e:	4640      	mov	r0, r8
 8002330:	f7fe f8ea 	bl	8000508 <__clzsi2>
 8002334:	0002      	movs	r2, r0
 8002336:	3a0b      	subs	r2, #11
 8002338:	2a1c      	cmp	r2, #28
 800233a:	dd00      	ble.n	800233e <__aeabi_dmul+0x186>
 800233c:	e172      	b.n	8002624 <__aeabi_dmul+0x46c>
 800233e:	0001      	movs	r1, r0
 8002340:	4643      	mov	r3, r8
 8002342:	3908      	subs	r1, #8
 8002344:	408b      	lsls	r3, r1
 8002346:	4698      	mov	r8, r3
 8002348:	231d      	movs	r3, #29
 800234a:	1a9a      	subs	r2, r3, r2
 800234c:	4653      	mov	r3, sl
 800234e:	40d3      	lsrs	r3, r2
 8002350:	001a      	movs	r2, r3
 8002352:	4643      	mov	r3, r8
 8002354:	4313      	orrs	r3, r2
 8002356:	4652      	mov	r2, sl
 8002358:	408a      	lsls	r2, r1
 800235a:	4649      	mov	r1, r9
 800235c:	1a08      	subs	r0, r1, r0
 800235e:	4982      	ldr	r1, [pc, #520]	; (8002568 <__aeabi_dmul+0x3b0>)
 8002360:	4689      	mov	r9, r1
 8002362:	4481      	add	r9, r0
 8002364:	2000      	movs	r0, #0
 8002366:	e768      	b.n	800223a <__aeabi_dmul+0x82>
 8002368:	4b7b      	ldr	r3, [pc, #492]	; (8002558 <__aeabi_dmul+0x3a0>)
 800236a:	2700      	movs	r7, #0
 800236c:	2600      	movs	r6, #0
 800236e:	e78e      	b.n	800228e <__aeabi_dmul+0xd6>
 8002370:	0c14      	lsrs	r4, r2, #16
 8002372:	0412      	lsls	r2, r2, #16
 8002374:	0c12      	lsrs	r2, r2, #16
 8002376:	0011      	movs	r1, r2
 8002378:	0c37      	lsrs	r7, r6, #16
 800237a:	0436      	lsls	r6, r6, #16
 800237c:	0c35      	lsrs	r5, r6, #16
 800237e:	4379      	muls	r1, r7
 8002380:	0028      	movs	r0, r5
 8002382:	468c      	mov	ip, r1
 8002384:	002e      	movs	r6, r5
 8002386:	4360      	muls	r0, r4
 8002388:	4460      	add	r0, ip
 800238a:	4683      	mov	fp, r0
 800238c:	4356      	muls	r6, r2
 800238e:	0021      	movs	r1, r4
 8002390:	0c30      	lsrs	r0, r6, #16
 8002392:	4680      	mov	r8, r0
 8002394:	4658      	mov	r0, fp
 8002396:	4379      	muls	r1, r7
 8002398:	4440      	add	r0, r8
 800239a:	9102      	str	r1, [sp, #8]
 800239c:	4584      	cmp	ip, r0
 800239e:	d906      	bls.n	80023ae <__aeabi_dmul+0x1f6>
 80023a0:	4688      	mov	r8, r1
 80023a2:	2180      	movs	r1, #128	; 0x80
 80023a4:	0249      	lsls	r1, r1, #9
 80023a6:	468c      	mov	ip, r1
 80023a8:	44e0      	add	r8, ip
 80023aa:	4641      	mov	r1, r8
 80023ac:	9102      	str	r1, [sp, #8]
 80023ae:	0436      	lsls	r6, r6, #16
 80023b0:	0c01      	lsrs	r1, r0, #16
 80023b2:	0c36      	lsrs	r6, r6, #16
 80023b4:	0400      	lsls	r0, r0, #16
 80023b6:	468b      	mov	fp, r1
 80023b8:	1981      	adds	r1, r0, r6
 80023ba:	0c1e      	lsrs	r6, r3, #16
 80023bc:	041b      	lsls	r3, r3, #16
 80023be:	0c1b      	lsrs	r3, r3, #16
 80023c0:	9103      	str	r1, [sp, #12]
 80023c2:	0019      	movs	r1, r3
 80023c4:	4379      	muls	r1, r7
 80023c6:	468c      	mov	ip, r1
 80023c8:	0028      	movs	r0, r5
 80023ca:	4375      	muls	r5, r6
 80023cc:	4465      	add	r5, ip
 80023ce:	46a8      	mov	r8, r5
 80023d0:	4358      	muls	r0, r3
 80023d2:	0c05      	lsrs	r5, r0, #16
 80023d4:	4445      	add	r5, r8
 80023d6:	4377      	muls	r7, r6
 80023d8:	42a9      	cmp	r1, r5
 80023da:	d903      	bls.n	80023e4 <__aeabi_dmul+0x22c>
 80023dc:	2180      	movs	r1, #128	; 0x80
 80023de:	0249      	lsls	r1, r1, #9
 80023e0:	468c      	mov	ip, r1
 80023e2:	4467      	add	r7, ip
 80023e4:	0c29      	lsrs	r1, r5, #16
 80023e6:	468c      	mov	ip, r1
 80023e8:	0039      	movs	r1, r7
 80023ea:	0400      	lsls	r0, r0, #16
 80023ec:	0c00      	lsrs	r0, r0, #16
 80023ee:	042d      	lsls	r5, r5, #16
 80023f0:	182d      	adds	r5, r5, r0
 80023f2:	4461      	add	r1, ip
 80023f4:	44ab      	add	fp, r5
 80023f6:	9105      	str	r1, [sp, #20]
 80023f8:	4659      	mov	r1, fp
 80023fa:	9104      	str	r1, [sp, #16]
 80023fc:	9901      	ldr	r1, [sp, #4]
 80023fe:	040f      	lsls	r7, r1, #16
 8002400:	0c3f      	lsrs	r7, r7, #16
 8002402:	0c08      	lsrs	r0, r1, #16
 8002404:	0039      	movs	r1, r7
 8002406:	4351      	muls	r1, r2
 8002408:	4342      	muls	r2, r0
 800240a:	4690      	mov	r8, r2
 800240c:	0002      	movs	r2, r0
 800240e:	468c      	mov	ip, r1
 8002410:	0c09      	lsrs	r1, r1, #16
 8002412:	468b      	mov	fp, r1
 8002414:	4362      	muls	r2, r4
 8002416:	437c      	muls	r4, r7
 8002418:	4444      	add	r4, r8
 800241a:	445c      	add	r4, fp
 800241c:	45a0      	cmp	r8, r4
 800241e:	d903      	bls.n	8002428 <__aeabi_dmul+0x270>
 8002420:	2180      	movs	r1, #128	; 0x80
 8002422:	0249      	lsls	r1, r1, #9
 8002424:	4688      	mov	r8, r1
 8002426:	4442      	add	r2, r8
 8002428:	0c21      	lsrs	r1, r4, #16
 800242a:	4688      	mov	r8, r1
 800242c:	4661      	mov	r1, ip
 800242e:	0409      	lsls	r1, r1, #16
 8002430:	0c09      	lsrs	r1, r1, #16
 8002432:	468c      	mov	ip, r1
 8002434:	0039      	movs	r1, r7
 8002436:	4359      	muls	r1, r3
 8002438:	4343      	muls	r3, r0
 800243a:	4370      	muls	r0, r6
 800243c:	437e      	muls	r6, r7
 800243e:	0c0f      	lsrs	r7, r1, #16
 8002440:	18f6      	adds	r6, r6, r3
 8002442:	0424      	lsls	r4, r4, #16
 8002444:	19be      	adds	r6, r7, r6
 8002446:	4464      	add	r4, ip
 8002448:	4442      	add	r2, r8
 800244a:	468c      	mov	ip, r1
 800244c:	42b3      	cmp	r3, r6
 800244e:	d903      	bls.n	8002458 <__aeabi_dmul+0x2a0>
 8002450:	2380      	movs	r3, #128	; 0x80
 8002452:	025b      	lsls	r3, r3, #9
 8002454:	4698      	mov	r8, r3
 8002456:	4440      	add	r0, r8
 8002458:	9b02      	ldr	r3, [sp, #8]
 800245a:	4661      	mov	r1, ip
 800245c:	4698      	mov	r8, r3
 800245e:	9b04      	ldr	r3, [sp, #16]
 8002460:	0437      	lsls	r7, r6, #16
 8002462:	4443      	add	r3, r8
 8002464:	469b      	mov	fp, r3
 8002466:	45ab      	cmp	fp, r5
 8002468:	41ad      	sbcs	r5, r5
 800246a:	426b      	negs	r3, r5
 800246c:	040d      	lsls	r5, r1, #16
 800246e:	9905      	ldr	r1, [sp, #20]
 8002470:	0c2d      	lsrs	r5, r5, #16
 8002472:	468c      	mov	ip, r1
 8002474:	197f      	adds	r7, r7, r5
 8002476:	4467      	add	r7, ip
 8002478:	18fd      	adds	r5, r7, r3
 800247a:	46a8      	mov	r8, r5
 800247c:	465d      	mov	r5, fp
 800247e:	192d      	adds	r5, r5, r4
 8002480:	42a5      	cmp	r5, r4
 8002482:	41a4      	sbcs	r4, r4
 8002484:	4693      	mov	fp, r2
 8002486:	4264      	negs	r4, r4
 8002488:	46a4      	mov	ip, r4
 800248a:	44c3      	add	fp, r8
 800248c:	44dc      	add	ip, fp
 800248e:	428f      	cmp	r7, r1
 8002490:	41bf      	sbcs	r7, r7
 8002492:	4598      	cmp	r8, r3
 8002494:	419b      	sbcs	r3, r3
 8002496:	4593      	cmp	fp, r2
 8002498:	4192      	sbcs	r2, r2
 800249a:	45a4      	cmp	ip, r4
 800249c:	41a4      	sbcs	r4, r4
 800249e:	425b      	negs	r3, r3
 80024a0:	427f      	negs	r7, r7
 80024a2:	431f      	orrs	r7, r3
 80024a4:	0c36      	lsrs	r6, r6, #16
 80024a6:	4252      	negs	r2, r2
 80024a8:	4264      	negs	r4, r4
 80024aa:	19bf      	adds	r7, r7, r6
 80024ac:	4322      	orrs	r2, r4
 80024ae:	18bf      	adds	r7, r7, r2
 80024b0:	4662      	mov	r2, ip
 80024b2:	1838      	adds	r0, r7, r0
 80024b4:	0243      	lsls	r3, r0, #9
 80024b6:	0dd2      	lsrs	r2, r2, #23
 80024b8:	9903      	ldr	r1, [sp, #12]
 80024ba:	4313      	orrs	r3, r2
 80024bc:	026a      	lsls	r2, r5, #9
 80024be:	430a      	orrs	r2, r1
 80024c0:	1e50      	subs	r0, r2, #1
 80024c2:	4182      	sbcs	r2, r0
 80024c4:	4661      	mov	r1, ip
 80024c6:	0ded      	lsrs	r5, r5, #23
 80024c8:	432a      	orrs	r2, r5
 80024ca:	024e      	lsls	r6, r1, #9
 80024cc:	4332      	orrs	r2, r6
 80024ce:	01d9      	lsls	r1, r3, #7
 80024d0:	d400      	bmi.n	80024d4 <__aeabi_dmul+0x31c>
 80024d2:	e0b3      	b.n	800263c <__aeabi_dmul+0x484>
 80024d4:	2601      	movs	r6, #1
 80024d6:	0850      	lsrs	r0, r2, #1
 80024d8:	4032      	ands	r2, r6
 80024da:	4302      	orrs	r2, r0
 80024dc:	07de      	lsls	r6, r3, #31
 80024de:	4332      	orrs	r2, r6
 80024e0:	085b      	lsrs	r3, r3, #1
 80024e2:	4c22      	ldr	r4, [pc, #136]	; (800256c <__aeabi_dmul+0x3b4>)
 80024e4:	4454      	add	r4, sl
 80024e6:	2c00      	cmp	r4, #0
 80024e8:	dd62      	ble.n	80025b0 <__aeabi_dmul+0x3f8>
 80024ea:	0751      	lsls	r1, r2, #29
 80024ec:	d009      	beq.n	8002502 <__aeabi_dmul+0x34a>
 80024ee:	200f      	movs	r0, #15
 80024f0:	4010      	ands	r0, r2
 80024f2:	2804      	cmp	r0, #4
 80024f4:	d005      	beq.n	8002502 <__aeabi_dmul+0x34a>
 80024f6:	1d10      	adds	r0, r2, #4
 80024f8:	4290      	cmp	r0, r2
 80024fa:	4192      	sbcs	r2, r2
 80024fc:	4252      	negs	r2, r2
 80024fe:	189b      	adds	r3, r3, r2
 8002500:	0002      	movs	r2, r0
 8002502:	01d9      	lsls	r1, r3, #7
 8002504:	d504      	bpl.n	8002510 <__aeabi_dmul+0x358>
 8002506:	2480      	movs	r4, #128	; 0x80
 8002508:	4819      	ldr	r0, [pc, #100]	; (8002570 <__aeabi_dmul+0x3b8>)
 800250a:	00e4      	lsls	r4, r4, #3
 800250c:	4003      	ands	r3, r0
 800250e:	4454      	add	r4, sl
 8002510:	4818      	ldr	r0, [pc, #96]	; (8002574 <__aeabi_dmul+0x3bc>)
 8002512:	4284      	cmp	r4, r0
 8002514:	dd00      	ble.n	8002518 <__aeabi_dmul+0x360>
 8002516:	e727      	b.n	8002368 <__aeabi_dmul+0x1b0>
 8002518:	075e      	lsls	r6, r3, #29
 800251a:	025b      	lsls	r3, r3, #9
 800251c:	08d2      	lsrs	r2, r2, #3
 800251e:	0b1f      	lsrs	r7, r3, #12
 8002520:	0563      	lsls	r3, r4, #21
 8002522:	4316      	orrs	r6, r2
 8002524:	0d5b      	lsrs	r3, r3, #21
 8002526:	e6b2      	b.n	800228e <__aeabi_dmul+0xd6>
 8002528:	2300      	movs	r3, #0
 800252a:	4699      	mov	r9, r3
 800252c:	3301      	adds	r3, #1
 800252e:	2704      	movs	r7, #4
 8002530:	2600      	movs	r6, #0
 8002532:	469b      	mov	fp, r3
 8002534:	e664      	b.n	8002200 <__aeabi_dmul+0x48>
 8002536:	2303      	movs	r3, #3
 8002538:	9701      	str	r7, [sp, #4]
 800253a:	4681      	mov	r9, r0
 800253c:	270c      	movs	r7, #12
 800253e:	469b      	mov	fp, r3
 8002540:	e65e      	b.n	8002200 <__aeabi_dmul+0x48>
 8002542:	2201      	movs	r2, #1
 8002544:	2001      	movs	r0, #1
 8002546:	4317      	orrs	r7, r2
 8002548:	2200      	movs	r2, #0
 800254a:	e676      	b.n	800223a <__aeabi_dmul+0x82>
 800254c:	2303      	movs	r3, #3
 800254e:	2003      	movs	r0, #3
 8002550:	431f      	orrs	r7, r3
 8002552:	4643      	mov	r3, r8
 8002554:	e671      	b.n	800223a <__aeabi_dmul+0x82>
 8002556:	46c0      	nop			; (mov r8, r8)
 8002558:	000007ff 	.word	0x000007ff
 800255c:	fffffc01 	.word	0xfffffc01
 8002560:	0800dcd8 	.word	0x0800dcd8
 8002564:	800fffff 	.word	0x800fffff
 8002568:	fffffc0d 	.word	0xfffffc0d
 800256c:	000003ff 	.word	0x000003ff
 8002570:	feffffff 	.word	0xfeffffff
 8002574:	000007fe 	.word	0x000007fe
 8002578:	2300      	movs	r3, #0
 800257a:	2780      	movs	r7, #128	; 0x80
 800257c:	9300      	str	r3, [sp, #0]
 800257e:	033f      	lsls	r7, r7, #12
 8002580:	2600      	movs	r6, #0
 8002582:	4b43      	ldr	r3, [pc, #268]	; (8002690 <__aeabi_dmul+0x4d8>)
 8002584:	e683      	b.n	800228e <__aeabi_dmul+0xd6>
 8002586:	9b01      	ldr	r3, [sp, #4]
 8002588:	0032      	movs	r2, r6
 800258a:	46a4      	mov	ip, r4
 800258c:	4658      	mov	r0, fp
 800258e:	e670      	b.n	8002272 <__aeabi_dmul+0xba>
 8002590:	46ac      	mov	ip, r5
 8002592:	e66e      	b.n	8002272 <__aeabi_dmul+0xba>
 8002594:	2780      	movs	r7, #128	; 0x80
 8002596:	9901      	ldr	r1, [sp, #4]
 8002598:	033f      	lsls	r7, r7, #12
 800259a:	4239      	tst	r1, r7
 800259c:	d02d      	beq.n	80025fa <__aeabi_dmul+0x442>
 800259e:	423b      	tst	r3, r7
 80025a0:	d12b      	bne.n	80025fa <__aeabi_dmul+0x442>
 80025a2:	431f      	orrs	r7, r3
 80025a4:	033f      	lsls	r7, r7, #12
 80025a6:	0b3f      	lsrs	r7, r7, #12
 80025a8:	9500      	str	r5, [sp, #0]
 80025aa:	0016      	movs	r6, r2
 80025ac:	4b38      	ldr	r3, [pc, #224]	; (8002690 <__aeabi_dmul+0x4d8>)
 80025ae:	e66e      	b.n	800228e <__aeabi_dmul+0xd6>
 80025b0:	2501      	movs	r5, #1
 80025b2:	1b2d      	subs	r5, r5, r4
 80025b4:	2d38      	cmp	r5, #56	; 0x38
 80025b6:	dd00      	ble.n	80025ba <__aeabi_dmul+0x402>
 80025b8:	e666      	b.n	8002288 <__aeabi_dmul+0xd0>
 80025ba:	2d1f      	cmp	r5, #31
 80025bc:	dc40      	bgt.n	8002640 <__aeabi_dmul+0x488>
 80025be:	4835      	ldr	r0, [pc, #212]	; (8002694 <__aeabi_dmul+0x4dc>)
 80025c0:	001c      	movs	r4, r3
 80025c2:	4450      	add	r0, sl
 80025c4:	0016      	movs	r6, r2
 80025c6:	4082      	lsls	r2, r0
 80025c8:	4084      	lsls	r4, r0
 80025ca:	40ee      	lsrs	r6, r5
 80025cc:	1e50      	subs	r0, r2, #1
 80025ce:	4182      	sbcs	r2, r0
 80025d0:	4334      	orrs	r4, r6
 80025d2:	4314      	orrs	r4, r2
 80025d4:	40eb      	lsrs	r3, r5
 80025d6:	0762      	lsls	r2, r4, #29
 80025d8:	d009      	beq.n	80025ee <__aeabi_dmul+0x436>
 80025da:	220f      	movs	r2, #15
 80025dc:	4022      	ands	r2, r4
 80025de:	2a04      	cmp	r2, #4
 80025e0:	d005      	beq.n	80025ee <__aeabi_dmul+0x436>
 80025e2:	0022      	movs	r2, r4
 80025e4:	1d14      	adds	r4, r2, #4
 80025e6:	4294      	cmp	r4, r2
 80025e8:	4180      	sbcs	r0, r0
 80025ea:	4240      	negs	r0, r0
 80025ec:	181b      	adds	r3, r3, r0
 80025ee:	021a      	lsls	r2, r3, #8
 80025f0:	d53e      	bpl.n	8002670 <__aeabi_dmul+0x4b8>
 80025f2:	2301      	movs	r3, #1
 80025f4:	2700      	movs	r7, #0
 80025f6:	2600      	movs	r6, #0
 80025f8:	e649      	b.n	800228e <__aeabi_dmul+0xd6>
 80025fa:	2780      	movs	r7, #128	; 0x80
 80025fc:	9b01      	ldr	r3, [sp, #4]
 80025fe:	033f      	lsls	r7, r7, #12
 8002600:	431f      	orrs	r7, r3
 8002602:	033f      	lsls	r7, r7, #12
 8002604:	0b3f      	lsrs	r7, r7, #12
 8002606:	9400      	str	r4, [sp, #0]
 8002608:	4b21      	ldr	r3, [pc, #132]	; (8002690 <__aeabi_dmul+0x4d8>)
 800260a:	e640      	b.n	800228e <__aeabi_dmul+0xd6>
 800260c:	0003      	movs	r3, r0
 800260e:	465a      	mov	r2, fp
 8002610:	3b28      	subs	r3, #40	; 0x28
 8002612:	409a      	lsls	r2, r3
 8002614:	2600      	movs	r6, #0
 8002616:	9201      	str	r2, [sp, #4]
 8002618:	e66d      	b.n	80022f6 <__aeabi_dmul+0x13e>
 800261a:	4658      	mov	r0, fp
 800261c:	f7fd ff74 	bl	8000508 <__clzsi2>
 8002620:	3020      	adds	r0, #32
 8002622:	e657      	b.n	80022d4 <__aeabi_dmul+0x11c>
 8002624:	0003      	movs	r3, r0
 8002626:	4652      	mov	r2, sl
 8002628:	3b28      	subs	r3, #40	; 0x28
 800262a:	409a      	lsls	r2, r3
 800262c:	0013      	movs	r3, r2
 800262e:	2200      	movs	r2, #0
 8002630:	e693      	b.n	800235a <__aeabi_dmul+0x1a2>
 8002632:	4650      	mov	r0, sl
 8002634:	f7fd ff68 	bl	8000508 <__clzsi2>
 8002638:	3020      	adds	r0, #32
 800263a:	e67b      	b.n	8002334 <__aeabi_dmul+0x17c>
 800263c:	46ca      	mov	sl, r9
 800263e:	e750      	b.n	80024e2 <__aeabi_dmul+0x32a>
 8002640:	201f      	movs	r0, #31
 8002642:	001e      	movs	r6, r3
 8002644:	4240      	negs	r0, r0
 8002646:	1b04      	subs	r4, r0, r4
 8002648:	40e6      	lsrs	r6, r4
 800264a:	2d20      	cmp	r5, #32
 800264c:	d003      	beq.n	8002656 <__aeabi_dmul+0x49e>
 800264e:	4c12      	ldr	r4, [pc, #72]	; (8002698 <__aeabi_dmul+0x4e0>)
 8002650:	4454      	add	r4, sl
 8002652:	40a3      	lsls	r3, r4
 8002654:	431a      	orrs	r2, r3
 8002656:	1e50      	subs	r0, r2, #1
 8002658:	4182      	sbcs	r2, r0
 800265a:	4332      	orrs	r2, r6
 800265c:	2607      	movs	r6, #7
 800265e:	2700      	movs	r7, #0
 8002660:	4016      	ands	r6, r2
 8002662:	d009      	beq.n	8002678 <__aeabi_dmul+0x4c0>
 8002664:	200f      	movs	r0, #15
 8002666:	2300      	movs	r3, #0
 8002668:	4010      	ands	r0, r2
 800266a:	0014      	movs	r4, r2
 800266c:	2804      	cmp	r0, #4
 800266e:	d1b9      	bne.n	80025e4 <__aeabi_dmul+0x42c>
 8002670:	0022      	movs	r2, r4
 8002672:	075e      	lsls	r6, r3, #29
 8002674:	025b      	lsls	r3, r3, #9
 8002676:	0b1f      	lsrs	r7, r3, #12
 8002678:	08d2      	lsrs	r2, r2, #3
 800267a:	4316      	orrs	r6, r2
 800267c:	2300      	movs	r3, #0
 800267e:	e606      	b.n	800228e <__aeabi_dmul+0xd6>
 8002680:	2780      	movs	r7, #128	; 0x80
 8002682:	033f      	lsls	r7, r7, #12
 8002684:	431f      	orrs	r7, r3
 8002686:	033f      	lsls	r7, r7, #12
 8002688:	0b3f      	lsrs	r7, r7, #12
 800268a:	0016      	movs	r6, r2
 800268c:	4b00      	ldr	r3, [pc, #0]	; (8002690 <__aeabi_dmul+0x4d8>)
 800268e:	e5fe      	b.n	800228e <__aeabi_dmul+0xd6>
 8002690:	000007ff 	.word	0x000007ff
 8002694:	0000041e 	.word	0x0000041e
 8002698:	0000043e 	.word	0x0000043e

0800269c <__aeabi_dsub>:
 800269c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800269e:	4657      	mov	r7, sl
 80026a0:	464e      	mov	r6, r9
 80026a2:	4645      	mov	r5, r8
 80026a4:	46de      	mov	lr, fp
 80026a6:	000c      	movs	r4, r1
 80026a8:	0309      	lsls	r1, r1, #12
 80026aa:	b5e0      	push	{r5, r6, r7, lr}
 80026ac:	0a49      	lsrs	r1, r1, #9
 80026ae:	0f46      	lsrs	r6, r0, #29
 80026b0:	005f      	lsls	r7, r3, #1
 80026b2:	4331      	orrs	r1, r6
 80026b4:	031e      	lsls	r6, r3, #12
 80026b6:	0fdb      	lsrs	r3, r3, #31
 80026b8:	0a76      	lsrs	r6, r6, #9
 80026ba:	469b      	mov	fp, r3
 80026bc:	0f53      	lsrs	r3, r2, #29
 80026be:	4333      	orrs	r3, r6
 80026c0:	4ec8      	ldr	r6, [pc, #800]	; (80029e4 <__aeabi_dsub+0x348>)
 80026c2:	0065      	lsls	r5, r4, #1
 80026c4:	00c0      	lsls	r0, r0, #3
 80026c6:	0fe4      	lsrs	r4, r4, #31
 80026c8:	00d2      	lsls	r2, r2, #3
 80026ca:	0d6d      	lsrs	r5, r5, #21
 80026cc:	46a2      	mov	sl, r4
 80026ce:	4681      	mov	r9, r0
 80026d0:	0d7f      	lsrs	r7, r7, #21
 80026d2:	469c      	mov	ip, r3
 80026d4:	4690      	mov	r8, r2
 80026d6:	42b7      	cmp	r7, r6
 80026d8:	d100      	bne.n	80026dc <__aeabi_dsub+0x40>
 80026da:	e0b9      	b.n	8002850 <__aeabi_dsub+0x1b4>
 80026dc:	465b      	mov	r3, fp
 80026de:	2601      	movs	r6, #1
 80026e0:	4073      	eors	r3, r6
 80026e2:	469b      	mov	fp, r3
 80026e4:	1bee      	subs	r6, r5, r7
 80026e6:	45a3      	cmp	fp, r4
 80026e8:	d100      	bne.n	80026ec <__aeabi_dsub+0x50>
 80026ea:	e083      	b.n	80027f4 <__aeabi_dsub+0x158>
 80026ec:	2e00      	cmp	r6, #0
 80026ee:	dd63      	ble.n	80027b8 <__aeabi_dsub+0x11c>
 80026f0:	2f00      	cmp	r7, #0
 80026f2:	d000      	beq.n	80026f6 <__aeabi_dsub+0x5a>
 80026f4:	e0b1      	b.n	800285a <__aeabi_dsub+0x1be>
 80026f6:	4663      	mov	r3, ip
 80026f8:	4313      	orrs	r3, r2
 80026fa:	d100      	bne.n	80026fe <__aeabi_dsub+0x62>
 80026fc:	e123      	b.n	8002946 <__aeabi_dsub+0x2aa>
 80026fe:	1e73      	subs	r3, r6, #1
 8002700:	2b00      	cmp	r3, #0
 8002702:	d000      	beq.n	8002706 <__aeabi_dsub+0x6a>
 8002704:	e1ba      	b.n	8002a7c <__aeabi_dsub+0x3e0>
 8002706:	1a86      	subs	r6, r0, r2
 8002708:	4663      	mov	r3, ip
 800270a:	42b0      	cmp	r0, r6
 800270c:	4180      	sbcs	r0, r0
 800270e:	2501      	movs	r5, #1
 8002710:	1ac9      	subs	r1, r1, r3
 8002712:	4240      	negs	r0, r0
 8002714:	1a09      	subs	r1, r1, r0
 8002716:	020b      	lsls	r3, r1, #8
 8002718:	d400      	bmi.n	800271c <__aeabi_dsub+0x80>
 800271a:	e147      	b.n	80029ac <__aeabi_dsub+0x310>
 800271c:	0249      	lsls	r1, r1, #9
 800271e:	0a4b      	lsrs	r3, r1, #9
 8002720:	4698      	mov	r8, r3
 8002722:	4643      	mov	r3, r8
 8002724:	2b00      	cmp	r3, #0
 8002726:	d100      	bne.n	800272a <__aeabi_dsub+0x8e>
 8002728:	e189      	b.n	8002a3e <__aeabi_dsub+0x3a2>
 800272a:	4640      	mov	r0, r8
 800272c:	f7fd feec 	bl	8000508 <__clzsi2>
 8002730:	0003      	movs	r3, r0
 8002732:	3b08      	subs	r3, #8
 8002734:	2b1f      	cmp	r3, #31
 8002736:	dd00      	ble.n	800273a <__aeabi_dsub+0x9e>
 8002738:	e17c      	b.n	8002a34 <__aeabi_dsub+0x398>
 800273a:	2220      	movs	r2, #32
 800273c:	0030      	movs	r0, r6
 800273e:	1ad2      	subs	r2, r2, r3
 8002740:	4641      	mov	r1, r8
 8002742:	40d0      	lsrs	r0, r2
 8002744:	4099      	lsls	r1, r3
 8002746:	0002      	movs	r2, r0
 8002748:	409e      	lsls	r6, r3
 800274a:	430a      	orrs	r2, r1
 800274c:	429d      	cmp	r5, r3
 800274e:	dd00      	ble.n	8002752 <__aeabi_dsub+0xb6>
 8002750:	e16a      	b.n	8002a28 <__aeabi_dsub+0x38c>
 8002752:	1b5d      	subs	r5, r3, r5
 8002754:	1c6b      	adds	r3, r5, #1
 8002756:	2b1f      	cmp	r3, #31
 8002758:	dd00      	ble.n	800275c <__aeabi_dsub+0xc0>
 800275a:	e194      	b.n	8002a86 <__aeabi_dsub+0x3ea>
 800275c:	2120      	movs	r1, #32
 800275e:	0010      	movs	r0, r2
 8002760:	0035      	movs	r5, r6
 8002762:	1ac9      	subs	r1, r1, r3
 8002764:	408e      	lsls	r6, r1
 8002766:	40da      	lsrs	r2, r3
 8002768:	4088      	lsls	r0, r1
 800276a:	40dd      	lsrs	r5, r3
 800276c:	1e71      	subs	r1, r6, #1
 800276e:	418e      	sbcs	r6, r1
 8002770:	0011      	movs	r1, r2
 8002772:	2207      	movs	r2, #7
 8002774:	4328      	orrs	r0, r5
 8002776:	2500      	movs	r5, #0
 8002778:	4306      	orrs	r6, r0
 800277a:	4032      	ands	r2, r6
 800277c:	2a00      	cmp	r2, #0
 800277e:	d009      	beq.n	8002794 <__aeabi_dsub+0xf8>
 8002780:	230f      	movs	r3, #15
 8002782:	4033      	ands	r3, r6
 8002784:	2b04      	cmp	r3, #4
 8002786:	d005      	beq.n	8002794 <__aeabi_dsub+0xf8>
 8002788:	1d33      	adds	r3, r6, #4
 800278a:	42b3      	cmp	r3, r6
 800278c:	41b6      	sbcs	r6, r6
 800278e:	4276      	negs	r6, r6
 8002790:	1989      	adds	r1, r1, r6
 8002792:	001e      	movs	r6, r3
 8002794:	020b      	lsls	r3, r1, #8
 8002796:	d400      	bmi.n	800279a <__aeabi_dsub+0xfe>
 8002798:	e23d      	b.n	8002c16 <__aeabi_dsub+0x57a>
 800279a:	1c6a      	adds	r2, r5, #1
 800279c:	4b91      	ldr	r3, [pc, #580]	; (80029e4 <__aeabi_dsub+0x348>)
 800279e:	0555      	lsls	r5, r2, #21
 80027a0:	0d6d      	lsrs	r5, r5, #21
 80027a2:	429a      	cmp	r2, r3
 80027a4:	d100      	bne.n	80027a8 <__aeabi_dsub+0x10c>
 80027a6:	e119      	b.n	80029dc <__aeabi_dsub+0x340>
 80027a8:	4a8f      	ldr	r2, [pc, #572]	; (80029e8 <__aeabi_dsub+0x34c>)
 80027aa:	08f6      	lsrs	r6, r6, #3
 80027ac:	400a      	ands	r2, r1
 80027ae:	0757      	lsls	r7, r2, #29
 80027b0:	0252      	lsls	r2, r2, #9
 80027b2:	4337      	orrs	r7, r6
 80027b4:	0b12      	lsrs	r2, r2, #12
 80027b6:	e09b      	b.n	80028f0 <__aeabi_dsub+0x254>
 80027b8:	2e00      	cmp	r6, #0
 80027ba:	d000      	beq.n	80027be <__aeabi_dsub+0x122>
 80027bc:	e0c5      	b.n	800294a <__aeabi_dsub+0x2ae>
 80027be:	1c6e      	adds	r6, r5, #1
 80027c0:	0576      	lsls	r6, r6, #21
 80027c2:	0d76      	lsrs	r6, r6, #21
 80027c4:	2e01      	cmp	r6, #1
 80027c6:	dc00      	bgt.n	80027ca <__aeabi_dsub+0x12e>
 80027c8:	e148      	b.n	8002a5c <__aeabi_dsub+0x3c0>
 80027ca:	4667      	mov	r7, ip
 80027cc:	1a86      	subs	r6, r0, r2
 80027ce:	1bcb      	subs	r3, r1, r7
 80027d0:	42b0      	cmp	r0, r6
 80027d2:	41bf      	sbcs	r7, r7
 80027d4:	427f      	negs	r7, r7
 80027d6:	46b8      	mov	r8, r7
 80027d8:	001f      	movs	r7, r3
 80027da:	4643      	mov	r3, r8
 80027dc:	1aff      	subs	r7, r7, r3
 80027de:	003b      	movs	r3, r7
 80027e0:	46b8      	mov	r8, r7
 80027e2:	021b      	lsls	r3, r3, #8
 80027e4:	d500      	bpl.n	80027e8 <__aeabi_dsub+0x14c>
 80027e6:	e15f      	b.n	8002aa8 <__aeabi_dsub+0x40c>
 80027e8:	4337      	orrs	r7, r6
 80027ea:	d19a      	bne.n	8002722 <__aeabi_dsub+0x86>
 80027ec:	2200      	movs	r2, #0
 80027ee:	2400      	movs	r4, #0
 80027f0:	2500      	movs	r5, #0
 80027f2:	e079      	b.n	80028e8 <__aeabi_dsub+0x24c>
 80027f4:	2e00      	cmp	r6, #0
 80027f6:	dc00      	bgt.n	80027fa <__aeabi_dsub+0x15e>
 80027f8:	e0fa      	b.n	80029f0 <__aeabi_dsub+0x354>
 80027fa:	2f00      	cmp	r7, #0
 80027fc:	d100      	bne.n	8002800 <__aeabi_dsub+0x164>
 80027fe:	e08d      	b.n	800291c <__aeabi_dsub+0x280>
 8002800:	4b78      	ldr	r3, [pc, #480]	; (80029e4 <__aeabi_dsub+0x348>)
 8002802:	429d      	cmp	r5, r3
 8002804:	d067      	beq.n	80028d6 <__aeabi_dsub+0x23a>
 8002806:	2380      	movs	r3, #128	; 0x80
 8002808:	4667      	mov	r7, ip
 800280a:	041b      	lsls	r3, r3, #16
 800280c:	431f      	orrs	r7, r3
 800280e:	46bc      	mov	ip, r7
 8002810:	2e38      	cmp	r6, #56	; 0x38
 8002812:	dc00      	bgt.n	8002816 <__aeabi_dsub+0x17a>
 8002814:	e152      	b.n	8002abc <__aeabi_dsub+0x420>
 8002816:	4663      	mov	r3, ip
 8002818:	4313      	orrs	r3, r2
 800281a:	1e5a      	subs	r2, r3, #1
 800281c:	4193      	sbcs	r3, r2
 800281e:	181e      	adds	r6, r3, r0
 8002820:	4286      	cmp	r6, r0
 8002822:	4180      	sbcs	r0, r0
 8002824:	4240      	negs	r0, r0
 8002826:	1809      	adds	r1, r1, r0
 8002828:	020b      	lsls	r3, r1, #8
 800282a:	d400      	bmi.n	800282e <__aeabi_dsub+0x192>
 800282c:	e0be      	b.n	80029ac <__aeabi_dsub+0x310>
 800282e:	4b6d      	ldr	r3, [pc, #436]	; (80029e4 <__aeabi_dsub+0x348>)
 8002830:	3501      	adds	r5, #1
 8002832:	429d      	cmp	r5, r3
 8002834:	d100      	bne.n	8002838 <__aeabi_dsub+0x19c>
 8002836:	e0d2      	b.n	80029de <__aeabi_dsub+0x342>
 8002838:	4a6b      	ldr	r2, [pc, #428]	; (80029e8 <__aeabi_dsub+0x34c>)
 800283a:	0873      	lsrs	r3, r6, #1
 800283c:	400a      	ands	r2, r1
 800283e:	2101      	movs	r1, #1
 8002840:	400e      	ands	r6, r1
 8002842:	431e      	orrs	r6, r3
 8002844:	0851      	lsrs	r1, r2, #1
 8002846:	07d3      	lsls	r3, r2, #31
 8002848:	2207      	movs	r2, #7
 800284a:	431e      	orrs	r6, r3
 800284c:	4032      	ands	r2, r6
 800284e:	e795      	b.n	800277c <__aeabi_dsub+0xe0>
 8002850:	001e      	movs	r6, r3
 8002852:	4316      	orrs	r6, r2
 8002854:	d000      	beq.n	8002858 <__aeabi_dsub+0x1bc>
 8002856:	e745      	b.n	80026e4 <__aeabi_dsub+0x48>
 8002858:	e740      	b.n	80026dc <__aeabi_dsub+0x40>
 800285a:	4b62      	ldr	r3, [pc, #392]	; (80029e4 <__aeabi_dsub+0x348>)
 800285c:	429d      	cmp	r5, r3
 800285e:	d03a      	beq.n	80028d6 <__aeabi_dsub+0x23a>
 8002860:	2380      	movs	r3, #128	; 0x80
 8002862:	4667      	mov	r7, ip
 8002864:	041b      	lsls	r3, r3, #16
 8002866:	431f      	orrs	r7, r3
 8002868:	46bc      	mov	ip, r7
 800286a:	2e38      	cmp	r6, #56	; 0x38
 800286c:	dd00      	ble.n	8002870 <__aeabi_dsub+0x1d4>
 800286e:	e0eb      	b.n	8002a48 <__aeabi_dsub+0x3ac>
 8002870:	2e1f      	cmp	r6, #31
 8002872:	dc00      	bgt.n	8002876 <__aeabi_dsub+0x1da>
 8002874:	e13a      	b.n	8002aec <__aeabi_dsub+0x450>
 8002876:	0033      	movs	r3, r6
 8002878:	4667      	mov	r7, ip
 800287a:	3b20      	subs	r3, #32
 800287c:	40df      	lsrs	r7, r3
 800287e:	003b      	movs	r3, r7
 8002880:	2e20      	cmp	r6, #32
 8002882:	d005      	beq.n	8002890 <__aeabi_dsub+0x1f4>
 8002884:	2740      	movs	r7, #64	; 0x40
 8002886:	1bbf      	subs	r7, r7, r6
 8002888:	4666      	mov	r6, ip
 800288a:	40be      	lsls	r6, r7
 800288c:	4332      	orrs	r2, r6
 800288e:	4690      	mov	r8, r2
 8002890:	4646      	mov	r6, r8
 8002892:	1e72      	subs	r2, r6, #1
 8002894:	4196      	sbcs	r6, r2
 8002896:	4333      	orrs	r3, r6
 8002898:	e0da      	b.n	8002a50 <__aeabi_dsub+0x3b4>
 800289a:	2b00      	cmp	r3, #0
 800289c:	d100      	bne.n	80028a0 <__aeabi_dsub+0x204>
 800289e:	e214      	b.n	8002cca <__aeabi_dsub+0x62e>
 80028a0:	4663      	mov	r3, ip
 80028a2:	4313      	orrs	r3, r2
 80028a4:	d100      	bne.n	80028a8 <__aeabi_dsub+0x20c>
 80028a6:	e168      	b.n	8002b7a <__aeabi_dsub+0x4de>
 80028a8:	2380      	movs	r3, #128	; 0x80
 80028aa:	074e      	lsls	r6, r1, #29
 80028ac:	08c0      	lsrs	r0, r0, #3
 80028ae:	08c9      	lsrs	r1, r1, #3
 80028b0:	031b      	lsls	r3, r3, #12
 80028b2:	4306      	orrs	r6, r0
 80028b4:	4219      	tst	r1, r3
 80028b6:	d008      	beq.n	80028ca <__aeabi_dsub+0x22e>
 80028b8:	4660      	mov	r0, ip
 80028ba:	08c0      	lsrs	r0, r0, #3
 80028bc:	4218      	tst	r0, r3
 80028be:	d104      	bne.n	80028ca <__aeabi_dsub+0x22e>
 80028c0:	4663      	mov	r3, ip
 80028c2:	0001      	movs	r1, r0
 80028c4:	08d2      	lsrs	r2, r2, #3
 80028c6:	075e      	lsls	r6, r3, #29
 80028c8:	4316      	orrs	r6, r2
 80028ca:	00f3      	lsls	r3, r6, #3
 80028cc:	4699      	mov	r9, r3
 80028ce:	00c9      	lsls	r1, r1, #3
 80028d0:	0f72      	lsrs	r2, r6, #29
 80028d2:	4d44      	ldr	r5, [pc, #272]	; (80029e4 <__aeabi_dsub+0x348>)
 80028d4:	4311      	orrs	r1, r2
 80028d6:	464b      	mov	r3, r9
 80028d8:	08de      	lsrs	r6, r3, #3
 80028da:	4b42      	ldr	r3, [pc, #264]	; (80029e4 <__aeabi_dsub+0x348>)
 80028dc:	074f      	lsls	r7, r1, #29
 80028de:	4337      	orrs	r7, r6
 80028e0:	08ca      	lsrs	r2, r1, #3
 80028e2:	429d      	cmp	r5, r3
 80028e4:	d100      	bne.n	80028e8 <__aeabi_dsub+0x24c>
 80028e6:	e06e      	b.n	80029c6 <__aeabi_dsub+0x32a>
 80028e8:	0312      	lsls	r2, r2, #12
 80028ea:	056d      	lsls	r5, r5, #21
 80028ec:	0b12      	lsrs	r2, r2, #12
 80028ee:	0d6d      	lsrs	r5, r5, #21
 80028f0:	2100      	movs	r1, #0
 80028f2:	0312      	lsls	r2, r2, #12
 80028f4:	0b13      	lsrs	r3, r2, #12
 80028f6:	0d0a      	lsrs	r2, r1, #20
 80028f8:	0512      	lsls	r2, r2, #20
 80028fa:	431a      	orrs	r2, r3
 80028fc:	4b3b      	ldr	r3, [pc, #236]	; (80029ec <__aeabi_dsub+0x350>)
 80028fe:	052d      	lsls	r5, r5, #20
 8002900:	4013      	ands	r3, r2
 8002902:	432b      	orrs	r3, r5
 8002904:	005b      	lsls	r3, r3, #1
 8002906:	07e4      	lsls	r4, r4, #31
 8002908:	085b      	lsrs	r3, r3, #1
 800290a:	4323      	orrs	r3, r4
 800290c:	0038      	movs	r0, r7
 800290e:	0019      	movs	r1, r3
 8002910:	bc3c      	pop	{r2, r3, r4, r5}
 8002912:	4690      	mov	r8, r2
 8002914:	4699      	mov	r9, r3
 8002916:	46a2      	mov	sl, r4
 8002918:	46ab      	mov	fp, r5
 800291a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800291c:	4663      	mov	r3, ip
 800291e:	4313      	orrs	r3, r2
 8002920:	d011      	beq.n	8002946 <__aeabi_dsub+0x2aa>
 8002922:	1e73      	subs	r3, r6, #1
 8002924:	2b00      	cmp	r3, #0
 8002926:	d000      	beq.n	800292a <__aeabi_dsub+0x28e>
 8002928:	e107      	b.n	8002b3a <__aeabi_dsub+0x49e>
 800292a:	1886      	adds	r6, r0, r2
 800292c:	4286      	cmp	r6, r0
 800292e:	4180      	sbcs	r0, r0
 8002930:	4461      	add	r1, ip
 8002932:	4240      	negs	r0, r0
 8002934:	1809      	adds	r1, r1, r0
 8002936:	2501      	movs	r5, #1
 8002938:	020b      	lsls	r3, r1, #8
 800293a:	d537      	bpl.n	80029ac <__aeabi_dsub+0x310>
 800293c:	2502      	movs	r5, #2
 800293e:	e77b      	b.n	8002838 <__aeabi_dsub+0x19c>
 8002940:	003e      	movs	r6, r7
 8002942:	4661      	mov	r1, ip
 8002944:	4691      	mov	r9, r2
 8002946:	0035      	movs	r5, r6
 8002948:	e7c5      	b.n	80028d6 <__aeabi_dsub+0x23a>
 800294a:	465c      	mov	r4, fp
 800294c:	2d00      	cmp	r5, #0
 800294e:	d000      	beq.n	8002952 <__aeabi_dsub+0x2b6>
 8002950:	e0e1      	b.n	8002b16 <__aeabi_dsub+0x47a>
 8002952:	000b      	movs	r3, r1
 8002954:	4303      	orrs	r3, r0
 8002956:	d0f3      	beq.n	8002940 <__aeabi_dsub+0x2a4>
 8002958:	1c73      	adds	r3, r6, #1
 800295a:	d100      	bne.n	800295e <__aeabi_dsub+0x2c2>
 800295c:	e1ac      	b.n	8002cb8 <__aeabi_dsub+0x61c>
 800295e:	4b21      	ldr	r3, [pc, #132]	; (80029e4 <__aeabi_dsub+0x348>)
 8002960:	429f      	cmp	r7, r3
 8002962:	d100      	bne.n	8002966 <__aeabi_dsub+0x2ca>
 8002964:	e13a      	b.n	8002bdc <__aeabi_dsub+0x540>
 8002966:	43f3      	mvns	r3, r6
 8002968:	2b38      	cmp	r3, #56	; 0x38
 800296a:	dd00      	ble.n	800296e <__aeabi_dsub+0x2d2>
 800296c:	e16f      	b.n	8002c4e <__aeabi_dsub+0x5b2>
 800296e:	2b1f      	cmp	r3, #31
 8002970:	dd00      	ble.n	8002974 <__aeabi_dsub+0x2d8>
 8002972:	e18c      	b.n	8002c8e <__aeabi_dsub+0x5f2>
 8002974:	2520      	movs	r5, #32
 8002976:	000e      	movs	r6, r1
 8002978:	1aed      	subs	r5, r5, r3
 800297a:	40ae      	lsls	r6, r5
 800297c:	46b0      	mov	r8, r6
 800297e:	0006      	movs	r6, r0
 8002980:	46aa      	mov	sl, r5
 8002982:	40de      	lsrs	r6, r3
 8002984:	4645      	mov	r5, r8
 8002986:	4335      	orrs	r5, r6
 8002988:	002e      	movs	r6, r5
 800298a:	4655      	mov	r5, sl
 800298c:	40d9      	lsrs	r1, r3
 800298e:	40a8      	lsls	r0, r5
 8002990:	4663      	mov	r3, ip
 8002992:	1e45      	subs	r5, r0, #1
 8002994:	41a8      	sbcs	r0, r5
 8002996:	1a5b      	subs	r3, r3, r1
 8002998:	469c      	mov	ip, r3
 800299a:	4330      	orrs	r0, r6
 800299c:	1a16      	subs	r6, r2, r0
 800299e:	42b2      	cmp	r2, r6
 80029a0:	4192      	sbcs	r2, r2
 80029a2:	4663      	mov	r3, ip
 80029a4:	4252      	negs	r2, r2
 80029a6:	1a99      	subs	r1, r3, r2
 80029a8:	003d      	movs	r5, r7
 80029aa:	e6b4      	b.n	8002716 <__aeabi_dsub+0x7a>
 80029ac:	2207      	movs	r2, #7
 80029ae:	4032      	ands	r2, r6
 80029b0:	2a00      	cmp	r2, #0
 80029b2:	d000      	beq.n	80029b6 <__aeabi_dsub+0x31a>
 80029b4:	e6e4      	b.n	8002780 <__aeabi_dsub+0xe4>
 80029b6:	4b0b      	ldr	r3, [pc, #44]	; (80029e4 <__aeabi_dsub+0x348>)
 80029b8:	08f6      	lsrs	r6, r6, #3
 80029ba:	074f      	lsls	r7, r1, #29
 80029bc:	4337      	orrs	r7, r6
 80029be:	08ca      	lsrs	r2, r1, #3
 80029c0:	429d      	cmp	r5, r3
 80029c2:	d000      	beq.n	80029c6 <__aeabi_dsub+0x32a>
 80029c4:	e790      	b.n	80028e8 <__aeabi_dsub+0x24c>
 80029c6:	003b      	movs	r3, r7
 80029c8:	4313      	orrs	r3, r2
 80029ca:	d100      	bne.n	80029ce <__aeabi_dsub+0x332>
 80029cc:	e1a6      	b.n	8002d1c <__aeabi_dsub+0x680>
 80029ce:	2380      	movs	r3, #128	; 0x80
 80029d0:	031b      	lsls	r3, r3, #12
 80029d2:	431a      	orrs	r2, r3
 80029d4:	0312      	lsls	r2, r2, #12
 80029d6:	0b12      	lsrs	r2, r2, #12
 80029d8:	4d02      	ldr	r5, [pc, #8]	; (80029e4 <__aeabi_dsub+0x348>)
 80029da:	e789      	b.n	80028f0 <__aeabi_dsub+0x254>
 80029dc:	0015      	movs	r5, r2
 80029de:	2200      	movs	r2, #0
 80029e0:	2700      	movs	r7, #0
 80029e2:	e785      	b.n	80028f0 <__aeabi_dsub+0x254>
 80029e4:	000007ff 	.word	0x000007ff
 80029e8:	ff7fffff 	.word	0xff7fffff
 80029ec:	800fffff 	.word	0x800fffff
 80029f0:	2e00      	cmp	r6, #0
 80029f2:	d000      	beq.n	80029f6 <__aeabi_dsub+0x35a>
 80029f4:	e0c7      	b.n	8002b86 <__aeabi_dsub+0x4ea>
 80029f6:	1c6b      	adds	r3, r5, #1
 80029f8:	055e      	lsls	r6, r3, #21
 80029fa:	0d76      	lsrs	r6, r6, #21
 80029fc:	2e01      	cmp	r6, #1
 80029fe:	dc00      	bgt.n	8002a02 <__aeabi_dsub+0x366>
 8002a00:	e0f0      	b.n	8002be4 <__aeabi_dsub+0x548>
 8002a02:	4dc8      	ldr	r5, [pc, #800]	; (8002d24 <__aeabi_dsub+0x688>)
 8002a04:	42ab      	cmp	r3, r5
 8002a06:	d100      	bne.n	8002a0a <__aeabi_dsub+0x36e>
 8002a08:	e0b9      	b.n	8002b7e <__aeabi_dsub+0x4e2>
 8002a0a:	1885      	adds	r5, r0, r2
 8002a0c:	000a      	movs	r2, r1
 8002a0e:	4285      	cmp	r5, r0
 8002a10:	4189      	sbcs	r1, r1
 8002a12:	4462      	add	r2, ip
 8002a14:	4249      	negs	r1, r1
 8002a16:	1851      	adds	r1, r2, r1
 8002a18:	2207      	movs	r2, #7
 8002a1a:	07ce      	lsls	r6, r1, #31
 8002a1c:	086d      	lsrs	r5, r5, #1
 8002a1e:	432e      	orrs	r6, r5
 8002a20:	0849      	lsrs	r1, r1, #1
 8002a22:	4032      	ands	r2, r6
 8002a24:	001d      	movs	r5, r3
 8002a26:	e6a9      	b.n	800277c <__aeabi_dsub+0xe0>
 8002a28:	49bf      	ldr	r1, [pc, #764]	; (8002d28 <__aeabi_dsub+0x68c>)
 8002a2a:	1aed      	subs	r5, r5, r3
 8002a2c:	4011      	ands	r1, r2
 8002a2e:	2207      	movs	r2, #7
 8002a30:	4032      	ands	r2, r6
 8002a32:	e6a3      	b.n	800277c <__aeabi_dsub+0xe0>
 8002a34:	0032      	movs	r2, r6
 8002a36:	3828      	subs	r0, #40	; 0x28
 8002a38:	4082      	lsls	r2, r0
 8002a3a:	2600      	movs	r6, #0
 8002a3c:	e686      	b.n	800274c <__aeabi_dsub+0xb0>
 8002a3e:	0030      	movs	r0, r6
 8002a40:	f7fd fd62 	bl	8000508 <__clzsi2>
 8002a44:	3020      	adds	r0, #32
 8002a46:	e673      	b.n	8002730 <__aeabi_dsub+0x94>
 8002a48:	4663      	mov	r3, ip
 8002a4a:	4313      	orrs	r3, r2
 8002a4c:	1e5a      	subs	r2, r3, #1
 8002a4e:	4193      	sbcs	r3, r2
 8002a50:	1ac6      	subs	r6, r0, r3
 8002a52:	42b0      	cmp	r0, r6
 8002a54:	4180      	sbcs	r0, r0
 8002a56:	4240      	negs	r0, r0
 8002a58:	1a09      	subs	r1, r1, r0
 8002a5a:	e65c      	b.n	8002716 <__aeabi_dsub+0x7a>
 8002a5c:	000e      	movs	r6, r1
 8002a5e:	4667      	mov	r7, ip
 8002a60:	4306      	orrs	r6, r0
 8002a62:	4317      	orrs	r7, r2
 8002a64:	2d00      	cmp	r5, #0
 8002a66:	d15e      	bne.n	8002b26 <__aeabi_dsub+0x48a>
 8002a68:	2e00      	cmp	r6, #0
 8002a6a:	d000      	beq.n	8002a6e <__aeabi_dsub+0x3d2>
 8002a6c:	e0f3      	b.n	8002c56 <__aeabi_dsub+0x5ba>
 8002a6e:	2f00      	cmp	r7, #0
 8002a70:	d100      	bne.n	8002a74 <__aeabi_dsub+0x3d8>
 8002a72:	e11e      	b.n	8002cb2 <__aeabi_dsub+0x616>
 8002a74:	465c      	mov	r4, fp
 8002a76:	4661      	mov	r1, ip
 8002a78:	4691      	mov	r9, r2
 8002a7a:	e72c      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002a7c:	4fa9      	ldr	r7, [pc, #676]	; (8002d24 <__aeabi_dsub+0x688>)
 8002a7e:	42be      	cmp	r6, r7
 8002a80:	d07b      	beq.n	8002b7a <__aeabi_dsub+0x4de>
 8002a82:	001e      	movs	r6, r3
 8002a84:	e6f1      	b.n	800286a <__aeabi_dsub+0x1ce>
 8002a86:	0010      	movs	r0, r2
 8002a88:	3d1f      	subs	r5, #31
 8002a8a:	40e8      	lsrs	r0, r5
 8002a8c:	2b20      	cmp	r3, #32
 8002a8e:	d003      	beq.n	8002a98 <__aeabi_dsub+0x3fc>
 8002a90:	2140      	movs	r1, #64	; 0x40
 8002a92:	1acb      	subs	r3, r1, r3
 8002a94:	409a      	lsls	r2, r3
 8002a96:	4316      	orrs	r6, r2
 8002a98:	1e73      	subs	r3, r6, #1
 8002a9a:	419e      	sbcs	r6, r3
 8002a9c:	2207      	movs	r2, #7
 8002a9e:	4306      	orrs	r6, r0
 8002aa0:	4032      	ands	r2, r6
 8002aa2:	2100      	movs	r1, #0
 8002aa4:	2500      	movs	r5, #0
 8002aa6:	e783      	b.n	80029b0 <__aeabi_dsub+0x314>
 8002aa8:	1a16      	subs	r6, r2, r0
 8002aaa:	4663      	mov	r3, ip
 8002aac:	42b2      	cmp	r2, r6
 8002aae:	4180      	sbcs	r0, r0
 8002ab0:	1a59      	subs	r1, r3, r1
 8002ab2:	4240      	negs	r0, r0
 8002ab4:	1a0b      	subs	r3, r1, r0
 8002ab6:	4698      	mov	r8, r3
 8002ab8:	465c      	mov	r4, fp
 8002aba:	e632      	b.n	8002722 <__aeabi_dsub+0x86>
 8002abc:	2e1f      	cmp	r6, #31
 8002abe:	dd00      	ble.n	8002ac2 <__aeabi_dsub+0x426>
 8002ac0:	e0ab      	b.n	8002c1a <__aeabi_dsub+0x57e>
 8002ac2:	2720      	movs	r7, #32
 8002ac4:	1bbb      	subs	r3, r7, r6
 8002ac6:	469a      	mov	sl, r3
 8002ac8:	4663      	mov	r3, ip
 8002aca:	4657      	mov	r7, sl
 8002acc:	40bb      	lsls	r3, r7
 8002ace:	4699      	mov	r9, r3
 8002ad0:	0013      	movs	r3, r2
 8002ad2:	464f      	mov	r7, r9
 8002ad4:	40f3      	lsrs	r3, r6
 8002ad6:	431f      	orrs	r7, r3
 8002ad8:	003b      	movs	r3, r7
 8002ada:	4657      	mov	r7, sl
 8002adc:	40ba      	lsls	r2, r7
 8002ade:	1e57      	subs	r7, r2, #1
 8002ae0:	41ba      	sbcs	r2, r7
 8002ae2:	4313      	orrs	r3, r2
 8002ae4:	4662      	mov	r2, ip
 8002ae6:	40f2      	lsrs	r2, r6
 8002ae8:	1889      	adds	r1, r1, r2
 8002aea:	e698      	b.n	800281e <__aeabi_dsub+0x182>
 8002aec:	2720      	movs	r7, #32
 8002aee:	1bbb      	subs	r3, r7, r6
 8002af0:	469a      	mov	sl, r3
 8002af2:	4663      	mov	r3, ip
 8002af4:	4657      	mov	r7, sl
 8002af6:	40bb      	lsls	r3, r7
 8002af8:	4699      	mov	r9, r3
 8002afa:	0013      	movs	r3, r2
 8002afc:	464f      	mov	r7, r9
 8002afe:	40f3      	lsrs	r3, r6
 8002b00:	431f      	orrs	r7, r3
 8002b02:	003b      	movs	r3, r7
 8002b04:	4657      	mov	r7, sl
 8002b06:	40ba      	lsls	r2, r7
 8002b08:	1e57      	subs	r7, r2, #1
 8002b0a:	41ba      	sbcs	r2, r7
 8002b0c:	4313      	orrs	r3, r2
 8002b0e:	4662      	mov	r2, ip
 8002b10:	40f2      	lsrs	r2, r6
 8002b12:	1a89      	subs	r1, r1, r2
 8002b14:	e79c      	b.n	8002a50 <__aeabi_dsub+0x3b4>
 8002b16:	4b83      	ldr	r3, [pc, #524]	; (8002d24 <__aeabi_dsub+0x688>)
 8002b18:	429f      	cmp	r7, r3
 8002b1a:	d05f      	beq.n	8002bdc <__aeabi_dsub+0x540>
 8002b1c:	2580      	movs	r5, #128	; 0x80
 8002b1e:	042d      	lsls	r5, r5, #16
 8002b20:	4273      	negs	r3, r6
 8002b22:	4329      	orrs	r1, r5
 8002b24:	e720      	b.n	8002968 <__aeabi_dsub+0x2cc>
 8002b26:	2e00      	cmp	r6, #0
 8002b28:	d10c      	bne.n	8002b44 <__aeabi_dsub+0x4a8>
 8002b2a:	2f00      	cmp	r7, #0
 8002b2c:	d100      	bne.n	8002b30 <__aeabi_dsub+0x494>
 8002b2e:	e0d0      	b.n	8002cd2 <__aeabi_dsub+0x636>
 8002b30:	465c      	mov	r4, fp
 8002b32:	4661      	mov	r1, ip
 8002b34:	4691      	mov	r9, r2
 8002b36:	4d7b      	ldr	r5, [pc, #492]	; (8002d24 <__aeabi_dsub+0x688>)
 8002b38:	e6cd      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002b3a:	4f7a      	ldr	r7, [pc, #488]	; (8002d24 <__aeabi_dsub+0x688>)
 8002b3c:	42be      	cmp	r6, r7
 8002b3e:	d01c      	beq.n	8002b7a <__aeabi_dsub+0x4de>
 8002b40:	001e      	movs	r6, r3
 8002b42:	e665      	b.n	8002810 <__aeabi_dsub+0x174>
 8002b44:	2f00      	cmp	r7, #0
 8002b46:	d018      	beq.n	8002b7a <__aeabi_dsub+0x4de>
 8002b48:	08c0      	lsrs	r0, r0, #3
 8002b4a:	074e      	lsls	r6, r1, #29
 8002b4c:	4306      	orrs	r6, r0
 8002b4e:	2080      	movs	r0, #128	; 0x80
 8002b50:	08c9      	lsrs	r1, r1, #3
 8002b52:	0300      	lsls	r0, r0, #12
 8002b54:	4201      	tst	r1, r0
 8002b56:	d008      	beq.n	8002b6a <__aeabi_dsub+0x4ce>
 8002b58:	4663      	mov	r3, ip
 8002b5a:	08dc      	lsrs	r4, r3, #3
 8002b5c:	4204      	tst	r4, r0
 8002b5e:	d104      	bne.n	8002b6a <__aeabi_dsub+0x4ce>
 8002b60:	0021      	movs	r1, r4
 8002b62:	46da      	mov	sl, fp
 8002b64:	08d2      	lsrs	r2, r2, #3
 8002b66:	075e      	lsls	r6, r3, #29
 8002b68:	4316      	orrs	r6, r2
 8002b6a:	00f3      	lsls	r3, r6, #3
 8002b6c:	4699      	mov	r9, r3
 8002b6e:	2401      	movs	r4, #1
 8002b70:	4653      	mov	r3, sl
 8002b72:	00c9      	lsls	r1, r1, #3
 8002b74:	0f72      	lsrs	r2, r6, #29
 8002b76:	4311      	orrs	r1, r2
 8002b78:	401c      	ands	r4, r3
 8002b7a:	4d6a      	ldr	r5, [pc, #424]	; (8002d24 <__aeabi_dsub+0x688>)
 8002b7c:	e6ab      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002b7e:	001d      	movs	r5, r3
 8002b80:	2200      	movs	r2, #0
 8002b82:	2700      	movs	r7, #0
 8002b84:	e6b4      	b.n	80028f0 <__aeabi_dsub+0x254>
 8002b86:	2d00      	cmp	r5, #0
 8002b88:	d159      	bne.n	8002c3e <__aeabi_dsub+0x5a2>
 8002b8a:	000b      	movs	r3, r1
 8002b8c:	4303      	orrs	r3, r0
 8002b8e:	d100      	bne.n	8002b92 <__aeabi_dsub+0x4f6>
 8002b90:	e6d6      	b.n	8002940 <__aeabi_dsub+0x2a4>
 8002b92:	1c73      	adds	r3, r6, #1
 8002b94:	d100      	bne.n	8002b98 <__aeabi_dsub+0x4fc>
 8002b96:	e0b2      	b.n	8002cfe <__aeabi_dsub+0x662>
 8002b98:	4b62      	ldr	r3, [pc, #392]	; (8002d24 <__aeabi_dsub+0x688>)
 8002b9a:	429f      	cmp	r7, r3
 8002b9c:	d01e      	beq.n	8002bdc <__aeabi_dsub+0x540>
 8002b9e:	43f3      	mvns	r3, r6
 8002ba0:	2b38      	cmp	r3, #56	; 0x38
 8002ba2:	dc6f      	bgt.n	8002c84 <__aeabi_dsub+0x5e8>
 8002ba4:	2b1f      	cmp	r3, #31
 8002ba6:	dd00      	ble.n	8002baa <__aeabi_dsub+0x50e>
 8002ba8:	e097      	b.n	8002cda <__aeabi_dsub+0x63e>
 8002baa:	2520      	movs	r5, #32
 8002bac:	000e      	movs	r6, r1
 8002bae:	1aed      	subs	r5, r5, r3
 8002bb0:	40ae      	lsls	r6, r5
 8002bb2:	46b0      	mov	r8, r6
 8002bb4:	0006      	movs	r6, r0
 8002bb6:	46aa      	mov	sl, r5
 8002bb8:	40de      	lsrs	r6, r3
 8002bba:	4645      	mov	r5, r8
 8002bbc:	4335      	orrs	r5, r6
 8002bbe:	002e      	movs	r6, r5
 8002bc0:	4655      	mov	r5, sl
 8002bc2:	40a8      	lsls	r0, r5
 8002bc4:	40d9      	lsrs	r1, r3
 8002bc6:	1e45      	subs	r5, r0, #1
 8002bc8:	41a8      	sbcs	r0, r5
 8002bca:	448c      	add	ip, r1
 8002bcc:	4306      	orrs	r6, r0
 8002bce:	18b6      	adds	r6, r6, r2
 8002bd0:	4296      	cmp	r6, r2
 8002bd2:	4192      	sbcs	r2, r2
 8002bd4:	4251      	negs	r1, r2
 8002bd6:	4461      	add	r1, ip
 8002bd8:	003d      	movs	r5, r7
 8002bda:	e625      	b.n	8002828 <__aeabi_dsub+0x18c>
 8002bdc:	003d      	movs	r5, r7
 8002bde:	4661      	mov	r1, ip
 8002be0:	4691      	mov	r9, r2
 8002be2:	e678      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002be4:	000b      	movs	r3, r1
 8002be6:	4303      	orrs	r3, r0
 8002be8:	2d00      	cmp	r5, #0
 8002bea:	d000      	beq.n	8002bee <__aeabi_dsub+0x552>
 8002bec:	e655      	b.n	800289a <__aeabi_dsub+0x1fe>
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d0f5      	beq.n	8002bde <__aeabi_dsub+0x542>
 8002bf2:	4663      	mov	r3, ip
 8002bf4:	4313      	orrs	r3, r2
 8002bf6:	d100      	bne.n	8002bfa <__aeabi_dsub+0x55e>
 8002bf8:	e66d      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002bfa:	1886      	adds	r6, r0, r2
 8002bfc:	4286      	cmp	r6, r0
 8002bfe:	4180      	sbcs	r0, r0
 8002c00:	4461      	add	r1, ip
 8002c02:	4240      	negs	r0, r0
 8002c04:	1809      	adds	r1, r1, r0
 8002c06:	2200      	movs	r2, #0
 8002c08:	020b      	lsls	r3, r1, #8
 8002c0a:	d400      	bmi.n	8002c0e <__aeabi_dsub+0x572>
 8002c0c:	e6d0      	b.n	80029b0 <__aeabi_dsub+0x314>
 8002c0e:	4b46      	ldr	r3, [pc, #280]	; (8002d28 <__aeabi_dsub+0x68c>)
 8002c10:	3501      	adds	r5, #1
 8002c12:	4019      	ands	r1, r3
 8002c14:	e5b2      	b.n	800277c <__aeabi_dsub+0xe0>
 8002c16:	46b1      	mov	r9, r6
 8002c18:	e65d      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002c1a:	0033      	movs	r3, r6
 8002c1c:	4667      	mov	r7, ip
 8002c1e:	3b20      	subs	r3, #32
 8002c20:	40df      	lsrs	r7, r3
 8002c22:	003b      	movs	r3, r7
 8002c24:	2e20      	cmp	r6, #32
 8002c26:	d005      	beq.n	8002c34 <__aeabi_dsub+0x598>
 8002c28:	2740      	movs	r7, #64	; 0x40
 8002c2a:	1bbf      	subs	r7, r7, r6
 8002c2c:	4666      	mov	r6, ip
 8002c2e:	40be      	lsls	r6, r7
 8002c30:	4332      	orrs	r2, r6
 8002c32:	4690      	mov	r8, r2
 8002c34:	4646      	mov	r6, r8
 8002c36:	1e72      	subs	r2, r6, #1
 8002c38:	4196      	sbcs	r6, r2
 8002c3a:	4333      	orrs	r3, r6
 8002c3c:	e5ef      	b.n	800281e <__aeabi_dsub+0x182>
 8002c3e:	4b39      	ldr	r3, [pc, #228]	; (8002d24 <__aeabi_dsub+0x688>)
 8002c40:	429f      	cmp	r7, r3
 8002c42:	d0cb      	beq.n	8002bdc <__aeabi_dsub+0x540>
 8002c44:	2580      	movs	r5, #128	; 0x80
 8002c46:	042d      	lsls	r5, r5, #16
 8002c48:	4273      	negs	r3, r6
 8002c4a:	4329      	orrs	r1, r5
 8002c4c:	e7a8      	b.n	8002ba0 <__aeabi_dsub+0x504>
 8002c4e:	4308      	orrs	r0, r1
 8002c50:	1e41      	subs	r1, r0, #1
 8002c52:	4188      	sbcs	r0, r1
 8002c54:	e6a2      	b.n	800299c <__aeabi_dsub+0x300>
 8002c56:	2f00      	cmp	r7, #0
 8002c58:	d100      	bne.n	8002c5c <__aeabi_dsub+0x5c0>
 8002c5a:	e63c      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002c5c:	4663      	mov	r3, ip
 8002c5e:	1a86      	subs	r6, r0, r2
 8002c60:	1acf      	subs	r7, r1, r3
 8002c62:	42b0      	cmp	r0, r6
 8002c64:	419b      	sbcs	r3, r3
 8002c66:	425b      	negs	r3, r3
 8002c68:	1afb      	subs	r3, r7, r3
 8002c6a:	4698      	mov	r8, r3
 8002c6c:	021b      	lsls	r3, r3, #8
 8002c6e:	d54e      	bpl.n	8002d0e <__aeabi_dsub+0x672>
 8002c70:	1a16      	subs	r6, r2, r0
 8002c72:	4663      	mov	r3, ip
 8002c74:	42b2      	cmp	r2, r6
 8002c76:	4192      	sbcs	r2, r2
 8002c78:	1a59      	subs	r1, r3, r1
 8002c7a:	4252      	negs	r2, r2
 8002c7c:	1a89      	subs	r1, r1, r2
 8002c7e:	465c      	mov	r4, fp
 8002c80:	2200      	movs	r2, #0
 8002c82:	e57b      	b.n	800277c <__aeabi_dsub+0xe0>
 8002c84:	4301      	orrs	r1, r0
 8002c86:	000e      	movs	r6, r1
 8002c88:	1e71      	subs	r1, r6, #1
 8002c8a:	418e      	sbcs	r6, r1
 8002c8c:	e79f      	b.n	8002bce <__aeabi_dsub+0x532>
 8002c8e:	001d      	movs	r5, r3
 8002c90:	000e      	movs	r6, r1
 8002c92:	3d20      	subs	r5, #32
 8002c94:	40ee      	lsrs	r6, r5
 8002c96:	46b0      	mov	r8, r6
 8002c98:	2b20      	cmp	r3, #32
 8002c9a:	d004      	beq.n	8002ca6 <__aeabi_dsub+0x60a>
 8002c9c:	2540      	movs	r5, #64	; 0x40
 8002c9e:	1aeb      	subs	r3, r5, r3
 8002ca0:	4099      	lsls	r1, r3
 8002ca2:	4308      	orrs	r0, r1
 8002ca4:	4681      	mov	r9, r0
 8002ca6:	4648      	mov	r0, r9
 8002ca8:	4643      	mov	r3, r8
 8002caa:	1e41      	subs	r1, r0, #1
 8002cac:	4188      	sbcs	r0, r1
 8002cae:	4318      	orrs	r0, r3
 8002cb0:	e674      	b.n	800299c <__aeabi_dsub+0x300>
 8002cb2:	2200      	movs	r2, #0
 8002cb4:	2400      	movs	r4, #0
 8002cb6:	e617      	b.n	80028e8 <__aeabi_dsub+0x24c>
 8002cb8:	1a16      	subs	r6, r2, r0
 8002cba:	4663      	mov	r3, ip
 8002cbc:	42b2      	cmp	r2, r6
 8002cbe:	4192      	sbcs	r2, r2
 8002cc0:	1a59      	subs	r1, r3, r1
 8002cc2:	4252      	negs	r2, r2
 8002cc4:	1a89      	subs	r1, r1, r2
 8002cc6:	003d      	movs	r5, r7
 8002cc8:	e525      	b.n	8002716 <__aeabi_dsub+0x7a>
 8002cca:	4661      	mov	r1, ip
 8002ccc:	4691      	mov	r9, r2
 8002cce:	4d15      	ldr	r5, [pc, #84]	; (8002d24 <__aeabi_dsub+0x688>)
 8002cd0:	e601      	b.n	80028d6 <__aeabi_dsub+0x23a>
 8002cd2:	2280      	movs	r2, #128	; 0x80
 8002cd4:	2400      	movs	r4, #0
 8002cd6:	0312      	lsls	r2, r2, #12
 8002cd8:	e679      	b.n	80029ce <__aeabi_dsub+0x332>
 8002cda:	001d      	movs	r5, r3
 8002cdc:	000e      	movs	r6, r1
 8002cde:	3d20      	subs	r5, #32
 8002ce0:	40ee      	lsrs	r6, r5
 8002ce2:	46b0      	mov	r8, r6
 8002ce4:	2b20      	cmp	r3, #32
 8002ce6:	d004      	beq.n	8002cf2 <__aeabi_dsub+0x656>
 8002ce8:	2540      	movs	r5, #64	; 0x40
 8002cea:	1aeb      	subs	r3, r5, r3
 8002cec:	4099      	lsls	r1, r3
 8002cee:	4308      	orrs	r0, r1
 8002cf0:	4681      	mov	r9, r0
 8002cf2:	464e      	mov	r6, r9
 8002cf4:	4643      	mov	r3, r8
 8002cf6:	1e71      	subs	r1, r6, #1
 8002cf8:	418e      	sbcs	r6, r1
 8002cfa:	431e      	orrs	r6, r3
 8002cfc:	e767      	b.n	8002bce <__aeabi_dsub+0x532>
 8002cfe:	1886      	adds	r6, r0, r2
 8002d00:	4296      	cmp	r6, r2
 8002d02:	419b      	sbcs	r3, r3
 8002d04:	4461      	add	r1, ip
 8002d06:	425b      	negs	r3, r3
 8002d08:	18c9      	adds	r1, r1, r3
 8002d0a:	003d      	movs	r5, r7
 8002d0c:	e58c      	b.n	8002828 <__aeabi_dsub+0x18c>
 8002d0e:	4647      	mov	r7, r8
 8002d10:	4337      	orrs	r7, r6
 8002d12:	d0ce      	beq.n	8002cb2 <__aeabi_dsub+0x616>
 8002d14:	2207      	movs	r2, #7
 8002d16:	4641      	mov	r1, r8
 8002d18:	4032      	ands	r2, r6
 8002d1a:	e649      	b.n	80029b0 <__aeabi_dsub+0x314>
 8002d1c:	2700      	movs	r7, #0
 8002d1e:	003a      	movs	r2, r7
 8002d20:	e5e6      	b.n	80028f0 <__aeabi_dsub+0x254>
 8002d22:	46c0      	nop			; (mov r8, r8)
 8002d24:	000007ff 	.word	0x000007ff
 8002d28:	ff7fffff 	.word	0xff7fffff

08002d2c <__aeabi_dcmpun>:
 8002d2c:	b570      	push	{r4, r5, r6, lr}
 8002d2e:	4e0c      	ldr	r6, [pc, #48]	; (8002d60 <__aeabi_dcmpun+0x34>)
 8002d30:	030d      	lsls	r5, r1, #12
 8002d32:	031c      	lsls	r4, r3, #12
 8002d34:	0049      	lsls	r1, r1, #1
 8002d36:	005b      	lsls	r3, r3, #1
 8002d38:	0b2d      	lsrs	r5, r5, #12
 8002d3a:	0d49      	lsrs	r1, r1, #21
 8002d3c:	0b24      	lsrs	r4, r4, #12
 8002d3e:	0d5b      	lsrs	r3, r3, #21
 8002d40:	42b1      	cmp	r1, r6
 8002d42:	d008      	beq.n	8002d56 <__aeabi_dcmpun+0x2a>
 8002d44:	4906      	ldr	r1, [pc, #24]	; (8002d60 <__aeabi_dcmpun+0x34>)
 8002d46:	2000      	movs	r0, #0
 8002d48:	428b      	cmp	r3, r1
 8002d4a:	d103      	bne.n	8002d54 <__aeabi_dcmpun+0x28>
 8002d4c:	4314      	orrs	r4, r2
 8002d4e:	0020      	movs	r0, r4
 8002d50:	1e44      	subs	r4, r0, #1
 8002d52:	41a0      	sbcs	r0, r4
 8002d54:	bd70      	pop	{r4, r5, r6, pc}
 8002d56:	4305      	orrs	r5, r0
 8002d58:	2001      	movs	r0, #1
 8002d5a:	2d00      	cmp	r5, #0
 8002d5c:	d1fa      	bne.n	8002d54 <__aeabi_dcmpun+0x28>
 8002d5e:	e7f1      	b.n	8002d44 <__aeabi_dcmpun+0x18>
 8002d60:	000007ff 	.word	0x000007ff

08002d64 <__aeabi_d2iz>:
 8002d64:	b530      	push	{r4, r5, lr}
 8002d66:	4d14      	ldr	r5, [pc, #80]	; (8002db8 <__aeabi_d2iz+0x54>)
 8002d68:	030a      	lsls	r2, r1, #12
 8002d6a:	004b      	lsls	r3, r1, #1
 8002d6c:	0b12      	lsrs	r2, r2, #12
 8002d6e:	0d5b      	lsrs	r3, r3, #21
 8002d70:	0fc9      	lsrs	r1, r1, #31
 8002d72:	2400      	movs	r4, #0
 8002d74:	42ab      	cmp	r3, r5
 8002d76:	dd11      	ble.n	8002d9c <__aeabi_d2iz+0x38>
 8002d78:	4c10      	ldr	r4, [pc, #64]	; (8002dbc <__aeabi_d2iz+0x58>)
 8002d7a:	42a3      	cmp	r3, r4
 8002d7c:	dc10      	bgt.n	8002da0 <__aeabi_d2iz+0x3c>
 8002d7e:	2480      	movs	r4, #128	; 0x80
 8002d80:	0364      	lsls	r4, r4, #13
 8002d82:	4322      	orrs	r2, r4
 8002d84:	4c0e      	ldr	r4, [pc, #56]	; (8002dc0 <__aeabi_d2iz+0x5c>)
 8002d86:	1ae4      	subs	r4, r4, r3
 8002d88:	2c1f      	cmp	r4, #31
 8002d8a:	dd0c      	ble.n	8002da6 <__aeabi_d2iz+0x42>
 8002d8c:	480d      	ldr	r0, [pc, #52]	; (8002dc4 <__aeabi_d2iz+0x60>)
 8002d8e:	1ac3      	subs	r3, r0, r3
 8002d90:	40da      	lsrs	r2, r3
 8002d92:	0013      	movs	r3, r2
 8002d94:	425c      	negs	r4, r3
 8002d96:	2900      	cmp	r1, #0
 8002d98:	d100      	bne.n	8002d9c <__aeabi_d2iz+0x38>
 8002d9a:	001c      	movs	r4, r3
 8002d9c:	0020      	movs	r0, r4
 8002d9e:	bd30      	pop	{r4, r5, pc}
 8002da0:	4b09      	ldr	r3, [pc, #36]	; (8002dc8 <__aeabi_d2iz+0x64>)
 8002da2:	18cc      	adds	r4, r1, r3
 8002da4:	e7fa      	b.n	8002d9c <__aeabi_d2iz+0x38>
 8002da6:	4d09      	ldr	r5, [pc, #36]	; (8002dcc <__aeabi_d2iz+0x68>)
 8002da8:	40e0      	lsrs	r0, r4
 8002daa:	46ac      	mov	ip, r5
 8002dac:	4463      	add	r3, ip
 8002dae:	409a      	lsls	r2, r3
 8002db0:	0013      	movs	r3, r2
 8002db2:	4303      	orrs	r3, r0
 8002db4:	e7ee      	b.n	8002d94 <__aeabi_d2iz+0x30>
 8002db6:	46c0      	nop			; (mov r8, r8)
 8002db8:	000003fe 	.word	0x000003fe
 8002dbc:	0000041d 	.word	0x0000041d
 8002dc0:	00000433 	.word	0x00000433
 8002dc4:	00000413 	.word	0x00000413
 8002dc8:	7fffffff 	.word	0x7fffffff
 8002dcc:	fffffbed 	.word	0xfffffbed

08002dd0 <__aeabi_i2d>:
 8002dd0:	b570      	push	{r4, r5, r6, lr}
 8002dd2:	2800      	cmp	r0, #0
 8002dd4:	d02d      	beq.n	8002e32 <__aeabi_i2d+0x62>
 8002dd6:	17c3      	asrs	r3, r0, #31
 8002dd8:	18c5      	adds	r5, r0, r3
 8002dda:	405d      	eors	r5, r3
 8002ddc:	0fc4      	lsrs	r4, r0, #31
 8002dde:	0028      	movs	r0, r5
 8002de0:	f7fd fb92 	bl	8000508 <__clzsi2>
 8002de4:	4b15      	ldr	r3, [pc, #84]	; (8002e3c <__aeabi_i2d+0x6c>)
 8002de6:	1a1b      	subs	r3, r3, r0
 8002de8:	055b      	lsls	r3, r3, #21
 8002dea:	0d5b      	lsrs	r3, r3, #21
 8002dec:	280a      	cmp	r0, #10
 8002dee:	dd15      	ble.n	8002e1c <__aeabi_i2d+0x4c>
 8002df0:	380b      	subs	r0, #11
 8002df2:	4085      	lsls	r5, r0
 8002df4:	2200      	movs	r2, #0
 8002df6:	032d      	lsls	r5, r5, #12
 8002df8:	0b2d      	lsrs	r5, r5, #12
 8002dfa:	2100      	movs	r1, #0
 8002dfc:	0010      	movs	r0, r2
 8002dfe:	032d      	lsls	r5, r5, #12
 8002e00:	0d0a      	lsrs	r2, r1, #20
 8002e02:	0b2d      	lsrs	r5, r5, #12
 8002e04:	0512      	lsls	r2, r2, #20
 8002e06:	432a      	orrs	r2, r5
 8002e08:	4d0d      	ldr	r5, [pc, #52]	; (8002e40 <__aeabi_i2d+0x70>)
 8002e0a:	051b      	lsls	r3, r3, #20
 8002e0c:	402a      	ands	r2, r5
 8002e0e:	4313      	orrs	r3, r2
 8002e10:	005b      	lsls	r3, r3, #1
 8002e12:	07e4      	lsls	r4, r4, #31
 8002e14:	085b      	lsrs	r3, r3, #1
 8002e16:	4323      	orrs	r3, r4
 8002e18:	0019      	movs	r1, r3
 8002e1a:	bd70      	pop	{r4, r5, r6, pc}
 8002e1c:	0002      	movs	r2, r0
 8002e1e:	0029      	movs	r1, r5
 8002e20:	3215      	adds	r2, #21
 8002e22:	4091      	lsls	r1, r2
 8002e24:	000a      	movs	r2, r1
 8002e26:	210b      	movs	r1, #11
 8002e28:	1a08      	subs	r0, r1, r0
 8002e2a:	40c5      	lsrs	r5, r0
 8002e2c:	032d      	lsls	r5, r5, #12
 8002e2e:	0b2d      	lsrs	r5, r5, #12
 8002e30:	e7e3      	b.n	8002dfa <__aeabi_i2d+0x2a>
 8002e32:	2400      	movs	r4, #0
 8002e34:	2300      	movs	r3, #0
 8002e36:	2500      	movs	r5, #0
 8002e38:	2200      	movs	r2, #0
 8002e3a:	e7de      	b.n	8002dfa <__aeabi_i2d+0x2a>
 8002e3c:	0000041e 	.word	0x0000041e
 8002e40:	800fffff 	.word	0x800fffff

08002e44 <__aeabi_ui2d>:
 8002e44:	b510      	push	{r4, lr}
 8002e46:	1e04      	subs	r4, r0, #0
 8002e48:	d025      	beq.n	8002e96 <__aeabi_ui2d+0x52>
 8002e4a:	f7fd fb5d 	bl	8000508 <__clzsi2>
 8002e4e:	4b14      	ldr	r3, [pc, #80]	; (8002ea0 <__aeabi_ui2d+0x5c>)
 8002e50:	1a1b      	subs	r3, r3, r0
 8002e52:	055b      	lsls	r3, r3, #21
 8002e54:	0d5b      	lsrs	r3, r3, #21
 8002e56:	280a      	cmp	r0, #10
 8002e58:	dd12      	ble.n	8002e80 <__aeabi_ui2d+0x3c>
 8002e5a:	380b      	subs	r0, #11
 8002e5c:	4084      	lsls	r4, r0
 8002e5e:	2200      	movs	r2, #0
 8002e60:	0324      	lsls	r4, r4, #12
 8002e62:	0b24      	lsrs	r4, r4, #12
 8002e64:	2100      	movs	r1, #0
 8002e66:	0010      	movs	r0, r2
 8002e68:	0324      	lsls	r4, r4, #12
 8002e6a:	0d0a      	lsrs	r2, r1, #20
 8002e6c:	0b24      	lsrs	r4, r4, #12
 8002e6e:	0512      	lsls	r2, r2, #20
 8002e70:	4322      	orrs	r2, r4
 8002e72:	4c0c      	ldr	r4, [pc, #48]	; (8002ea4 <__aeabi_ui2d+0x60>)
 8002e74:	051b      	lsls	r3, r3, #20
 8002e76:	4022      	ands	r2, r4
 8002e78:	4313      	orrs	r3, r2
 8002e7a:	005b      	lsls	r3, r3, #1
 8002e7c:	0859      	lsrs	r1, r3, #1
 8002e7e:	bd10      	pop	{r4, pc}
 8002e80:	0002      	movs	r2, r0
 8002e82:	0021      	movs	r1, r4
 8002e84:	3215      	adds	r2, #21
 8002e86:	4091      	lsls	r1, r2
 8002e88:	000a      	movs	r2, r1
 8002e8a:	210b      	movs	r1, #11
 8002e8c:	1a08      	subs	r0, r1, r0
 8002e8e:	40c4      	lsrs	r4, r0
 8002e90:	0324      	lsls	r4, r4, #12
 8002e92:	0b24      	lsrs	r4, r4, #12
 8002e94:	e7e6      	b.n	8002e64 <__aeabi_ui2d+0x20>
 8002e96:	2300      	movs	r3, #0
 8002e98:	2400      	movs	r4, #0
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	e7e2      	b.n	8002e64 <__aeabi_ui2d+0x20>
 8002e9e:	46c0      	nop			; (mov r8, r8)
 8002ea0:	0000041e 	.word	0x0000041e
 8002ea4:	800fffff 	.word	0x800fffff

08002ea8 <__aeabi_f2d>:
 8002ea8:	0041      	lsls	r1, r0, #1
 8002eaa:	0e09      	lsrs	r1, r1, #24
 8002eac:	1c4b      	adds	r3, r1, #1
 8002eae:	b570      	push	{r4, r5, r6, lr}
 8002eb0:	b2db      	uxtb	r3, r3
 8002eb2:	0246      	lsls	r6, r0, #9
 8002eb4:	0a75      	lsrs	r5, r6, #9
 8002eb6:	0fc4      	lsrs	r4, r0, #31
 8002eb8:	2b01      	cmp	r3, #1
 8002eba:	dd14      	ble.n	8002ee6 <__aeabi_f2d+0x3e>
 8002ebc:	23e0      	movs	r3, #224	; 0xe0
 8002ebe:	009b      	lsls	r3, r3, #2
 8002ec0:	076d      	lsls	r5, r5, #29
 8002ec2:	0b36      	lsrs	r6, r6, #12
 8002ec4:	18cb      	adds	r3, r1, r3
 8002ec6:	2100      	movs	r1, #0
 8002ec8:	0d0a      	lsrs	r2, r1, #20
 8002eca:	0028      	movs	r0, r5
 8002ecc:	0512      	lsls	r2, r2, #20
 8002ece:	4d1c      	ldr	r5, [pc, #112]	; (8002f40 <__aeabi_f2d+0x98>)
 8002ed0:	4332      	orrs	r2, r6
 8002ed2:	055b      	lsls	r3, r3, #21
 8002ed4:	402a      	ands	r2, r5
 8002ed6:	085b      	lsrs	r3, r3, #1
 8002ed8:	4313      	orrs	r3, r2
 8002eda:	005b      	lsls	r3, r3, #1
 8002edc:	07e4      	lsls	r4, r4, #31
 8002ede:	085b      	lsrs	r3, r3, #1
 8002ee0:	4323      	orrs	r3, r4
 8002ee2:	0019      	movs	r1, r3
 8002ee4:	bd70      	pop	{r4, r5, r6, pc}
 8002ee6:	2900      	cmp	r1, #0
 8002ee8:	d114      	bne.n	8002f14 <__aeabi_f2d+0x6c>
 8002eea:	2d00      	cmp	r5, #0
 8002eec:	d01e      	beq.n	8002f2c <__aeabi_f2d+0x84>
 8002eee:	0028      	movs	r0, r5
 8002ef0:	f7fd fb0a 	bl	8000508 <__clzsi2>
 8002ef4:	280a      	cmp	r0, #10
 8002ef6:	dc1c      	bgt.n	8002f32 <__aeabi_f2d+0x8a>
 8002ef8:	230b      	movs	r3, #11
 8002efa:	002a      	movs	r2, r5
 8002efc:	1a1b      	subs	r3, r3, r0
 8002efe:	40da      	lsrs	r2, r3
 8002f00:	0003      	movs	r3, r0
 8002f02:	3315      	adds	r3, #21
 8002f04:	409d      	lsls	r5, r3
 8002f06:	4b0f      	ldr	r3, [pc, #60]	; (8002f44 <__aeabi_f2d+0x9c>)
 8002f08:	0312      	lsls	r2, r2, #12
 8002f0a:	1a1b      	subs	r3, r3, r0
 8002f0c:	055b      	lsls	r3, r3, #21
 8002f0e:	0b16      	lsrs	r6, r2, #12
 8002f10:	0d5b      	lsrs	r3, r3, #21
 8002f12:	e7d8      	b.n	8002ec6 <__aeabi_f2d+0x1e>
 8002f14:	2d00      	cmp	r5, #0
 8002f16:	d006      	beq.n	8002f26 <__aeabi_f2d+0x7e>
 8002f18:	0b32      	lsrs	r2, r6, #12
 8002f1a:	2680      	movs	r6, #128	; 0x80
 8002f1c:	0336      	lsls	r6, r6, #12
 8002f1e:	076d      	lsls	r5, r5, #29
 8002f20:	4316      	orrs	r6, r2
 8002f22:	4b09      	ldr	r3, [pc, #36]	; (8002f48 <__aeabi_f2d+0xa0>)
 8002f24:	e7cf      	b.n	8002ec6 <__aeabi_f2d+0x1e>
 8002f26:	4b08      	ldr	r3, [pc, #32]	; (8002f48 <__aeabi_f2d+0xa0>)
 8002f28:	2600      	movs	r6, #0
 8002f2a:	e7cc      	b.n	8002ec6 <__aeabi_f2d+0x1e>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	2600      	movs	r6, #0
 8002f30:	e7c9      	b.n	8002ec6 <__aeabi_f2d+0x1e>
 8002f32:	0003      	movs	r3, r0
 8002f34:	002a      	movs	r2, r5
 8002f36:	3b0b      	subs	r3, #11
 8002f38:	409a      	lsls	r2, r3
 8002f3a:	2500      	movs	r5, #0
 8002f3c:	e7e3      	b.n	8002f06 <__aeabi_f2d+0x5e>
 8002f3e:	46c0      	nop			; (mov r8, r8)
 8002f40:	800fffff 	.word	0x800fffff
 8002f44:	00000389 	.word	0x00000389
 8002f48:	000007ff 	.word	0x000007ff

08002f4c <__aeabi_d2f>:
 8002f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f4e:	004c      	lsls	r4, r1, #1
 8002f50:	0d64      	lsrs	r4, r4, #21
 8002f52:	030b      	lsls	r3, r1, #12
 8002f54:	1c62      	adds	r2, r4, #1
 8002f56:	0a5b      	lsrs	r3, r3, #9
 8002f58:	0f46      	lsrs	r6, r0, #29
 8002f5a:	0552      	lsls	r2, r2, #21
 8002f5c:	0fc9      	lsrs	r1, r1, #31
 8002f5e:	431e      	orrs	r6, r3
 8002f60:	00c5      	lsls	r5, r0, #3
 8002f62:	0d52      	lsrs	r2, r2, #21
 8002f64:	2a01      	cmp	r2, #1
 8002f66:	dd29      	ble.n	8002fbc <__aeabi_d2f+0x70>
 8002f68:	4b37      	ldr	r3, [pc, #220]	; (8003048 <__aeabi_d2f+0xfc>)
 8002f6a:	18e7      	adds	r7, r4, r3
 8002f6c:	2ffe      	cmp	r7, #254	; 0xfe
 8002f6e:	dc1c      	bgt.n	8002faa <__aeabi_d2f+0x5e>
 8002f70:	2f00      	cmp	r7, #0
 8002f72:	dd3b      	ble.n	8002fec <__aeabi_d2f+0xa0>
 8002f74:	0180      	lsls	r0, r0, #6
 8002f76:	1e43      	subs	r3, r0, #1
 8002f78:	4198      	sbcs	r0, r3
 8002f7a:	2207      	movs	r2, #7
 8002f7c:	00f3      	lsls	r3, r6, #3
 8002f7e:	0f6d      	lsrs	r5, r5, #29
 8002f80:	4303      	orrs	r3, r0
 8002f82:	432b      	orrs	r3, r5
 8002f84:	401a      	ands	r2, r3
 8002f86:	2a00      	cmp	r2, #0
 8002f88:	d004      	beq.n	8002f94 <__aeabi_d2f+0x48>
 8002f8a:	220f      	movs	r2, #15
 8002f8c:	401a      	ands	r2, r3
 8002f8e:	2a04      	cmp	r2, #4
 8002f90:	d000      	beq.n	8002f94 <__aeabi_d2f+0x48>
 8002f92:	3304      	adds	r3, #4
 8002f94:	2280      	movs	r2, #128	; 0x80
 8002f96:	04d2      	lsls	r2, r2, #19
 8002f98:	401a      	ands	r2, r3
 8002f9a:	d024      	beq.n	8002fe6 <__aeabi_d2f+0x9a>
 8002f9c:	3701      	adds	r7, #1
 8002f9e:	b2fa      	uxtb	r2, r7
 8002fa0:	2fff      	cmp	r7, #255	; 0xff
 8002fa2:	d002      	beq.n	8002faa <__aeabi_d2f+0x5e>
 8002fa4:	019b      	lsls	r3, r3, #6
 8002fa6:	0a58      	lsrs	r0, r3, #9
 8002fa8:	e001      	b.n	8002fae <__aeabi_d2f+0x62>
 8002faa:	22ff      	movs	r2, #255	; 0xff
 8002fac:	2000      	movs	r0, #0
 8002fae:	0240      	lsls	r0, r0, #9
 8002fb0:	05d2      	lsls	r2, r2, #23
 8002fb2:	0a40      	lsrs	r0, r0, #9
 8002fb4:	07c9      	lsls	r1, r1, #31
 8002fb6:	4310      	orrs	r0, r2
 8002fb8:	4308      	orrs	r0, r1
 8002fba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002fbc:	4335      	orrs	r5, r6
 8002fbe:	2c00      	cmp	r4, #0
 8002fc0:	d104      	bne.n	8002fcc <__aeabi_d2f+0x80>
 8002fc2:	2d00      	cmp	r5, #0
 8002fc4:	d10a      	bne.n	8002fdc <__aeabi_d2f+0x90>
 8002fc6:	2200      	movs	r2, #0
 8002fc8:	2000      	movs	r0, #0
 8002fca:	e7f0      	b.n	8002fae <__aeabi_d2f+0x62>
 8002fcc:	2d00      	cmp	r5, #0
 8002fce:	d0ec      	beq.n	8002faa <__aeabi_d2f+0x5e>
 8002fd0:	2080      	movs	r0, #128	; 0x80
 8002fd2:	03c0      	lsls	r0, r0, #15
 8002fd4:	4330      	orrs	r0, r6
 8002fd6:	22ff      	movs	r2, #255	; 0xff
 8002fd8:	e7e9      	b.n	8002fae <__aeabi_d2f+0x62>
 8002fda:	2400      	movs	r4, #0
 8002fdc:	2300      	movs	r3, #0
 8002fde:	025b      	lsls	r3, r3, #9
 8002fe0:	0a58      	lsrs	r0, r3, #9
 8002fe2:	b2e2      	uxtb	r2, r4
 8002fe4:	e7e3      	b.n	8002fae <__aeabi_d2f+0x62>
 8002fe6:	08db      	lsrs	r3, r3, #3
 8002fe8:	003c      	movs	r4, r7
 8002fea:	e7f8      	b.n	8002fde <__aeabi_d2f+0x92>
 8002fec:	003b      	movs	r3, r7
 8002fee:	3317      	adds	r3, #23
 8002ff0:	dbf3      	blt.n	8002fda <__aeabi_d2f+0x8e>
 8002ff2:	2380      	movs	r3, #128	; 0x80
 8002ff4:	041b      	lsls	r3, r3, #16
 8002ff6:	4333      	orrs	r3, r6
 8002ff8:	261e      	movs	r6, #30
 8002ffa:	1bf6      	subs	r6, r6, r7
 8002ffc:	2e1f      	cmp	r6, #31
 8002ffe:	dd14      	ble.n	800302a <__aeabi_d2f+0xde>
 8003000:	2202      	movs	r2, #2
 8003002:	4252      	negs	r2, r2
 8003004:	1bd7      	subs	r7, r2, r7
 8003006:	001a      	movs	r2, r3
 8003008:	40fa      	lsrs	r2, r7
 800300a:	0017      	movs	r7, r2
 800300c:	2e20      	cmp	r6, #32
 800300e:	d004      	beq.n	800301a <__aeabi_d2f+0xce>
 8003010:	4a0e      	ldr	r2, [pc, #56]	; (800304c <__aeabi_d2f+0x100>)
 8003012:	4694      	mov	ip, r2
 8003014:	4464      	add	r4, ip
 8003016:	40a3      	lsls	r3, r4
 8003018:	431d      	orrs	r5, r3
 800301a:	002b      	movs	r3, r5
 800301c:	1e5d      	subs	r5, r3, #1
 800301e:	41ab      	sbcs	r3, r5
 8003020:	2207      	movs	r2, #7
 8003022:	433b      	orrs	r3, r7
 8003024:	401a      	ands	r2, r3
 8003026:	2700      	movs	r7, #0
 8003028:	e7ad      	b.n	8002f86 <__aeabi_d2f+0x3a>
 800302a:	4a09      	ldr	r2, [pc, #36]	; (8003050 <__aeabi_d2f+0x104>)
 800302c:	0028      	movs	r0, r5
 800302e:	18a2      	adds	r2, r4, r2
 8003030:	4095      	lsls	r5, r2
 8003032:	4093      	lsls	r3, r2
 8003034:	1e6c      	subs	r4, r5, #1
 8003036:	41a5      	sbcs	r5, r4
 8003038:	40f0      	lsrs	r0, r6
 800303a:	2207      	movs	r2, #7
 800303c:	432b      	orrs	r3, r5
 800303e:	4303      	orrs	r3, r0
 8003040:	401a      	ands	r2, r3
 8003042:	2700      	movs	r7, #0
 8003044:	e79f      	b.n	8002f86 <__aeabi_d2f+0x3a>
 8003046:	46c0      	nop			; (mov r8, r8)
 8003048:	fffffc80 	.word	0xfffffc80
 800304c:	fffffca2 	.word	0xfffffca2
 8003050:	fffffc82 	.word	0xfffffc82

08003054 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8003054:	b580      	push	{r7, lr}
 8003056:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN 1 */
	initialise_monitor_handles();
 8003058:	f006 f8b0 	bl	80091bc <initialise_monitor_handles>
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800305c:	f003 fca6 	bl	80069ac <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8003060:	f000 fcac 	bl	80039bc <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8003064:	f000 fe5e 	bl	8003d24 <MX_GPIO_Init>
	MX_RTC_Init();
 8003068:	f000 fd84 	bl	8003b74 <MX_RTC_Init>
	MX_SPI1_Init();
 800306c:	f000 fe22 	bl	8003cb4 <MX_SPI1_Init>
	MX_ADC_Init();
 8003070:	f000 fd1a 	bl	8003aa8 <MX_ADC_Init>
	/* USER CODE BEGIN 2 */

	HAL_ADC_Start(&hadc);
 8003074:	4b03      	ldr	r3, [pc, #12]	; (8003084 <main+0x30>)
 8003076:	0018      	movs	r0, r3
 8003078:	f003 fe6c 	bl	8006d54 <HAL_ADC_Start>

		/* USER CODE BEGIN 3 */

		//analyze_sound_temporal();
		//analyze_sound_temporal_mag();
		analyze_sound_spectrogram();
 800307c:	f000 f804 	bl	8003088 <analyze_sound_spectrogram>
 8003080:	e7fc      	b.n	800307c <main+0x28>
 8003082:	46c0      	nop			; (mov r8, r8)
 8003084:	200042b4 	.word	0x200042b4

08003088 <analyze_sound_spectrogram>:
	printf("\n");

}

void analyze_sound_spectrogram(void)
{
 8003088:	b590      	push	{r4, r7, lr}
 800308a:	b085      	sub	sp, #20
 800308c:	af02      	add	r7, sp, #8
	t_bunch = HAL_GetTick();
 800308e:	f003 fce3 	bl	8006a58 <HAL_GetTick>
 8003092:	0002      	movs	r2, r0
 8003094:	4b78      	ldr	r3, [pc, #480]	; (8003278 <analyze_sound_spectrogram+0x1f0>)
 8003096:	601a      	str	r2, [r3, #0]

	num_freq_table = 0;
 8003098:	4b78      	ldr	r3, [pc, #480]	; (800327c <analyze_sound_spectrogram+0x1f4>)
 800309a:	2200      	movs	r2, #0
 800309c:	601a      	str	r2, [r3, #0]

	for (num_sample_bunch=0; num_sample_bunch<BUNCH_SAMPLE_SIZE; num_sample_bunch++) {
 800309e:	4b78      	ldr	r3, [pc, #480]	; (8003280 <analyze_sound_spectrogram+0x1f8>)
 80030a0:	2200      	movs	r2, #0
 80030a2:	601a      	str	r2, [r3, #0]
 80030a4:	e0a9      	b.n	80031fa <analyze_sound_spectrogram+0x172>

		t_acq = HAL_GetTick();
 80030a6:	f003 fcd7 	bl	8006a58 <HAL_GetTick>
 80030aa:	0002      	movs	r2, r0
 80030ac:	4b75      	ldr	r3, [pc, #468]	; (8003284 <analyze_sound_spectrogram+0x1fc>)
 80030ae:	601a      	str	r2, [r3, #0]

		for (i=0; i<2*FFT_SIZE; i+=2) {
 80030b0:	4b75      	ldr	r3, [pc, #468]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80030b2:	2200      	movs	r2, #0
 80030b4:	601a      	str	r2, [r3, #0]
 80030b6:	e029      	b.n	800310c <analyze_sound_spectrogram+0x84>
			HAL_ADC_PollForConversion(&hadc, 1000);
 80030b8:	23fa      	movs	r3, #250	; 0xfa
 80030ba:	009a      	lsls	r2, r3, #2
 80030bc:	4b73      	ldr	r3, [pc, #460]	; (800328c <analyze_sound_spectrogram+0x204>)
 80030be:	0011      	movs	r1, r2
 80030c0:	0018      	movs	r0, r3
 80030c2:	f003 fe9b 	bl	8006dfc <HAL_ADC_PollForConversion>
			samples[i] = HAL_ADC_GetValue(&hadc);
 80030c6:	4b71      	ldr	r3, [pc, #452]	; (800328c <analyze_sound_spectrogram+0x204>)
 80030c8:	0018      	movs	r0, r3
 80030ca:	f003 ff2d 	bl	8006f28 <HAL_ADC_GetValue>
 80030ce:	0002      	movs	r2, r0
 80030d0:	4b6d      	ldr	r3, [pc, #436]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80030d2:	681c      	ldr	r4, [r3, #0]
 80030d4:	0010      	movs	r0, r2
 80030d6:	f7fe f909 	bl	80012ec <__aeabi_ui2f>
 80030da:	1c01      	adds	r1, r0, #0
 80030dc:	4b6c      	ldr	r3, [pc, #432]	; (8003290 <analyze_sound_spectrogram+0x208>)
 80030de:	00a2      	lsls	r2, r4, #2
 80030e0:	50d1      	str	r1, [r2, r3]
			samples[i+1] = 0;
 80030e2:	4b69      	ldr	r3, [pc, #420]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	1c5a      	adds	r2, r3, #1
 80030e8:	4b69      	ldr	r3, [pc, #420]	; (8003290 <analyze_sound_spectrogram+0x208>)
 80030ea:	0092      	lsls	r2, r2, #2
 80030ec:	2100      	movs	r1, #0
 80030ee:	50d1      	str	r1, [r2, r3]
			//t = HAL_GetTick();
			for (int j=0; j<48; j++); // j<90 if SAMPLE_RATE = 20000, j<48 if SAMPLE_RATE = 30000
 80030f0:	2300      	movs	r3, #0
 80030f2:	607b      	str	r3, [r7, #4]
 80030f4:	e002      	b.n	80030fc <analyze_sound_spectrogram+0x74>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	3301      	adds	r3, #1
 80030fa:	607b      	str	r3, [r7, #4]
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	2b2f      	cmp	r3, #47	; 0x2f
 8003100:	ddf9      	ble.n	80030f6 <analyze_sound_spectrogram+0x6e>
		for (i=0; i<2*FFT_SIZE; i+=2) {
 8003102:	4b61      	ldr	r3, [pc, #388]	; (8003288 <analyze_sound_spectrogram+0x200>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	1c9a      	adds	r2, r3, #2
 8003108:	4b5f      	ldr	r3, [pc, #380]	; (8003288 <analyze_sound_spectrogram+0x200>)
 800310a:	601a      	str	r2, [r3, #0]
 800310c:	4b5e      	ldr	r3, [pc, #376]	; (8003288 <analyze_sound_spectrogram+0x200>)
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	2bff      	cmp	r3, #255	; 0xff
 8003112:	d9d1      	bls.n	80030b8 <analyze_sound_spectrogram+0x30>
		}

		t_acq = HAL_GetTick() - t_acq;
 8003114:	f003 fca0 	bl	8006a58 <HAL_GetTick>
 8003118:	0002      	movs	r2, r0
 800311a:	4b5a      	ldr	r3, [pc, #360]	; (8003284 <analyze_sound_spectrogram+0x1fc>)
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	1ad2      	subs	r2, r2, r3
 8003120:	4b58      	ldr	r3, [pc, #352]	; (8003284 <analyze_sound_spectrogram+0x1fc>)
 8003122:	601a      	str	r2, [r3, #0]
			  printf("%1.0f ", samples[i]);
		  }
		  printf("\n");
		 */

		t_fft = HAL_GetTick();
 8003124:	f003 fc98 	bl	8006a58 <HAL_GetTick>
 8003128:	0002      	movs	r2, r0
 800312a:	4b5a      	ldr	r3, [pc, #360]	; (8003294 <analyze_sound_spectrogram+0x20c>)
 800312c:	601a      	str	r2, [r3, #0]

		t_getfft = HAL_GetTick();
 800312e:	f003 fc93 	bl	8006a58 <HAL_GetTick>
 8003132:	0002      	movs	r2, r0
 8003134:	4b58      	ldr	r3, [pc, #352]	; (8003298 <analyze_sound_spectrogram+0x210>)
 8003136:	601a      	str	r2, [r3, #0]
		Get_arm_fft();
 8003138:	f000 fea8 	bl	8003e8c <Get_arm_fft>
		t_getfft = HAL_GetTick() - t_getfft;
 800313c:	f003 fc8c 	bl	8006a58 <HAL_GetTick>
 8003140:	0002      	movs	r2, r0
 8003142:	4b55      	ldr	r3, [pc, #340]	; (8003298 <analyze_sound_spectrogram+0x210>)
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	1ad2      	subs	r2, r2, r3
 8003148:	4b53      	ldr	r3, [pc, #332]	; (8003298 <analyze_sound_spectrogram+0x210>)
 800314a:	601a      	str	r2, [r3, #0]

		// Run FFT on sample data.
		t_runfft = HAL_GetTick();
 800314c:	f003 fc84 	bl	8006a58 <HAL_GetTick>
 8003150:	0002      	movs	r2, r0
 8003152:	4b52      	ldr	r3, [pc, #328]	; (800329c <analyze_sound_spectrogram+0x214>)
 8003154:	601a      	str	r2, [r3, #0]
		arm_cfft_f32(S, samples, 0, 1);
 8003156:	4b52      	ldr	r3, [pc, #328]	; (80032a0 <analyze_sound_spectrogram+0x218>)
 8003158:	6818      	ldr	r0, [r3, #0]
 800315a:	494d      	ldr	r1, [pc, #308]	; (8003290 <analyze_sound_spectrogram+0x208>)
 800315c:	2301      	movs	r3, #1
 800315e:	2200      	movs	r2, #0
 8003160:	f002 fa1b 	bl	800559a <arm_cfft_f32>
		t_runfft = HAL_GetTick() - t_runfft;
 8003164:	f003 fc78 	bl	8006a58 <HAL_GetTick>
 8003168:	0002      	movs	r2, r0
 800316a:	4b4c      	ldr	r3, [pc, #304]	; (800329c <analyze_sound_spectrogram+0x214>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	1ad2      	subs	r2, r2, r3
 8003170:	4b4a      	ldr	r3, [pc, #296]	; (800329c <analyze_sound_spectrogram+0x214>)
 8003172:	601a      	str	r2, [r3, #0]

		// Calculate magnitude of complex numbers output by the FFT.
		t_magfft = HAL_GetTick();
 8003174:	f003 fc70 	bl	8006a58 <HAL_GetTick>
 8003178:	0002      	movs	r2, r0
 800317a:	4b4a      	ldr	r3, [pc, #296]	; (80032a4 <analyze_sound_spectrogram+0x21c>)
 800317c:	601a      	str	r2, [r3, #0]
		arm_cmplx_mag_f32(samples, magnitudes, FFT_SIZE);
 800317e:	494a      	ldr	r1, [pc, #296]	; (80032a8 <analyze_sound_spectrogram+0x220>)
 8003180:	4b43      	ldr	r3, [pc, #268]	; (8003290 <analyze_sound_spectrogram+0x208>)
 8003182:	2280      	movs	r2, #128	; 0x80
 8003184:	0018      	movs	r0, r3
 8003186:	f001 f83a 	bl	80041fe <arm_cmplx_mag_f32>
		  t_magfft = HAL_GetTick() - t_magfft;
		 */

		//printf("Optifreq below 20kHz: %d, Optifreq: %d, maxIndex: %d\n", opti_freq_below, opti_freq, maxIndex);

		t_fft = HAL_GetTick() - t_fft;
 800318a:	f003 fc65 	bl	8006a58 <HAL_GetTick>
 800318e:	0002      	movs	r2, r0
 8003190:	4b40      	ldr	r3, [pc, #256]	; (8003294 <analyze_sound_spectrogram+0x20c>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	1ad2      	subs	r2, r2, r3
 8003196:	4b3f      	ldr	r3, [pc, #252]	; (8003294 <analyze_sound_spectrogram+0x20c>)
 8003198:	601a      	str	r2, [r3, #0]

		t_storage = HAL_GetTick();
 800319a:	f003 fc5d 	bl	8006a58 <HAL_GetTick>
 800319e:	0002      	movs	r2, r0
 80031a0:	4b42      	ldr	r3, [pc, #264]	; (80032ac <analyze_sound_spectrogram+0x224>)
 80031a2:	601a      	str	r2, [r3, #0]
			}
		}
		index_freq[num_sample_bunch] = num_freq_bunch;
		 */

		t_storage = HAL_GetTick() - t_storage;
 80031a4:	f003 fc58 	bl	8006a58 <HAL_GetTick>
 80031a8:	0002      	movs	r2, r0
 80031aa:	4b40      	ldr	r3, [pc, #256]	; (80032ac <analyze_sound_spectrogram+0x224>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	1ad2      	subs	r2, r2, r3
 80031b0:	4b3e      	ldr	r3, [pc, #248]	; (80032ac <analyze_sound_spectrogram+0x224>)
 80031b2:	601a      	str	r2, [r3, #0]

		//opti_freq_table[num_sample_bunch] = opti_freq_below;
		//opti_freq_amplitude[num_sample_bunch] = maxValue;

		// Build spectrogram
		for (i=0; i < MAX_INDEX_FREQ; i++) {
 80031b4:	4b34      	ldr	r3, [pc, #208]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031b6:	2200      	movs	r2, #0
 80031b8:	601a      	str	r2, [r3, #0]
 80031ba:	e015      	b.n	80031e8 <analyze_sound_spectrogram+0x160>
			mag_spectrogram[i][num_sample_bunch] = magnitudes[i];
 80031bc:	4b32      	ldr	r3, [pc, #200]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031be:	6819      	ldr	r1, [r3, #0]
 80031c0:	4b31      	ldr	r3, [pc, #196]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031c2:	681a      	ldr	r2, [r3, #0]
 80031c4:	4b2e      	ldr	r3, [pc, #184]	; (8003280 <analyze_sound_spectrogram+0x1f8>)
 80031c6:	681c      	ldr	r4, [r3, #0]
 80031c8:	4b37      	ldr	r3, [pc, #220]	; (80032a8 <analyze_sound_spectrogram+0x220>)
 80031ca:	0089      	lsls	r1, r1, #2
 80031cc:	58c8      	ldr	r0, [r1, r3]
 80031ce:	4938      	ldr	r1, [pc, #224]	; (80032b0 <analyze_sound_spectrogram+0x228>)
 80031d0:	0013      	movs	r3, r2
 80031d2:	009b      	lsls	r3, r3, #2
 80031d4:	189b      	adds	r3, r3, r2
 80031d6:	011b      	lsls	r3, r3, #4
 80031d8:	191b      	adds	r3, r3, r4
 80031da:	009b      	lsls	r3, r3, #2
 80031dc:	5058      	str	r0, [r3, r1]
		for (i=0; i < MAX_INDEX_FREQ; i++) {
 80031de:	4b2a      	ldr	r3, [pc, #168]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	1c5a      	adds	r2, r3, #1
 80031e4:	4b28      	ldr	r3, [pc, #160]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031e6:	601a      	str	r2, [r3, #0]
 80031e8:	4b27      	ldr	r3, [pc, #156]	; (8003288 <analyze_sound_spectrogram+0x200>)
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	2b26      	cmp	r3, #38	; 0x26
 80031ee:	d9e5      	bls.n	80031bc <analyze_sound_spectrogram+0x134>
	for (num_sample_bunch=0; num_sample_bunch<BUNCH_SAMPLE_SIZE; num_sample_bunch++) {
 80031f0:	4b23      	ldr	r3, [pc, #140]	; (8003280 <analyze_sound_spectrogram+0x1f8>)
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	1c5a      	adds	r2, r3, #1
 80031f6:	4b22      	ldr	r3, [pc, #136]	; (8003280 <analyze_sound_spectrogram+0x1f8>)
 80031f8:	601a      	str	r2, [r3, #0]
 80031fa:	4b21      	ldr	r3, [pc, #132]	; (8003280 <analyze_sound_spectrogram+0x1f8>)
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	2b4f      	cmp	r3, #79	; 0x4f
 8003200:	d800      	bhi.n	8003204 <analyze_sound_spectrogram+0x17c>
 8003202:	e750      	b.n	80030a6 <analyze_sound_spectrogram+0x1e>
		}


	}

	t_bunch = HAL_GetTick() - t_bunch;
 8003204:	f003 fc28 	bl	8006a58 <HAL_GetTick>
 8003208:	0002      	movs	r2, r0
 800320a:	4b1b      	ldr	r3, [pc, #108]	; (8003278 <analyze_sound_spectrogram+0x1f0>)
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	1ad2      	subs	r2, r2, r3
 8003210:	4b19      	ldr	r3, [pc, #100]	; (8003278 <analyze_sound_spectrogram+0x1f0>)
 8003212:	601a      	str	r2, [r3, #0]
		index_freq[i] = 0;
	}
	printf("\n");
	 */

	KNN();
 8003214:	f000 f894 	bl	8003340 <KNN>

	if (!no_bird)
 8003218:	4b26      	ldr	r3, [pc, #152]	; (80032b4 <analyze_sound_spectrogram+0x22c>)
 800321a:	781b      	ldrb	r3, [r3, #0]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d10a      	bne.n	8003236 <analyze_sound_spectrogram+0x1ae>
		nb_songs_per_bird[bird_index] += 1;
 8003220:	4b25      	ldr	r3, [pc, #148]	; (80032b8 <analyze_sound_spectrogram+0x230>)
 8003222:	681a      	ldr	r2, [r3, #0]
 8003224:	4b25      	ldr	r3, [pc, #148]	; (80032bc <analyze_sound_spectrogram+0x234>)
 8003226:	0092      	lsls	r2, r2, #2
 8003228:	58d1      	ldr	r1, [r2, r3]
 800322a:	4b23      	ldr	r3, [pc, #140]	; (80032b8 <analyze_sound_spectrogram+0x230>)
 800322c:	681a      	ldr	r2, [r3, #0]
 800322e:	3101      	adds	r1, #1
 8003230:	4b22      	ldr	r3, [pc, #136]	; (80032bc <analyze_sound_spectrogram+0x234>)
 8003232:	0092      	lsls	r2, r2, #2
 8003234:	50d1      	str	r1, [r2, r3]
#if RETRIEVE_NB_SONGS_PER_BIRD
	store_FLASH();
#endif

	//printf("Mean frequency: %1.0f, bird index: %d\n", mean_f, bird_index);
	printf("Mean frequency: %1.0f\n", mean_f);
 8003236:	4b22      	ldr	r3, [pc, #136]	; (80032c0 <analyze_sound_spectrogram+0x238>)
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	1c18      	adds	r0, r3, #0
 800323c:	f7ff fe34 	bl	8002ea8 <__aeabi_f2d>
 8003240:	0003      	movs	r3, r0
 8003242:	000c      	movs	r4, r1
 8003244:	491f      	ldr	r1, [pc, #124]	; (80032c4 <analyze_sound_spectrogram+0x23c>)
 8003246:	001a      	movs	r2, r3
 8003248:	0023      	movs	r3, r4
 800324a:	0008      	movs	r0, r1
 800324c:	f006 fff0 	bl	800a230 <iprintf>
	printf("Number of songs per bird: %d pigeons, %d blackbirds, %d great tits, %d blue tits\n", nb_songs_per_bird[0], nb_songs_per_bird[1], nb_songs_per_bird[2], nb_songs_per_bird[3]);
 8003250:	4b1a      	ldr	r3, [pc, #104]	; (80032bc <analyze_sound_spectrogram+0x234>)
 8003252:	6819      	ldr	r1, [r3, #0]
 8003254:	4b19      	ldr	r3, [pc, #100]	; (80032bc <analyze_sound_spectrogram+0x234>)
 8003256:	685a      	ldr	r2, [r3, #4]
 8003258:	4b18      	ldr	r3, [pc, #96]	; (80032bc <analyze_sound_spectrogram+0x234>)
 800325a:	689c      	ldr	r4, [r3, #8]
 800325c:	4b17      	ldr	r3, [pc, #92]	; (80032bc <analyze_sound_spectrogram+0x234>)
 800325e:	68db      	ldr	r3, [r3, #12]
 8003260:	4819      	ldr	r0, [pc, #100]	; (80032c8 <analyze_sound_spectrogram+0x240>)
 8003262:	9300      	str	r3, [sp, #0]
 8003264:	0023      	movs	r3, r4
 8003266:	f006 ffe3 	bl	800a230 <iprintf>

	print_bird();
 800326a:	f000 f82f 	bl	80032cc <print_bird>
	  }
	  printf("\n");
	 */

	//printf("%d\n ", HAL_GetTick());
}
 800326e:	46c0      	nop			; (mov r8, r8)
 8003270:	46bd      	mov	sp, r7
 8003272:	b003      	add	sp, #12
 8003274:	bd90      	pop	{r4, r7, pc}
 8003276:	46c0      	nop			; (mov r8, r8)
 8003278:	200004f4 	.word	0x200004f4
 800327c:	20003b6c 	.word	0x20003b6c
 8003280:	200042b0 	.word	0x200042b0
 8003284:	20003c38 	.word	0x20003c38
 8003288:	20003b08 	.word	0x20003b08
 800328c:	200042b4 	.word	0x200042b4
 8003290:	20003e4c 	.word	0x20003e4c
 8003294:	20003c44 	.word	0x20003c44
 8003298:	200042ac 	.word	0x200042ac
 800329c:	20003af4 	.word	0x20003af4
 80032a0:	200002f8 	.word	0x200002f8
 80032a4:	20003c34 	.word	0x20003c34
 80032a8:	20003c4c 	.word	0x20003c4c
 80032ac:	20004464 	.word	0x20004464
 80032b0:	20000a10 	.word	0x20000a10
 80032b4:	20004310 	.word	0x20004310
 80032b8:	20003c40 	.word	0x20003c40
 80032bc:	20004454 	.word	0x20004454
 80032c0:	20000778 	.word	0x20000778
 80032c4:	0800da90 	.word	0x0800da90
 80032c8:	0800daa8 	.word	0x0800daa8

080032cc <print_bird>:

void print_bird()
{
 80032cc:	b580      	push	{r7, lr}
 80032ce:	af00      	add	r7, sp, #0
	if (no_bird) {
 80032d0:	4b14      	ldr	r3, [pc, #80]	; (8003324 <print_bird+0x58>)
 80032d2:	781b      	ldrb	r3, [r3, #0]
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	d004      	beq.n	80032e2 <print_bird+0x16>
		printf("No bird detected\n");
 80032d8:	4b13      	ldr	r3, [pc, #76]	; (8003328 <print_bird+0x5c>)
 80032da:	0018      	movs	r0, r3
 80032dc:	f007 f822 	bl	800a324 <puts>
		case 3:
			printf("A blue tit has been detected\n");
			break;
		}
	}
}
 80032e0:	e01d      	b.n	800331e <print_bird+0x52>
		switch (bird_index)
 80032e2:	4b12      	ldr	r3, [pc, #72]	; (800332c <print_bird+0x60>)
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	2b01      	cmp	r3, #1
 80032e8:	d00a      	beq.n	8003300 <print_bird+0x34>
 80032ea:	d304      	bcc.n	80032f6 <print_bird+0x2a>
 80032ec:	2b02      	cmp	r3, #2
 80032ee:	d00c      	beq.n	800330a <print_bird+0x3e>
 80032f0:	2b03      	cmp	r3, #3
 80032f2:	d00f      	beq.n	8003314 <print_bird+0x48>
}
 80032f4:	e013      	b.n	800331e <print_bird+0x52>
			printf("A pigeon has been detected\n");
 80032f6:	4b0e      	ldr	r3, [pc, #56]	; (8003330 <print_bird+0x64>)
 80032f8:	0018      	movs	r0, r3
 80032fa:	f007 f813 	bl	800a324 <puts>
			break;
 80032fe:	e00e      	b.n	800331e <print_bird+0x52>
			printf("A blackbird has been detected\n");
 8003300:	4b0c      	ldr	r3, [pc, #48]	; (8003334 <print_bird+0x68>)
 8003302:	0018      	movs	r0, r3
 8003304:	f007 f80e 	bl	800a324 <puts>
			break;
 8003308:	e009      	b.n	800331e <print_bird+0x52>
			printf("A great tit has been detected\n");
 800330a:	4b0b      	ldr	r3, [pc, #44]	; (8003338 <print_bird+0x6c>)
 800330c:	0018      	movs	r0, r3
 800330e:	f007 f809 	bl	800a324 <puts>
			break;
 8003312:	e004      	b.n	800331e <print_bird+0x52>
			printf("A blue tit has been detected\n");
 8003314:	4b09      	ldr	r3, [pc, #36]	; (800333c <print_bird+0x70>)
 8003316:	0018      	movs	r0, r3
 8003318:	f007 f804 	bl	800a324 <puts>
			break;
 800331c:	46c0      	nop			; (mov r8, r8)
}
 800331e:	46c0      	nop			; (mov r8, r8)
 8003320:	46bd      	mov	sp, r7
 8003322:	bd80      	pop	{r7, pc}
 8003324:	20004310 	.word	0x20004310
 8003328:	0800dafc 	.word	0x0800dafc
 800332c:	20003c40 	.word	0x20003c40
 8003330:	0800db10 	.word	0x0800db10
 8003334:	0800db2c 	.word	0x0800db2c
 8003338:	0800db4c 	.word	0x0800db4c
 800333c:	0800db6c 	.word	0x0800db6c

08003340 <KNN>:

void KNN(void)
{
 8003340:	b5b0      	push	{r4, r5, r7, lr}
 8003342:	af00      	add	r7, sp, #0
	// Extract the weighted mean frequency from mag_spectrogram
	MeanFrequency();
 8003344:	f000 f966 	bl	8003614 <MeanFrequency>

	// Refill temp_freq_range by birds_freq_range
	for (i=0; i < N_BIRDS; i++) {
 8003348:	4ba3      	ldr	r3, [pc, #652]	; (80035d8 <KNN+0x298>)
 800334a:	2200      	movs	r2, #0
 800334c:	601a      	str	r2, [r3, #0]
 800334e:	e02d      	b.n	80033ac <KNN+0x6c>
		for (j=0; j < N_SONGS; j++) {
 8003350:	4ba2      	ldr	r3, [pc, #648]	; (80035dc <KNN+0x29c>)
 8003352:	2200      	movs	r2, #0
 8003354:	601a      	str	r2, [r3, #0]
 8003356:	e020      	b.n	800339a <KNN+0x5a>
			temp_freq_range[i][j] = birds_freq_range[i][j];
 8003358:	4b9f      	ldr	r3, [pc, #636]	; (80035d8 <KNN+0x298>)
 800335a:	681a      	ldr	r2, [r3, #0]
 800335c:	4b9f      	ldr	r3, [pc, #636]	; (80035dc <KNN+0x29c>)
 800335e:	6818      	ldr	r0, [r3, #0]
 8003360:	499f      	ldr	r1, [pc, #636]	; (80035e0 <KNN+0x2a0>)
 8003362:	0013      	movs	r3, r2
 8003364:	005b      	lsls	r3, r3, #1
 8003366:	189b      	adds	r3, r3, r2
 8003368:	005b      	lsls	r3, r3, #1
 800336a:	181b      	adds	r3, r3, r0
 800336c:	009b      	lsls	r3, r3, #2
 800336e:	585a      	ldr	r2, [r3, r1]
 8003370:	4b99      	ldr	r3, [pc, #612]	; (80035d8 <KNN+0x298>)
 8003372:	681c      	ldr	r4, [r3, #0]
 8003374:	4b99      	ldr	r3, [pc, #612]	; (80035dc <KNN+0x29c>)
 8003376:	681d      	ldr	r5, [r3, #0]
 8003378:	1c10      	adds	r0, r2, #0
 800337a:	f7fd f8e3 	bl	8000544 <__aeabi_f2uiz>
 800337e:	0001      	movs	r1, r0
 8003380:	4a98      	ldr	r2, [pc, #608]	; (80035e4 <KNN+0x2a4>)
 8003382:	0023      	movs	r3, r4
 8003384:	005b      	lsls	r3, r3, #1
 8003386:	191b      	adds	r3, r3, r4
 8003388:	005b      	lsls	r3, r3, #1
 800338a:	195b      	adds	r3, r3, r5
 800338c:	009b      	lsls	r3, r3, #2
 800338e:	5099      	str	r1, [r3, r2]
		for (j=0; j < N_SONGS; j++) {
 8003390:	4b92      	ldr	r3, [pc, #584]	; (80035dc <KNN+0x29c>)
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	1c5a      	adds	r2, r3, #1
 8003396:	4b91      	ldr	r3, [pc, #580]	; (80035dc <KNN+0x29c>)
 8003398:	601a      	str	r2, [r3, #0]
 800339a:	4b90      	ldr	r3, [pc, #576]	; (80035dc <KNN+0x29c>)
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	2b05      	cmp	r3, #5
 80033a0:	d9da      	bls.n	8003358 <KNN+0x18>
	for (i=0; i < N_BIRDS; i++) {
 80033a2:	4b8d      	ldr	r3, [pc, #564]	; (80035d8 <KNN+0x298>)
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	1c5a      	adds	r2, r3, #1
 80033a8:	4b8b      	ldr	r3, [pc, #556]	; (80035d8 <KNN+0x298>)
 80033aa:	601a      	str	r2, [r3, #0]
 80033ac:	4b8a      	ldr	r3, [pc, #552]	; (80035d8 <KNN+0x298>)
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	2b03      	cmp	r3, #3
 80033b2:	d9cd      	bls.n	8003350 <KNN+0x10>
		}
	}

	// Find the indexes of the frequencies nearest to mean_f and store in close_freq_index
	for (k=0; k < KNN_SIZE; k++) {
 80033b4:	4b8c      	ldr	r3, [pc, #560]	; (80035e8 <KNN+0x2a8>)
 80033b6:	2200      	movs	r2, #0
 80033b8:	601a      	str	r2, [r3, #0]
 80033ba:	e0af      	b.n	800351c <KNN+0x1dc>
		close_freq_index[k] = 11;
 80033bc:	4b8a      	ldr	r3, [pc, #552]	; (80035e8 <KNN+0x2a8>)
 80033be:	681a      	ldr	r2, [r3, #0]
 80033c0:	4b8a      	ldr	r3, [pc, #552]	; (80035ec <KNN+0x2ac>)
 80033c2:	0092      	lsls	r2, r2, #2
 80033c4:	210b      	movs	r1, #11
 80033c6:	50d1      	str	r1, [r2, r3]
		temp_delta_freq = 1e8;
 80033c8:	4b89      	ldr	r3, [pc, #548]	; (80035f0 <KNN+0x2b0>)
 80033ca:	4a8a      	ldr	r2, [pc, #552]	; (80035f4 <KNN+0x2b4>)
 80033cc:	601a      	str	r2, [r3, #0]
		for (i=0; i < N_BIRDS; i++) {
 80033ce:	4b82      	ldr	r3, [pc, #520]	; (80035d8 <KNN+0x298>)
 80033d0:	2200      	movs	r2, #0
 80033d2:	601a      	str	r2, [r3, #0]
 80033d4:	e084      	b.n	80034e0 <KNN+0x1a0>
			for (j=0; j < N_SONGS; j++) {
 80033d6:	4b81      	ldr	r3, [pc, #516]	; (80035dc <KNN+0x29c>)
 80033d8:	2200      	movs	r2, #0
 80033da:	601a      	str	r2, [r3, #0]
 80033dc:	e077      	b.n	80034ce <KNN+0x18e>
				if (temp_freq_range[i][j] - mean_f < temp_delta_freq && temp_freq_range[i][j] - mean_f > -temp_delta_freq) {
 80033de:	4b7e      	ldr	r3, [pc, #504]	; (80035d8 <KNN+0x298>)
 80033e0:	681a      	ldr	r2, [r3, #0]
 80033e2:	4b7e      	ldr	r3, [pc, #504]	; (80035dc <KNN+0x29c>)
 80033e4:	6818      	ldr	r0, [r3, #0]
 80033e6:	497f      	ldr	r1, [pc, #508]	; (80035e4 <KNN+0x2a4>)
 80033e8:	0013      	movs	r3, r2
 80033ea:	005b      	lsls	r3, r3, #1
 80033ec:	189b      	adds	r3, r3, r2
 80033ee:	005b      	lsls	r3, r3, #1
 80033f0:	181b      	adds	r3, r3, r0
 80033f2:	009b      	lsls	r3, r3, #2
 80033f4:	585b      	ldr	r3, [r3, r1]
 80033f6:	0018      	movs	r0, r3
 80033f8:	f7fd ff78 	bl	80012ec <__aeabi_ui2f>
 80033fc:	1c02      	adds	r2, r0, #0
 80033fe:	4b7e      	ldr	r3, [pc, #504]	; (80035f8 <KNN+0x2b8>)
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	1c19      	adds	r1, r3, #0
 8003404:	1c10      	adds	r0, r2, #0
 8003406:	f7fd fd77 	bl	8000ef8 <__aeabi_fsub>
 800340a:	1c03      	adds	r3, r0, #0
 800340c:	1c1a      	adds	r2, r3, #0
 800340e:	4b78      	ldr	r3, [pc, #480]	; (80035f0 <KNN+0x2b0>)
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	1c19      	adds	r1, r3, #0
 8003414:	1c10      	adds	r0, r2, #0
 8003416:	f7fd f84f 	bl	80004b8 <__aeabi_fcmplt>
 800341a:	1e03      	subs	r3, r0, #0
 800341c:	d052      	beq.n	80034c4 <KNN+0x184>
 800341e:	4b6e      	ldr	r3, [pc, #440]	; (80035d8 <KNN+0x298>)
 8003420:	681a      	ldr	r2, [r3, #0]
 8003422:	4b6e      	ldr	r3, [pc, #440]	; (80035dc <KNN+0x29c>)
 8003424:	6818      	ldr	r0, [r3, #0]
 8003426:	496f      	ldr	r1, [pc, #444]	; (80035e4 <KNN+0x2a4>)
 8003428:	0013      	movs	r3, r2
 800342a:	005b      	lsls	r3, r3, #1
 800342c:	189b      	adds	r3, r3, r2
 800342e:	005b      	lsls	r3, r3, #1
 8003430:	181b      	adds	r3, r3, r0
 8003432:	009b      	lsls	r3, r3, #2
 8003434:	585b      	ldr	r3, [r3, r1]
 8003436:	0018      	movs	r0, r3
 8003438:	f7fd ff58 	bl	80012ec <__aeabi_ui2f>
 800343c:	1c02      	adds	r2, r0, #0
 800343e:	4b6e      	ldr	r3, [pc, #440]	; (80035f8 <KNN+0x2b8>)
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	1c19      	adds	r1, r3, #0
 8003444:	1c10      	adds	r0, r2, #0
 8003446:	f7fd fd57 	bl	8000ef8 <__aeabi_fsub>
 800344a:	1c03      	adds	r3, r0, #0
 800344c:	1c18      	adds	r0, r3, #0
 800344e:	4b68      	ldr	r3, [pc, #416]	; (80035f0 <KNN+0x2b0>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	2280      	movs	r2, #128	; 0x80
 8003454:	0612      	lsls	r2, r2, #24
 8003456:	4053      	eors	r3, r2
 8003458:	1c19      	adds	r1, r3, #0
 800345a:	f7fd f841 	bl	80004e0 <__aeabi_fcmpgt>
 800345e:	1e03      	subs	r3, r0, #0
 8003460:	d030      	beq.n	80034c4 <KNN+0x184>
					temp_delta_freq = temp_freq_range[i][j] - mean_f;
 8003462:	4b5d      	ldr	r3, [pc, #372]	; (80035d8 <KNN+0x298>)
 8003464:	681a      	ldr	r2, [r3, #0]
 8003466:	4b5d      	ldr	r3, [pc, #372]	; (80035dc <KNN+0x29c>)
 8003468:	6818      	ldr	r0, [r3, #0]
 800346a:	495e      	ldr	r1, [pc, #376]	; (80035e4 <KNN+0x2a4>)
 800346c:	0013      	movs	r3, r2
 800346e:	005b      	lsls	r3, r3, #1
 8003470:	189b      	adds	r3, r3, r2
 8003472:	005b      	lsls	r3, r3, #1
 8003474:	181b      	adds	r3, r3, r0
 8003476:	009b      	lsls	r3, r3, #2
 8003478:	585b      	ldr	r3, [r3, r1]
 800347a:	0018      	movs	r0, r3
 800347c:	f7fd ff36 	bl	80012ec <__aeabi_ui2f>
 8003480:	1c02      	adds	r2, r0, #0
 8003482:	4b5d      	ldr	r3, [pc, #372]	; (80035f8 <KNN+0x2b8>)
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	1c19      	adds	r1, r3, #0
 8003488:	1c10      	adds	r0, r2, #0
 800348a:	f7fd fd35 	bl	8000ef8 <__aeabi_fsub>
 800348e:	1c03      	adds	r3, r0, #0
 8003490:	1c1a      	adds	r2, r3, #0
 8003492:	4b57      	ldr	r3, [pc, #348]	; (80035f0 <KNN+0x2b0>)
 8003494:	601a      	str	r2, [r3, #0]
					if (temp_delta_freq < 0)
 8003496:	4b56      	ldr	r3, [pc, #344]	; (80035f0 <KNN+0x2b0>)
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	2100      	movs	r1, #0
 800349c:	1c18      	adds	r0, r3, #0
 800349e:	f7fd f80b 	bl	80004b8 <__aeabi_fcmplt>
 80034a2:	1e03      	subs	r3, r0, #0
 80034a4:	d006      	beq.n	80034b4 <KNN+0x174>
						temp_delta_freq = -temp_delta_freq;
 80034a6:	4b52      	ldr	r3, [pc, #328]	; (80035f0 <KNN+0x2b0>)
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	2280      	movs	r2, #128	; 0x80
 80034ac:	0612      	lsls	r2, r2, #24
 80034ae:	405a      	eors	r2, r3
 80034b0:	4b4f      	ldr	r3, [pc, #316]	; (80035f0 <KNN+0x2b0>)
 80034b2:	601a      	str	r2, [r3, #0]
					i_end = i;
 80034b4:	4b48      	ldr	r3, [pc, #288]	; (80035d8 <KNN+0x298>)
 80034b6:	681a      	ldr	r2, [r3, #0]
 80034b8:	4b50      	ldr	r3, [pc, #320]	; (80035fc <KNN+0x2bc>)
 80034ba:	601a      	str	r2, [r3, #0]
					j_end = j;
 80034bc:	4b47      	ldr	r3, [pc, #284]	; (80035dc <KNN+0x29c>)
 80034be:	681a      	ldr	r2, [r3, #0]
 80034c0:	4b4f      	ldr	r3, [pc, #316]	; (8003600 <KNN+0x2c0>)
 80034c2:	601a      	str	r2, [r3, #0]
			for (j=0; j < N_SONGS; j++) {
 80034c4:	4b45      	ldr	r3, [pc, #276]	; (80035dc <KNN+0x29c>)
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	1c5a      	adds	r2, r3, #1
 80034ca:	4b44      	ldr	r3, [pc, #272]	; (80035dc <KNN+0x29c>)
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	4b43      	ldr	r3, [pc, #268]	; (80035dc <KNN+0x29c>)
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	2b05      	cmp	r3, #5
 80034d4:	d983      	bls.n	80033de <KNN+0x9e>
		for (i=0; i < N_BIRDS; i++) {
 80034d6:	4b40      	ldr	r3, [pc, #256]	; (80035d8 <KNN+0x298>)
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	1c5a      	adds	r2, r3, #1
 80034dc:	4b3e      	ldr	r3, [pc, #248]	; (80035d8 <KNN+0x298>)
 80034de:	601a      	str	r2, [r3, #0]
 80034e0:	4b3d      	ldr	r3, [pc, #244]	; (80035d8 <KNN+0x298>)
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	2b03      	cmp	r3, #3
 80034e6:	d800      	bhi.n	80034ea <KNN+0x1aa>
 80034e8:	e775      	b.n	80033d6 <KNN+0x96>
				}
			}
		}
		temp_freq_range[i_end][j_end] = 1e8;
 80034ea:	4b44      	ldr	r3, [pc, #272]	; (80035fc <KNN+0x2bc>)
 80034ec:	681a      	ldr	r2, [r3, #0]
 80034ee:	4b44      	ldr	r3, [pc, #272]	; (8003600 <KNN+0x2c0>)
 80034f0:	6818      	ldr	r0, [r3, #0]
 80034f2:	493c      	ldr	r1, [pc, #240]	; (80035e4 <KNN+0x2a4>)
 80034f4:	0013      	movs	r3, r2
 80034f6:	005b      	lsls	r3, r3, #1
 80034f8:	189b      	adds	r3, r3, r2
 80034fa:	005b      	lsls	r3, r3, #1
 80034fc:	181b      	adds	r3, r3, r0
 80034fe:	009b      	lsls	r3, r3, #2
 8003500:	4a40      	ldr	r2, [pc, #256]	; (8003604 <KNN+0x2c4>)
 8003502:	505a      	str	r2, [r3, r1]
		close_freq_index[k] = i_end;
 8003504:	4b38      	ldr	r3, [pc, #224]	; (80035e8 <KNN+0x2a8>)
 8003506:	681a      	ldr	r2, [r3, #0]
 8003508:	4b3c      	ldr	r3, [pc, #240]	; (80035fc <KNN+0x2bc>)
 800350a:	6819      	ldr	r1, [r3, #0]
 800350c:	4b37      	ldr	r3, [pc, #220]	; (80035ec <KNN+0x2ac>)
 800350e:	0092      	lsls	r2, r2, #2
 8003510:	50d1      	str	r1, [r2, r3]
	for (k=0; k < KNN_SIZE; k++) {
 8003512:	4b35      	ldr	r3, [pc, #212]	; (80035e8 <KNN+0x2a8>)
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	1c5a      	adds	r2, r3, #1
 8003518:	4b33      	ldr	r3, [pc, #204]	; (80035e8 <KNN+0x2a8>)
 800351a:	601a      	str	r2, [r3, #0]
 800351c:	4b32      	ldr	r3, [pc, #200]	; (80035e8 <KNN+0x2a8>)
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	2b04      	cmp	r3, #4
 8003522:	d800      	bhi.n	8003526 <KNN+0x1e6>
 8003524:	e74a      	b.n	80033bc <KNN+0x7c>
	}
	printf("\n");
	*/

	// Compute the number of index occurences for each bird, store in
	for (i=0; i < N_BIRDS; i++) {
 8003526:	4b2c      	ldr	r3, [pc, #176]	; (80035d8 <KNN+0x298>)
 8003528:	2200      	movs	r2, #0
 800352a:	601a      	str	r2, [r3, #0]
 800352c:	e00a      	b.n	8003544 <KNN+0x204>
		KNN_bird_indexes_number[i] = 0;
 800352e:	4b2a      	ldr	r3, [pc, #168]	; (80035d8 <KNN+0x298>)
 8003530:	681a      	ldr	r2, [r3, #0]
 8003532:	4b35      	ldr	r3, [pc, #212]	; (8003608 <KNN+0x2c8>)
 8003534:	0092      	lsls	r2, r2, #2
 8003536:	2100      	movs	r1, #0
 8003538:	50d1      	str	r1, [r2, r3]
	for (i=0; i < N_BIRDS; i++) {
 800353a:	4b27      	ldr	r3, [pc, #156]	; (80035d8 <KNN+0x298>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	1c5a      	adds	r2, r3, #1
 8003540:	4b25      	ldr	r3, [pc, #148]	; (80035d8 <KNN+0x298>)
 8003542:	601a      	str	r2, [r3, #0]
 8003544:	4b24      	ldr	r3, [pc, #144]	; (80035d8 <KNN+0x298>)
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	2b03      	cmp	r3, #3
 800354a:	d9f0      	bls.n	800352e <KNN+0x1ee>
	}
	for (k=0; k < KNN_SIZE; k++) {
 800354c:	4b26      	ldr	r3, [pc, #152]	; (80035e8 <KNN+0x2a8>)
 800354e:	2200      	movs	r2, #0
 8003550:	601a      	str	r2, [r3, #0]
 8003552:	e015      	b.n	8003580 <KNN+0x240>
		KNN_bird_indexes_number[close_freq_index[k]] += 1;
 8003554:	4b24      	ldr	r3, [pc, #144]	; (80035e8 <KNN+0x2a8>)
 8003556:	681a      	ldr	r2, [r3, #0]
 8003558:	4b24      	ldr	r3, [pc, #144]	; (80035ec <KNN+0x2ac>)
 800355a:	0092      	lsls	r2, r2, #2
 800355c:	58d2      	ldr	r2, [r2, r3]
 800355e:	4b2a      	ldr	r3, [pc, #168]	; (8003608 <KNN+0x2c8>)
 8003560:	0092      	lsls	r2, r2, #2
 8003562:	58d1      	ldr	r1, [r2, r3]
 8003564:	4b20      	ldr	r3, [pc, #128]	; (80035e8 <KNN+0x2a8>)
 8003566:	681a      	ldr	r2, [r3, #0]
 8003568:	4b20      	ldr	r3, [pc, #128]	; (80035ec <KNN+0x2ac>)
 800356a:	0092      	lsls	r2, r2, #2
 800356c:	58d2      	ldr	r2, [r2, r3]
 800356e:	3101      	adds	r1, #1
 8003570:	4b25      	ldr	r3, [pc, #148]	; (8003608 <KNN+0x2c8>)
 8003572:	0092      	lsls	r2, r2, #2
 8003574:	50d1      	str	r1, [r2, r3]
	for (k=0; k < KNN_SIZE; k++) {
 8003576:	4b1c      	ldr	r3, [pc, #112]	; (80035e8 <KNN+0x2a8>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	1c5a      	adds	r2, r3, #1
 800357c:	4b1a      	ldr	r3, [pc, #104]	; (80035e8 <KNN+0x2a8>)
 800357e:	601a      	str	r2, [r3, #0]
 8003580:	4b19      	ldr	r3, [pc, #100]	; (80035e8 <KNN+0x2a8>)
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	2b04      	cmp	r3, #4
 8003586:	d9e5      	bls.n	8003554 <KNN+0x214>
	}

	max_number_songs = 0;
 8003588:	4b20      	ldr	r3, [pc, #128]	; (800360c <KNN+0x2cc>)
 800358a:	2200      	movs	r2, #0
 800358c:	601a      	str	r2, [r3, #0]
	for (i=0; i < N_BIRDS; i++) {
 800358e:	4b12      	ldr	r3, [pc, #72]	; (80035d8 <KNN+0x298>)
 8003590:	2200      	movs	r2, #0
 8003592:	601a      	str	r2, [r3, #0]
 8003594:	e018      	b.n	80035c8 <KNN+0x288>
		if (KNN_bird_indexes_number[i] > max_number_songs) {
 8003596:	4b10      	ldr	r3, [pc, #64]	; (80035d8 <KNN+0x298>)
 8003598:	681a      	ldr	r2, [r3, #0]
 800359a:	4b1b      	ldr	r3, [pc, #108]	; (8003608 <KNN+0x2c8>)
 800359c:	0092      	lsls	r2, r2, #2
 800359e:	58d2      	ldr	r2, [r2, r3]
 80035a0:	4b1a      	ldr	r3, [pc, #104]	; (800360c <KNN+0x2cc>)
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	429a      	cmp	r2, r3
 80035a6:	d90a      	bls.n	80035be <KNN+0x27e>
			bird_index = i;
 80035a8:	4b0b      	ldr	r3, [pc, #44]	; (80035d8 <KNN+0x298>)
 80035aa:	681a      	ldr	r2, [r3, #0]
 80035ac:	4b18      	ldr	r3, [pc, #96]	; (8003610 <KNN+0x2d0>)
 80035ae:	601a      	str	r2, [r3, #0]
			max_number_songs = KNN_bird_indexes_number[i];
 80035b0:	4b09      	ldr	r3, [pc, #36]	; (80035d8 <KNN+0x298>)
 80035b2:	681a      	ldr	r2, [r3, #0]
 80035b4:	4b14      	ldr	r3, [pc, #80]	; (8003608 <KNN+0x2c8>)
 80035b6:	0092      	lsls	r2, r2, #2
 80035b8:	58d2      	ldr	r2, [r2, r3]
 80035ba:	4b14      	ldr	r3, [pc, #80]	; (800360c <KNN+0x2cc>)
 80035bc:	601a      	str	r2, [r3, #0]
	for (i=0; i < N_BIRDS; i++) {
 80035be:	4b06      	ldr	r3, [pc, #24]	; (80035d8 <KNN+0x298>)
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	1c5a      	adds	r2, r3, #1
 80035c4:	4b04      	ldr	r3, [pc, #16]	; (80035d8 <KNN+0x298>)
 80035c6:	601a      	str	r2, [r3, #0]
 80035c8:	4b03      	ldr	r3, [pc, #12]	; (80035d8 <KNN+0x298>)
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	2b03      	cmp	r3, #3
 80035ce:	d9e2      	bls.n	8003596 <KNN+0x256>
		}
	}
}
 80035d0:	46c0      	nop			; (mov r8, r8)
 80035d2:	46bd      	mov	sp, r7
 80035d4:	bdb0      	pop	{r4, r5, r7, pc}
 80035d6:	46c0      	nop			; (mov r8, r8)
 80035d8:	20003b08 	.word	0x20003b08
 80035dc:	20000780 	.word	0x20000780
 80035e0:	20000000 	.word	0x20000000
 80035e4:	20003b0c 	.word	0x20003b0c
 80035e8:	20003adc 	.word	0x20003adc
 80035ec:	20003ae0 	.word	0x20003ae0
 80035f0:	20003c3c 	.word	0x20003c3c
 80035f4:	4cbebc20 	.word	0x4cbebc20
 80035f8:	20000778 	.word	0x20000778
 80035fc:	2000424c 	.word	0x2000424c
 8003600:	20000a0c 	.word	0x20000a0c
 8003604:	05f5e100 	.word	0x05f5e100
 8003608:	20003af8 	.word	0x20003af8
 800360c:	20003ad8 	.word	0x20003ad8
 8003610:	20003c40 	.word	0x20003c40

08003614 <MeanFrequency>:

void MeanFrequency(void)
{
 8003614:	b5b0      	push	{r4, r5, r7, lr}
 8003616:	af00      	add	r7, sp, #0
	// sum_mag_spectrogram: mean of magnitudes for each frequency over the whole time frame
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 8003618:	4bda      	ldr	r3, [pc, #872]	; (8003984 <MeanFrequency+0x370>)
 800361a:	2200      	movs	r2, #0
 800361c:	601a      	str	r2, [r3, #0]
 800361e:	e033      	b.n	8003688 <MeanFrequency+0x74>
		sum_mag_spectrogram[i] = 0;
 8003620:	4bd8      	ldr	r3, [pc, #864]	; (8003984 <MeanFrequency+0x370>)
 8003622:	681a      	ldr	r2, [r3, #0]
 8003624:	4bd8      	ldr	r3, [pc, #864]	; (8003988 <MeanFrequency+0x374>)
 8003626:	0092      	lsls	r2, r2, #2
 8003628:	2100      	movs	r1, #0
 800362a:	50d1      	str	r1, [r2, r3]
		for (j=0; j < BUNCH_SAMPLE_SIZE; j++) {
 800362c:	4bd7      	ldr	r3, [pc, #860]	; (800398c <MeanFrequency+0x378>)
 800362e:	2200      	movs	r2, #0
 8003630:	601a      	str	r2, [r3, #0]
 8003632:	e020      	b.n	8003676 <MeanFrequency+0x62>
			sum_mag_spectrogram[i] += mag_spectrogram[i][j];
 8003634:	4bd3      	ldr	r3, [pc, #844]	; (8003984 <MeanFrequency+0x370>)
 8003636:	681a      	ldr	r2, [r3, #0]
 8003638:	4bd3      	ldr	r3, [pc, #844]	; (8003988 <MeanFrequency+0x374>)
 800363a:	0092      	lsls	r2, r2, #2
 800363c:	58d5      	ldr	r5, [r2, r3]
 800363e:	4bd1      	ldr	r3, [pc, #836]	; (8003984 <MeanFrequency+0x370>)
 8003640:	681a      	ldr	r2, [r3, #0]
 8003642:	4bd2      	ldr	r3, [pc, #840]	; (800398c <MeanFrequency+0x378>)
 8003644:	6818      	ldr	r0, [r3, #0]
 8003646:	49d2      	ldr	r1, [pc, #840]	; (8003990 <MeanFrequency+0x37c>)
 8003648:	0013      	movs	r3, r2
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	189b      	adds	r3, r3, r2
 800364e:	011b      	lsls	r3, r3, #4
 8003650:	181b      	adds	r3, r3, r0
 8003652:	009b      	lsls	r3, r3, #2
 8003654:	585a      	ldr	r2, [r3, r1]
 8003656:	4bcb      	ldr	r3, [pc, #812]	; (8003984 <MeanFrequency+0x370>)
 8003658:	681c      	ldr	r4, [r3, #0]
 800365a:	1c11      	adds	r1, r2, #0
 800365c:	1c28      	adds	r0, r5, #0
 800365e:	f7fc ffa7 	bl	80005b0 <__aeabi_fadd>
 8003662:	1c03      	adds	r3, r0, #0
 8003664:	1c19      	adds	r1, r3, #0
 8003666:	4bc8      	ldr	r3, [pc, #800]	; (8003988 <MeanFrequency+0x374>)
 8003668:	00a2      	lsls	r2, r4, #2
 800366a:	50d1      	str	r1, [r2, r3]
		for (j=0; j < BUNCH_SAMPLE_SIZE; j++) {
 800366c:	4bc7      	ldr	r3, [pc, #796]	; (800398c <MeanFrequency+0x378>)
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	1c5a      	adds	r2, r3, #1
 8003672:	4bc6      	ldr	r3, [pc, #792]	; (800398c <MeanFrequency+0x378>)
 8003674:	601a      	str	r2, [r3, #0]
 8003676:	4bc5      	ldr	r3, [pc, #788]	; (800398c <MeanFrequency+0x378>)
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	2b4f      	cmp	r3, #79	; 0x4f
 800367c:	d9da      	bls.n	8003634 <MeanFrequency+0x20>
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 800367e:	4bc1      	ldr	r3, [pc, #772]	; (8003984 <MeanFrequency+0x370>)
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	1c5a      	adds	r2, r3, #1
 8003684:	4bbf      	ldr	r3, [pc, #764]	; (8003984 <MeanFrequency+0x370>)
 8003686:	601a      	str	r2, [r3, #0]
 8003688:	4bbe      	ldr	r3, [pc, #760]	; (8003984 <MeanFrequency+0x370>)
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	2b26      	cmp	r3, #38	; 0x26
 800368e:	d9c7      	bls.n	8003620 <MeanFrequency+0xc>
		}
	}

	for (i=0; i < MAX_INDEX_FREQ; i++) {
 8003690:	4bbc      	ldr	r3, [pc, #752]	; (8003984 <MeanFrequency+0x370>)
 8003692:	2200      	movs	r2, #0
 8003694:	601a      	str	r2, [r3, #0]
 8003696:	e018      	b.n	80036ca <MeanFrequency+0xb6>
		sum_mag_spectrogram[i] *= sum_mag_spectrogram[i];
 8003698:	4bba      	ldr	r3, [pc, #744]	; (8003984 <MeanFrequency+0x370>)
 800369a:	681a      	ldr	r2, [r3, #0]
 800369c:	4bba      	ldr	r3, [pc, #744]	; (8003988 <MeanFrequency+0x374>)
 800369e:	0092      	lsls	r2, r2, #2
 80036a0:	58d0      	ldr	r0, [r2, r3]
 80036a2:	4bb8      	ldr	r3, [pc, #736]	; (8003984 <MeanFrequency+0x370>)
 80036a4:	681a      	ldr	r2, [r3, #0]
 80036a6:	4bb8      	ldr	r3, [pc, #736]	; (8003988 <MeanFrequency+0x374>)
 80036a8:	0092      	lsls	r2, r2, #2
 80036aa:	58d2      	ldr	r2, [r2, r3]
 80036ac:	4bb5      	ldr	r3, [pc, #724]	; (8003984 <MeanFrequency+0x370>)
 80036ae:	681c      	ldr	r4, [r3, #0]
 80036b0:	1c11      	adds	r1, r2, #0
 80036b2:	f7fd faef 	bl	8000c94 <__aeabi_fmul>
 80036b6:	1c03      	adds	r3, r0, #0
 80036b8:	1c19      	adds	r1, r3, #0
 80036ba:	4bb3      	ldr	r3, [pc, #716]	; (8003988 <MeanFrequency+0x374>)
 80036bc:	00a2      	lsls	r2, r4, #2
 80036be:	50d1      	str	r1, [r2, r3]
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 80036c0:	4bb0      	ldr	r3, [pc, #704]	; (8003984 <MeanFrequency+0x370>)
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	1c5a      	adds	r2, r3, #1
 80036c6:	4baf      	ldr	r3, [pc, #700]	; (8003984 <MeanFrequency+0x370>)
 80036c8:	601a      	str	r2, [r3, #0]
 80036ca:	4bae      	ldr	r3, [pc, #696]	; (8003984 <MeanFrequency+0x370>)
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	2b26      	cmp	r3, #38	; 0x26
 80036d0:	d9e2      	bls.n	8003698 <MeanFrequency+0x84>
	}


	min_mag = 1e26;
 80036d2:	4bb0      	ldr	r3, [pc, #704]	; (8003994 <MeanFrequency+0x380>)
 80036d4:	4ab0      	ldr	r2, [pc, #704]	; (8003998 <MeanFrequency+0x384>)
 80036d6:	601a      	str	r2, [r3, #0]
	for (i=1; i < MAX_INDEX_FREQ; i++) {
 80036d8:	4baa      	ldr	r3, [pc, #680]	; (8003984 <MeanFrequency+0x370>)
 80036da:	2201      	movs	r2, #1
 80036dc:	601a      	str	r2, [r3, #0]
 80036de:	e018      	b.n	8003712 <MeanFrequency+0xfe>
		if (sum_mag_spectrogram[i] < min_mag)
 80036e0:	4ba8      	ldr	r3, [pc, #672]	; (8003984 <MeanFrequency+0x370>)
 80036e2:	681a      	ldr	r2, [r3, #0]
 80036e4:	4ba8      	ldr	r3, [pc, #672]	; (8003988 <MeanFrequency+0x374>)
 80036e6:	0092      	lsls	r2, r2, #2
 80036e8:	58d2      	ldr	r2, [r2, r3]
 80036ea:	4baa      	ldr	r3, [pc, #680]	; (8003994 <MeanFrequency+0x380>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	1c19      	adds	r1, r3, #0
 80036f0:	1c10      	adds	r0, r2, #0
 80036f2:	f7fc fee1 	bl	80004b8 <__aeabi_fcmplt>
 80036f6:	1e03      	subs	r3, r0, #0
 80036f8:	d006      	beq.n	8003708 <MeanFrequency+0xf4>
			min_mag = sum_mag_spectrogram[i];
 80036fa:	4ba2      	ldr	r3, [pc, #648]	; (8003984 <MeanFrequency+0x370>)
 80036fc:	681a      	ldr	r2, [r3, #0]
 80036fe:	4ba2      	ldr	r3, [pc, #648]	; (8003988 <MeanFrequency+0x374>)
 8003700:	0092      	lsls	r2, r2, #2
 8003702:	58d2      	ldr	r2, [r2, r3]
 8003704:	4ba3      	ldr	r3, [pc, #652]	; (8003994 <MeanFrequency+0x380>)
 8003706:	601a      	str	r2, [r3, #0]
	for (i=1; i < MAX_INDEX_FREQ; i++) {
 8003708:	4b9e      	ldr	r3, [pc, #632]	; (8003984 <MeanFrequency+0x370>)
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	1c5a      	adds	r2, r3, #1
 800370e:	4b9d      	ldr	r3, [pc, #628]	; (8003984 <MeanFrequency+0x370>)
 8003710:	601a      	str	r2, [r3, #0]
 8003712:	4b9c      	ldr	r3, [pc, #624]	; (8003984 <MeanFrequency+0x370>)
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	2b26      	cmp	r3, #38	; 0x26
 8003718:	d9e2      	bls.n	80036e0 <MeanFrequency+0xcc>
	}
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 800371a:	4b9a      	ldr	r3, [pc, #616]	; (8003984 <MeanFrequency+0x370>)
 800371c:	2200      	movs	r2, #0
 800371e:	601a      	str	r2, [r3, #0]
 8003720:	e015      	b.n	800374e <MeanFrequency+0x13a>
		sum_mag_spectrogram[i] -= min_mag;
 8003722:	4b98      	ldr	r3, [pc, #608]	; (8003984 <MeanFrequency+0x370>)
 8003724:	681a      	ldr	r2, [r3, #0]
 8003726:	4b98      	ldr	r3, [pc, #608]	; (8003988 <MeanFrequency+0x374>)
 8003728:	0092      	lsls	r2, r2, #2
 800372a:	58d2      	ldr	r2, [r2, r3]
 800372c:	4b99      	ldr	r3, [pc, #612]	; (8003994 <MeanFrequency+0x380>)
 800372e:	6819      	ldr	r1, [r3, #0]
 8003730:	4b94      	ldr	r3, [pc, #592]	; (8003984 <MeanFrequency+0x370>)
 8003732:	681c      	ldr	r4, [r3, #0]
 8003734:	1c10      	adds	r0, r2, #0
 8003736:	f7fd fbdf 	bl	8000ef8 <__aeabi_fsub>
 800373a:	1c03      	adds	r3, r0, #0
 800373c:	1c19      	adds	r1, r3, #0
 800373e:	4b92      	ldr	r3, [pc, #584]	; (8003988 <MeanFrequency+0x374>)
 8003740:	00a2      	lsls	r2, r4, #2
 8003742:	50d1      	str	r1, [r2, r3]
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 8003744:	4b8f      	ldr	r3, [pc, #572]	; (8003984 <MeanFrequency+0x370>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	1c5a      	adds	r2, r3, #1
 800374a:	4b8e      	ldr	r3, [pc, #568]	; (8003984 <MeanFrequency+0x370>)
 800374c:	601a      	str	r2, [r3, #0]
 800374e:	4b8d      	ldr	r3, [pc, #564]	; (8003984 <MeanFrequency+0x370>)
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	2b26      	cmp	r3, #38	; 0x26
 8003754:	d9e5      	bls.n	8003722 <MeanFrequency+0x10e>
	}

	for (i=0; i < MAX_INDEX_FREQ; i++) {
 8003756:	4b8b      	ldr	r3, [pc, #556]	; (8003984 <MeanFrequency+0x370>)
 8003758:	2200      	movs	r2, #0
 800375a:	601a      	str	r2, [r3, #0]
 800375c:	e02e      	b.n	80037bc <MeanFrequency+0x1a8>
		sum_mag_spectrogram[i] -= sound_correction[i]*1e7; // Remove constant background sound
 800375e:	4b89      	ldr	r3, [pc, #548]	; (8003984 <MeanFrequency+0x370>)
 8003760:	681a      	ldr	r2, [r3, #0]
 8003762:	4b89      	ldr	r3, [pc, #548]	; (8003988 <MeanFrequency+0x374>)
 8003764:	0092      	lsls	r2, r2, #2
 8003766:	58d3      	ldr	r3, [r2, r3]
 8003768:	1c18      	adds	r0, r3, #0
 800376a:	f7ff fb9d 	bl	8002ea8 <__aeabi_f2d>
 800376e:	0004      	movs	r4, r0
 8003770:	000d      	movs	r5, r1
 8003772:	4b84      	ldr	r3, [pc, #528]	; (8003984 <MeanFrequency+0x370>)
 8003774:	681a      	ldr	r2, [r3, #0]
 8003776:	4b89      	ldr	r3, [pc, #548]	; (800399c <MeanFrequency+0x388>)
 8003778:	0092      	lsls	r2, r2, #2
 800377a:	58d3      	ldr	r3, [r2, r3]
 800377c:	1c18      	adds	r0, r3, #0
 800377e:	f7ff fb93 	bl	8002ea8 <__aeabi_f2d>
 8003782:	2200      	movs	r2, #0
 8003784:	4b86      	ldr	r3, [pc, #536]	; (80039a0 <MeanFrequency+0x38c>)
 8003786:	f7fe fd17 	bl	80021b8 <__aeabi_dmul>
 800378a:	0002      	movs	r2, r0
 800378c:	000b      	movs	r3, r1
 800378e:	0020      	movs	r0, r4
 8003790:	0029      	movs	r1, r5
 8003792:	f7fe ff83 	bl	800269c <__aeabi_dsub>
 8003796:	0003      	movs	r3, r0
 8003798:	000c      	movs	r4, r1
 800379a:	0019      	movs	r1, r3
 800379c:	0022      	movs	r2, r4
 800379e:	4b79      	ldr	r3, [pc, #484]	; (8003984 <MeanFrequency+0x370>)
 80037a0:	681c      	ldr	r4, [r3, #0]
 80037a2:	0008      	movs	r0, r1
 80037a4:	0011      	movs	r1, r2
 80037a6:	f7ff fbd1 	bl	8002f4c <__aeabi_d2f>
 80037aa:	1c01      	adds	r1, r0, #0
 80037ac:	4b76      	ldr	r3, [pc, #472]	; (8003988 <MeanFrequency+0x374>)
 80037ae:	00a2      	lsls	r2, r4, #2
 80037b0:	50d1      	str	r1, [r2, r3]
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 80037b2:	4b74      	ldr	r3, [pc, #464]	; (8003984 <MeanFrequency+0x370>)
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	1c5a      	adds	r2, r3, #1
 80037b8:	4b72      	ldr	r3, [pc, #456]	; (8003984 <MeanFrequency+0x370>)
 80037ba:	601a      	str	r2, [r3, #0]
 80037bc:	4b71      	ldr	r3, [pc, #452]	; (8003984 <MeanFrequency+0x370>)
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	2b26      	cmp	r3, #38	; 0x26
 80037c2:	d9cc      	bls.n	800375e <MeanFrequency+0x14a>
	}

	min_mag = 1e26;
 80037c4:	4b73      	ldr	r3, [pc, #460]	; (8003994 <MeanFrequency+0x380>)
 80037c6:	4a74      	ldr	r2, [pc, #464]	; (8003998 <MeanFrequency+0x384>)
 80037c8:	601a      	str	r2, [r3, #0]
	for (i=10; i < MAX_INDEX_FREQ; i++) {
 80037ca:	4b6e      	ldr	r3, [pc, #440]	; (8003984 <MeanFrequency+0x370>)
 80037cc:	220a      	movs	r2, #10
 80037ce:	601a      	str	r2, [r3, #0]
 80037d0:	e018      	b.n	8003804 <MeanFrequency+0x1f0>
		if (sum_mag_spectrogram[i] < min_mag)
 80037d2:	4b6c      	ldr	r3, [pc, #432]	; (8003984 <MeanFrequency+0x370>)
 80037d4:	681a      	ldr	r2, [r3, #0]
 80037d6:	4b6c      	ldr	r3, [pc, #432]	; (8003988 <MeanFrequency+0x374>)
 80037d8:	0092      	lsls	r2, r2, #2
 80037da:	58d2      	ldr	r2, [r2, r3]
 80037dc:	4b6d      	ldr	r3, [pc, #436]	; (8003994 <MeanFrequency+0x380>)
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	1c19      	adds	r1, r3, #0
 80037e2:	1c10      	adds	r0, r2, #0
 80037e4:	f7fc fe68 	bl	80004b8 <__aeabi_fcmplt>
 80037e8:	1e03      	subs	r3, r0, #0
 80037ea:	d006      	beq.n	80037fa <MeanFrequency+0x1e6>
			min_mag = sum_mag_spectrogram[i];
 80037ec:	4b65      	ldr	r3, [pc, #404]	; (8003984 <MeanFrequency+0x370>)
 80037ee:	681a      	ldr	r2, [r3, #0]
 80037f0:	4b65      	ldr	r3, [pc, #404]	; (8003988 <MeanFrequency+0x374>)
 80037f2:	0092      	lsls	r2, r2, #2
 80037f4:	58d2      	ldr	r2, [r2, r3]
 80037f6:	4b67      	ldr	r3, [pc, #412]	; (8003994 <MeanFrequency+0x380>)
 80037f8:	601a      	str	r2, [r3, #0]
	for (i=10; i < MAX_INDEX_FREQ; i++) {
 80037fa:	4b62      	ldr	r3, [pc, #392]	; (8003984 <MeanFrequency+0x370>)
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	1c5a      	adds	r2, r3, #1
 8003800:	4b60      	ldr	r3, [pc, #384]	; (8003984 <MeanFrequency+0x370>)
 8003802:	601a      	str	r2, [r3, #0]
 8003804:	4b5f      	ldr	r3, [pc, #380]	; (8003984 <MeanFrequency+0x370>)
 8003806:	681b      	ldr	r3, [r3, #0]
 8003808:	2b26      	cmp	r3, #38	; 0x26
 800380a:	d9e2      	bls.n	80037d2 <MeanFrequency+0x1be>
	}
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 800380c:	4b5d      	ldr	r3, [pc, #372]	; (8003984 <MeanFrequency+0x370>)
 800380e:	2200      	movs	r2, #0
 8003810:	601a      	str	r2, [r3, #0]
 8003812:	e015      	b.n	8003840 <MeanFrequency+0x22c>
		sum_mag_spectrogram[i] -= min_mag;
 8003814:	4b5b      	ldr	r3, [pc, #364]	; (8003984 <MeanFrequency+0x370>)
 8003816:	681a      	ldr	r2, [r3, #0]
 8003818:	4b5b      	ldr	r3, [pc, #364]	; (8003988 <MeanFrequency+0x374>)
 800381a:	0092      	lsls	r2, r2, #2
 800381c:	58d2      	ldr	r2, [r2, r3]
 800381e:	4b5d      	ldr	r3, [pc, #372]	; (8003994 <MeanFrequency+0x380>)
 8003820:	6819      	ldr	r1, [r3, #0]
 8003822:	4b58      	ldr	r3, [pc, #352]	; (8003984 <MeanFrequency+0x370>)
 8003824:	681c      	ldr	r4, [r3, #0]
 8003826:	1c10      	adds	r0, r2, #0
 8003828:	f7fd fb66 	bl	8000ef8 <__aeabi_fsub>
 800382c:	1c03      	adds	r3, r0, #0
 800382e:	1c19      	adds	r1, r3, #0
 8003830:	4b55      	ldr	r3, [pc, #340]	; (8003988 <MeanFrequency+0x374>)
 8003832:	00a2      	lsls	r2, r4, #2
 8003834:	50d1      	str	r1, [r2, r3]
	for (i=0; i < MAX_INDEX_FREQ; i++) {
 8003836:	4b53      	ldr	r3, [pc, #332]	; (8003984 <MeanFrequency+0x370>)
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	1c5a      	adds	r2, r3, #1
 800383c:	4b51      	ldr	r3, [pc, #324]	; (8003984 <MeanFrequency+0x370>)
 800383e:	601a      	str	r2, [r3, #0]
 8003840:	4b50      	ldr	r3, [pc, #320]	; (8003984 <MeanFrequency+0x370>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	2b26      	cmp	r3, #38	; 0x26
 8003846:	d9e5      	bls.n	8003814 <MeanFrequency+0x200>
	}


	// sum_mag: sum of magnitudes for the whole time frame (frequency and time)
	sum_mag = 0;
 8003848:	4b56      	ldr	r3, [pc, #344]	; (80039a4 <MeanFrequency+0x390>)
 800384a:	2200      	movs	r2, #0
 800384c:	601a      	str	r2, [r3, #0]
	for (i=1; i < MAX_INDEX_FREQ; i++) {
 800384e:	4b4d      	ldr	r3, [pc, #308]	; (8003984 <MeanFrequency+0x370>)
 8003850:	2201      	movs	r2, #1
 8003852:	601a      	str	r2, [r3, #0]
 8003854:	e013      	b.n	800387e <MeanFrequency+0x26a>
		sum_mag += sum_mag_spectrogram[i];
 8003856:	4b4b      	ldr	r3, [pc, #300]	; (8003984 <MeanFrequency+0x370>)
 8003858:	681a      	ldr	r2, [r3, #0]
 800385a:	4b4b      	ldr	r3, [pc, #300]	; (8003988 <MeanFrequency+0x374>)
 800385c:	0092      	lsls	r2, r2, #2
 800385e:	58d2      	ldr	r2, [r2, r3]
 8003860:	4b50      	ldr	r3, [pc, #320]	; (80039a4 <MeanFrequency+0x390>)
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	1c19      	adds	r1, r3, #0
 8003866:	1c10      	adds	r0, r2, #0
 8003868:	f7fc fea2 	bl	80005b0 <__aeabi_fadd>
 800386c:	1c03      	adds	r3, r0, #0
 800386e:	1c1a      	adds	r2, r3, #0
 8003870:	4b4c      	ldr	r3, [pc, #304]	; (80039a4 <MeanFrequency+0x390>)
 8003872:	601a      	str	r2, [r3, #0]
	for (i=1; i < MAX_INDEX_FREQ; i++) {
 8003874:	4b43      	ldr	r3, [pc, #268]	; (8003984 <MeanFrequency+0x370>)
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	1c5a      	adds	r2, r3, #1
 800387a:	4b42      	ldr	r3, [pc, #264]	; (8003984 <MeanFrequency+0x370>)
 800387c:	601a      	str	r2, [r3, #0]
 800387e:	4b41      	ldr	r3, [pc, #260]	; (8003984 <MeanFrequency+0x370>)
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	2b26      	cmp	r3, #38	; 0x26
 8003884:	d9e7      	bls.n	8003856 <MeanFrequency+0x242>
	}


	// mean_f: weighted mean frequency over the whole time frame
	mean_f = 0;
 8003886:	4b48      	ldr	r3, [pc, #288]	; (80039a8 <MeanFrequency+0x394>)
 8003888:	2200      	movs	r2, #0
 800388a:	601a      	str	r2, [r3, #0]
	for (i=2; i < MAX_INDEX_FREQ; i++) {
 800388c:	4b3d      	ldr	r3, [pc, #244]	; (8003984 <MeanFrequency+0x370>)
 800388e:	2202      	movs	r2, #2
 8003890:	601a      	str	r2, [r3, #0]
 8003892:	e032      	b.n	80038fa <MeanFrequency+0x2e6>
		mean_f += sum_mag_spectrogram[i] * i * DELTA_F / sum_mag;
 8003894:	4b3b      	ldr	r3, [pc, #236]	; (8003984 <MeanFrequency+0x370>)
 8003896:	681a      	ldr	r2, [r3, #0]
 8003898:	4b3b      	ldr	r3, [pc, #236]	; (8003988 <MeanFrequency+0x374>)
 800389a:	0092      	lsls	r2, r2, #2
 800389c:	58d4      	ldr	r4, [r2, r3]
 800389e:	4b39      	ldr	r3, [pc, #228]	; (8003984 <MeanFrequency+0x370>)
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	0018      	movs	r0, r3
 80038a4:	f7fd fd22 	bl	80012ec <__aeabi_ui2f>
 80038a8:	1c03      	adds	r3, r0, #0
 80038aa:	1c19      	adds	r1, r3, #0
 80038ac:	1c20      	adds	r0, r4, #0
 80038ae:	f7fd f9f1 	bl	8000c94 <__aeabi_fmul>
 80038b2:	1c03      	adds	r3, r0, #0
 80038b4:	493d      	ldr	r1, [pc, #244]	; (80039ac <MeanFrequency+0x398>)
 80038b6:	1c18      	adds	r0, r3, #0
 80038b8:	f7fd f9ec 	bl	8000c94 <__aeabi_fmul>
 80038bc:	1c03      	adds	r3, r0, #0
 80038be:	2186      	movs	r1, #134	; 0x86
 80038c0:	05c9      	lsls	r1, r1, #23
 80038c2:	1c18      	adds	r0, r3, #0
 80038c4:	f7fd f80e 	bl	80008e4 <__aeabi_fdiv>
 80038c8:	1c03      	adds	r3, r0, #0
 80038ca:	1c1a      	adds	r2, r3, #0
 80038cc:	4b35      	ldr	r3, [pc, #212]	; (80039a4 <MeanFrequency+0x390>)
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	1c19      	adds	r1, r3, #0
 80038d2:	1c10      	adds	r0, r2, #0
 80038d4:	f7fd f806 	bl	80008e4 <__aeabi_fdiv>
 80038d8:	1c03      	adds	r3, r0, #0
 80038da:	1c1a      	adds	r2, r3, #0
 80038dc:	4b32      	ldr	r3, [pc, #200]	; (80039a8 <MeanFrequency+0x394>)
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	1c19      	adds	r1, r3, #0
 80038e2:	1c10      	adds	r0, r2, #0
 80038e4:	f7fc fe64 	bl	80005b0 <__aeabi_fadd>
 80038e8:	1c03      	adds	r3, r0, #0
 80038ea:	1c1a      	adds	r2, r3, #0
 80038ec:	4b2e      	ldr	r3, [pc, #184]	; (80039a8 <MeanFrequency+0x394>)
 80038ee:	601a      	str	r2, [r3, #0]
	for (i=2; i < MAX_INDEX_FREQ; i++) {
 80038f0:	4b24      	ldr	r3, [pc, #144]	; (8003984 <MeanFrequency+0x370>)
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	1c5a      	adds	r2, r3, #1
 80038f6:	4b23      	ldr	r3, [pc, #140]	; (8003984 <MeanFrequency+0x370>)
 80038f8:	601a      	str	r2, [r3, #0]
 80038fa:	4b22      	ldr	r3, [pc, #136]	; (8003984 <MeanFrequency+0x370>)
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	2b26      	cmp	r3, #38	; 0x26
 8003900:	d9c8      	bls.n	8003894 <MeanFrequency+0x280>
		//printf("%1.0f ", sum_mag_spectrogram[i]/1e7);
	}

	// max_mag: max magnitude has to be > threshold
	max_mag = 0;
 8003902:	4b2b      	ldr	r3, [pc, #172]	; (80039b0 <MeanFrequency+0x39c>)
 8003904:	2200      	movs	r2, #0
 8003906:	601a      	str	r2, [r3, #0]
	for (i=2; i < MAX_INDEX_FREQ; i++) {
 8003908:	4b1e      	ldr	r3, [pc, #120]	; (8003984 <MeanFrequency+0x370>)
 800390a:	2202      	movs	r2, #2
 800390c:	601a      	str	r2, [r3, #0]
 800390e:	e018      	b.n	8003942 <MeanFrequency+0x32e>
		if (sum_mag_spectrogram[i] > max_mag)
 8003910:	4b1c      	ldr	r3, [pc, #112]	; (8003984 <MeanFrequency+0x370>)
 8003912:	681a      	ldr	r2, [r3, #0]
 8003914:	4b1c      	ldr	r3, [pc, #112]	; (8003988 <MeanFrequency+0x374>)
 8003916:	0092      	lsls	r2, r2, #2
 8003918:	58d2      	ldr	r2, [r2, r3]
 800391a:	4b25      	ldr	r3, [pc, #148]	; (80039b0 <MeanFrequency+0x39c>)
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	1c19      	adds	r1, r3, #0
 8003920:	1c10      	adds	r0, r2, #0
 8003922:	f7fc fddd 	bl	80004e0 <__aeabi_fcmpgt>
 8003926:	1e03      	subs	r3, r0, #0
 8003928:	d006      	beq.n	8003938 <MeanFrequency+0x324>
			max_mag = sum_mag_spectrogram[i];
 800392a:	4b16      	ldr	r3, [pc, #88]	; (8003984 <MeanFrequency+0x370>)
 800392c:	681a      	ldr	r2, [r3, #0]
 800392e:	4b16      	ldr	r3, [pc, #88]	; (8003988 <MeanFrequency+0x374>)
 8003930:	0092      	lsls	r2, r2, #2
 8003932:	58d2      	ldr	r2, [r2, r3]
 8003934:	4b1e      	ldr	r3, [pc, #120]	; (80039b0 <MeanFrequency+0x39c>)
 8003936:	601a      	str	r2, [r3, #0]
	for (i=2; i < MAX_INDEX_FREQ; i++) {
 8003938:	4b12      	ldr	r3, [pc, #72]	; (8003984 <MeanFrequency+0x370>)
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	1c5a      	adds	r2, r3, #1
 800393e:	4b11      	ldr	r3, [pc, #68]	; (8003984 <MeanFrequency+0x370>)
 8003940:	601a      	str	r2, [r3, #0]
 8003942:	4b10      	ldr	r3, [pc, #64]	; (8003984 <MeanFrequency+0x370>)
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	2b26      	cmp	r3, #38	; 0x26
 8003948:	d9e2      	bls.n	8003910 <MeanFrequency+0x2fc>
	}
	no_bird = 0;
 800394a:	4b1a      	ldr	r3, [pc, #104]	; (80039b4 <MeanFrequency+0x3a0>)
 800394c:	2200      	movs	r2, #0
 800394e:	701a      	strb	r2, [r3, #0]
	if (max_mag/1e7 < FREQ_MAG_TRESH) {
 8003950:	4b17      	ldr	r3, [pc, #92]	; (80039b0 <MeanFrequency+0x39c>)
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	1c18      	adds	r0, r3, #0
 8003956:	f7ff faa7 	bl	8002ea8 <__aeabi_f2d>
 800395a:	2200      	movs	r2, #0
 800395c:	4b10      	ldr	r3, [pc, #64]	; (80039a0 <MeanFrequency+0x38c>)
 800395e:	f7fe f821 	bl	80019a4 <__aeabi_ddiv>
 8003962:	0003      	movs	r3, r0
 8003964:	000c      	movs	r4, r1
 8003966:	0018      	movs	r0, r3
 8003968:	0021      	movs	r1, r4
 800396a:	2200      	movs	r2, #0
 800396c:	4b12      	ldr	r3, [pc, #72]	; (80039b8 <MeanFrequency+0x3a4>)
 800396e:	f7fc fd69 	bl	8000444 <__aeabi_dcmplt>
 8003972:	1e03      	subs	r3, r0, #0
 8003974:	d100      	bne.n	8003978 <MeanFrequency+0x364>
		no_bird = 1;
	}
}
 8003976:	e002      	b.n	800397e <MeanFrequency+0x36a>
		no_bird = 1;
 8003978:	4b0e      	ldr	r3, [pc, #56]	; (80039b4 <MeanFrequency+0x3a0>)
 800397a:	2201      	movs	r2, #1
 800397c:	701a      	strb	r2, [r3, #0]
}
 800397e:	46c0      	nop			; (mov r8, r8)
 8003980:	46bd      	mov	sp, r7
 8003982:	bdb0      	pop	{r4, r5, r7, pc}
 8003984:	20003b08 	.word	0x20003b08
 8003988:	20003b70 	.word	0x20003b70
 800398c:	20000780 	.word	0x20000780
 8003990:	20000a10 	.word	0x20000a10
 8003994:	20003ad4 	.word	0x20003ad4
 8003998:	6aa56fa6 	.word	0x6aa56fa6
 800399c:	20000060 	.word	0x20000060
 80039a0:	416312d0 	.word	0x416312d0
 80039a4:	200042a8 	.word	0x200042a8
 80039a8:	20000778 	.word	0x20000778
 80039ac:	46ea6000 	.word	0x46ea6000
 80039b0:	20000784 	.word	0x20000784
 80039b4:	20004310 	.word	0x20004310
 80039b8:	4072c000 	.word	0x4072c000

080039bc <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 80039bc:	b590      	push	{r4, r7, lr}
 80039be:	b09d      	sub	sp, #116	; 0x74
 80039c0:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80039c2:	2438      	movs	r4, #56	; 0x38
 80039c4:	193b      	adds	r3, r7, r4
 80039c6:	0018      	movs	r0, r3
 80039c8:	2338      	movs	r3, #56	; 0x38
 80039ca:	001a      	movs	r2, r3
 80039cc:	2100      	movs	r1, #0
 80039ce:	f005 fd6d 	bl	80094ac <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80039d2:	2324      	movs	r3, #36	; 0x24
 80039d4:	18fb      	adds	r3, r7, r3
 80039d6:	0018      	movs	r0, r3
 80039d8:	2314      	movs	r3, #20
 80039da:	001a      	movs	r2, r3
 80039dc:	2100      	movs	r1, #0
 80039de:	f005 fd65 	bl	80094ac <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80039e2:	003b      	movs	r3, r7
 80039e4:	0018      	movs	r0, r3
 80039e6:	2324      	movs	r3, #36	; 0x24
 80039e8:	001a      	movs	r2, r3
 80039ea:	2100      	movs	r1, #0
 80039ec:	f005 fd5e 	bl	80094ac <memset>

	/** Configure the main internal regulator output voltage
	 */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80039f0:	4b2b      	ldr	r3, [pc, #172]	; (8003aa0 <SystemClock_Config+0xe4>)
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	4a2b      	ldr	r2, [pc, #172]	; (8003aa4 <SystemClock_Config+0xe8>)
 80039f6:	401a      	ands	r2, r3
 80039f8:	4b29      	ldr	r3, [pc, #164]	; (8003aa0 <SystemClock_Config+0xe4>)
 80039fa:	2180      	movs	r1, #128	; 0x80
 80039fc:	0109      	lsls	r1, r1, #4
 80039fe:	430a      	orrs	r2, r1
 8003a00:	601a      	str	r2, [r3, #0]
	/** Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 8003a02:	0021      	movs	r1, r4
 8003a04:	187b      	adds	r3, r7, r1
 8003a06:	220a      	movs	r2, #10
 8003a08:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003a0a:	187b      	adds	r3, r7, r1
 8003a0c:	2201      	movs	r2, #1
 8003a0e:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003a10:	187b      	adds	r3, r7, r1
 8003a12:	2210      	movs	r2, #16
 8003a14:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8003a16:	187b      	adds	r3, r7, r1
 8003a18:	2201      	movs	r2, #1
 8003a1a:	615a      	str	r2, [r3, #20]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003a1c:	187b      	adds	r3, r7, r1
 8003a1e:	2202      	movs	r2, #2
 8003a20:	629a      	str	r2, [r3, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003a22:	187b      	adds	r3, r7, r1
 8003a24:	2200      	movs	r2, #0
 8003a26:	62da      	str	r2, [r3, #44]	; 0x2c
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_6;
 8003a28:	187b      	adds	r3, r7, r1
 8003a2a:	2280      	movs	r2, #128	; 0x80
 8003a2c:	0312      	lsls	r2, r2, #12
 8003a2e:	631a      	str	r2, [r3, #48]	; 0x30
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_3;
 8003a30:	187b      	adds	r3, r7, r1
 8003a32:	2280      	movs	r2, #128	; 0x80
 8003a34:	0412      	lsls	r2, r2, #16
 8003a36:	635a      	str	r2, [r3, #52]	; 0x34
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003a38:	187b      	adds	r3, r7, r1
 8003a3a:	0018      	movs	r0, r3
 8003a3c:	f003 fe20 	bl	8007680 <HAL_RCC_OscConfig>
 8003a40:	1e03      	subs	r3, r0, #0
 8003a42:	d001      	beq.n	8003a48 <SystemClock_Config+0x8c>
	{
		Error_Handler();
 8003a44:	f000 fa1c 	bl	8003e80 <Error_Handler>
	}
	/** Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003a48:	2124      	movs	r1, #36	; 0x24
 8003a4a:	187b      	adds	r3, r7, r1
 8003a4c:	220f      	movs	r2, #15
 8003a4e:	601a      	str	r2, [r3, #0]
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003a50:	187b      	adds	r3, r7, r1
 8003a52:	2203      	movs	r2, #3
 8003a54:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003a56:	187b      	adds	r3, r7, r1
 8003a58:	2200      	movs	r2, #0
 8003a5a:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003a5c:	187b      	adds	r3, r7, r1
 8003a5e:	2200      	movs	r2, #0
 8003a60:	60da      	str	r2, [r3, #12]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003a62:	187b      	adds	r3, r7, r1
 8003a64:	2200      	movs	r2, #0
 8003a66:	611a      	str	r2, [r3, #16]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003a68:	187b      	adds	r3, r7, r1
 8003a6a:	2101      	movs	r1, #1
 8003a6c:	0018      	movs	r0, r3
 8003a6e:	f004 f9d7 	bl	8007e20 <HAL_RCC_ClockConfig>
 8003a72:	1e03      	subs	r3, r0, #0
 8003a74:	d001      	beq.n	8003a7a <SystemClock_Config+0xbe>
	{
		Error_Handler();
 8003a76:	f000 fa03 	bl	8003e80 <Error_Handler>
	}
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8003a7a:	003b      	movs	r3, r7
 8003a7c:	2220      	movs	r2, #32
 8003a7e:	601a      	str	r2, [r3, #0]
	PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8003a80:	003b      	movs	r3, r7
 8003a82:	2280      	movs	r2, #128	; 0x80
 8003a84:	0292      	lsls	r2, r2, #10
 8003a86:	605a      	str	r2, [r3, #4]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003a88:	003b      	movs	r3, r7
 8003a8a:	0018      	movs	r0, r3
 8003a8c:	f004 fb76 	bl	800817c <HAL_RCCEx_PeriphCLKConfig>
 8003a90:	1e03      	subs	r3, r0, #0
 8003a92:	d001      	beq.n	8003a98 <SystemClock_Config+0xdc>
	{
		Error_Handler();
 8003a94:	f000 f9f4 	bl	8003e80 <Error_Handler>
	}
}
 8003a98:	46c0      	nop			; (mov r8, r8)
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	b01d      	add	sp, #116	; 0x74
 8003a9e:	bd90      	pop	{r4, r7, pc}
 8003aa0:	40007000 	.word	0x40007000
 8003aa4:	ffffe7ff 	.word	0xffffe7ff

08003aa8 <MX_ADC_Init>:
 * @brief ADC Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC_Init(void)
{
 8003aa8:	b580      	push	{r7, lr}
 8003aaa:	b082      	sub	sp, #8
 8003aac:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC_Init 0 */

	/* USER CODE END ADC_Init 0 */

	ADC_ChannelConfTypeDef sConfig = {0};
 8003aae:	003b      	movs	r3, r7
 8003ab0:	0018      	movs	r0, r3
 8003ab2:	2308      	movs	r3, #8
 8003ab4:	001a      	movs	r2, r3
 8003ab6:	2100      	movs	r1, #0
 8003ab8:	f005 fcf8 	bl	80094ac <memset>
	/* USER CODE BEGIN ADC_Init 1 */

	/* USER CODE END ADC_Init 1 */
	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc.Instance = ADC1;
 8003abc:	4b2a      	ldr	r3, [pc, #168]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003abe:	4a2b      	ldr	r2, [pc, #172]	; (8003b6c <MX_ADC_Init+0xc4>)
 8003ac0:	601a      	str	r2, [r3, #0]
	hadc.Init.OversamplingMode = DISABLE;
 8003ac2:	4b29      	ldr	r3, [pc, #164]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003ac4:	2200      	movs	r2, #0
 8003ac6:	63da      	str	r2, [r3, #60]	; 0x3c
	hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8003ac8:	4b27      	ldr	r3, [pc, #156]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003aca:	2280      	movs	r2, #128	; 0x80
 8003acc:	0612      	lsls	r2, r2, #24
 8003ace:	605a      	str	r2, [r3, #4]
	hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8003ad0:	4b25      	ldr	r3, [pc, #148]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	609a      	str	r2, [r3, #8]
	hadc.Init.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 8003ad6:	4b24      	ldr	r3, [pc, #144]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003ad8:	2202      	movs	r2, #2
 8003ada:	639a      	str	r2, [r3, #56]	; 0x38
	hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 8003adc:	4b22      	ldr	r3, [pc, #136]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003ade:	2201      	movs	r2, #1
 8003ae0:	611a      	str	r2, [r3, #16]
	hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8003ae2:	4b21      	ldr	r3, [pc, #132]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	60da      	str	r2, [r3, #12]
	hadc.Init.ContinuousConvMode = ENABLE;
 8003ae8:	4b1f      	ldr	r3, [pc, #124]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003aea:	2220      	movs	r2, #32
 8003aec:	2101      	movs	r1, #1
 8003aee:	5499      	strb	r1, [r3, r2]
	hadc.Init.DiscontinuousConvMode = DISABLE;
 8003af0:	4b1d      	ldr	r3, [pc, #116]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003af2:	2221      	movs	r2, #33	; 0x21
 8003af4:	2100      	movs	r1, #0
 8003af6:	5499      	strb	r1, [r3, r2]
	hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8003af8:	4b1b      	ldr	r3, [pc, #108]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003afa:	2200      	movs	r2, #0
 8003afc:	629a      	str	r2, [r3, #40]	; 0x28
	hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8003afe:	4b1a      	ldr	r3, [pc, #104]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b00:	22c2      	movs	r2, #194	; 0xc2
 8003b02:	32ff      	adds	r2, #255	; 0xff
 8003b04:	625a      	str	r2, [r3, #36]	; 0x24
	hadc.Init.DMAContinuousRequests = DISABLE;
 8003b06:	4b18      	ldr	r3, [pc, #96]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b08:	222c      	movs	r2, #44	; 0x2c
 8003b0a:	2100      	movs	r1, #0
 8003b0c:	5499      	strb	r1, [r3, r2]
	hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8003b0e:	4b16      	ldr	r3, [pc, #88]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b10:	2204      	movs	r2, #4
 8003b12:	615a      	str	r2, [r3, #20]
	hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8003b14:	4b14      	ldr	r3, [pc, #80]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b16:	2200      	movs	r2, #0
 8003b18:	631a      	str	r2, [r3, #48]	; 0x30
	hadc.Init.LowPowerAutoWait = DISABLE;
 8003b1a:	4b13      	ldr	r3, [pc, #76]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b1c:	2200      	movs	r2, #0
 8003b1e:	619a      	str	r2, [r3, #24]
	hadc.Init.LowPowerFrequencyMode = DISABLE;
 8003b20:	4b11      	ldr	r3, [pc, #68]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b22:	2200      	movs	r2, #0
 8003b24:	635a      	str	r2, [r3, #52]	; 0x34
	hadc.Init.LowPowerAutoPowerOff = DISABLE;
 8003b26:	4b10      	ldr	r3, [pc, #64]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b28:	2200      	movs	r2, #0
 8003b2a:	61da      	str	r2, [r3, #28]
	if (HAL_ADC_Init(&hadc) != HAL_OK)
 8003b2c:	4b0e      	ldr	r3, [pc, #56]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b2e:	0018      	movs	r0, r3
 8003b30:	f002 ff9c 	bl	8006a6c <HAL_ADC_Init>
 8003b34:	1e03      	subs	r3, r0, #0
 8003b36:	d001      	beq.n	8003b3c <MX_ADC_Init+0x94>
	{
		Error_Handler();
 8003b38:	f000 f9a2 	bl	8003e80 <Error_Handler>
	}
	/** Configure for the selected ADC regular channel to be converted.
	 */
	sConfig.Channel = ADC_CHANNEL_2;
 8003b3c:	003b      	movs	r3, r7
 8003b3e:	4a0c      	ldr	r2, [pc, #48]	; (8003b70 <MX_ADC_Init+0xc8>)
 8003b40:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 8003b42:	003b      	movs	r3, r7
 8003b44:	2280      	movs	r2, #128	; 0x80
 8003b46:	0152      	lsls	r2, r2, #5
 8003b48:	605a      	str	r2, [r3, #4]
	if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8003b4a:	003a      	movs	r2, r7
 8003b4c:	4b06      	ldr	r3, [pc, #24]	; (8003b68 <MX_ADC_Init+0xc0>)
 8003b4e:	0011      	movs	r1, r2
 8003b50:	0018      	movs	r0, r3
 8003b52:	f003 f9f5 	bl	8006f40 <HAL_ADC_ConfigChannel>
 8003b56:	1e03      	subs	r3, r0, #0
 8003b58:	d001      	beq.n	8003b5e <MX_ADC_Init+0xb6>
	{
		Error_Handler();
 8003b5a:	f000 f991 	bl	8003e80 <Error_Handler>
  }*/
	/* USER CODE BEGIN ADC_Init 2 */

	/* USER CODE END ADC_Init 2 */

}
 8003b5e:	46c0      	nop			; (mov r8, r8)
 8003b60:	46bd      	mov	sp, r7
 8003b62:	b002      	add	sp, #8
 8003b64:	bd80      	pop	{r7, pc}
 8003b66:	46c0      	nop			; (mov r8, r8)
 8003b68:	200042b4 	.word	0x200042b4
 8003b6c:	40012400 	.word	0x40012400
 8003b70:	08000004 	.word	0x08000004

08003b74 <MX_RTC_Init>:
 * @brief RTC Initialization Function
 * @param None
 * @retval None
 */
static void MX_RTC_Init(void)
{
 8003b74:	b580      	push	{r7, lr}
 8003b76:	b090      	sub	sp, #64	; 0x40
 8003b78:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN RTC_Init 0 */

	/* USER CODE END RTC_Init 0 */

	RTC_TimeTypeDef sTime = {0};
 8003b7a:	232c      	movs	r3, #44	; 0x2c
 8003b7c:	18fb      	adds	r3, r7, r3
 8003b7e:	0018      	movs	r0, r3
 8003b80:	2314      	movs	r3, #20
 8003b82:	001a      	movs	r2, r3
 8003b84:	2100      	movs	r1, #0
 8003b86:	f005 fc91 	bl	80094ac <memset>
	RTC_DateTypeDef sDate = {0};
 8003b8a:	2328      	movs	r3, #40	; 0x28
 8003b8c:	18fb      	adds	r3, r7, r3
 8003b8e:	2200      	movs	r2, #0
 8003b90:	601a      	str	r2, [r3, #0]
	RTC_AlarmTypeDef sAlarm = {0};
 8003b92:	003b      	movs	r3, r7
 8003b94:	0018      	movs	r0, r3
 8003b96:	2328      	movs	r3, #40	; 0x28
 8003b98:	001a      	movs	r2, r3
 8003b9a:	2100      	movs	r1, #0
 8003b9c:	f005 fc86 	bl	80094ac <memset>
	/* USER CODE BEGIN RTC_Init 1 */

	/* USER CODE END RTC_Init 1 */
	/** Initialize RTC Only
	 */
	hrtc.Instance = RTC;
 8003ba0:	4b41      	ldr	r3, [pc, #260]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003ba2:	4a42      	ldr	r2, [pc, #264]	; (8003cac <MX_RTC_Init+0x138>)
 8003ba4:	601a      	str	r2, [r3, #0]
	hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8003ba6:	4b40      	ldr	r3, [pc, #256]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003ba8:	2200      	movs	r2, #0
 8003baa:	605a      	str	r2, [r3, #4]
	hrtc.Init.AsynchPrediv = 31;
 8003bac:	4b3e      	ldr	r3, [pc, #248]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bae:	221f      	movs	r2, #31
 8003bb0:	609a      	str	r2, [r3, #8]
	hrtc.Init.SynchPrediv = 1023;
 8003bb2:	4b3d      	ldr	r3, [pc, #244]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bb4:	4a3e      	ldr	r2, [pc, #248]	; (8003cb0 <MX_RTC_Init+0x13c>)
 8003bb6:	60da      	str	r2, [r3, #12]
	hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8003bb8:	4b3b      	ldr	r3, [pc, #236]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bba:	2200      	movs	r2, #0
 8003bbc:	611a      	str	r2, [r3, #16]
	hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8003bbe:	4b3a      	ldr	r3, [pc, #232]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	615a      	str	r2, [r3, #20]
	hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8003bc4:	4b38      	ldr	r3, [pc, #224]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	619a      	str	r2, [r3, #24]
	hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8003bca:	4b37      	ldr	r3, [pc, #220]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bcc:	2200      	movs	r2, #0
 8003bce:	61da      	str	r2, [r3, #28]
	if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8003bd0:	4b35      	ldr	r3, [pc, #212]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003bd2:	0018      	movs	r0, r3
 8003bd4:	f004 fc2a 	bl	800842c <HAL_RTC_Init>
 8003bd8:	1e03      	subs	r3, r0, #0
 8003bda:	d001      	beq.n	8003be0 <MX_RTC_Init+0x6c>
	{
		Error_Handler();
 8003bdc:	f000 f950 	bl	8003e80 <Error_Handler>

	/* USER CODE END Check_RTC_BKUP */

	/** Initialize RTC and set the Time and Date
	 */
	sTime.Hours = 0;
 8003be0:	212c      	movs	r1, #44	; 0x2c
 8003be2:	187b      	adds	r3, r7, r1
 8003be4:	2200      	movs	r2, #0
 8003be6:	701a      	strb	r2, [r3, #0]
	sTime.Minutes = 0;
 8003be8:	187b      	adds	r3, r7, r1
 8003bea:	2200      	movs	r2, #0
 8003bec:	705a      	strb	r2, [r3, #1]
	sTime.Seconds = 0;
 8003bee:	187b      	adds	r3, r7, r1
 8003bf0:	2200      	movs	r2, #0
 8003bf2:	709a      	strb	r2, [r3, #2]
	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8003bf4:	187b      	adds	r3, r7, r1
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	60da      	str	r2, [r3, #12]
	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8003bfa:	187b      	adds	r3, r7, r1
 8003bfc:	2200      	movs	r2, #0
 8003bfe:	611a      	str	r2, [r3, #16]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 8003c00:	1879      	adds	r1, r7, r1
 8003c02:	4b29      	ldr	r3, [pc, #164]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003c04:	2200      	movs	r2, #0
 8003c06:	0018      	movs	r0, r3
 8003c08:	f004 fcae 	bl	8008568 <HAL_RTC_SetTime>
 8003c0c:	1e03      	subs	r3, r0, #0
 8003c0e:	d001      	beq.n	8003c14 <MX_RTC_Init+0xa0>
	{
		Error_Handler();
 8003c10:	f000 f936 	bl	8003e80 <Error_Handler>
	}
	sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8003c14:	2128      	movs	r1, #40	; 0x28
 8003c16:	187b      	adds	r3, r7, r1
 8003c18:	2201      	movs	r2, #1
 8003c1a:	701a      	strb	r2, [r3, #0]
	sDate.Month = RTC_MONTH_JANUARY;
 8003c1c:	187b      	adds	r3, r7, r1
 8003c1e:	2201      	movs	r2, #1
 8003c20:	705a      	strb	r2, [r3, #1]
	sDate.Date = 1;
 8003c22:	187b      	adds	r3, r7, r1
 8003c24:	2201      	movs	r2, #1
 8003c26:	709a      	strb	r2, [r3, #2]
	sDate.Year = 0;
 8003c28:	187b      	adds	r3, r7, r1
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	70da      	strb	r2, [r3, #3]

	if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BIN) != HAL_OK)
 8003c2e:	1879      	adds	r1, r7, r1
 8003c30:	4b1d      	ldr	r3, [pc, #116]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003c32:	2200      	movs	r2, #0
 8003c34:	0018      	movs	r0, r3
 8003c36:	f004 fd5b 	bl	80086f0 <HAL_RTC_SetDate>
 8003c3a:	1e03      	subs	r3, r0, #0
 8003c3c:	d001      	beq.n	8003c42 <MX_RTC_Init+0xce>
	{
		Error_Handler();
 8003c3e:	f000 f91f 	bl	8003e80 <Error_Handler>
	}
	/** Enable the Alarm A
	 */
	sAlarm.AlarmTime.Hours = 0;
 8003c42:	003b      	movs	r3, r7
 8003c44:	2200      	movs	r2, #0
 8003c46:	701a      	strb	r2, [r3, #0]
	sAlarm.AlarmTime.Minutes = 0;
 8003c48:	003b      	movs	r3, r7
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	705a      	strb	r2, [r3, #1]
	sAlarm.AlarmTime.Seconds = 0;
 8003c4e:	003b      	movs	r3, r7
 8003c50:	2200      	movs	r2, #0
 8003c52:	709a      	strb	r2, [r3, #2]
	sAlarm.AlarmTime.SubSeconds = 0;
 8003c54:	003b      	movs	r3, r7
 8003c56:	2200      	movs	r2, #0
 8003c58:	605a      	str	r2, [r3, #4]
	sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8003c5a:	003b      	movs	r3, r7
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	60da      	str	r2, [r3, #12]
	sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8003c60:	003b      	movs	r3, r7
 8003c62:	2200      	movs	r2, #0
 8003c64:	611a      	str	r2, [r3, #16]
	sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 8003c66:	003b      	movs	r3, r7
 8003c68:	2200      	movs	r2, #0
 8003c6a:	615a      	str	r2, [r3, #20]
	sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_NONE;
 8003c6c:	003b      	movs	r3, r7
 8003c6e:	22f0      	movs	r2, #240	; 0xf0
 8003c70:	0512      	lsls	r2, r2, #20
 8003c72:	619a      	str	r2, [r3, #24]
	sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 8003c74:	003b      	movs	r3, r7
 8003c76:	2200      	movs	r2, #0
 8003c78:	61da      	str	r2, [r3, #28]
	sAlarm.AlarmDateWeekDay = 1;
 8003c7a:	003b      	movs	r3, r7
 8003c7c:	2220      	movs	r2, #32
 8003c7e:	2101      	movs	r1, #1
 8003c80:	5499      	strb	r1, [r3, r2]
	sAlarm.Alarm = RTC_ALARM_A;
 8003c82:	003b      	movs	r3, r7
 8003c84:	2280      	movs	r2, #128	; 0x80
 8003c86:	0052      	lsls	r2, r2, #1
 8003c88:	625a      	str	r2, [r3, #36]	; 0x24
	if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BIN) != HAL_OK)
 8003c8a:	0039      	movs	r1, r7
 8003c8c:	4b06      	ldr	r3, [pc, #24]	; (8003ca8 <MX_RTC_Init+0x134>)
 8003c8e:	2200      	movs	r2, #0
 8003c90:	0018      	movs	r0, r3
 8003c92:	f004 fddb 	bl	800884c <HAL_RTC_SetAlarm_IT>
 8003c96:	1e03      	subs	r3, r0, #0
 8003c98:	d001      	beq.n	8003c9e <MX_RTC_Init+0x12a>
	{
		Error_Handler();
 8003c9a:	f000 f8f1 	bl	8003e80 <Error_Handler>
	}
	/* USER CODE BEGIN RTC_Init 2 */

	/* USER CODE END RTC_Init 2 */

}
 8003c9e:	46c0      	nop			; (mov r8, r8)
 8003ca0:	46bd      	mov	sp, r7
 8003ca2:	b010      	add	sp, #64	; 0x40
 8003ca4:	bd80      	pop	{r7, pc}
 8003ca6:	46c0      	nop			; (mov r8, r8)
 8003ca8:	20003c10 	.word	0x20003c10
 8003cac:	40002800 	.word	0x40002800
 8003cb0:	000003ff 	.word	0x000003ff

08003cb4 <MX_SPI1_Init>:
 * @brief SPI1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI1_Init(void)
{
 8003cb4:	b580      	push	{r7, lr}
 8003cb6:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI1_Init 1 */

	/* USER CODE END SPI1_Init 1 */
	/* SPI1 parameter configuration*/
	hspi1.Instance = SPI1;
 8003cb8:	4b18      	ldr	r3, [pc, #96]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cba:	4a19      	ldr	r2, [pc, #100]	; (8003d20 <MX_SPI1_Init+0x6c>)
 8003cbc:	601a      	str	r2, [r3, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 8003cbe:	4b17      	ldr	r3, [pc, #92]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cc0:	2282      	movs	r2, #130	; 0x82
 8003cc2:	0052      	lsls	r2, r2, #1
 8003cc4:	605a      	str	r2, [r3, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8003cc6:	4b15      	ldr	r3, [pc, #84]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cc8:	2200      	movs	r2, #0
 8003cca:	609a      	str	r2, [r3, #8]
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003ccc:	4b13      	ldr	r3, [pc, #76]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cce:	2200      	movs	r2, #0
 8003cd0:	60da      	str	r2, [r3, #12]
	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003cd2:	4b12      	ldr	r3, [pc, #72]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cd4:	2200      	movs	r2, #0
 8003cd6:	611a      	str	r2, [r3, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003cd8:	4b10      	ldr	r3, [pc, #64]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cda:	2200      	movs	r2, #0
 8003cdc:	615a      	str	r2, [r3, #20]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 8003cde:	4b0f      	ldr	r3, [pc, #60]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003ce0:	2280      	movs	r2, #128	; 0x80
 8003ce2:	0092      	lsls	r2, r2, #2
 8003ce4:	619a      	str	r2, [r3, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8003ce6:	4b0d      	ldr	r3, [pc, #52]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003ce8:	2220      	movs	r2, #32
 8003cea:	61da      	str	r2, [r3, #28]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003cec:	4b0b      	ldr	r3, [pc, #44]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cee:	2200      	movs	r2, #0
 8003cf0:	621a      	str	r2, [r3, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8003cf2:	4b0a      	ldr	r3, [pc, #40]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cf4:	2200      	movs	r2, #0
 8003cf6:	625a      	str	r2, [r3, #36]	; 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003cf8:	4b08      	ldr	r3, [pc, #32]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003cfa:	2200      	movs	r2, #0
 8003cfc:	629a      	str	r2, [r3, #40]	; 0x28
	hspi1.Init.CRCPolynomial = 7;
 8003cfe:	4b07      	ldr	r3, [pc, #28]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003d00:	2207      	movs	r2, #7
 8003d02:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8003d04:	4b05      	ldr	r3, [pc, #20]	; (8003d1c <MX_SPI1_Init+0x68>)
 8003d06:	0018      	movs	r0, r3
 8003d08:	f004 ffc4 	bl	8008c94 <HAL_SPI_Init>
 8003d0c:	1e03      	subs	r3, r0, #0
 8003d0e:	d001      	beq.n	8003d14 <MX_SPI1_Init+0x60>
	{
		Error_Handler();
 8003d10:	f000 f8b6 	bl	8003e80 <Error_Handler>
	}
	/* USER CODE BEGIN SPI1_Init 2 */

	/* USER CODE END SPI1_Init 2 */

}
 8003d14:	46c0      	nop			; (mov r8, r8)
 8003d16:	46bd      	mov	sp, r7
 8003d18:	bd80      	pop	{r7, pc}
 8003d1a:	46c0      	nop			; (mov r8, r8)
 8003d1c:	20004250 	.word	0x20004250
 8003d20:	40013000 	.word	0x40013000

08003d24 <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 8003d24:	b590      	push	{r4, r7, lr}
 8003d26:	b08b      	sub	sp, #44	; 0x2c
 8003d28:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003d2a:	2414      	movs	r4, #20
 8003d2c:	193b      	adds	r3, r7, r4
 8003d2e:	0018      	movs	r0, r3
 8003d30:	2314      	movs	r3, #20
 8003d32:	001a      	movs	r2, r3
 8003d34:	2100      	movs	r1, #0
 8003d36:	f005 fbb9 	bl	80094ac <memset>

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8003d3a:	4b4c      	ldr	r3, [pc, #304]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d3c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003d3e:	4b4b      	ldr	r3, [pc, #300]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d40:	2101      	movs	r1, #1
 8003d42:	430a      	orrs	r2, r1
 8003d44:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d46:	4b49      	ldr	r3, [pc, #292]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d4a:	2201      	movs	r2, #1
 8003d4c:	4013      	ands	r3, r2
 8003d4e:	613b      	str	r3, [r7, #16]
 8003d50:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8003d52:	4b46      	ldr	r3, [pc, #280]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003d56:	4b45      	ldr	r3, [pc, #276]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d58:	2102      	movs	r1, #2
 8003d5a:	430a      	orrs	r2, r1
 8003d5c:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d5e:	4b43      	ldr	r3, [pc, #268]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d62:	2202      	movs	r2, #2
 8003d64:	4013      	ands	r3, r2
 8003d66:	60fb      	str	r3, [r7, #12]
 8003d68:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8003d6a:	4b40      	ldr	r3, [pc, #256]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d6c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003d6e:	4b3f      	ldr	r3, [pc, #252]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d70:	2104      	movs	r1, #4
 8003d72:	430a      	orrs	r2, r1
 8003d74:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d76:	4b3d      	ldr	r3, [pc, #244]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d7a:	2204      	movs	r2, #4
 8003d7c:	4013      	ands	r3, r2
 8003d7e:	60bb      	str	r3, [r7, #8]
 8003d80:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8003d82:	4b3a      	ldr	r3, [pc, #232]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d84:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003d86:	4b39      	ldr	r3, [pc, #228]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d88:	2180      	movs	r1, #128	; 0x80
 8003d8a:	430a      	orrs	r2, r1
 8003d8c:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d8e:	4b37      	ldr	r3, [pc, #220]	; (8003e6c <MX_GPIO_Init+0x148>)
 8003d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d92:	2280      	movs	r2, #128	; 0x80
 8003d94:	4013      	ands	r3, r2
 8003d96:	607b      	str	r3, [r7, #4]
 8003d98:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, PA15_RESERVED_Pin|PA12_RESERVED_Pin|PA1_RESERVED_Pin, GPIO_PIN_RESET);
 8003d9a:	4935      	ldr	r1, [pc, #212]	; (8003e70 <MX_GPIO_Init+0x14c>)
 8003d9c:	23a0      	movs	r3, #160	; 0xa0
 8003d9e:	05db      	lsls	r3, r3, #23
 8003da0:	2200      	movs	r2, #0
 8003da2:	0018      	movs	r0, r3
 8003da4:	f003 fc28 	bl	80075f8 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOC, PC1_RESERVED_Pin|PC0_RESERVED_Pin|PC2_RESERVED_Pin, GPIO_PIN_RESET);
 8003da8:	4b32      	ldr	r3, [pc, #200]	; (8003e74 <MX_GPIO_Init+0x150>)
 8003daa:	2200      	movs	r2, #0
 8003dac:	2107      	movs	r1, #7
 8003dae:	0018      	movs	r0, r3
 8003db0:	f003 fc22 	bl	80075f8 <HAL_GPIO_WritePin>

	/*Configure GPIO pins : PA15_RESERVED_Pin PA12_RESERVED_Pin PA1_RESERVED_Pin */
	GPIO_InitStruct.Pin = PA15_RESERVED_Pin|PA12_RESERVED_Pin|PA1_RESERVED_Pin;
 8003db4:	193b      	adds	r3, r7, r4
 8003db6:	4a2e      	ldr	r2, [pc, #184]	; (8003e70 <MX_GPIO_Init+0x14c>)
 8003db8:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003dba:	193b      	adds	r3, r7, r4
 8003dbc:	2201      	movs	r2, #1
 8003dbe:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003dc0:	193b      	adds	r3, r7, r4
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003dc6:	193b      	adds	r3, r7, r4
 8003dc8:	2202      	movs	r2, #2
 8003dca:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003dcc:	193a      	adds	r2, r7, r4
 8003dce:	23a0      	movs	r3, #160	; 0xa0
 8003dd0:	05db      	lsls	r3, r3, #23
 8003dd2:	0011      	movs	r1, r2
 8003dd4:	0018      	movs	r0, r3
 8003dd6:	f003 fa91 	bl	80072fc <HAL_GPIO_Init>

	/*Configure GPIO pins : PB4_RESERVED_Pin PB1_RESERVED_Pin PB0_RESERVED_Pin */
	GPIO_InitStruct.Pin = PB4_RESERVED_Pin|PB1_RESERVED_Pin|PB0_RESERVED_Pin;
 8003dda:	193b      	adds	r3, r7, r4
 8003ddc:	2213      	movs	r2, #19
 8003dde:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003de0:	193b      	adds	r3, r7, r4
 8003de2:	4a25      	ldr	r2, [pc, #148]	; (8003e78 <MX_GPIO_Init+0x154>)
 8003de4:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003de6:	193b      	adds	r3, r7, r4
 8003de8:	2200      	movs	r2, #0
 8003dea:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003dec:	193b      	adds	r3, r7, r4
 8003dee:	4a23      	ldr	r2, [pc, #140]	; (8003e7c <MX_GPIO_Init+0x158>)
 8003df0:	0019      	movs	r1, r3
 8003df2:	0010      	movs	r0, r2
 8003df4:	f003 fa82 	bl	80072fc <HAL_GPIO_Init>

	/*Configure GPIO pin : PC13_RESERVED_Pin */
	GPIO_InitStruct.Pin = PC13_RESERVED_Pin;
 8003df8:	0021      	movs	r1, r4
 8003dfa:	187b      	adds	r3, r7, r1
 8003dfc:	2280      	movs	r2, #128	; 0x80
 8003dfe:	0192      	lsls	r2, r2, #6
 8003e00:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003e02:	187b      	adds	r3, r7, r1
 8003e04:	4a1c      	ldr	r2, [pc, #112]	; (8003e78 <MX_GPIO_Init+0x154>)
 8003e06:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e08:	187b      	adds	r3, r7, r1
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(PC13_RESERVED_GPIO_Port, &GPIO_InitStruct);
 8003e0e:	000c      	movs	r4, r1
 8003e10:	187b      	adds	r3, r7, r1
 8003e12:	4a18      	ldr	r2, [pc, #96]	; (8003e74 <MX_GPIO_Init+0x150>)
 8003e14:	0019      	movs	r1, r3
 8003e16:	0010      	movs	r0, r2
 8003e18:	f003 fa70 	bl	80072fc <HAL_GPIO_Init>

	/*Configure GPIO pins : PC1_RESERVED_Pin PC0_RESERVED_Pin PC2_RESERVED_Pin */
	GPIO_InitStruct.Pin = PC1_RESERVED_Pin|PC0_RESERVED_Pin|PC2_RESERVED_Pin;
 8003e1c:	0021      	movs	r1, r4
 8003e1e:	187b      	adds	r3, r7, r1
 8003e20:	2207      	movs	r2, #7
 8003e22:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003e24:	187b      	adds	r3, r7, r1
 8003e26:	2201      	movs	r2, #1
 8003e28:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e2a:	187b      	adds	r3, r7, r1
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003e30:	187b      	adds	r3, r7, r1
 8003e32:	2202      	movs	r2, #2
 8003e34:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003e36:	187b      	adds	r3, r7, r1
 8003e38:	4a0e      	ldr	r2, [pc, #56]	; (8003e74 <MX_GPIO_Init+0x150>)
 8003e3a:	0019      	movs	r1, r3
 8003e3c:	0010      	movs	r0, r2
 8003e3e:	f003 fa5d 	bl	80072fc <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI0_1_IRQn, 0, 0);
 8003e42:	2200      	movs	r2, #0
 8003e44:	2100      	movs	r1, #0
 8003e46:	2005      	movs	r0, #5
 8003e48:	f003 fa26 	bl	8007298 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);
 8003e4c:	2005      	movs	r0, #5
 8003e4e:	f003 fa38 	bl	80072c2 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 8003e52:	2200      	movs	r2, #0
 8003e54:	2100      	movs	r1, #0
 8003e56:	2007      	movs	r0, #7
 8003e58:	f003 fa1e 	bl	8007298 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8003e5c:	2007      	movs	r0, #7
 8003e5e:	f003 fa30 	bl	80072c2 <HAL_NVIC_EnableIRQ>

}
 8003e62:	46c0      	nop			; (mov r8, r8)
 8003e64:	46bd      	mov	sp, r7
 8003e66:	b00b      	add	sp, #44	; 0x2c
 8003e68:	bd90      	pop	{r4, r7, pc}
 8003e6a:	46c0      	nop			; (mov r8, r8)
 8003e6c:	40021000 	.word	0x40021000
 8003e70:	00009002 	.word	0x00009002
 8003e74:	50000800 	.word	0x50000800
 8003e78:	10110000 	.word	0x10110000
 8003e7c:	50000400 	.word	0x50000400

08003e80 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8003e80:	b580      	push	{r7, lr}
 8003e82:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

	/* USER CODE END Error_Handler_Debug */
}
 8003e84:	46c0      	nop			; (mov r8, r8)
 8003e86:	46bd      	mov	sp, r7
 8003e88:	bd80      	pop	{r7, pc}
	...

08003e8c <Get_arm_fft>:

void Get_arm_fft(void)
{
 8003e8c:	b580      	push	{r7, lr}
 8003e8e:	af00      	add	r7, sp, #0
		break;
	case 64:
		S = & arm_cfft_sR_f32_len64;
		break;
	case 128:
		S = & arm_cfft_sR_f32_len128;
 8003e90:	4b03      	ldr	r3, [pc, #12]	; (8003ea0 <Get_arm_fft+0x14>)
 8003e92:	4a04      	ldr	r2, [pc, #16]	; (8003ea4 <Get_arm_fft+0x18>)
 8003e94:	601a      	str	r2, [r3, #0]
		break;
 8003e96:	46c0      	nop			; (mov r8, r8)
	case 4096:
		S = & arm_cfft_sR_q31_len4096;
		break;
	}
#endif
}
 8003e98:	46c0      	nop			; (mov r8, r8)
 8003e9a:	46bd      	mov	sp, r7
 8003e9c:	bd80      	pop	{r7, pc}
 8003e9e:	46c0      	nop			; (mov r8, r8)
 8003ea0:	200002f8 	.word	0x200002f8
 8003ea4:	0800e2d4 	.word	0x0800e2d4

08003ea8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003ea8:	b580      	push	{r7, lr}
 8003eaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003eac:	4b07      	ldr	r3, [pc, #28]	; (8003ecc <HAL_MspInit+0x24>)
 8003eae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003eb0:	4b06      	ldr	r3, [pc, #24]	; (8003ecc <HAL_MspInit+0x24>)
 8003eb2:	2101      	movs	r1, #1
 8003eb4:	430a      	orrs	r2, r1
 8003eb6:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8003eb8:	4b04      	ldr	r3, [pc, #16]	; (8003ecc <HAL_MspInit+0x24>)
 8003eba:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003ebc:	4b03      	ldr	r3, [pc, #12]	; (8003ecc <HAL_MspInit+0x24>)
 8003ebe:	2180      	movs	r1, #128	; 0x80
 8003ec0:	0549      	lsls	r1, r1, #21
 8003ec2:	430a      	orrs	r2, r1
 8003ec4:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003ec6:	46c0      	nop			; (mov r8, r8)
 8003ec8:	46bd      	mov	sp, r7
 8003eca:	bd80      	pop	{r7, pc}
 8003ecc:	40021000 	.word	0x40021000

08003ed0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	b088      	sub	sp, #32
 8003ed4:	af00      	add	r7, sp, #0
 8003ed6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003ed8:	230c      	movs	r3, #12
 8003eda:	18fb      	adds	r3, r7, r3
 8003edc:	0018      	movs	r0, r3
 8003ede:	2314      	movs	r3, #20
 8003ee0:	001a      	movs	r2, r3
 8003ee2:	2100      	movs	r1, #0
 8003ee4:	f005 fae2 	bl	80094ac <memset>
  if(hadc->Instance==ADC1)
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	4a15      	ldr	r2, [pc, #84]	; (8003f44 <HAL_ADC_MspInit+0x74>)
 8003eee:	4293      	cmp	r3, r2
 8003ef0:	d123      	bne.n	8003f3a <HAL_ADC_MspInit+0x6a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8003ef2:	4b15      	ldr	r3, [pc, #84]	; (8003f48 <HAL_ADC_MspInit+0x78>)
 8003ef4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ef6:	4b14      	ldr	r3, [pc, #80]	; (8003f48 <HAL_ADC_MspInit+0x78>)
 8003ef8:	2180      	movs	r1, #128	; 0x80
 8003efa:	0089      	lsls	r1, r1, #2
 8003efc:	430a      	orrs	r2, r1
 8003efe:	635a      	str	r2, [r3, #52]	; 0x34
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003f00:	4b11      	ldr	r3, [pc, #68]	; (8003f48 <HAL_ADC_MspInit+0x78>)
 8003f02:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f04:	4b10      	ldr	r3, [pc, #64]	; (8003f48 <HAL_ADC_MspInit+0x78>)
 8003f06:	2101      	movs	r1, #1
 8003f08:	430a      	orrs	r2, r1
 8003f0a:	62da      	str	r2, [r3, #44]	; 0x2c
 8003f0c:	4b0e      	ldr	r3, [pc, #56]	; (8003f48 <HAL_ADC_MspInit+0x78>)
 8003f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f10:	2201      	movs	r2, #1
 8003f12:	4013      	ands	r3, r2
 8003f14:	60bb      	str	r3, [r7, #8]
 8003f16:	68bb      	ldr	r3, [r7, #8]
    /**ADC GPIO Configuration    
    PA2     ------> ADC_IN2
    PA3     ------> ADC_IN3 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8003f18:	210c      	movs	r1, #12
 8003f1a:	187b      	adds	r3, r7, r1
 8003f1c:	220c      	movs	r2, #12
 8003f1e:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003f20:	187b      	adds	r3, r7, r1
 8003f22:	2203      	movs	r2, #3
 8003f24:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f26:	187b      	adds	r3, r7, r1
 8003f28:	2200      	movs	r2, #0
 8003f2a:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003f2c:	187a      	adds	r2, r7, r1
 8003f2e:	23a0      	movs	r3, #160	; 0xa0
 8003f30:	05db      	lsls	r3, r3, #23
 8003f32:	0011      	movs	r1, r2
 8003f34:	0018      	movs	r0, r3
 8003f36:	f003 f9e1 	bl	80072fc <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8003f3a:	46c0      	nop			; (mov r8, r8)
 8003f3c:	46bd      	mov	sp, r7
 8003f3e:	b008      	add	sp, #32
 8003f40:	bd80      	pop	{r7, pc}
 8003f42:	46c0      	nop			; (mov r8, r8)
 8003f44:	40012400 	.word	0x40012400
 8003f48:	40021000 	.word	0x40021000

08003f4c <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 8003f4c:	b580      	push	{r7, lr}
 8003f4e:	b082      	sub	sp, #8
 8003f50:	af00      	add	r7, sp, #0
 8003f52:	6078      	str	r0, [r7, #4]
  if(hrtc->Instance==RTC)
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	4a0a      	ldr	r2, [pc, #40]	; (8003f84 <HAL_RTC_MspInit+0x38>)
 8003f5a:	4293      	cmp	r3, r2
 8003f5c:	d10e      	bne.n	8003f7c <HAL_RTC_MspInit+0x30>
  {
  /* USER CODE BEGIN RTC_MspInit 0 */

  /* USER CODE END RTC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 8003f5e:	4b0a      	ldr	r3, [pc, #40]	; (8003f88 <HAL_RTC_MspInit+0x3c>)
 8003f60:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003f62:	4b09      	ldr	r3, [pc, #36]	; (8003f88 <HAL_RTC_MspInit+0x3c>)
 8003f64:	2180      	movs	r1, #128	; 0x80
 8003f66:	02c9      	lsls	r1, r1, #11
 8003f68:	430a      	orrs	r2, r1
 8003f6a:	651a      	str	r2, [r3, #80]	; 0x50
    /* RTC interrupt Init */
    HAL_NVIC_SetPriority(RTC_IRQn, 0, 0);
 8003f6c:	2200      	movs	r2, #0
 8003f6e:	2100      	movs	r1, #0
 8003f70:	2002      	movs	r0, #2
 8003f72:	f003 f991 	bl	8007298 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_IRQn);
 8003f76:	2002      	movs	r0, #2
 8003f78:	f003 f9a3 	bl	80072c2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 8003f7c:	46c0      	nop			; (mov r8, r8)
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	b002      	add	sp, #8
 8003f82:	bd80      	pop	{r7, pc}
 8003f84:	40002800 	.word	0x40002800
 8003f88:	40021000 	.word	0x40021000

08003f8c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8003f8c:	b590      	push	{r4, r7, lr}
 8003f8e:	b08b      	sub	sp, #44	; 0x2c
 8003f90:	af00      	add	r7, sp, #0
 8003f92:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003f94:	2314      	movs	r3, #20
 8003f96:	18fb      	adds	r3, r7, r3
 8003f98:	0018      	movs	r0, r3
 8003f9a:	2314      	movs	r3, #20
 8003f9c:	001a      	movs	r2, r3
 8003f9e:	2100      	movs	r1, #0
 8003fa0:	f005 fa84 	bl	80094ac <memset>
  if(hspi->Instance==SPI1)
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	4a29      	ldr	r2, [pc, #164]	; (8004050 <HAL_SPI_MspInit+0xc4>)
 8003faa:	4293      	cmp	r3, r2
 8003fac:	d14c      	bne.n	8004048 <HAL_SPI_MspInit+0xbc>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8003fae:	4b29      	ldr	r3, [pc, #164]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003fb2:	4b28      	ldr	r3, [pc, #160]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fb4:	2180      	movs	r1, #128	; 0x80
 8003fb6:	0149      	lsls	r1, r1, #5
 8003fb8:	430a      	orrs	r2, r1
 8003fba:	635a      	str	r2, [r3, #52]	; 0x34
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003fbc:	4b25      	ldr	r3, [pc, #148]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fbe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fc0:	4b24      	ldr	r3, [pc, #144]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fc2:	2102      	movs	r1, #2
 8003fc4:	430a      	orrs	r2, r1
 8003fc6:	62da      	str	r2, [r3, #44]	; 0x2c
 8003fc8:	4b22      	ldr	r3, [pc, #136]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fcc:	2202      	movs	r2, #2
 8003fce:	4013      	ands	r3, r2
 8003fd0:	613b      	str	r3, [r7, #16]
 8003fd2:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003fd4:	4b1f      	ldr	r3, [pc, #124]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fd6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fd8:	4b1e      	ldr	r3, [pc, #120]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fda:	2101      	movs	r1, #1
 8003fdc:	430a      	orrs	r2, r1
 8003fde:	62da      	str	r2, [r3, #44]	; 0x2c
 8003fe0:	4b1c      	ldr	r3, [pc, #112]	; (8004054 <HAL_SPI_MspInit+0xc8>)
 8003fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fe4:	2201      	movs	r2, #1
 8003fe6:	4013      	ands	r3, r2
 8003fe8:	60fb      	str	r3, [r7, #12]
 8003fea:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration    
    PB3     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    PA6     ------> SPI1_MISO 
    */
    GPIO_InitStruct.Pin = PB3_RESERVED_Pin;
 8003fec:	2114      	movs	r1, #20
 8003fee:	187b      	adds	r3, r7, r1
 8003ff0:	2208      	movs	r2, #8
 8003ff2:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003ff4:	187b      	adds	r3, r7, r1
 8003ff6:	2202      	movs	r2, #2
 8003ff8:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003ffa:	187b      	adds	r3, r7, r1
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004000:	187b      	adds	r3, r7, r1
 8004002:	2203      	movs	r2, #3
 8004004:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8004006:	187b      	adds	r3, r7, r1
 8004008:	2200      	movs	r2, #0
 800400a:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(PB3_RESERVED_GPIO_Port, &GPIO_InitStruct);
 800400c:	000c      	movs	r4, r1
 800400e:	187b      	adds	r3, r7, r1
 8004010:	4a11      	ldr	r2, [pc, #68]	; (8004058 <HAL_SPI_MspInit+0xcc>)
 8004012:	0019      	movs	r1, r3
 8004014:	0010      	movs	r0, r2
 8004016:	f003 f971 	bl	80072fc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = PA7_RESERVED_Pin|PA6_RESERVED_Pin;
 800401a:	0021      	movs	r1, r4
 800401c:	187b      	adds	r3, r7, r1
 800401e:	22c0      	movs	r2, #192	; 0xc0
 8004020:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004022:	187b      	adds	r3, r7, r1
 8004024:	2202      	movs	r2, #2
 8004026:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004028:	187b      	adds	r3, r7, r1
 800402a:	2200      	movs	r2, #0
 800402c:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800402e:	187b      	adds	r3, r7, r1
 8004030:	2203      	movs	r2, #3
 8004032:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8004034:	187b      	adds	r3, r7, r1
 8004036:	2200      	movs	r2, #0
 8004038:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800403a:	187a      	adds	r2, r7, r1
 800403c:	23a0      	movs	r3, #160	; 0xa0
 800403e:	05db      	lsls	r3, r3, #23
 8004040:	0011      	movs	r1, r2
 8004042:	0018      	movs	r0, r3
 8004044:	f003 f95a 	bl	80072fc <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8004048:	46c0      	nop			; (mov r8, r8)
 800404a:	46bd      	mov	sp, r7
 800404c:	b00b      	add	sp, #44	; 0x2c
 800404e:	bd90      	pop	{r4, r7, pc}
 8004050:	40013000 	.word	0x40013000
 8004054:	40021000 	.word	0x40021000
 8004058:	50000400 	.word	0x50000400

0800405c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 800405c:	b580      	push	{r7, lr}
 800405e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8004060:	46c0      	nop			; (mov r8, r8)
 8004062:	46bd      	mov	sp, r7
 8004064:	bd80      	pop	{r7, pc}

08004066 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004066:	b580      	push	{r7, lr}
 8004068:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800406a:	e7fe      	b.n	800406a <HardFault_Handler+0x4>

0800406c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800406c:	b580      	push	{r7, lr}
 800406e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8004070:	46c0      	nop			; (mov r8, r8)
 8004072:	46bd      	mov	sp, r7
 8004074:	bd80      	pop	{r7, pc}

08004076 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004076:	b580      	push	{r7, lr}
 8004078:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800407a:	46c0      	nop			; (mov r8, r8)
 800407c:	46bd      	mov	sp, r7
 800407e:	bd80      	pop	{r7, pc}

08004080 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004080:	b580      	push	{r7, lr}
 8004082:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004084:	f002 fcdc 	bl	8006a40 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004088:	46c0      	nop			; (mov r8, r8)
 800408a:	46bd      	mov	sp, r7
 800408c:	bd80      	pop	{r7, pc}
	...

08004090 <RTC_IRQHandler>:

/**
  * @brief This function handles RTC global interrupt through EXTI lines 17, 19 and 20 and LSE CSS interrupt through EXTI line 19.
  */
void RTC_IRQHandler(void)
{
 8004090:	b580      	push	{r7, lr}
 8004092:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RTC_IRQn 0 */

  /* USER CODE END RTC_IRQn 0 */
  HAL_RTC_AlarmIRQHandler(&hrtc);
 8004094:	4b03      	ldr	r3, [pc, #12]	; (80040a4 <RTC_IRQHandler+0x14>)
 8004096:	0018      	movs	r0, r3
 8004098:	f004 fd24 	bl	8008ae4 <HAL_RTC_AlarmIRQHandler>
  /* USER CODE BEGIN RTC_IRQn 1 */

  /* USER CODE END RTC_IRQn 1 */
}
 800409c:	46c0      	nop			; (mov r8, r8)
 800409e:	46bd      	mov	sp, r7
 80040a0:	bd80      	pop	{r7, pc}
 80040a2:	46c0      	nop			; (mov r8, r8)
 80040a4:	20003c10 	.word	0x20003c10

080040a8 <EXTI0_1_IRQHandler>:

/**
  * @brief This function handles EXTI line 0 and line 1 interrupts.
  */
void EXTI0_1_IRQHandler(void)
{
 80040a8:	b580      	push	{r7, lr}
 80040aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_1_IRQn 0 */

  /* USER CODE END EXTI0_1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 80040ac:	2001      	movs	r0, #1
 80040ae:	f003 fac1 	bl	8007634 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 80040b2:	2002      	movs	r0, #2
 80040b4:	f003 fabe 	bl	8007634 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_1_IRQn 1 */

  /* USER CODE END EXTI0_1_IRQn 1 */
}
 80040b8:	46c0      	nop			; (mov r8, r8)
 80040ba:	46bd      	mov	sp, r7
 80040bc:	bd80      	pop	{r7, pc}

080040be <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 80040be:	b580      	push	{r7, lr}
 80040c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 80040c2:	2010      	movs	r0, #16
 80040c4:	f003 fab6 	bl	8007634 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80040c8:	2380      	movs	r3, #128	; 0x80
 80040ca:	019b      	lsls	r3, r3, #6
 80040cc:	0018      	movs	r0, r3
 80040ce:	f003 fab1 	bl	8007634 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 80040d2:	46c0      	nop			; (mov r8, r8)
 80040d4:	46bd      	mov	sp, r7
 80040d6:	bd80      	pop	{r7, pc}

080040d8 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80040d8:	b580      	push	{r7, lr}
 80040da:	b084      	sub	sp, #16
 80040dc:	af00      	add	r7, sp, #0
 80040de:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80040e0:	4b11      	ldr	r3, [pc, #68]	; (8004128 <_sbrk+0x50>)
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	d102      	bne.n	80040ee <_sbrk+0x16>
		heap_end = &end;
 80040e8:	4b0f      	ldr	r3, [pc, #60]	; (8004128 <_sbrk+0x50>)
 80040ea:	4a10      	ldr	r2, [pc, #64]	; (800412c <_sbrk+0x54>)
 80040ec:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80040ee:	4b0e      	ldr	r3, [pc, #56]	; (8004128 <_sbrk+0x50>)
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80040f4:	4b0c      	ldr	r3, [pc, #48]	; (8004128 <_sbrk+0x50>)
 80040f6:	681a      	ldr	r2, [r3, #0]
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	18d3      	adds	r3, r2, r3
 80040fc:	466a      	mov	r2, sp
 80040fe:	4293      	cmp	r3, r2
 8004100:	d907      	bls.n	8004112 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8004102:	f005 f8d3 	bl	80092ac <__errno>
 8004106:	0003      	movs	r3, r0
 8004108:	220c      	movs	r2, #12
 800410a:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 800410c:	2301      	movs	r3, #1
 800410e:	425b      	negs	r3, r3
 8004110:	e006      	b.n	8004120 <_sbrk+0x48>
	}

	heap_end += incr;
 8004112:	4b05      	ldr	r3, [pc, #20]	; (8004128 <_sbrk+0x50>)
 8004114:	681a      	ldr	r2, [r3, #0]
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	18d2      	adds	r2, r2, r3
 800411a:	4b03      	ldr	r3, [pc, #12]	; (8004128 <_sbrk+0x50>)
 800411c:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 800411e:	68fb      	ldr	r3, [r7, #12]
}
 8004120:	0018      	movs	r0, r3
 8004122:	46bd      	mov	sp, r7
 8004124:	b004      	add	sp, #16
 8004126:	bd80      	pop	{r7, pc}
 8004128:	200002fc 	.word	0x200002fc
 800412c:	20004470 	.word	0x20004470

08004130 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8004130:	b580      	push	{r7, lr}
 8004132:	af00      	add	r7, sp, #0
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100U;
 8004134:	4b17      	ldr	r3, [pc, #92]	; (8004194 <SystemInit+0x64>)
 8004136:	681a      	ldr	r2, [r3, #0]
 8004138:	4b16      	ldr	r3, [pc, #88]	; (8004194 <SystemInit+0x64>)
 800413a:	2180      	movs	r1, #128	; 0x80
 800413c:	0049      	lsls	r1, r1, #1
 800413e:	430a      	orrs	r2, r1
 8004140:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t) 0x88FF400CU;
 8004142:	4b14      	ldr	r3, [pc, #80]	; (8004194 <SystemInit+0x64>)
 8004144:	68da      	ldr	r2, [r3, #12]
 8004146:	4b13      	ldr	r3, [pc, #76]	; (8004194 <SystemInit+0x64>)
 8004148:	4913      	ldr	r1, [pc, #76]	; (8004198 <SystemInit+0x68>)
 800414a:	400a      	ands	r2, r1
 800414c:	60da      	str	r2, [r3, #12]

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 800414e:	4b11      	ldr	r3, [pc, #68]	; (8004194 <SystemInit+0x64>)
 8004150:	681a      	ldr	r2, [r3, #0]
 8004152:	4b10      	ldr	r3, [pc, #64]	; (8004194 <SystemInit+0x64>)
 8004154:	4911      	ldr	r1, [pc, #68]	; (800419c <SystemInit+0x6c>)
 8004156:	400a      	ands	r2, r1
 8004158:	601a      	str	r2, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 800415a:	4b0e      	ldr	r3, [pc, #56]	; (8004194 <SystemInit+0x64>)
 800415c:	689a      	ldr	r2, [r3, #8]
 800415e:	4b0d      	ldr	r3, [pc, #52]	; (8004194 <SystemInit+0x64>)
 8004160:	2101      	movs	r1, #1
 8004162:	438a      	bics	r2, r1
 8004164:	609a      	str	r2, [r3, #8]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8004166:	4b0b      	ldr	r3, [pc, #44]	; (8004194 <SystemInit+0x64>)
 8004168:	681a      	ldr	r2, [r3, #0]
 800416a:	4b0a      	ldr	r3, [pc, #40]	; (8004194 <SystemInit+0x64>)
 800416c:	490c      	ldr	r1, [pc, #48]	; (80041a0 <SystemInit+0x70>)
 800416e:	400a      	ands	r2, r1
 8004170:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFFU;
 8004172:	4b08      	ldr	r3, [pc, #32]	; (8004194 <SystemInit+0x64>)
 8004174:	68da      	ldr	r2, [r3, #12]
 8004176:	4b07      	ldr	r3, [pc, #28]	; (8004194 <SystemInit+0x64>)
 8004178:	490a      	ldr	r1, [pc, #40]	; (80041a4 <SystemInit+0x74>)
 800417a:	400a      	ands	r2, r1
 800417c:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000U;
 800417e:	4b05      	ldr	r3, [pc, #20]	; (8004194 <SystemInit+0x64>)
 8004180:	2200      	movs	r2, #0
 8004182:	611a      	str	r2, [r3, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004184:	4b08      	ldr	r3, [pc, #32]	; (80041a8 <SystemInit+0x78>)
 8004186:	2280      	movs	r2, #128	; 0x80
 8004188:	0512      	lsls	r2, r2, #20
 800418a:	609a      	str	r2, [r3, #8]
#endif
}
 800418c:	46c0      	nop			; (mov r8, r8)
 800418e:	46bd      	mov	sp, r7
 8004190:	bd80      	pop	{r7, pc}
 8004192:	46c0      	nop			; (mov r8, r8)
 8004194:	40021000 	.word	0x40021000
 8004198:	88ff400c 	.word	0x88ff400c
 800419c:	fef6fff6 	.word	0xfef6fff6
 80041a0:	fffbffff 	.word	0xfffbffff
 80041a4:	ff02ffff 	.word	0xff02ffff
 80041a8:	e000ed00 	.word	0xe000ed00

080041ac <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 80041ac:	480d      	ldr	r0, [pc, #52]	; (80041e4 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 80041ae:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 80041b0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80041b2:	e003      	b.n	80041bc <LoopCopyDataInit>

080041b4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80041b4:	4b0c      	ldr	r3, [pc, #48]	; (80041e8 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
 80041b6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80041b8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80041ba:	3104      	adds	r1, #4

080041bc <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 80041bc:	480b      	ldr	r0, [pc, #44]	; (80041ec <LoopForever+0xa>)
  ldr  r3, =_edata
 80041be:	4b0c      	ldr	r3, [pc, #48]	; (80041f0 <LoopForever+0xe>)
  adds  r2, r0, r1
 80041c0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80041c2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80041c4:	d3f6      	bcc.n	80041b4 <CopyDataInit>
  ldr  r2, =_sbss
 80041c6:	4a0b      	ldr	r2, [pc, #44]	; (80041f4 <LoopForever+0x12>)
  b  LoopFillZerobss
 80041c8:	e002      	b.n	80041d0 <LoopFillZerobss>

080041ca <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 80041ca:	2300      	movs	r3, #0
  str  r3, [r2]
 80041cc:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80041ce:	3204      	adds	r2, #4

080041d0 <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 80041d0:	4b09      	ldr	r3, [pc, #36]	; (80041f8 <LoopForever+0x16>)
  cmp  r2, r3
 80041d2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80041d4:	d3f9      	bcc.n	80041ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80041d6:	f7ff ffab 	bl	8004130 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80041da:	f005 f943 	bl	8009464 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80041de:	f7fe ff39 	bl	8003054 <main>

080041e2 <LoopForever>:

LoopForever:
    b LoopForever
 80041e2:	e7fe      	b.n	80041e2 <LoopForever>
   ldr   r0, =_estack
 80041e4:	20005000 	.word	0x20005000
  ldr  r3, =_sidata
 80041e8:	0800e624 	.word	0x0800e624
  ldr  r0, =_sdata
 80041ec:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80041f0:	200002dc 	.word	0x200002dc
  ldr  r2, =_sbss
 80041f4:	200002dc 	.word	0x200002dc
  ldr  r3, = _ebss
 80041f8:	20004470 	.word	0x20004470

080041fc <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80041fc:	e7fe      	b.n	80041fc <ADC1_COMP_IRQHandler>

080041fe <arm_cmplx_mag_f32>:

void arm_cmplx_mag_f32(
  float32_t * pSrc,
  float32_t * pDst,
  uint32_t numSamples)
{
 80041fe:	b590      	push	{r4, r7, lr}
 8004200:	b089      	sub	sp, #36	; 0x24
 8004202:	af00      	add	r7, sp, #0
 8004204:	60f8      	str	r0, [r7, #12]
 8004206:	60b9      	str	r1, [r7, #8]
 8004208:	607a      	str	r2, [r7, #4]

#else

  /* Run the below code for Cortex-M0 */

  while (numSamples > 0U)
 800420a:	e033      	b.n	8004274 <arm_cmplx_mag_f32+0x76>
  {
    /* out = sqrt((real * real) + (imag * imag)) */
    realIn = *pSrc++;
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	1d1a      	adds	r2, r3, #4
 8004210:	60fa      	str	r2, [r7, #12]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	61fb      	str	r3, [r7, #28]
    imagIn = *pSrc++;
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	1d1a      	adds	r2, r3, #4
 800421a:	60fa      	str	r2, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	61bb      	str	r3, [r7, #24]
    /* store the result in the destination buffer. */
    arm_sqrt_f32((realIn * realIn) + (imagIn * imagIn), pDst++);
 8004220:	69f9      	ldr	r1, [r7, #28]
 8004222:	69f8      	ldr	r0, [r7, #28]
 8004224:	f7fc fd36 	bl	8000c94 <__aeabi_fmul>
 8004228:	1c03      	adds	r3, r0, #0
 800422a:	1c1c      	adds	r4, r3, #0
 800422c:	69b9      	ldr	r1, [r7, #24]
 800422e:	69b8      	ldr	r0, [r7, #24]
 8004230:	f7fc fd30 	bl	8000c94 <__aeabi_fmul>
 8004234:	1c03      	adds	r3, r0, #0
 8004236:	1c19      	adds	r1, r3, #0
 8004238:	1c20      	adds	r0, r4, #0
 800423a:	f7fc f9b9 	bl	80005b0 <__aeabi_fadd>
 800423e:	1c03      	adds	r3, r0, #0
 8004240:	1c19      	adds	r1, r3, #0
 8004242:	68bb      	ldr	r3, [r7, #8]
 8004244:	1d1a      	adds	r2, r3, #4
 8004246:	60ba      	str	r2, [r7, #8]
 8004248:	6179      	str	r1, [r7, #20]
 800424a:	613b      	str	r3, [r7, #16]
   */
  CMSIS_INLINE __STATIC_INLINE arm_status arm_sqrt_f32(
  float32_t in,
  float32_t * pOut)
  {
    if (in >= 0.0f)
 800424c:	2100      	movs	r1, #0
 800424e:	6978      	ldr	r0, [r7, #20]
 8004250:	f7fc f950 	bl	80004f4 <__aeabi_fcmpge>
 8004254:	1e03      	subs	r3, r0, #0
 8004256:	d007      	beq.n	8004268 <arm_cmplx_mag_f32+0x6a>
#elif (__FPU_USED == 1) && defined(__GNUC__)
      *pOut = __builtin_sqrtf(in);
#elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
      __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
#else
      *pOut = sqrtf(in);
 8004258:	697b      	ldr	r3, [r7, #20]
 800425a:	1c18      	adds	r0, r3, #0
 800425c:	f009 fb54 	bl	800d908 <sqrtf>
 8004260:	1c02      	adds	r2, r0, #0
 8004262:	693b      	ldr	r3, [r7, #16]
 8004264:	601a      	str	r2, [r3, #0]
 8004266:	e002      	b.n	800426e <arm_cmplx_mag_f32+0x70>

      return (ARM_MATH_SUCCESS);
    }
    else
    {
      *pOut = 0.0f;
 8004268:	693b      	ldr	r3, [r7, #16]
 800426a:	2200      	movs	r2, #0
 800426c:	601a      	str	r2, [r3, #0]

    /* Decrement the loop counter */
    numSamples--;
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	3b01      	subs	r3, #1
 8004272:	607b      	str	r3, [r7, #4]
  while (numSamples > 0U)
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2b00      	cmp	r3, #0
 8004278:	d1c8      	bne.n	800420c <arm_cmplx_mag_f32+0xe>
  }

#endif /* #if defined (ARM_MATH_DSP) */

}
 800427a:	46c0      	nop			; (mov r8, r8)
 800427c:	46bd      	mov	sp, r7
 800427e:	b009      	add	sp, #36	; 0x24
 8004280:	bd90      	pop	{r4, r7, pc}

08004282 <arm_bitreversal_32>:

void arm_bitreversal_32(
        uint32_t *pSrc,
  const uint16_t bitRevLen,
  const uint16_t *pBitRevTab)
{
 8004282:	b580      	push	{r7, lr}
 8004284:	b088      	sub	sp, #32
 8004286:	af00      	add	r7, sp, #0
 8004288:	60f8      	str	r0, [r7, #12]
 800428a:	607a      	str	r2, [r7, #4]
 800428c:	230a      	movs	r3, #10
 800428e:	18fb      	adds	r3, r7, r3
 8004290:	1c0a      	adds	r2, r1, #0
 8004292:	801a      	strh	r2, [r3, #0]
  uint32_t a, b, i, tmp;

  for (i = 0; i < bitRevLen; )
 8004294:	2300      	movs	r3, #0
 8004296:	61fb      	str	r3, [r7, #28]
 8004298:	e043      	b.n	8004322 <arm_bitreversal_32+0xa0>
  {
     a = pBitRevTab[i    ] >> 2;
 800429a:	69fb      	ldr	r3, [r7, #28]
 800429c:	005b      	lsls	r3, r3, #1
 800429e:	687a      	ldr	r2, [r7, #4]
 80042a0:	18d3      	adds	r3, r2, r3
 80042a2:	881b      	ldrh	r3, [r3, #0]
 80042a4:	089b      	lsrs	r3, r3, #2
 80042a6:	b29b      	uxth	r3, r3
 80042a8:	61bb      	str	r3, [r7, #24]
     b = pBitRevTab[i + 1] >> 2;
 80042aa:	69fb      	ldr	r3, [r7, #28]
 80042ac:	3301      	adds	r3, #1
 80042ae:	005b      	lsls	r3, r3, #1
 80042b0:	687a      	ldr	r2, [r7, #4]
 80042b2:	18d3      	adds	r3, r2, r3
 80042b4:	881b      	ldrh	r3, [r3, #0]
 80042b6:	089b      	lsrs	r3, r3, #2
 80042b8:	b29b      	uxth	r3, r3
 80042ba:	617b      	str	r3, [r7, #20]

     //real
     tmp = pSrc[a];
 80042bc:	69bb      	ldr	r3, [r7, #24]
 80042be:	009b      	lsls	r3, r3, #2
 80042c0:	68fa      	ldr	r2, [r7, #12]
 80042c2:	18d3      	adds	r3, r2, r3
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	613b      	str	r3, [r7, #16]
     pSrc[a] = pSrc[b];
 80042c8:	697b      	ldr	r3, [r7, #20]
 80042ca:	009b      	lsls	r3, r3, #2
 80042cc:	68fa      	ldr	r2, [r7, #12]
 80042ce:	18d2      	adds	r2, r2, r3
 80042d0:	69bb      	ldr	r3, [r7, #24]
 80042d2:	009b      	lsls	r3, r3, #2
 80042d4:	68f9      	ldr	r1, [r7, #12]
 80042d6:	18cb      	adds	r3, r1, r3
 80042d8:	6812      	ldr	r2, [r2, #0]
 80042da:	601a      	str	r2, [r3, #0]
     pSrc[b] = tmp;
 80042dc:	697b      	ldr	r3, [r7, #20]
 80042de:	009b      	lsls	r3, r3, #2
 80042e0:	68fa      	ldr	r2, [r7, #12]
 80042e2:	18d3      	adds	r3, r2, r3
 80042e4:	693a      	ldr	r2, [r7, #16]
 80042e6:	601a      	str	r2, [r3, #0]

     //complex
     tmp = pSrc[a+1];
 80042e8:	69bb      	ldr	r3, [r7, #24]
 80042ea:	3301      	adds	r3, #1
 80042ec:	009b      	lsls	r3, r3, #2
 80042ee:	68fa      	ldr	r2, [r7, #12]
 80042f0:	18d3      	adds	r3, r2, r3
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	613b      	str	r3, [r7, #16]
     pSrc[a+1] = pSrc[b+1];
 80042f6:	697b      	ldr	r3, [r7, #20]
 80042f8:	3301      	adds	r3, #1
 80042fa:	009b      	lsls	r3, r3, #2
 80042fc:	68fa      	ldr	r2, [r7, #12]
 80042fe:	18d2      	adds	r2, r2, r3
 8004300:	69bb      	ldr	r3, [r7, #24]
 8004302:	3301      	adds	r3, #1
 8004304:	009b      	lsls	r3, r3, #2
 8004306:	68f9      	ldr	r1, [r7, #12]
 8004308:	18cb      	adds	r3, r1, r3
 800430a:	6812      	ldr	r2, [r2, #0]
 800430c:	601a      	str	r2, [r3, #0]
     pSrc[b+1] = tmp;
 800430e:	697b      	ldr	r3, [r7, #20]
 8004310:	3301      	adds	r3, #1
 8004312:	009b      	lsls	r3, r3, #2
 8004314:	68fa      	ldr	r2, [r7, #12]
 8004316:	18d3      	adds	r3, r2, r3
 8004318:	693a      	ldr	r2, [r7, #16]
 800431a:	601a      	str	r2, [r3, #0]

    i += 2;
 800431c:	69fb      	ldr	r3, [r7, #28]
 800431e:	3302      	adds	r3, #2
 8004320:	61fb      	str	r3, [r7, #28]
  for (i = 0; i < bitRevLen; )
 8004322:	230a      	movs	r3, #10
 8004324:	18fb      	adds	r3, r7, r3
 8004326:	881b      	ldrh	r3, [r3, #0]
 8004328:	69fa      	ldr	r2, [r7, #28]
 800432a:	429a      	cmp	r2, r3
 800432c:	d3b5      	bcc.n	800429a <arm_bitreversal_32+0x18>
  }
}
 800432e:	46c0      	nop			; (mov r8, r8)
 8004330:	46bd      	mov	sp, r7
 8004332:	b008      	add	sp, #32
 8004334:	bd80      	pop	{r7, pc}

08004336 <arm_cfft_radix8by2_f32>:
* \endcode
*
*/

void arm_cfft_radix8by2_f32( arm_cfft_instance_f32 * S, float32_t * p1)
{
 8004336:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004338:	b0a1      	sub	sp, #132	; 0x84
 800433a:	af00      	add	r7, sp, #0
 800433c:	6078      	str	r0, [r7, #4]
 800433e:	6039      	str	r1, [r7, #0]
    uint32_t    L  = S->fftLen;
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	881b      	ldrh	r3, [r3, #0]
 8004344:	66bb      	str	r3, [r7, #104]	; 0x68
    float32_t * pCol1, * pCol2, * pMid1, * pMid2;
    float32_t * p2 = p1 + L;
 8004346:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004348:	009b      	lsls	r3, r3, #2
 800434a:	683a      	ldr	r2, [r7, #0]
 800434c:	18d3      	adds	r3, r2, r3
 800434e:	677b      	str	r3, [r7, #116]	; 0x74
    const float32_t * tw = (float32_t *) S->pTwiddle;
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	685b      	ldr	r3, [r3, #4]
 8004354:	673b      	str	r3, [r7, #112]	; 0x70
    float32_t t1[4], t2[4], t3[4], t4[4], twR, twI;
    float32_t m0, m1, m2, m3;
    uint32_t l;

    pCol1 = p1;
 8004356:	683b      	ldr	r3, [r7, #0]
 8004358:	667b      	str	r3, [r7, #100]	; 0x64
    pCol2 = p2;
 800435a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800435c:	663b      	str	r3, [r7, #96]	; 0x60

    //    Define new length
    L >>= 1;
 800435e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004360:	085b      	lsrs	r3, r3, #1
 8004362:	66bb      	str	r3, [r7, #104]	; 0x68
    //    Initialize mid pointers
    pMid1 = p1 + L;
 8004364:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004366:	009b      	lsls	r3, r3, #2
 8004368:	683a      	ldr	r2, [r7, #0]
 800436a:	18d3      	adds	r3, r2, r3
 800436c:	67fb      	str	r3, [r7, #124]	; 0x7c
    pMid2 = p2 + L;
 800436e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004370:	009b      	lsls	r3, r3, #2
 8004372:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8004374:	18d3      	adds	r3, r2, r3
 8004376:	67bb      	str	r3, [r7, #120]	; 0x78

    // do two dot Fourier transform
    for ( l = L >> 2; l > 0; l-- )
 8004378:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800437a:	089b      	lsrs	r3, r3, #2
 800437c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800437e:	e1ed      	b.n	800475c <arm_cfft_radix8by2_f32+0x426>
    {
        t1[0] = p1[0];
 8004380:	683b      	ldr	r3, [r7, #0]
 8004382:	681a      	ldr	r2, [r3, #0]
 8004384:	2038      	movs	r0, #56	; 0x38
 8004386:	183b      	adds	r3, r7, r0
 8004388:	601a      	str	r2, [r3, #0]
        t1[1] = p1[1];
 800438a:	683b      	ldr	r3, [r7, #0]
 800438c:	685a      	ldr	r2, [r3, #4]
 800438e:	183b      	adds	r3, r7, r0
 8004390:	605a      	str	r2, [r3, #4]
        t1[2] = p1[2];
 8004392:	683b      	ldr	r3, [r7, #0]
 8004394:	689a      	ldr	r2, [r3, #8]
 8004396:	183b      	adds	r3, r7, r0
 8004398:	609a      	str	r2, [r3, #8]
        t1[3] = p1[3];
 800439a:	683b      	ldr	r3, [r7, #0]
 800439c:	68da      	ldr	r2, [r3, #12]
 800439e:	183b      	adds	r3, r7, r0
 80043a0:	60da      	str	r2, [r3, #12]

        t2[0] = p2[0];
 80043a2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80043a4:	681a      	ldr	r2, [r3, #0]
 80043a6:	2128      	movs	r1, #40	; 0x28
 80043a8:	187b      	adds	r3, r7, r1
 80043aa:	601a      	str	r2, [r3, #0]
        t2[1] = p2[1];
 80043ac:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80043ae:	685a      	ldr	r2, [r3, #4]
 80043b0:	187b      	adds	r3, r7, r1
 80043b2:	605a      	str	r2, [r3, #4]
        t2[2] = p2[2];
 80043b4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80043b6:	689a      	ldr	r2, [r3, #8]
 80043b8:	187b      	adds	r3, r7, r1
 80043ba:	609a      	str	r2, [r3, #8]
        t2[3] = p2[3];
 80043bc:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80043be:	68da      	ldr	r2, [r3, #12]
 80043c0:	187b      	adds	r3, r7, r1
 80043c2:	60da      	str	r2, [r3, #12]

        t3[0] = pMid1[0];
 80043c4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80043c6:	681a      	ldr	r2, [r3, #0]
 80043c8:	2418      	movs	r4, #24
 80043ca:	193b      	adds	r3, r7, r4
 80043cc:	601a      	str	r2, [r3, #0]
        t3[1] = pMid1[1];
 80043ce:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80043d0:	685a      	ldr	r2, [r3, #4]
 80043d2:	193b      	adds	r3, r7, r4
 80043d4:	605a      	str	r2, [r3, #4]
        t3[2] = pMid1[2];
 80043d6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80043d8:	689a      	ldr	r2, [r3, #8]
 80043da:	193b      	adds	r3, r7, r4
 80043dc:	609a      	str	r2, [r3, #8]
        t3[3] = pMid1[3];
 80043de:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80043e0:	68da      	ldr	r2, [r3, #12]
 80043e2:	193b      	adds	r3, r7, r4
 80043e4:	60da      	str	r2, [r3, #12]

        t4[0] = pMid2[0];
 80043e6:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80043e8:	681a      	ldr	r2, [r3, #0]
 80043ea:	2608      	movs	r6, #8
 80043ec:	19bb      	adds	r3, r7, r6
 80043ee:	601a      	str	r2, [r3, #0]
        t4[1] = pMid2[1];
 80043f0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80043f2:	685a      	ldr	r2, [r3, #4]
 80043f4:	19bb      	adds	r3, r7, r6
 80043f6:	605a      	str	r2, [r3, #4]
        t4[2] = pMid2[2];
 80043f8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80043fa:	689a      	ldr	r2, [r3, #8]
 80043fc:	19bb      	adds	r3, r7, r6
 80043fe:	609a      	str	r2, [r3, #8]
        t4[3] = pMid2[3];
 8004400:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8004402:	68da      	ldr	r2, [r3, #12]
 8004404:	19bb      	adds	r3, r7, r6
 8004406:	60da      	str	r2, [r3, #12]

        *p1++ = t1[0] + t2[0];
 8004408:	183b      	adds	r3, r7, r0
 800440a:	681a      	ldr	r2, [r3, #0]
 800440c:	000d      	movs	r5, r1
 800440e:	197b      	adds	r3, r7, r5
 8004410:	6819      	ldr	r1, [r3, #0]
 8004412:	683c      	ldr	r4, [r7, #0]
 8004414:	1d23      	adds	r3, r4, #4
 8004416:	603b      	str	r3, [r7, #0]
 8004418:	1c10      	adds	r0, r2, #0
 800441a:	f7fc f8c9 	bl	80005b0 <__aeabi_fadd>
 800441e:	1c03      	adds	r3, r0, #0
 8004420:	6023      	str	r3, [r4, #0]
        *p1++ = t1[1] + t2[1];
 8004422:	2038      	movs	r0, #56	; 0x38
 8004424:	183b      	adds	r3, r7, r0
 8004426:	685a      	ldr	r2, [r3, #4]
 8004428:	197b      	adds	r3, r7, r5
 800442a:	6859      	ldr	r1, [r3, #4]
 800442c:	683c      	ldr	r4, [r7, #0]
 800442e:	1d23      	adds	r3, r4, #4
 8004430:	603b      	str	r3, [r7, #0]
 8004432:	1c10      	adds	r0, r2, #0
 8004434:	f7fc f8bc 	bl	80005b0 <__aeabi_fadd>
 8004438:	1c03      	adds	r3, r0, #0
 800443a:	6023      	str	r3, [r4, #0]
        *p1++ = t1[2] + t2[2];
 800443c:	2038      	movs	r0, #56	; 0x38
 800443e:	183b      	adds	r3, r7, r0
 8004440:	689a      	ldr	r2, [r3, #8]
 8004442:	197b      	adds	r3, r7, r5
 8004444:	6899      	ldr	r1, [r3, #8]
 8004446:	683c      	ldr	r4, [r7, #0]
 8004448:	1d23      	adds	r3, r4, #4
 800444a:	603b      	str	r3, [r7, #0]
 800444c:	1c10      	adds	r0, r2, #0
 800444e:	f7fc f8af 	bl	80005b0 <__aeabi_fadd>
 8004452:	1c03      	adds	r3, r0, #0
 8004454:	6023      	str	r3, [r4, #0]
        *p1++ = t1[3] + t2[3];    // col 1
 8004456:	2038      	movs	r0, #56	; 0x38
 8004458:	183b      	adds	r3, r7, r0
 800445a:	68da      	ldr	r2, [r3, #12]
 800445c:	197b      	adds	r3, r7, r5
 800445e:	68d9      	ldr	r1, [r3, #12]
 8004460:	683c      	ldr	r4, [r7, #0]
 8004462:	1d23      	adds	r3, r4, #4
 8004464:	603b      	str	r3, [r7, #0]
 8004466:	1c10      	adds	r0, r2, #0
 8004468:	f7fc f8a2 	bl	80005b0 <__aeabi_fadd>
 800446c:	1c03      	adds	r3, r0, #0
 800446e:	6023      	str	r3, [r4, #0]

        t2[0] = t1[0] - t2[0];
 8004470:	2038      	movs	r0, #56	; 0x38
 8004472:	0004      	movs	r4, r0
 8004474:	183b      	adds	r3, r7, r0
 8004476:	681a      	ldr	r2, [r3, #0]
 8004478:	197b      	adds	r3, r7, r5
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	1c19      	adds	r1, r3, #0
 800447e:	1c10      	adds	r0, r2, #0
 8004480:	f7fc fd3a 	bl	8000ef8 <__aeabi_fsub>
 8004484:	1c03      	adds	r3, r0, #0
 8004486:	1c1a      	adds	r2, r3, #0
 8004488:	197b      	adds	r3, r7, r5
 800448a:	601a      	str	r2, [r3, #0]
        t2[1] = t1[1] - t2[1];
 800448c:	193b      	adds	r3, r7, r4
 800448e:	685a      	ldr	r2, [r3, #4]
 8004490:	197b      	adds	r3, r7, r5
 8004492:	685b      	ldr	r3, [r3, #4]
 8004494:	1c19      	adds	r1, r3, #0
 8004496:	1c10      	adds	r0, r2, #0
 8004498:	f7fc fd2e 	bl	8000ef8 <__aeabi_fsub>
 800449c:	1c03      	adds	r3, r0, #0
 800449e:	1c1a      	adds	r2, r3, #0
 80044a0:	197b      	adds	r3, r7, r5
 80044a2:	605a      	str	r2, [r3, #4]
        t2[2] = t1[2] - t2[2];
 80044a4:	193b      	adds	r3, r7, r4
 80044a6:	689a      	ldr	r2, [r3, #8]
 80044a8:	197b      	adds	r3, r7, r5
 80044aa:	689b      	ldr	r3, [r3, #8]
 80044ac:	1c19      	adds	r1, r3, #0
 80044ae:	1c10      	adds	r0, r2, #0
 80044b0:	f7fc fd22 	bl	8000ef8 <__aeabi_fsub>
 80044b4:	1c03      	adds	r3, r0, #0
 80044b6:	1c1a      	adds	r2, r3, #0
 80044b8:	197b      	adds	r3, r7, r5
 80044ba:	609a      	str	r2, [r3, #8]
        t2[3] = t1[3] - t2[3];    // for col 2
 80044bc:	193b      	adds	r3, r7, r4
 80044be:	68da      	ldr	r2, [r3, #12]
 80044c0:	197b      	adds	r3, r7, r5
 80044c2:	68db      	ldr	r3, [r3, #12]
 80044c4:	1c19      	adds	r1, r3, #0
 80044c6:	1c10      	adds	r0, r2, #0
 80044c8:	f7fc fd16 	bl	8000ef8 <__aeabi_fsub>
 80044cc:	1c03      	adds	r3, r0, #0
 80044ce:	1c1a      	adds	r2, r3, #0
 80044d0:	197b      	adds	r3, r7, r5
 80044d2:	60da      	str	r2, [r3, #12]

        *pMid1++ = t3[0] + t4[0];
 80044d4:	2418      	movs	r4, #24
 80044d6:	193b      	adds	r3, r7, r4
 80044d8:	681a      	ldr	r2, [r3, #0]
 80044da:	19bb      	adds	r3, r7, r6
 80044dc:	6819      	ldr	r1, [r3, #0]
 80044de:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
 80044e0:	1d23      	adds	r3, r4, #4
 80044e2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80044e4:	1c10      	adds	r0, r2, #0
 80044e6:	f7fc f863 	bl	80005b0 <__aeabi_fadd>
 80044ea:	1c03      	adds	r3, r0, #0
 80044ec:	6023      	str	r3, [r4, #0]
        *pMid1++ = t3[1] + t4[1];
 80044ee:	2418      	movs	r4, #24
 80044f0:	193b      	adds	r3, r7, r4
 80044f2:	685a      	ldr	r2, [r3, #4]
 80044f4:	19bb      	adds	r3, r7, r6
 80044f6:	6859      	ldr	r1, [r3, #4]
 80044f8:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
 80044fa:	1d23      	adds	r3, r4, #4
 80044fc:	67fb      	str	r3, [r7, #124]	; 0x7c
 80044fe:	1c10      	adds	r0, r2, #0
 8004500:	f7fc f856 	bl	80005b0 <__aeabi_fadd>
 8004504:	1c03      	adds	r3, r0, #0
 8004506:	6023      	str	r3, [r4, #0]
        *pMid1++ = t3[2] + t4[2];
 8004508:	2418      	movs	r4, #24
 800450a:	193b      	adds	r3, r7, r4
 800450c:	689a      	ldr	r2, [r3, #8]
 800450e:	19bb      	adds	r3, r7, r6
 8004510:	6899      	ldr	r1, [r3, #8]
 8004512:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
 8004514:	1d23      	adds	r3, r4, #4
 8004516:	67fb      	str	r3, [r7, #124]	; 0x7c
 8004518:	1c10      	adds	r0, r2, #0
 800451a:	f7fc f849 	bl	80005b0 <__aeabi_fadd>
 800451e:	1c03      	adds	r3, r0, #0
 8004520:	6023      	str	r3, [r4, #0]
        *pMid1++ = t3[3] + t4[3]; // col 1
 8004522:	2418      	movs	r4, #24
 8004524:	193b      	adds	r3, r7, r4
 8004526:	68da      	ldr	r2, [r3, #12]
 8004528:	19bb      	adds	r3, r7, r6
 800452a:	68d9      	ldr	r1, [r3, #12]
 800452c:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
 800452e:	1d23      	adds	r3, r4, #4
 8004530:	67fb      	str	r3, [r7, #124]	; 0x7c
 8004532:	1c10      	adds	r0, r2, #0
 8004534:	f7fc f83c 	bl	80005b0 <__aeabi_fadd>
 8004538:	1c03      	adds	r3, r0, #0
 800453a:	6023      	str	r3, [r4, #0]

        t4[0] = t4[0] - t3[0];
 800453c:	19bb      	adds	r3, r7, r6
 800453e:	681a      	ldr	r2, [r3, #0]
 8004540:	2418      	movs	r4, #24
 8004542:	193b      	adds	r3, r7, r4
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	1c19      	adds	r1, r3, #0
 8004548:	1c10      	adds	r0, r2, #0
 800454a:	f7fc fcd5 	bl	8000ef8 <__aeabi_fsub>
 800454e:	1c03      	adds	r3, r0, #0
 8004550:	1c1a      	adds	r2, r3, #0
 8004552:	19bb      	adds	r3, r7, r6
 8004554:	601a      	str	r2, [r3, #0]
        t4[1] = t4[1] - t3[1];
 8004556:	19bb      	adds	r3, r7, r6
 8004558:	685a      	ldr	r2, [r3, #4]
 800455a:	193b      	adds	r3, r7, r4
 800455c:	685b      	ldr	r3, [r3, #4]
 800455e:	1c19      	adds	r1, r3, #0
 8004560:	1c10      	adds	r0, r2, #0
 8004562:	f7fc fcc9 	bl	8000ef8 <__aeabi_fsub>
 8004566:	1c03      	adds	r3, r0, #0
 8004568:	1c1a      	adds	r2, r3, #0
 800456a:	19bb      	adds	r3, r7, r6
 800456c:	605a      	str	r2, [r3, #4]
        t4[2] = t4[2] - t3[2];
 800456e:	19bb      	adds	r3, r7, r6
 8004570:	689a      	ldr	r2, [r3, #8]
 8004572:	193b      	adds	r3, r7, r4
 8004574:	689b      	ldr	r3, [r3, #8]
 8004576:	1c19      	adds	r1, r3, #0
 8004578:	1c10      	adds	r0, r2, #0
 800457a:	f7fc fcbd 	bl	8000ef8 <__aeabi_fsub>
 800457e:	1c03      	adds	r3, r0, #0
 8004580:	1c1a      	adds	r2, r3, #0
 8004582:	19bb      	adds	r3, r7, r6
 8004584:	609a      	str	r2, [r3, #8]
        t4[3] = t4[3] - t3[3];    // for col 2
 8004586:	19bb      	adds	r3, r7, r6
 8004588:	68da      	ldr	r2, [r3, #12]
 800458a:	193b      	adds	r3, r7, r4
 800458c:	68db      	ldr	r3, [r3, #12]
 800458e:	1c19      	adds	r1, r3, #0
 8004590:	1c10      	adds	r0, r2, #0
 8004592:	f7fc fcb1 	bl	8000ef8 <__aeabi_fsub>
 8004596:	1c03      	adds	r3, r0, #0
 8004598:	1c1a      	adds	r2, r3, #0
 800459a:	19bb      	adds	r3, r7, r6
 800459c:	60da      	str	r2, [r3, #12]

        twR = *tw++;
 800459e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80045a0:	1d1a      	adds	r2, r3, #4
 80045a2:	673a      	str	r2, [r7, #112]	; 0x70
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	65fb      	str	r3, [r7, #92]	; 0x5c
        twI = *tw++;
 80045a8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80045aa:	1d1a      	adds	r2, r3, #4
 80045ac:	673a      	str	r2, [r7, #112]	; 0x70
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	65bb      	str	r3, [r7, #88]	; 0x58

        // multiply by twiddle factors
        m0 = t2[0] * twR;
 80045b2:	197b      	adds	r3, r7, r5
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	1c19      	adds	r1, r3, #0
 80045b8:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 80045ba:	f7fc fb6b 	bl	8000c94 <__aeabi_fmul>
 80045be:	1c03      	adds	r3, r0, #0
 80045c0:	657b      	str	r3, [r7, #84]	; 0x54
        m1 = t2[1] * twI;
 80045c2:	197b      	adds	r3, r7, r5
 80045c4:	685b      	ldr	r3, [r3, #4]
 80045c6:	1c19      	adds	r1, r3, #0
 80045c8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80045ca:	f7fc fb63 	bl	8000c94 <__aeabi_fmul>
 80045ce:	1c03      	adds	r3, r0, #0
 80045d0:	653b      	str	r3, [r7, #80]	; 0x50
        m2 = t2[1] * twR;
 80045d2:	197b      	adds	r3, r7, r5
 80045d4:	685b      	ldr	r3, [r3, #4]
 80045d6:	1c19      	adds	r1, r3, #0
 80045d8:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 80045da:	f7fc fb5b 	bl	8000c94 <__aeabi_fmul>
 80045de:	1c03      	adds	r3, r0, #0
 80045e0:	64fb      	str	r3, [r7, #76]	; 0x4c
        m3 = t2[0] * twI;
 80045e2:	197b      	adds	r3, r7, r5
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	1c19      	adds	r1, r3, #0
 80045e8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80045ea:	f7fc fb53 	bl	8000c94 <__aeabi_fmul>
 80045ee:	1c03      	adds	r3, r0, #0
 80045f0:	64bb      	str	r3, [r7, #72]	; 0x48

        // R  =  R  *  Tr - I * Ti
        *p2++ = m0 + m1;
 80045f2:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 80045f4:	1d23      	adds	r3, r4, #4
 80045f6:	677b      	str	r3, [r7, #116]	; 0x74
 80045f8:	6d39      	ldr	r1, [r7, #80]	; 0x50
 80045fa:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80045fc:	f7fb ffd8 	bl	80005b0 <__aeabi_fadd>
 8004600:	1c03      	adds	r3, r0, #0
 8004602:	6023      	str	r3, [r4, #0]
        // I  =  I  *  Tr + R * Ti
        *p2++ = m2 - m3;
 8004604:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8004606:	1d23      	adds	r3, r4, #4
 8004608:	677b      	str	r3, [r7, #116]	; 0x74
 800460a:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800460c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800460e:	f7fc fc73 	bl	8000ef8 <__aeabi_fsub>
 8004612:	1c03      	adds	r3, r0, #0
 8004614:	6023      	str	r3, [r4, #0]

        // use vertical symmetry
        //  0.9988 - 0.0491i <==> -0.0491 - 0.9988i
        m0 = t4[0] * twI;
 8004616:	19bb      	adds	r3, r7, r6
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	1c19      	adds	r1, r3, #0
 800461c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800461e:	f7fc fb39 	bl	8000c94 <__aeabi_fmul>
 8004622:	1c03      	adds	r3, r0, #0
 8004624:	657b      	str	r3, [r7, #84]	; 0x54
        m1 = t4[1] * twR;
 8004626:	19bb      	adds	r3, r7, r6
 8004628:	685b      	ldr	r3, [r3, #4]
 800462a:	1c19      	adds	r1, r3, #0
 800462c:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800462e:	f7fc fb31 	bl	8000c94 <__aeabi_fmul>
 8004632:	1c03      	adds	r3, r0, #0
 8004634:	653b      	str	r3, [r7, #80]	; 0x50
        m2 = t4[1] * twI;
 8004636:	19bb      	adds	r3, r7, r6
 8004638:	685b      	ldr	r3, [r3, #4]
 800463a:	1c19      	adds	r1, r3, #0
 800463c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800463e:	f7fc fb29 	bl	8000c94 <__aeabi_fmul>
 8004642:	1c03      	adds	r3, r0, #0
 8004644:	64fb      	str	r3, [r7, #76]	; 0x4c
        m3 = t4[0] * twR;
 8004646:	19bb      	adds	r3, r7, r6
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	1c19      	adds	r1, r3, #0
 800464c:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800464e:	f7fc fb21 	bl	8000c94 <__aeabi_fmul>
 8004652:	1c03      	adds	r3, r0, #0
 8004654:	64bb      	str	r3, [r7, #72]	; 0x48

        *pMid2++ = m0 - m1;
 8004656:	6fbc      	ldr	r4, [r7, #120]	; 0x78
 8004658:	1d23      	adds	r3, r4, #4
 800465a:	67bb      	str	r3, [r7, #120]	; 0x78
 800465c:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800465e:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8004660:	f7fc fc4a 	bl	8000ef8 <__aeabi_fsub>
 8004664:	1c03      	adds	r3, r0, #0
 8004666:	6023      	str	r3, [r4, #0]
        *pMid2++ = m2 + m3;
 8004668:	6fbc      	ldr	r4, [r7, #120]	; 0x78
 800466a:	1d23      	adds	r3, r4, #4
 800466c:	67bb      	str	r3, [r7, #120]	; 0x78
 800466e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8004670:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8004672:	f7fb ff9d 	bl	80005b0 <__aeabi_fadd>
 8004676:	1c03      	adds	r3, r0, #0
 8004678:	6023      	str	r3, [r4, #0]

        twR = *tw++;
 800467a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800467c:	1d1a      	adds	r2, r3, #4
 800467e:	673a      	str	r2, [r7, #112]	; 0x70
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	65fb      	str	r3, [r7, #92]	; 0x5c
        twI = *tw++;
 8004684:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004686:	1d1a      	adds	r2, r3, #4
 8004688:	673a      	str	r2, [r7, #112]	; 0x70
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	65bb      	str	r3, [r7, #88]	; 0x58

        m0 = t2[2] * twR;
 800468e:	197b      	adds	r3, r7, r5
 8004690:	689b      	ldr	r3, [r3, #8]
 8004692:	1c19      	adds	r1, r3, #0
 8004694:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8004696:	f7fc fafd 	bl	8000c94 <__aeabi_fmul>
 800469a:	1c03      	adds	r3, r0, #0
 800469c:	657b      	str	r3, [r7, #84]	; 0x54
        m1 = t2[3] * twI;
 800469e:	197b      	adds	r3, r7, r5
 80046a0:	68db      	ldr	r3, [r3, #12]
 80046a2:	1c19      	adds	r1, r3, #0
 80046a4:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80046a6:	f7fc faf5 	bl	8000c94 <__aeabi_fmul>
 80046aa:	1c03      	adds	r3, r0, #0
 80046ac:	653b      	str	r3, [r7, #80]	; 0x50
        m2 = t2[3] * twR;
 80046ae:	197b      	adds	r3, r7, r5
 80046b0:	68db      	ldr	r3, [r3, #12]
 80046b2:	1c19      	adds	r1, r3, #0
 80046b4:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 80046b6:	f7fc faed 	bl	8000c94 <__aeabi_fmul>
 80046ba:	1c03      	adds	r3, r0, #0
 80046bc:	64fb      	str	r3, [r7, #76]	; 0x4c
        m3 = t2[2] * twI;
 80046be:	197b      	adds	r3, r7, r5
 80046c0:	689b      	ldr	r3, [r3, #8]
 80046c2:	1c19      	adds	r1, r3, #0
 80046c4:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80046c6:	f7fc fae5 	bl	8000c94 <__aeabi_fmul>
 80046ca:	1c03      	adds	r3, r0, #0
 80046cc:	64bb      	str	r3, [r7, #72]	; 0x48

        *p2++ = m0 + m1;
 80046ce:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 80046d0:	1d23      	adds	r3, r4, #4
 80046d2:	677b      	str	r3, [r7, #116]	; 0x74
 80046d4:	6d39      	ldr	r1, [r7, #80]	; 0x50
 80046d6:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80046d8:	f7fb ff6a 	bl	80005b0 <__aeabi_fadd>
 80046dc:	1c03      	adds	r3, r0, #0
 80046de:	6023      	str	r3, [r4, #0]
        *p2++ = m2 - m3;
 80046e0:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 80046e2:	1d23      	adds	r3, r4, #4
 80046e4:	677b      	str	r3, [r7, #116]	; 0x74
 80046e6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80046e8:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80046ea:	f7fc fc05 	bl	8000ef8 <__aeabi_fsub>
 80046ee:	1c03      	adds	r3, r0, #0
 80046f0:	6023      	str	r3, [r4, #0]

        m0 = t4[2] * twI;
 80046f2:	19bb      	adds	r3, r7, r6
 80046f4:	689b      	ldr	r3, [r3, #8]
 80046f6:	1c19      	adds	r1, r3, #0
 80046f8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80046fa:	f7fc facb 	bl	8000c94 <__aeabi_fmul>
 80046fe:	1c03      	adds	r3, r0, #0
 8004700:	657b      	str	r3, [r7, #84]	; 0x54
        m1 = t4[3] * twR;
 8004702:	19bb      	adds	r3, r7, r6
 8004704:	68db      	ldr	r3, [r3, #12]
 8004706:	1c19      	adds	r1, r3, #0
 8004708:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800470a:	f7fc fac3 	bl	8000c94 <__aeabi_fmul>
 800470e:	1c03      	adds	r3, r0, #0
 8004710:	653b      	str	r3, [r7, #80]	; 0x50
        m2 = t4[3] * twI;
 8004712:	19bb      	adds	r3, r7, r6
 8004714:	68db      	ldr	r3, [r3, #12]
 8004716:	1c19      	adds	r1, r3, #0
 8004718:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800471a:	f7fc fabb 	bl	8000c94 <__aeabi_fmul>
 800471e:	1c03      	adds	r3, r0, #0
 8004720:	64fb      	str	r3, [r7, #76]	; 0x4c
        m3 = t4[2] * twR;
 8004722:	19bb      	adds	r3, r7, r6
 8004724:	689b      	ldr	r3, [r3, #8]
 8004726:	1c19      	adds	r1, r3, #0
 8004728:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800472a:	f7fc fab3 	bl	8000c94 <__aeabi_fmul>
 800472e:	1c03      	adds	r3, r0, #0
 8004730:	64bb      	str	r3, [r7, #72]	; 0x48

        *pMid2++ = m0 - m1;
 8004732:	6fbc      	ldr	r4, [r7, #120]	; 0x78
 8004734:	1d23      	adds	r3, r4, #4
 8004736:	67bb      	str	r3, [r7, #120]	; 0x78
 8004738:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800473a:	6d78      	ldr	r0, [r7, #84]	; 0x54
 800473c:	f7fc fbdc 	bl	8000ef8 <__aeabi_fsub>
 8004740:	1c03      	adds	r3, r0, #0
 8004742:	6023      	str	r3, [r4, #0]
        *pMid2++ = m2 + m3;
 8004744:	6fbc      	ldr	r4, [r7, #120]	; 0x78
 8004746:	1d23      	adds	r3, r4, #4
 8004748:	67bb      	str	r3, [r7, #120]	; 0x78
 800474a:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800474c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800474e:	f7fb ff2f 	bl	80005b0 <__aeabi_fadd>
 8004752:	1c03      	adds	r3, r0, #0
 8004754:	6023      	str	r3, [r4, #0]
    for ( l = L >> 2; l > 0; l-- )
 8004756:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004758:	3b01      	subs	r3, #1
 800475a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800475c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800475e:	2b00      	cmp	r3, #0
 8004760:	d000      	beq.n	8004764 <arm_cfft_radix8by2_f32+0x42e>
 8004762:	e60d      	b.n	8004380 <arm_cfft_radix8by2_f32+0x4a>
    }

    // first col
    arm_radix8_butterfly_f32( pCol1, L, (float32_t *) S->pTwiddle, 2U);
 8004764:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004766:	b299      	uxth	r1, r3
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	685a      	ldr	r2, [r3, #4]
 800476c:	6e78      	ldr	r0, [r7, #100]	; 0x64
 800476e:	2302      	movs	r3, #2
 8004770:	f000 ffc2 	bl	80056f8 <arm_radix8_butterfly_f32>
    // second col
    arm_radix8_butterfly_f32( pCol2, L, (float32_t *) S->pTwiddle, 2U);
 8004774:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004776:	b299      	uxth	r1, r3
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	685a      	ldr	r2, [r3, #4]
 800477c:	6e38      	ldr	r0, [r7, #96]	; 0x60
 800477e:	2302      	movs	r3, #2
 8004780:	f000 ffba 	bl	80056f8 <arm_radix8_butterfly_f32>
}
 8004784:	46c0      	nop			; (mov r8, r8)
 8004786:	46bd      	mov	sp, r7
 8004788:	b021      	add	sp, #132	; 0x84
 800478a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800478c <arm_cfft_radix8by4_f32>:

void arm_cfft_radix8by4_f32( arm_cfft_instance_f32 * S, float32_t * p1)
{
 800478c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800478e:	b0ad      	sub	sp, #180	; 0xb4
 8004790:	af00      	add	r7, sp, #0
 8004792:	6078      	str	r0, [r7, #4]
 8004794:	6039      	str	r1, [r7, #0]
    uint32_t    L  = S->fftLen >> 1;
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	881b      	ldrh	r3, [r3, #0]
 800479a:	085b      	lsrs	r3, r3, #1
 800479c:	b29b      	uxth	r3, r3
 800479e:	2080      	movs	r0, #128	; 0x80
 80047a0:	183a      	adds	r2, r7, r0
 80047a2:	6013      	str	r3, [r2, #0]
    float32_t * pCol1, *pCol2, *pCol3, *pCol4, *pEnd1, *pEnd2, *pEnd3, *pEnd4;
    const float32_t *tw2, *tw3, *tw4;
    float32_t * p2 = p1 + L;
 80047a4:	183b      	adds	r3, r7, r0
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	009b      	lsls	r3, r3, #2
 80047aa:	683a      	ldr	r2, [r7, #0]
 80047ac:	18d3      	adds	r3, r2, r3
 80047ae:	2490      	movs	r4, #144	; 0x90
 80047b0:	193a      	adds	r2, r7, r4
 80047b2:	6013      	str	r3, [r2, #0]
    float32_t * p3 = p2 + L;
 80047b4:	183b      	adds	r3, r7, r0
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	009b      	lsls	r3, r3, #2
 80047ba:	193a      	adds	r2, r7, r4
 80047bc:	6812      	ldr	r2, [r2, #0]
 80047be:	18d3      	adds	r3, r2, r3
 80047c0:	218c      	movs	r1, #140	; 0x8c
 80047c2:	187a      	adds	r2, r7, r1
 80047c4:	6013      	str	r3, [r2, #0]
    float32_t * p4 = p3 + L;
 80047c6:	183b      	adds	r3, r7, r0
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	009b      	lsls	r3, r3, #2
 80047cc:	187a      	adds	r2, r7, r1
 80047ce:	6812      	ldr	r2, [r2, #0]
 80047d0:	18d3      	adds	r3, r2, r3
 80047d2:	2588      	movs	r5, #136	; 0x88
 80047d4:	197a      	adds	r2, r7, r5
 80047d6:	6013      	str	r3, [r2, #0]
    float32_t t2[4], t3[4], t4[4], twR, twI;
    float32_t p1ap3_0, p1sp3_0, p1ap3_1, p1sp3_1;
    float32_t m0, m1, m2, m3;
    uint32_t l, twMod2, twMod3, twMod4;

    pCol1 = p1;         // points to real values by default
 80047d8:	683b      	ldr	r3, [r7, #0]
 80047da:	67fb      	str	r3, [r7, #124]	; 0x7c
    pCol2 = p2;
 80047dc:	193b      	adds	r3, r7, r4
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	67bb      	str	r3, [r7, #120]	; 0x78
    pCol3 = p3;
 80047e2:	187b      	adds	r3, r7, r1
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	677b      	str	r3, [r7, #116]	; 0x74
    pCol4 = p4;
 80047e8:	197b      	adds	r3, r7, r5
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	673b      	str	r3, [r7, #112]	; 0x70
    pEnd1 = p2 - 1;     // points to imaginary values by default
 80047ee:	193b      	adds	r3, r7, r4
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	3b04      	subs	r3, #4
 80047f4:	22ac      	movs	r2, #172	; 0xac
 80047f6:	18ba      	adds	r2, r7, r2
 80047f8:	6013      	str	r3, [r2, #0]
    pEnd2 = p3 - 1;
 80047fa:	187b      	adds	r3, r7, r1
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	3b04      	subs	r3, #4
 8004800:	22a8      	movs	r2, #168	; 0xa8
 8004802:	18ba      	adds	r2, r7, r2
 8004804:	6013      	str	r3, [r2, #0]
    pEnd3 = p4 - 1;
 8004806:	197b      	adds	r3, r7, r5
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	3b04      	subs	r3, #4
 800480c:	22a4      	movs	r2, #164	; 0xa4
 800480e:	18be      	adds	r6, r7, r2
 8004810:	6033      	str	r3, [r6, #0]
    pEnd4 = pEnd3 + L;
 8004812:	183b      	adds	r3, r7, r0
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	009b      	lsls	r3, r3, #2
 8004818:	18ba      	adds	r2, r7, r2
 800481a:	6812      	ldr	r2, [r2, #0]
 800481c:	18d3      	adds	r3, r2, r3
 800481e:	22a0      	movs	r2, #160	; 0xa0
 8004820:	18ba      	adds	r2, r7, r2
 8004822:	6013      	str	r3, [r2, #0]

    tw2 = tw3 = tw4 = (float32_t *) S->pTwiddle;
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	685b      	ldr	r3, [r3, #4]
 8004828:	2294      	movs	r2, #148	; 0x94
 800482a:	18be      	adds	r6, r7, r2
 800482c:	6033      	str	r3, [r6, #0]
 800482e:	18bb      	adds	r3, r7, r2
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	2698      	movs	r6, #152	; 0x98
 8004834:	19ba      	adds	r2, r7, r6
 8004836:	6013      	str	r3, [r2, #0]
 8004838:	19bb      	adds	r3, r7, r6
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	229c      	movs	r2, #156	; 0x9c
 800483e:	18be      	adds	r6, r7, r2
 8004840:	6033      	str	r3, [r6, #0]

    L >>= 1;
 8004842:	183b      	adds	r3, r7, r0
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	085b      	lsrs	r3, r3, #1
 8004848:	183e      	adds	r6, r7, r0
 800484a:	6033      	str	r3, [r6, #0]

    // do four dot Fourier transform

    twMod2 = 2;
 800484c:	2302      	movs	r3, #2
 800484e:	66fb      	str	r3, [r7, #108]	; 0x6c
    twMod3 = 4;
 8004850:	2304      	movs	r3, #4
 8004852:	66bb      	str	r3, [r7, #104]	; 0x68
    twMod4 = 6;
 8004854:	2306      	movs	r3, #6
 8004856:	667b      	str	r3, [r7, #100]	; 0x64

    // TOP
    p1ap3_0 = p1[0] + p3[0];
 8004858:	683b      	ldr	r3, [r7, #0]
 800485a:	681a      	ldr	r2, [r3, #0]
 800485c:	000e      	movs	r6, r1
 800485e:	19bb      	adds	r3, r7, r6
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	1c19      	adds	r1, r3, #0
 8004866:	1c10      	adds	r0, r2, #0
 8004868:	f7fb fea2 	bl	80005b0 <__aeabi_fadd>
 800486c:	1c03      	adds	r3, r0, #0
 800486e:	663b      	str	r3, [r7, #96]	; 0x60
    p1sp3_0 = p1[0] - p3[0];
 8004870:	683b      	ldr	r3, [r7, #0]
 8004872:	681a      	ldr	r2, [r3, #0]
 8004874:	19bb      	adds	r3, r7, r6
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	1c19      	adds	r1, r3, #0
 800487c:	1c10      	adds	r0, r2, #0
 800487e:	f7fc fb3b 	bl	8000ef8 <__aeabi_fsub>
 8004882:	1c03      	adds	r3, r0, #0
 8004884:	65fb      	str	r3, [r7, #92]	; 0x5c
    p1ap3_1 = p1[1] + p3[1];
 8004886:	683b      	ldr	r3, [r7, #0]
 8004888:	3304      	adds	r3, #4
 800488a:	681a      	ldr	r2, [r3, #0]
 800488c:	19bb      	adds	r3, r7, r6
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	3304      	adds	r3, #4
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	1c19      	adds	r1, r3, #0
 8004896:	1c10      	adds	r0, r2, #0
 8004898:	f7fb fe8a 	bl	80005b0 <__aeabi_fadd>
 800489c:	1c03      	adds	r3, r0, #0
 800489e:	65bb      	str	r3, [r7, #88]	; 0x58
    p1sp3_1 = p1[1] - p3[1];
 80048a0:	683b      	ldr	r3, [r7, #0]
 80048a2:	3304      	adds	r3, #4
 80048a4:	681a      	ldr	r2, [r3, #0]
 80048a6:	0031      	movs	r1, r6
 80048a8:	187b      	adds	r3, r7, r1
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	3304      	adds	r3, #4
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	1c19      	adds	r1, r3, #0
 80048b2:	1c10      	adds	r0, r2, #0
 80048b4:	f7fc fb20 	bl	8000ef8 <__aeabi_fsub>
 80048b8:	1c03      	adds	r3, r0, #0
 80048ba:	657b      	str	r3, [r7, #84]	; 0x54

    // col 2
    t2[0] = p1sp3_0 + p2[1] - p4[1];
 80048bc:	193b      	adds	r3, r7, r4
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	3304      	adds	r3, #4
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 80048c6:	1c18      	adds	r0, r3, #0
 80048c8:	f7fb fe72 	bl	80005b0 <__aeabi_fadd>
 80048cc:	1c03      	adds	r3, r0, #0
 80048ce:	1c1a      	adds	r2, r3, #0
 80048d0:	197b      	adds	r3, r7, r5
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	3304      	adds	r3, #4
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	1c19      	adds	r1, r3, #0
 80048da:	1c10      	adds	r0, r2, #0
 80048dc:	f7fc fb0c 	bl	8000ef8 <__aeabi_fsub>
 80048e0:	1c03      	adds	r3, r0, #0
 80048e2:	1c1a      	adds	r2, r3, #0
 80048e4:	232c      	movs	r3, #44	; 0x2c
 80048e6:	001e      	movs	r6, r3
 80048e8:	18fb      	adds	r3, r7, r3
 80048ea:	601a      	str	r2, [r3, #0]
    t2[1] = p1sp3_1 - p2[0] + p4[0];
 80048ec:	193b      	adds	r3, r7, r4
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	1c19      	adds	r1, r3, #0
 80048f4:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80048f6:	f7fc faff 	bl	8000ef8 <__aeabi_fsub>
 80048fa:	1c03      	adds	r3, r0, #0
 80048fc:	1c1a      	adds	r2, r3, #0
 80048fe:	197b      	adds	r3, r7, r5
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	1c19      	adds	r1, r3, #0
 8004906:	1c10      	adds	r0, r2, #0
 8004908:	f7fb fe52 	bl	80005b0 <__aeabi_fadd>
 800490c:	1c03      	adds	r3, r0, #0
 800490e:	1c1a      	adds	r2, r3, #0
 8004910:	0033      	movs	r3, r6
 8004912:	18fb      	adds	r3, r7, r3
 8004914:	605a      	str	r2, [r3, #4]
    // col 3
    t3[0] = p1ap3_0 - p2[0] - p4[0];
 8004916:	193b      	adds	r3, r7, r4
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	1c19      	adds	r1, r3, #0
 800491e:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8004920:	f7fc faea 	bl	8000ef8 <__aeabi_fsub>
 8004924:	1c03      	adds	r3, r0, #0
 8004926:	1c1a      	adds	r2, r3, #0
 8004928:	197b      	adds	r3, r7, r5
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	1c19      	adds	r1, r3, #0
 8004930:	1c10      	adds	r0, r2, #0
 8004932:	f7fc fae1 	bl	8000ef8 <__aeabi_fsub>
 8004936:	1c03      	adds	r3, r0, #0
 8004938:	1c1a      	adds	r2, r3, #0
 800493a:	231c      	movs	r3, #28
 800493c:	001e      	movs	r6, r3
 800493e:	18fb      	adds	r3, r7, r3
 8004940:	601a      	str	r2, [r3, #0]
    t3[1] = p1ap3_1 - p2[1] - p4[1];
 8004942:	193b      	adds	r3, r7, r4
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	3304      	adds	r3, #4
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	1c19      	adds	r1, r3, #0
 800494c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800494e:	f7fc fad3 	bl	8000ef8 <__aeabi_fsub>
 8004952:	1c03      	adds	r3, r0, #0
 8004954:	1c1a      	adds	r2, r3, #0
 8004956:	197b      	adds	r3, r7, r5
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	3304      	adds	r3, #4
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	1c19      	adds	r1, r3, #0
 8004960:	1c10      	adds	r0, r2, #0
 8004962:	f7fc fac9 	bl	8000ef8 <__aeabi_fsub>
 8004966:	1c03      	adds	r3, r0, #0
 8004968:	1c1a      	adds	r2, r3, #0
 800496a:	0033      	movs	r3, r6
 800496c:	18fb      	adds	r3, r7, r3
 800496e:	605a      	str	r2, [r3, #4]
    // col 4
    t4[0] = p1sp3_0 - p2[1] + p4[1];
 8004970:	193b      	adds	r3, r7, r4
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	3304      	adds	r3, #4
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	1c19      	adds	r1, r3, #0
 800497a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800497c:	f7fc fabc 	bl	8000ef8 <__aeabi_fsub>
 8004980:	1c03      	adds	r3, r0, #0
 8004982:	1c1a      	adds	r2, r3, #0
 8004984:	002e      	movs	r6, r5
 8004986:	19bb      	adds	r3, r7, r6
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	3304      	adds	r3, #4
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	1c19      	adds	r1, r3, #0
 8004990:	1c10      	adds	r0, r2, #0
 8004992:	f7fb fe0d 	bl	80005b0 <__aeabi_fadd>
 8004996:	1c03      	adds	r3, r0, #0
 8004998:	1c1a      	adds	r2, r3, #0
 800499a:	230c      	movs	r3, #12
 800499c:	001d      	movs	r5, r3
 800499e:	18fb      	adds	r3, r7, r3
 80049a0:	601a      	str	r2, [r3, #0]
    t4[1] = p1sp3_1 + p2[0] - p4[0];
 80049a2:	193b      	adds	r3, r7, r4
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80049aa:	1c18      	adds	r0, r3, #0
 80049ac:	f7fb fe00 	bl	80005b0 <__aeabi_fadd>
 80049b0:	1c03      	adds	r3, r0, #0
 80049b2:	1c1a      	adds	r2, r3, #0
 80049b4:	19bb      	adds	r3, r7, r6
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	1c19      	adds	r1, r3, #0
 80049bc:	1c10      	adds	r0, r2, #0
 80049be:	f7fc fa9b 	bl	8000ef8 <__aeabi_fsub>
 80049c2:	1c03      	adds	r3, r0, #0
 80049c4:	1c1a      	adds	r2, r3, #0
 80049c6:	002b      	movs	r3, r5
 80049c8:	18fb      	adds	r3, r7, r3
 80049ca:	605a      	str	r2, [r3, #4]
    // col 1
    *p1++ = p1ap3_0 + p2[0] + p4[0];
 80049cc:	0025      	movs	r5, r4
 80049ce:	193b      	adds	r3, r7, r4
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	6e39      	ldr	r1, [r7, #96]	; 0x60
 80049d6:	1c18      	adds	r0, r3, #0
 80049d8:	f7fb fdea 	bl	80005b0 <__aeabi_fadd>
 80049dc:	1c03      	adds	r3, r0, #0
 80049de:	1c18      	adds	r0, r3, #0
 80049e0:	19bb      	adds	r3, r7, r6
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	681a      	ldr	r2, [r3, #0]
 80049e6:	683c      	ldr	r4, [r7, #0]
 80049e8:	1d23      	adds	r3, r4, #4
 80049ea:	603b      	str	r3, [r7, #0]
 80049ec:	1c11      	adds	r1, r2, #0
 80049ee:	f7fb fddf 	bl	80005b0 <__aeabi_fadd>
 80049f2:	1c03      	adds	r3, r0, #0
 80049f4:	6023      	str	r3, [r4, #0]
    *p1++ = p1ap3_1 + p2[1] + p4[1];
 80049f6:	002c      	movs	r4, r5
 80049f8:	0025      	movs	r5, r4
 80049fa:	193b      	adds	r3, r7, r4
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	3304      	adds	r3, #4
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8004a04:	1c18      	adds	r0, r3, #0
 8004a06:	f7fb fdd3 	bl	80005b0 <__aeabi_fadd>
 8004a0a:	1c03      	adds	r3, r0, #0
 8004a0c:	1c18      	adds	r0, r3, #0
 8004a0e:	19bb      	adds	r3, r7, r6
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	3304      	adds	r3, #4
 8004a14:	681a      	ldr	r2, [r3, #0]
 8004a16:	683c      	ldr	r4, [r7, #0]
 8004a18:	1d23      	adds	r3, r4, #4
 8004a1a:	603b      	str	r3, [r7, #0]
 8004a1c:	1c11      	adds	r1, r2, #0
 8004a1e:	f7fb fdc7 	bl	80005b0 <__aeabi_fadd>
 8004a22:	1c03      	adds	r3, r0, #0
 8004a24:	6023      	str	r3, [r4, #0]

    // Twiddle factors are ones
    *p2++ = t2[0];
 8004a26:	197b      	adds	r3, r7, r5
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	1d1a      	adds	r2, r3, #4
 8004a2c:	197c      	adds	r4, r7, r5
 8004a2e:	6022      	str	r2, [r4, #0]
 8004a30:	242c      	movs	r4, #44	; 0x2c
 8004a32:	193a      	adds	r2, r7, r4
 8004a34:	6812      	ldr	r2, [r2, #0]
 8004a36:	601a      	str	r2, [r3, #0]
    *p2++ = t2[1];
 8004a38:	197b      	adds	r3, r7, r5
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	1d1a      	adds	r2, r3, #4
 8004a3e:	1979      	adds	r1, r7, r5
 8004a40:	600a      	str	r2, [r1, #0]
 8004a42:	193a      	adds	r2, r7, r4
 8004a44:	6852      	ldr	r2, [r2, #4]
 8004a46:	601a      	str	r2, [r3, #0]
    *p3++ = t3[0];
 8004a48:	218c      	movs	r1, #140	; 0x8c
 8004a4a:	187b      	adds	r3, r7, r1
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	1d1a      	adds	r2, r3, #4
 8004a50:	187c      	adds	r4, r7, r1
 8004a52:	6022      	str	r2, [r4, #0]
 8004a54:	251c      	movs	r5, #28
 8004a56:	197a      	adds	r2, r7, r5
 8004a58:	6812      	ldr	r2, [r2, #0]
 8004a5a:	601a      	str	r2, [r3, #0]
    *p3++ = t3[1];
 8004a5c:	187b      	adds	r3, r7, r1
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	1d1a      	adds	r2, r3, #4
 8004a62:	1879      	adds	r1, r7, r1
 8004a64:	600a      	str	r2, [r1, #0]
 8004a66:	197a      	adds	r2, r7, r5
 8004a68:	6852      	ldr	r2, [r2, #4]
 8004a6a:	601a      	str	r2, [r3, #0]
    *p4++ = t4[0];
 8004a6c:	19bb      	adds	r3, r7, r6
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	1d1a      	adds	r2, r3, #4
 8004a72:	19b9      	adds	r1, r7, r6
 8004a74:	600a      	str	r2, [r1, #0]
 8004a76:	250c      	movs	r5, #12
 8004a78:	197a      	adds	r2, r7, r5
 8004a7a:	6812      	ldr	r2, [r2, #0]
 8004a7c:	601a      	str	r2, [r3, #0]
    *p4++ = t4[1];
 8004a7e:	19bb      	adds	r3, r7, r6
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	1d1a      	adds	r2, r3, #4
 8004a84:	19b9      	adds	r1, r7, r6
 8004a86:	600a      	str	r2, [r1, #0]
 8004a88:	197a      	adds	r2, r7, r5
 8004a8a:	6852      	ldr	r2, [r2, #4]
 8004a8c:	601a      	str	r2, [r3, #0]

    tw2 += twMod2;
 8004a8e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004a90:	009b      	lsls	r3, r3, #2
 8004a92:	259c      	movs	r5, #156	; 0x9c
 8004a94:	1979      	adds	r1, r7, r5
 8004a96:	680a      	ldr	r2, [r1, #0]
 8004a98:	18d3      	adds	r3, r2, r3
 8004a9a:	197d      	adds	r5, r7, r5
 8004a9c:	602b      	str	r3, [r5, #0]
    tw3 += twMod3;
 8004a9e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004aa0:	009b      	lsls	r3, r3, #2
 8004aa2:	2698      	movs	r6, #152	; 0x98
 8004aa4:	0034      	movs	r4, r6
 8004aa6:	19bd      	adds	r5, r7, r6
 8004aa8:	682a      	ldr	r2, [r5, #0]
 8004aaa:	18d3      	adds	r3, r2, r3
 8004aac:	193c      	adds	r4, r7, r4
 8004aae:	6023      	str	r3, [r4, #0]
    tw4 += twMod4;
 8004ab0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004ab2:	009b      	lsls	r3, r3, #2
 8004ab4:	2294      	movs	r2, #148	; 0x94
 8004ab6:	0011      	movs	r1, r2
 8004ab8:	18ba      	adds	r2, r7, r2
 8004aba:	6812      	ldr	r2, [r2, #0]
 8004abc:	18d3      	adds	r3, r2, r3
 8004abe:	187a      	adds	r2, r7, r1
 8004ac0:	6013      	str	r3, [r2, #0]

    for (l = (L - 2) >> 1; l > 0; l-- )
 8004ac2:	2080      	movs	r0, #128	; 0x80
 8004ac4:	183b      	adds	r3, r7, r0
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	3b02      	subs	r3, #2
 8004aca:	085b      	lsrs	r3, r3, #1
 8004acc:	2284      	movs	r2, #132	; 0x84
 8004ace:	18ba      	adds	r2, r7, r2
 8004ad0:	6013      	str	r3, [r2, #0]
 8004ad2:	e389      	b.n	80051e8 <arm_cfft_radix8by4_f32+0xa5c>
    {
        // TOP
        p1ap3_0 = p1[0] + p3[0];
 8004ad4:	683b      	ldr	r3, [r7, #0]
 8004ad6:	681a      	ldr	r2, [r3, #0]
 8004ad8:	248c      	movs	r4, #140	; 0x8c
 8004ada:	193b      	adds	r3, r7, r4
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	1c19      	adds	r1, r3, #0
 8004ae2:	1c10      	adds	r0, r2, #0
 8004ae4:	f7fb fd64 	bl	80005b0 <__aeabi_fadd>
 8004ae8:	1c03      	adds	r3, r0, #0
 8004aea:	663b      	str	r3, [r7, #96]	; 0x60
        p1sp3_0 = p1[0] - p3[0];
 8004aec:	683b      	ldr	r3, [r7, #0]
 8004aee:	681a      	ldr	r2, [r3, #0]
 8004af0:	193b      	adds	r3, r7, r4
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	1c19      	adds	r1, r3, #0
 8004af8:	1c10      	adds	r0, r2, #0
 8004afa:	f7fc f9fd 	bl	8000ef8 <__aeabi_fsub>
 8004afe:	1c03      	adds	r3, r0, #0
 8004b00:	65fb      	str	r3, [r7, #92]	; 0x5c
        p1ap3_1 = p1[1] + p3[1];
 8004b02:	683b      	ldr	r3, [r7, #0]
 8004b04:	3304      	adds	r3, #4
 8004b06:	681a      	ldr	r2, [r3, #0]
 8004b08:	193b      	adds	r3, r7, r4
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	3304      	adds	r3, #4
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	1c19      	adds	r1, r3, #0
 8004b12:	1c10      	adds	r0, r2, #0
 8004b14:	f7fb fd4c 	bl	80005b0 <__aeabi_fadd>
 8004b18:	1c03      	adds	r3, r0, #0
 8004b1a:	65bb      	str	r3, [r7, #88]	; 0x58
        p1sp3_1 = p1[1] - p3[1];
 8004b1c:	683b      	ldr	r3, [r7, #0]
 8004b1e:	3304      	adds	r3, #4
 8004b20:	681a      	ldr	r2, [r3, #0]
 8004b22:	0020      	movs	r0, r4
 8004b24:	183b      	adds	r3, r7, r0
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	3304      	adds	r3, #4
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	1c19      	adds	r1, r3, #0
 8004b2e:	1c10      	adds	r0, r2, #0
 8004b30:	f7fc f9e2 	bl	8000ef8 <__aeabi_fsub>
 8004b34:	1c03      	adds	r3, r0, #0
 8004b36:	657b      	str	r3, [r7, #84]	; 0x54
        // col 2
        t2[0] = p1sp3_0 + p2[1] - p4[1];
 8004b38:	2490      	movs	r4, #144	; 0x90
 8004b3a:	193b      	adds	r3, r7, r4
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	3304      	adds	r3, #4
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8004b44:	1c18      	adds	r0, r3, #0
 8004b46:	f7fb fd33 	bl	80005b0 <__aeabi_fadd>
 8004b4a:	1c03      	adds	r3, r0, #0
 8004b4c:	1c1a      	adds	r2, r3, #0
 8004b4e:	2588      	movs	r5, #136	; 0x88
 8004b50:	197b      	adds	r3, r7, r5
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	3304      	adds	r3, #4
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	1c19      	adds	r1, r3, #0
 8004b5a:	1c10      	adds	r0, r2, #0
 8004b5c:	f7fc f9cc 	bl	8000ef8 <__aeabi_fsub>
 8004b60:	1c03      	adds	r3, r0, #0
 8004b62:	1c1a      	adds	r2, r3, #0
 8004b64:	262c      	movs	r6, #44	; 0x2c
 8004b66:	19bb      	adds	r3, r7, r6
 8004b68:	601a      	str	r2, [r3, #0]
        t2[1] = p1sp3_1 - p2[0] + p4[0];
 8004b6a:	193b      	adds	r3, r7, r4
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	1c19      	adds	r1, r3, #0
 8004b72:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8004b74:	f7fc f9c0 	bl	8000ef8 <__aeabi_fsub>
 8004b78:	1c03      	adds	r3, r0, #0
 8004b7a:	1c1a      	adds	r2, r3, #0
 8004b7c:	197b      	adds	r3, r7, r5
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	1c19      	adds	r1, r3, #0
 8004b84:	1c10      	adds	r0, r2, #0
 8004b86:	f7fb fd13 	bl	80005b0 <__aeabi_fadd>
 8004b8a:	1c03      	adds	r3, r0, #0
 8004b8c:	1c1a      	adds	r2, r3, #0
 8004b8e:	19bb      	adds	r3, r7, r6
 8004b90:	605a      	str	r2, [r3, #4]
        // col 3
        t3[0] = p1ap3_0 - p2[0] - p4[0];
 8004b92:	193b      	adds	r3, r7, r4
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	1c19      	adds	r1, r3, #0
 8004b9a:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8004b9c:	f7fc f9ac 	bl	8000ef8 <__aeabi_fsub>
 8004ba0:	1c03      	adds	r3, r0, #0
 8004ba2:	1c1a      	adds	r2, r3, #0
 8004ba4:	197b      	adds	r3, r7, r5
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	1c19      	adds	r1, r3, #0
 8004bac:	1c10      	adds	r0, r2, #0
 8004bae:	f7fc f9a3 	bl	8000ef8 <__aeabi_fsub>
 8004bb2:	1c03      	adds	r3, r0, #0
 8004bb4:	1c1a      	adds	r2, r3, #0
 8004bb6:	231c      	movs	r3, #28
 8004bb8:	001e      	movs	r6, r3
 8004bba:	18fb      	adds	r3, r7, r3
 8004bbc:	601a      	str	r2, [r3, #0]
        t3[1] = p1ap3_1 - p2[1] - p4[1];
 8004bbe:	193b      	adds	r3, r7, r4
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	3304      	adds	r3, #4
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	1c19      	adds	r1, r3, #0
 8004bc8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8004bca:	f7fc f995 	bl	8000ef8 <__aeabi_fsub>
 8004bce:	1c03      	adds	r3, r0, #0
 8004bd0:	1c1a      	adds	r2, r3, #0
 8004bd2:	197b      	adds	r3, r7, r5
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	3304      	adds	r3, #4
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	1c19      	adds	r1, r3, #0
 8004bdc:	1c10      	adds	r0, r2, #0
 8004bde:	f7fc f98b 	bl	8000ef8 <__aeabi_fsub>
 8004be2:	1c03      	adds	r3, r0, #0
 8004be4:	1c1a      	adds	r2, r3, #0
 8004be6:	0033      	movs	r3, r6
 8004be8:	18fb      	adds	r3, r7, r3
 8004bea:	605a      	str	r2, [r3, #4]
        // col 4
        t4[0] = p1sp3_0 - p2[1] + p4[1];
 8004bec:	193b      	adds	r3, r7, r4
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	3304      	adds	r3, #4
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	1c19      	adds	r1, r3, #0
 8004bf6:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8004bf8:	f7fc f97e 	bl	8000ef8 <__aeabi_fsub>
 8004bfc:	1c03      	adds	r3, r0, #0
 8004bfe:	1c1a      	adds	r2, r3, #0
 8004c00:	002e      	movs	r6, r5
 8004c02:	19bb      	adds	r3, r7, r6
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	3304      	adds	r3, #4
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	1c19      	adds	r1, r3, #0
 8004c0c:	1c10      	adds	r0, r2, #0
 8004c0e:	f7fb fccf 	bl	80005b0 <__aeabi_fadd>
 8004c12:	1c03      	adds	r3, r0, #0
 8004c14:	1c1a      	adds	r2, r3, #0
 8004c16:	250c      	movs	r5, #12
 8004c18:	197b      	adds	r3, r7, r5
 8004c1a:	601a      	str	r2, [r3, #0]
        t4[1] = p1sp3_1 + p2[0] - p4[0];
 8004c1c:	193b      	adds	r3, r7, r4
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004c24:	1c18      	adds	r0, r3, #0
 8004c26:	f7fb fcc3 	bl	80005b0 <__aeabi_fadd>
 8004c2a:	1c03      	adds	r3, r0, #0
 8004c2c:	1c1a      	adds	r2, r3, #0
 8004c2e:	19bb      	adds	r3, r7, r6
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	1c19      	adds	r1, r3, #0
 8004c36:	1c10      	adds	r0, r2, #0
 8004c38:	f7fc f95e 	bl	8000ef8 <__aeabi_fsub>
 8004c3c:	1c03      	adds	r3, r0, #0
 8004c3e:	1c1a      	adds	r2, r3, #0
 8004c40:	197b      	adds	r3, r7, r5
 8004c42:	605a      	str	r2, [r3, #4]
        // col 1 - top
        *p1++ = p1ap3_0 + p2[0] + p4[0];
 8004c44:	0025      	movs	r5, r4
 8004c46:	193b      	adds	r3, r7, r4
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8004c4e:	1c18      	adds	r0, r3, #0
 8004c50:	f7fb fcae 	bl	80005b0 <__aeabi_fadd>
 8004c54:	1c03      	adds	r3, r0, #0
 8004c56:	1c18      	adds	r0, r3, #0
 8004c58:	19bb      	adds	r3, r7, r6
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	681a      	ldr	r2, [r3, #0]
 8004c5e:	683c      	ldr	r4, [r7, #0]
 8004c60:	1d23      	adds	r3, r4, #4
 8004c62:	603b      	str	r3, [r7, #0]
 8004c64:	1c11      	adds	r1, r2, #0
 8004c66:	f7fb fca3 	bl	80005b0 <__aeabi_fadd>
 8004c6a:	1c03      	adds	r3, r0, #0
 8004c6c:	6023      	str	r3, [r4, #0]
        *p1++ = p1ap3_1 + p2[1] + p4[1];
 8004c6e:	002c      	movs	r4, r5
 8004c70:	0025      	movs	r5, r4
 8004c72:	193b      	adds	r3, r7, r4
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	3304      	adds	r3, #4
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8004c7c:	1c18      	adds	r0, r3, #0
 8004c7e:	f7fb fc97 	bl	80005b0 <__aeabi_fadd>
 8004c82:	1c03      	adds	r3, r0, #0
 8004c84:	1c18      	adds	r0, r3, #0
 8004c86:	19bb      	adds	r3, r7, r6
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	3304      	adds	r3, #4
 8004c8c:	681a      	ldr	r2, [r3, #0]
 8004c8e:	683c      	ldr	r4, [r7, #0]
 8004c90:	1d23      	adds	r3, r4, #4
 8004c92:	603b      	str	r3, [r7, #0]
 8004c94:	1c11      	adds	r1, r2, #0
 8004c96:	f7fb fc8b 	bl	80005b0 <__aeabi_fadd>
 8004c9a:	1c03      	adds	r3, r0, #0
 8004c9c:	6023      	str	r3, [r4, #0]

        // BOTTOM
        p1ap3_1 = pEnd1[-1] + pEnd3[-1];
 8004c9e:	23ac      	movs	r3, #172	; 0xac
 8004ca0:	001c      	movs	r4, r3
 8004ca2:	18fb      	adds	r3, r7, r3
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	3b04      	subs	r3, #4
 8004ca8:	681a      	ldr	r2, [r3, #0]
 8004caa:	23a4      	movs	r3, #164	; 0xa4
 8004cac:	18f9      	adds	r1, r7, r3
 8004cae:	680b      	ldr	r3, [r1, #0]
 8004cb0:	3b04      	subs	r3, #4
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	1c19      	adds	r1, r3, #0
 8004cb6:	1c10      	adds	r0, r2, #0
 8004cb8:	f7fb fc7a 	bl	80005b0 <__aeabi_fadd>
 8004cbc:	1c03      	adds	r3, r0, #0
 8004cbe:	65bb      	str	r3, [r7, #88]	; 0x58
        p1sp3_1 = pEnd1[-1] - pEnd3[-1];
 8004cc0:	0023      	movs	r3, r4
 8004cc2:	001c      	movs	r4, r3
 8004cc4:	18fa      	adds	r2, r7, r3
 8004cc6:	6813      	ldr	r3, [r2, #0]
 8004cc8:	3b04      	subs	r3, #4
 8004cca:	681a      	ldr	r2, [r3, #0]
 8004ccc:	23a4      	movs	r3, #164	; 0xa4
 8004cce:	18f9      	adds	r1, r7, r3
 8004cd0:	680b      	ldr	r3, [r1, #0]
 8004cd2:	3b04      	subs	r3, #4
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	1c19      	adds	r1, r3, #0
 8004cd8:	1c10      	adds	r0, r2, #0
 8004cda:	f7fc f90d 	bl	8000ef8 <__aeabi_fsub>
 8004cde:	1c03      	adds	r3, r0, #0
 8004ce0:	657b      	str	r3, [r7, #84]	; 0x54
        p1ap3_0 = pEnd1[0] + pEnd3[0];
 8004ce2:	0023      	movs	r3, r4
 8004ce4:	001c      	movs	r4, r3
 8004ce6:	18fa      	adds	r2, r7, r3
 8004ce8:	6813      	ldr	r3, [r2, #0]
 8004cea:	681a      	ldr	r2, [r3, #0]
 8004cec:	23a4      	movs	r3, #164	; 0xa4
 8004cee:	18f9      	adds	r1, r7, r3
 8004cf0:	680b      	ldr	r3, [r1, #0]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	1c19      	adds	r1, r3, #0
 8004cf6:	1c10      	adds	r0, r2, #0
 8004cf8:	f7fb fc5a 	bl	80005b0 <__aeabi_fadd>
 8004cfc:	1c03      	adds	r3, r0, #0
 8004cfe:	663b      	str	r3, [r7, #96]	; 0x60
        p1sp3_0 = pEnd1[0] - pEnd3[0];
 8004d00:	0021      	movs	r1, r4
 8004d02:	187a      	adds	r2, r7, r1
 8004d04:	6813      	ldr	r3, [r2, #0]
 8004d06:	681a      	ldr	r2, [r3, #0]
 8004d08:	23a4      	movs	r3, #164	; 0xa4
 8004d0a:	18fb      	adds	r3, r7, r3
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	1c19      	adds	r1, r3, #0
 8004d12:	1c10      	adds	r0, r2, #0
 8004d14:	f7fc f8f0 	bl	8000ef8 <__aeabi_fsub>
 8004d18:	1c03      	adds	r3, r0, #0
 8004d1a:	65fb      	str	r3, [r7, #92]	; 0x5c
        // col 2
        t2[2] = pEnd2[0]  - pEnd4[0] + p1sp3_1;
 8004d1c:	23a8      	movs	r3, #168	; 0xa8
 8004d1e:	18fa      	adds	r2, r7, r3
 8004d20:	6813      	ldr	r3, [r2, #0]
 8004d22:	681a      	ldr	r2, [r3, #0]
 8004d24:	21a0      	movs	r1, #160	; 0xa0
 8004d26:	187b      	adds	r3, r7, r1
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	1c19      	adds	r1, r3, #0
 8004d2e:	1c10      	adds	r0, r2, #0
 8004d30:	f7fc f8e2 	bl	8000ef8 <__aeabi_fsub>
 8004d34:	1c03      	adds	r3, r0, #0
 8004d36:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004d38:	1c18      	adds	r0, r3, #0
 8004d3a:	f7fb fc39 	bl	80005b0 <__aeabi_fadd>
 8004d3e:	1c03      	adds	r3, r0, #0
 8004d40:	1c1a      	adds	r2, r3, #0
 8004d42:	242c      	movs	r4, #44	; 0x2c
 8004d44:	193b      	adds	r3, r7, r4
 8004d46:	609a      	str	r2, [r3, #8]
        t2[3] = pEnd1[0] - pEnd3[0] - pEnd2[-1] + pEnd4[-1];
 8004d48:	22ac      	movs	r2, #172	; 0xac
 8004d4a:	18ba      	adds	r2, r7, r2
 8004d4c:	6813      	ldr	r3, [r2, #0]
 8004d4e:	681a      	ldr	r2, [r3, #0]
 8004d50:	20a4      	movs	r0, #164	; 0xa4
 8004d52:	183b      	adds	r3, r7, r0
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	1c19      	adds	r1, r3, #0
 8004d5a:	1c10      	adds	r0, r2, #0
 8004d5c:	f7fc f8cc 	bl	8000ef8 <__aeabi_fsub>
 8004d60:	1c03      	adds	r3, r0, #0
 8004d62:	1c1a      	adds	r2, r3, #0
 8004d64:	23a8      	movs	r3, #168	; 0xa8
 8004d66:	18fb      	adds	r3, r7, r3
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	3b04      	subs	r3, #4
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	1c19      	adds	r1, r3, #0
 8004d70:	1c10      	adds	r0, r2, #0
 8004d72:	f7fc f8c1 	bl	8000ef8 <__aeabi_fsub>
 8004d76:	1c03      	adds	r3, r0, #0
 8004d78:	1c1a      	adds	r2, r3, #0
 8004d7a:	21a0      	movs	r1, #160	; 0xa0
 8004d7c:	187b      	adds	r3, r7, r1
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	3b04      	subs	r3, #4
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	1c19      	adds	r1, r3, #0
 8004d86:	1c10      	adds	r0, r2, #0
 8004d88:	f7fb fc12 	bl	80005b0 <__aeabi_fadd>
 8004d8c:	1c03      	adds	r3, r0, #0
 8004d8e:	1c1a      	adds	r2, r3, #0
 8004d90:	193b      	adds	r3, r7, r4
 8004d92:	60da      	str	r2, [r3, #12]
        // col 3
        t3[2] = p1ap3_1 - pEnd2[-1] - pEnd4[-1];
 8004d94:	23a8      	movs	r3, #168	; 0xa8
 8004d96:	18fa      	adds	r2, r7, r3
 8004d98:	6813      	ldr	r3, [r2, #0]
 8004d9a:	3b04      	subs	r3, #4
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	1c19      	adds	r1, r3, #0
 8004da0:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8004da2:	f7fc f8a9 	bl	8000ef8 <__aeabi_fsub>
 8004da6:	1c03      	adds	r3, r0, #0
 8004da8:	1c1a      	adds	r2, r3, #0
 8004daa:	21a0      	movs	r1, #160	; 0xa0
 8004dac:	187b      	adds	r3, r7, r1
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	3b04      	subs	r3, #4
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	1c19      	adds	r1, r3, #0
 8004db6:	1c10      	adds	r0, r2, #0
 8004db8:	f7fc f89e 	bl	8000ef8 <__aeabi_fsub>
 8004dbc:	1c03      	adds	r3, r0, #0
 8004dbe:	1c1a      	adds	r2, r3, #0
 8004dc0:	231c      	movs	r3, #28
 8004dc2:	001c      	movs	r4, r3
 8004dc4:	18fb      	adds	r3, r7, r3
 8004dc6:	609a      	str	r2, [r3, #8]
        t3[3] = p1ap3_0 - pEnd2[0]  - pEnd4[0];
 8004dc8:	23a8      	movs	r3, #168	; 0xa8
 8004dca:	18fa      	adds	r2, r7, r3
 8004dcc:	6813      	ldr	r3, [r2, #0]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	1c19      	adds	r1, r3, #0
 8004dd2:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8004dd4:	f7fc f890 	bl	8000ef8 <__aeabi_fsub>
 8004dd8:	1c03      	adds	r3, r0, #0
 8004dda:	1c1a      	adds	r2, r3, #0
 8004ddc:	21a0      	movs	r1, #160	; 0xa0
 8004dde:	187b      	adds	r3, r7, r1
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	1c19      	adds	r1, r3, #0
 8004de6:	1c10      	adds	r0, r2, #0
 8004de8:	f7fc f886 	bl	8000ef8 <__aeabi_fsub>
 8004dec:	1c03      	adds	r3, r0, #0
 8004dee:	1c1a      	adds	r2, r3, #0
 8004df0:	0023      	movs	r3, r4
 8004df2:	18fb      	adds	r3, r7, r3
 8004df4:	60da      	str	r2, [r3, #12]
        // col 4
        t4[2] = pEnd2[0]  - pEnd4[0]  - p1sp3_1;
 8004df6:	23a8      	movs	r3, #168	; 0xa8
 8004df8:	18fa      	adds	r2, r7, r3
 8004dfa:	6813      	ldr	r3, [r2, #0]
 8004dfc:	681a      	ldr	r2, [r3, #0]
 8004dfe:	21a0      	movs	r1, #160	; 0xa0
 8004e00:	187b      	adds	r3, r7, r1
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	681b      	ldr	r3, [r3, #0]
 8004e06:	1c19      	adds	r1, r3, #0
 8004e08:	1c10      	adds	r0, r2, #0
 8004e0a:	f7fc f875 	bl	8000ef8 <__aeabi_fsub>
 8004e0e:	1c03      	adds	r3, r0, #0
 8004e10:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004e12:	1c18      	adds	r0, r3, #0
 8004e14:	f7fc f870 	bl	8000ef8 <__aeabi_fsub>
 8004e18:	1c03      	adds	r3, r0, #0
 8004e1a:	1c1a      	adds	r2, r3, #0
 8004e1c:	230c      	movs	r3, #12
 8004e1e:	001c      	movs	r4, r3
 8004e20:	18fb      	adds	r3, r7, r3
 8004e22:	609a      	str	r2, [r3, #8]
        t4[3] = pEnd4[-1] - pEnd2[-1] - p1sp3_0;
 8004e24:	21a0      	movs	r1, #160	; 0xa0
 8004e26:	187a      	adds	r2, r7, r1
 8004e28:	6813      	ldr	r3, [r2, #0]
 8004e2a:	3b04      	subs	r3, #4
 8004e2c:	681a      	ldr	r2, [r3, #0]
 8004e2e:	23a8      	movs	r3, #168	; 0xa8
 8004e30:	18fb      	adds	r3, r7, r3
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	3b04      	subs	r3, #4
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	1c19      	adds	r1, r3, #0
 8004e3a:	1c10      	adds	r0, r2, #0
 8004e3c:	f7fc f85c 	bl	8000ef8 <__aeabi_fsub>
 8004e40:	1c03      	adds	r3, r0, #0
 8004e42:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8004e44:	1c18      	adds	r0, r3, #0
 8004e46:	f7fc f857 	bl	8000ef8 <__aeabi_fsub>
 8004e4a:	1c03      	adds	r3, r0, #0
 8004e4c:	1c1a      	adds	r2, r3, #0
 8004e4e:	0023      	movs	r3, r4
 8004e50:	18fb      	adds	r3, r7, r3
 8004e52:	60da      	str	r2, [r3, #12]
        // col 1 - Bottom
        *pEnd1-- = p1ap3_0 + pEnd2[0] + pEnd4[0];
 8004e54:	23a8      	movs	r3, #168	; 0xa8
 8004e56:	18fb      	adds	r3, r7, r3
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8004e5e:	1c18      	adds	r0, r3, #0
 8004e60:	f7fb fba6 	bl	80005b0 <__aeabi_fadd>
 8004e64:	1c03      	adds	r3, r0, #0
 8004e66:	1c18      	adds	r0, r3, #0
 8004e68:	21a0      	movs	r1, #160	; 0xa0
 8004e6a:	187b      	adds	r3, r7, r1
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	681a      	ldr	r2, [r3, #0]
 8004e70:	23ac      	movs	r3, #172	; 0xac
 8004e72:	0019      	movs	r1, r3
 8004e74:	18fb      	adds	r3, r7, r3
 8004e76:	681c      	ldr	r4, [r3, #0]
 8004e78:	1f23      	subs	r3, r4, #4
 8004e7a:	1879      	adds	r1, r7, r1
 8004e7c:	600b      	str	r3, [r1, #0]
 8004e7e:	1c11      	adds	r1, r2, #0
 8004e80:	f7fb fb96 	bl	80005b0 <__aeabi_fadd>
 8004e84:	1c03      	adds	r3, r0, #0
 8004e86:	6023      	str	r3, [r4, #0]
        *pEnd1-- = p1ap3_1 + pEnd2[-1] + pEnd4[-1];
 8004e88:	22a8      	movs	r2, #168	; 0xa8
 8004e8a:	18bb      	adds	r3, r7, r2
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	3b04      	subs	r3, #4
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8004e94:	1c18      	adds	r0, r3, #0
 8004e96:	f7fb fb8b 	bl	80005b0 <__aeabi_fadd>
 8004e9a:	1c03      	adds	r3, r0, #0
 8004e9c:	1c18      	adds	r0, r3, #0
 8004e9e:	21a0      	movs	r1, #160	; 0xa0
 8004ea0:	187b      	adds	r3, r7, r1
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	3b04      	subs	r3, #4
 8004ea6:	681a      	ldr	r2, [r3, #0]
 8004ea8:	23ac      	movs	r3, #172	; 0xac
 8004eaa:	0019      	movs	r1, r3
 8004eac:	18fb      	adds	r3, r7, r3
 8004eae:	681c      	ldr	r4, [r3, #0]
 8004eb0:	1f23      	subs	r3, r4, #4
 8004eb2:	1879      	adds	r1, r7, r1
 8004eb4:	600b      	str	r3, [r1, #0]
 8004eb6:	1c11      	adds	r1, r2, #0
 8004eb8:	f7fb fb7a 	bl	80005b0 <__aeabi_fadd>
 8004ebc:	1c03      	adds	r3, r0, #0
 8004ebe:	6023      	str	r3, [r4, #0]

        // COL 2
        // read twiddle factors
        twR = *tw2++;
 8004ec0:	239c      	movs	r3, #156	; 0x9c
 8004ec2:	0019      	movs	r1, r3
 8004ec4:	18fb      	adds	r3, r7, r3
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	1d1a      	adds	r2, r3, #4
 8004eca:	1878      	adds	r0, r7, r1
 8004ecc:	6002      	str	r2, [r0, #0]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	653b      	str	r3, [r7, #80]	; 0x50
        twI = *tw2++;
 8004ed2:	000b      	movs	r3, r1
 8004ed4:	0019      	movs	r1, r3
 8004ed6:	18fb      	adds	r3, r7, r3
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	1d1a      	adds	r2, r3, #4
 8004edc:	1879      	adds	r1, r7, r1
 8004ede:	600a      	str	r2, [r1, #0]
 8004ee0:	681b      	ldr	r3, [r3, #0]
 8004ee2:	64fb      	str	r3, [r7, #76]	; 0x4c
        // multiply by twiddle factors
        //  let    Z1 = a + i(b),   Z2 = c + i(d)
        //   =>  Z1 * Z2  =  (a*c - b*d) + i(b*c + a*d)

        // Top
        m0 = t2[0] * twR;
 8004ee4:	242c      	movs	r4, #44	; 0x2c
 8004ee6:	193b      	adds	r3, r7, r4
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	1c19      	adds	r1, r3, #0
 8004eec:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8004eee:	f7fb fed1 	bl	8000c94 <__aeabi_fmul>
 8004ef2:	1c03      	adds	r3, r0, #0
 8004ef4:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t2[1] * twI;
 8004ef6:	193b      	adds	r3, r7, r4
 8004ef8:	685b      	ldr	r3, [r3, #4]
 8004efa:	1c19      	adds	r1, r3, #0
 8004efc:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8004efe:	f7fb fec9 	bl	8000c94 <__aeabi_fmul>
 8004f02:	1c03      	adds	r3, r0, #0
 8004f04:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t2[1] * twR;
 8004f06:	193b      	adds	r3, r7, r4
 8004f08:	685b      	ldr	r3, [r3, #4]
 8004f0a:	1c19      	adds	r1, r3, #0
 8004f0c:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8004f0e:	f7fb fec1 	bl	8000c94 <__aeabi_fmul>
 8004f12:	1c03      	adds	r3, r0, #0
 8004f14:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t2[0] * twI;
 8004f16:	193b      	adds	r3, r7, r4
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	1c19      	adds	r1, r3, #0
 8004f1c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8004f1e:	f7fb feb9 	bl	8000c94 <__aeabi_fmul>
 8004f22:	1c03      	adds	r3, r0, #0
 8004f24:	63fb      	str	r3, [r7, #60]	; 0x3c

        *p2++ = m0 + m1;
 8004f26:	197b      	adds	r3, r7, r5
 8004f28:	681c      	ldr	r4, [r3, #0]
 8004f2a:	1d23      	adds	r3, r4, #4
 8004f2c:	1979      	adds	r1, r7, r5
 8004f2e:	600b      	str	r3, [r1, #0]
 8004f30:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8004f32:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8004f34:	f7fb fb3c 	bl	80005b0 <__aeabi_fadd>
 8004f38:	1c03      	adds	r3, r0, #0
 8004f3a:	6023      	str	r3, [r4, #0]
        *p2++ = m2 - m3;
 8004f3c:	197b      	adds	r3, r7, r5
 8004f3e:	681c      	ldr	r4, [r3, #0]
 8004f40:	1d23      	adds	r3, r4, #4
 8004f42:	1979      	adds	r1, r7, r5
 8004f44:	600b      	str	r3, [r1, #0]
 8004f46:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8004f48:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8004f4a:	f7fb ffd5 	bl	8000ef8 <__aeabi_fsub>
 8004f4e:	1c03      	adds	r3, r0, #0
 8004f50:	6023      	str	r3, [r4, #0]
        // use vertical symmetry col 2
        // 0.9997 - 0.0245i  <==>  0.0245 - 0.9997i
        // Bottom
        m0 = t2[3] * twI;
 8004f52:	242c      	movs	r4, #44	; 0x2c
 8004f54:	193b      	adds	r3, r7, r4
 8004f56:	68db      	ldr	r3, [r3, #12]
 8004f58:	1c19      	adds	r1, r3, #0
 8004f5a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8004f5c:	f7fb fe9a 	bl	8000c94 <__aeabi_fmul>
 8004f60:	1c03      	adds	r3, r0, #0
 8004f62:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t2[2] * twR;
 8004f64:	193b      	adds	r3, r7, r4
 8004f66:	689b      	ldr	r3, [r3, #8]
 8004f68:	1c19      	adds	r1, r3, #0
 8004f6a:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8004f6c:	f7fb fe92 	bl	8000c94 <__aeabi_fmul>
 8004f70:	1c03      	adds	r3, r0, #0
 8004f72:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t2[2] * twI;
 8004f74:	193b      	adds	r3, r7, r4
 8004f76:	689b      	ldr	r3, [r3, #8]
 8004f78:	1c19      	adds	r1, r3, #0
 8004f7a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8004f7c:	f7fb fe8a 	bl	8000c94 <__aeabi_fmul>
 8004f80:	1c03      	adds	r3, r0, #0
 8004f82:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t2[3] * twR;
 8004f84:	193b      	adds	r3, r7, r4
 8004f86:	68db      	ldr	r3, [r3, #12]
 8004f88:	1c19      	adds	r1, r3, #0
 8004f8a:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8004f8c:	f7fb fe82 	bl	8000c94 <__aeabi_fmul>
 8004f90:	1c03      	adds	r3, r0, #0
 8004f92:	63fb      	str	r3, [r7, #60]	; 0x3c

        *pEnd2-- = m0 - m1;
 8004f94:	22a8      	movs	r2, #168	; 0xa8
 8004f96:	18bb      	adds	r3, r7, r2
 8004f98:	681c      	ldr	r4, [r3, #0]
 8004f9a:	1f23      	subs	r3, r4, #4
 8004f9c:	0015      	movs	r5, r2
 8004f9e:	18ba      	adds	r2, r7, r2
 8004fa0:	6013      	str	r3, [r2, #0]
 8004fa2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8004fa4:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8004fa6:	f7fb ffa7 	bl	8000ef8 <__aeabi_fsub>
 8004faa:	1c03      	adds	r3, r0, #0
 8004fac:	6023      	str	r3, [r4, #0]
        *pEnd2-- = m2 + m3;
 8004fae:	002a      	movs	r2, r5
 8004fb0:	18bb      	adds	r3, r7, r2
 8004fb2:	681c      	ldr	r4, [r3, #0]
 8004fb4:	1f23      	subs	r3, r4, #4
 8004fb6:	18ba      	adds	r2, r7, r2
 8004fb8:	6013      	str	r3, [r2, #0]
 8004fba:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8004fbc:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8004fbe:	f7fb faf7 	bl	80005b0 <__aeabi_fadd>
 8004fc2:	1c03      	adds	r3, r0, #0
 8004fc4:	6023      	str	r3, [r4, #0]

        // COL 3
        twR = tw3[0];
 8004fc6:	2398      	movs	r3, #152	; 0x98
 8004fc8:	001a      	movs	r2, r3
 8004fca:	18fb      	adds	r3, r7, r3
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	653b      	str	r3, [r7, #80]	; 0x50
        twI = tw3[1];
 8004fd2:	0013      	movs	r3, r2
 8004fd4:	001a      	movs	r2, r3
 8004fd6:	18fb      	adds	r3, r7, r3
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	685b      	ldr	r3, [r3, #4]
 8004fdc:	64fb      	str	r3, [r7, #76]	; 0x4c
        tw3 += twMod3;
 8004fde:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8004fe0:	009b      	lsls	r3, r3, #2
 8004fe2:	0014      	movs	r4, r2
 8004fe4:	18ba      	adds	r2, r7, r2
 8004fe6:	6812      	ldr	r2, [r2, #0]
 8004fe8:	18d3      	adds	r3, r2, r3
 8004fea:	0022      	movs	r2, r4
 8004fec:	18ba      	adds	r2, r7, r2
 8004fee:	6013      	str	r3, [r2, #0]
        // Top
        m0 = t3[0] * twR;
 8004ff0:	251c      	movs	r5, #28
 8004ff2:	197b      	adds	r3, r7, r5
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	1c19      	adds	r1, r3, #0
 8004ff8:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8004ffa:	f7fb fe4b 	bl	8000c94 <__aeabi_fmul>
 8004ffe:	1c03      	adds	r3, r0, #0
 8005000:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t3[1] * twI;
 8005002:	197b      	adds	r3, r7, r5
 8005004:	685b      	ldr	r3, [r3, #4]
 8005006:	1c19      	adds	r1, r3, #0
 8005008:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800500a:	f7fb fe43 	bl	8000c94 <__aeabi_fmul>
 800500e:	1c03      	adds	r3, r0, #0
 8005010:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t3[1] * twR;
 8005012:	197b      	adds	r3, r7, r5
 8005014:	685b      	ldr	r3, [r3, #4]
 8005016:	1c19      	adds	r1, r3, #0
 8005018:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800501a:	f7fb fe3b 	bl	8000c94 <__aeabi_fmul>
 800501e:	1c03      	adds	r3, r0, #0
 8005020:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t3[0] * twI;
 8005022:	197b      	adds	r3, r7, r5
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	1c19      	adds	r1, r3, #0
 8005028:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800502a:	f7fb fe33 	bl	8000c94 <__aeabi_fmul>
 800502e:	1c03      	adds	r3, r0, #0
 8005030:	63fb      	str	r3, [r7, #60]	; 0x3c

        *p3++ = m0 + m1;
 8005032:	208c      	movs	r0, #140	; 0x8c
 8005034:	183b      	adds	r3, r7, r0
 8005036:	681c      	ldr	r4, [r3, #0]
 8005038:	1d23      	adds	r3, r4, #4
 800503a:	183a      	adds	r2, r7, r0
 800503c:	6013      	str	r3, [r2, #0]
 800503e:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8005040:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8005042:	f7fb fab5 	bl	80005b0 <__aeabi_fadd>
 8005046:	1c03      	adds	r3, r0, #0
 8005048:	6023      	str	r3, [r4, #0]
        *p3++ = m2 - m3;
 800504a:	208c      	movs	r0, #140	; 0x8c
 800504c:	183b      	adds	r3, r7, r0
 800504e:	681c      	ldr	r4, [r3, #0]
 8005050:	1d23      	adds	r3, r4, #4
 8005052:	1838      	adds	r0, r7, r0
 8005054:	6003      	str	r3, [r0, #0]
 8005056:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8005058:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800505a:	f7fb ff4d 	bl	8000ef8 <__aeabi_fsub>
 800505e:	1c03      	adds	r3, r0, #0
 8005060:	6023      	str	r3, [r4, #0]
        // use vertical symmetry col 3
        // 0.9988 - 0.0491i  <==>  -0.9988 - 0.0491i
        // Bottom
        m0 = -t3[3] * twR;
 8005062:	197b      	adds	r3, r7, r5
 8005064:	68db      	ldr	r3, [r3, #12]
 8005066:	2280      	movs	r2, #128	; 0x80
 8005068:	0612      	lsls	r2, r2, #24
 800506a:	4053      	eors	r3, r2
 800506c:	1c19      	adds	r1, r3, #0
 800506e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005070:	f7fb fe10 	bl	8000c94 <__aeabi_fmul>
 8005074:	1c03      	adds	r3, r0, #0
 8005076:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t3[2] * twI;
 8005078:	197b      	adds	r3, r7, r5
 800507a:	689b      	ldr	r3, [r3, #8]
 800507c:	1c19      	adds	r1, r3, #0
 800507e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005080:	f7fb fe08 	bl	8000c94 <__aeabi_fmul>
 8005084:	1c03      	adds	r3, r0, #0
 8005086:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t3[2] * twR;
 8005088:	197b      	adds	r3, r7, r5
 800508a:	689b      	ldr	r3, [r3, #8]
 800508c:	1c19      	adds	r1, r3, #0
 800508e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005090:	f7fb fe00 	bl	8000c94 <__aeabi_fmul>
 8005094:	1c03      	adds	r3, r0, #0
 8005096:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t3[3] * twI;
 8005098:	197b      	adds	r3, r7, r5
 800509a:	68db      	ldr	r3, [r3, #12]
 800509c:	1c19      	adds	r1, r3, #0
 800509e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80050a0:	f7fb fdf8 	bl	8000c94 <__aeabi_fmul>
 80050a4:	1c03      	adds	r3, r0, #0
 80050a6:	63fb      	str	r3, [r7, #60]	; 0x3c

        *pEnd3-- = m0 - m1;
 80050a8:	22a4      	movs	r2, #164	; 0xa4
 80050aa:	18bb      	adds	r3, r7, r2
 80050ac:	681c      	ldr	r4, [r3, #0]
 80050ae:	1f23      	subs	r3, r4, #4
 80050b0:	0015      	movs	r5, r2
 80050b2:	18ba      	adds	r2, r7, r2
 80050b4:	6013      	str	r3, [r2, #0]
 80050b6:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80050b8:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80050ba:	f7fb ff1d 	bl	8000ef8 <__aeabi_fsub>
 80050be:	1c03      	adds	r3, r0, #0
 80050c0:	6023      	str	r3, [r4, #0]
        *pEnd3-- = m3 - m2;
 80050c2:	002a      	movs	r2, r5
 80050c4:	18bb      	adds	r3, r7, r2
 80050c6:	681c      	ldr	r4, [r3, #0]
 80050c8:	1f23      	subs	r3, r4, #4
 80050ca:	18ba      	adds	r2, r7, r2
 80050cc:	6013      	str	r3, [r2, #0]
 80050ce:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80050d0:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80050d2:	f7fb ff11 	bl	8000ef8 <__aeabi_fsub>
 80050d6:	1c03      	adds	r3, r0, #0
 80050d8:	6023      	str	r3, [r4, #0]

        // COL 4
        twR = tw4[0];
 80050da:	2294      	movs	r2, #148	; 0x94
 80050dc:	18bb      	adds	r3, r7, r2
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	653b      	str	r3, [r7, #80]	; 0x50
        twI = tw4[1];
 80050e4:	18bb      	adds	r3, r7, r2
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	685b      	ldr	r3, [r3, #4]
 80050ea:	64fb      	str	r3, [r7, #76]	; 0x4c
        tw4 += twMod4;
 80050ec:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80050ee:	009b      	lsls	r3, r3, #2
 80050f0:	0010      	movs	r0, r2
 80050f2:	18ba      	adds	r2, r7, r2
 80050f4:	6812      	ldr	r2, [r2, #0]
 80050f6:	18d3      	adds	r3, r2, r3
 80050f8:	0002      	movs	r2, r0
 80050fa:	18ba      	adds	r2, r7, r2
 80050fc:	6013      	str	r3, [r2, #0]
        // Top
        m0 = t4[0] * twR;
 80050fe:	250c      	movs	r5, #12
 8005100:	197b      	adds	r3, r7, r5
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	1c19      	adds	r1, r3, #0
 8005106:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005108:	f7fb fdc4 	bl	8000c94 <__aeabi_fmul>
 800510c:	1c03      	adds	r3, r0, #0
 800510e:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t4[1] * twI;
 8005110:	197b      	adds	r3, r7, r5
 8005112:	685b      	ldr	r3, [r3, #4]
 8005114:	1c19      	adds	r1, r3, #0
 8005116:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005118:	f7fb fdbc 	bl	8000c94 <__aeabi_fmul>
 800511c:	1c03      	adds	r3, r0, #0
 800511e:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t4[1] * twR;
 8005120:	197b      	adds	r3, r7, r5
 8005122:	685b      	ldr	r3, [r3, #4]
 8005124:	1c19      	adds	r1, r3, #0
 8005126:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005128:	f7fb fdb4 	bl	8000c94 <__aeabi_fmul>
 800512c:	1c03      	adds	r3, r0, #0
 800512e:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t4[0] * twI;
 8005130:	197b      	adds	r3, r7, r5
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	1c19      	adds	r1, r3, #0
 8005136:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005138:	f7fb fdac 	bl	8000c94 <__aeabi_fmul>
 800513c:	1c03      	adds	r3, r0, #0
 800513e:	63fb      	str	r3, [r7, #60]	; 0x3c

        *p4++ = m0 + m1;
 8005140:	19bb      	adds	r3, r7, r6
 8005142:	681c      	ldr	r4, [r3, #0]
 8005144:	1d23      	adds	r3, r4, #4
 8005146:	19ba      	adds	r2, r7, r6
 8005148:	6013      	str	r3, [r2, #0]
 800514a:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800514c:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800514e:	f7fb fa2f 	bl	80005b0 <__aeabi_fadd>
 8005152:	1c03      	adds	r3, r0, #0
 8005154:	6023      	str	r3, [r4, #0]
        *p4++ = m2 - m3;
 8005156:	19bb      	adds	r3, r7, r6
 8005158:	681c      	ldr	r4, [r3, #0]
 800515a:	1d23      	adds	r3, r4, #4
 800515c:	19ba      	adds	r2, r7, r6
 800515e:	6013      	str	r3, [r2, #0]
 8005160:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8005162:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8005164:	f7fb fec8 	bl	8000ef8 <__aeabi_fsub>
 8005168:	1c03      	adds	r3, r0, #0
 800516a:	6023      	str	r3, [r4, #0]
        // use vertical symmetry col 4
        // 0.9973 - 0.0736i  <==>  -0.0736 + 0.9973i
        // Bottom
        m0 = t4[3] * twI;
 800516c:	197b      	adds	r3, r7, r5
 800516e:	68db      	ldr	r3, [r3, #12]
 8005170:	1c19      	adds	r1, r3, #0
 8005172:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005174:	f7fb fd8e 	bl	8000c94 <__aeabi_fmul>
 8005178:	1c03      	adds	r3, r0, #0
 800517a:	64bb      	str	r3, [r7, #72]	; 0x48
        m1 = t4[2] * twR;
 800517c:	197b      	adds	r3, r7, r5
 800517e:	689b      	ldr	r3, [r3, #8]
 8005180:	1c19      	adds	r1, r3, #0
 8005182:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005184:	f7fb fd86 	bl	8000c94 <__aeabi_fmul>
 8005188:	1c03      	adds	r3, r0, #0
 800518a:	647b      	str	r3, [r7, #68]	; 0x44
        m2 = t4[2] * twI;
 800518c:	197b      	adds	r3, r7, r5
 800518e:	689b      	ldr	r3, [r3, #8]
 8005190:	1c19      	adds	r1, r3, #0
 8005192:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005194:	f7fb fd7e 	bl	8000c94 <__aeabi_fmul>
 8005198:	1c03      	adds	r3, r0, #0
 800519a:	643b      	str	r3, [r7, #64]	; 0x40
        m3 = t4[3] * twR;
 800519c:	197b      	adds	r3, r7, r5
 800519e:	68db      	ldr	r3, [r3, #12]
 80051a0:	1c19      	adds	r1, r3, #0
 80051a2:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80051a4:	f7fb fd76 	bl	8000c94 <__aeabi_fmul>
 80051a8:	1c03      	adds	r3, r0, #0
 80051aa:	63fb      	str	r3, [r7, #60]	; 0x3c

        *pEnd4-- = m0 - m1;
 80051ac:	21a0      	movs	r1, #160	; 0xa0
 80051ae:	000d      	movs	r5, r1
 80051b0:	187b      	adds	r3, r7, r1
 80051b2:	681c      	ldr	r4, [r3, #0]
 80051b4:	1f23      	subs	r3, r4, #4
 80051b6:	197a      	adds	r2, r7, r5
 80051b8:	6013      	str	r3, [r2, #0]
 80051ba:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80051bc:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80051be:	f7fb fe9b 	bl	8000ef8 <__aeabi_fsub>
 80051c2:	1c03      	adds	r3, r0, #0
 80051c4:	6023      	str	r3, [r4, #0]
        *pEnd4-- = m2 + m3;
 80051c6:	197b      	adds	r3, r7, r5
 80051c8:	681c      	ldr	r4, [r3, #0]
 80051ca:	1f23      	subs	r3, r4, #4
 80051cc:	197a      	adds	r2, r7, r5
 80051ce:	6013      	str	r3, [r2, #0]
 80051d0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80051d2:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80051d4:	f7fb f9ec 	bl	80005b0 <__aeabi_fadd>
 80051d8:	1c03      	adds	r3, r0, #0
 80051da:	6023      	str	r3, [r4, #0]
    for (l = (L - 2) >> 1; l > 0; l-- )
 80051dc:	2284      	movs	r2, #132	; 0x84
 80051de:	18bb      	adds	r3, r7, r2
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	3b01      	subs	r3, #1
 80051e4:	18ba      	adds	r2, r7, r2
 80051e6:	6013      	str	r3, [r2, #0]
 80051e8:	2384      	movs	r3, #132	; 0x84
 80051ea:	18fb      	adds	r3, r7, r3
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d000      	beq.n	80051f4 <arm_cfft_radix8by4_f32+0xa68>
 80051f2:	e46f      	b.n	8004ad4 <arm_cfft_radix8by4_f32+0x348>
    }

    //MIDDLE
    // Twiddle factors are
    //  1.0000  0.7071-0.7071i  -1.0000i  -0.7071-0.7071i
    p1ap3_0 = p1[0] + p3[0];
 80051f4:	683b      	ldr	r3, [r7, #0]
 80051f6:	681a      	ldr	r2, [r3, #0]
 80051f8:	248c      	movs	r4, #140	; 0x8c
 80051fa:	193b      	adds	r3, r7, r4
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	1c19      	adds	r1, r3, #0
 8005202:	1c10      	adds	r0, r2, #0
 8005204:	f7fb f9d4 	bl	80005b0 <__aeabi_fadd>
 8005208:	1c03      	adds	r3, r0, #0
 800520a:	663b      	str	r3, [r7, #96]	; 0x60
    p1sp3_0 = p1[0] - p3[0];
 800520c:	683b      	ldr	r3, [r7, #0]
 800520e:	681a      	ldr	r2, [r3, #0]
 8005210:	193b      	adds	r3, r7, r4
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	1c19      	adds	r1, r3, #0
 8005218:	1c10      	adds	r0, r2, #0
 800521a:	f7fb fe6d 	bl	8000ef8 <__aeabi_fsub>
 800521e:	1c03      	adds	r3, r0, #0
 8005220:	65fb      	str	r3, [r7, #92]	; 0x5c
    p1ap3_1 = p1[1] + p3[1];
 8005222:	683b      	ldr	r3, [r7, #0]
 8005224:	3304      	adds	r3, #4
 8005226:	681a      	ldr	r2, [r3, #0]
 8005228:	193b      	adds	r3, r7, r4
 800522a:	681b      	ldr	r3, [r3, #0]
 800522c:	3304      	adds	r3, #4
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	1c19      	adds	r1, r3, #0
 8005232:	1c10      	adds	r0, r2, #0
 8005234:	f7fb f9bc 	bl	80005b0 <__aeabi_fadd>
 8005238:	1c03      	adds	r3, r0, #0
 800523a:	65bb      	str	r3, [r7, #88]	; 0x58
    p1sp3_1 = p1[1] - p3[1];
 800523c:	683b      	ldr	r3, [r7, #0]
 800523e:	3304      	adds	r3, #4
 8005240:	681a      	ldr	r2, [r3, #0]
 8005242:	0025      	movs	r5, r4
 8005244:	197b      	adds	r3, r7, r5
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	3304      	adds	r3, #4
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	1c19      	adds	r1, r3, #0
 800524e:	1c10      	adds	r0, r2, #0
 8005250:	f7fb fe52 	bl	8000ef8 <__aeabi_fsub>
 8005254:	1c03      	adds	r3, r0, #0
 8005256:	657b      	str	r3, [r7, #84]	; 0x54

    // col 2
    t2[0] = p1sp3_0 + p2[1] - p4[1];
 8005258:	2490      	movs	r4, #144	; 0x90
 800525a:	193b      	adds	r3, r7, r4
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	3304      	adds	r3, #4
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8005264:	1c18      	adds	r0, r3, #0
 8005266:	f7fb f9a3 	bl	80005b0 <__aeabi_fadd>
 800526a:	1c03      	adds	r3, r0, #0
 800526c:	1c1a      	adds	r2, r3, #0
 800526e:	2588      	movs	r5, #136	; 0x88
 8005270:	197b      	adds	r3, r7, r5
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	3304      	adds	r3, #4
 8005276:	681b      	ldr	r3, [r3, #0]
 8005278:	1c19      	adds	r1, r3, #0
 800527a:	1c10      	adds	r0, r2, #0
 800527c:	f7fb fe3c 	bl	8000ef8 <__aeabi_fsub>
 8005280:	1c03      	adds	r3, r0, #0
 8005282:	1c1a      	adds	r2, r3, #0
 8005284:	262c      	movs	r6, #44	; 0x2c
 8005286:	19bb      	adds	r3, r7, r6
 8005288:	601a      	str	r2, [r3, #0]
    t2[1] = p1sp3_1 - p2[0] + p4[0];
 800528a:	193b      	adds	r3, r7, r4
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	1c19      	adds	r1, r3, #0
 8005292:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8005294:	f7fb fe30 	bl	8000ef8 <__aeabi_fsub>
 8005298:	1c03      	adds	r3, r0, #0
 800529a:	1c1a      	adds	r2, r3, #0
 800529c:	197b      	adds	r3, r7, r5
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	1c19      	adds	r1, r3, #0
 80052a4:	1c10      	adds	r0, r2, #0
 80052a6:	f7fb f983 	bl	80005b0 <__aeabi_fadd>
 80052aa:	1c03      	adds	r3, r0, #0
 80052ac:	1c1a      	adds	r2, r3, #0
 80052ae:	19bb      	adds	r3, r7, r6
 80052b0:	605a      	str	r2, [r3, #4]
    // col 3
    t3[0] = p1ap3_0 - p2[0] - p4[0];
 80052b2:	193b      	adds	r3, r7, r4
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	681b      	ldr	r3, [r3, #0]
 80052b8:	1c19      	adds	r1, r3, #0
 80052ba:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80052bc:	f7fb fe1c 	bl	8000ef8 <__aeabi_fsub>
 80052c0:	1c03      	adds	r3, r0, #0
 80052c2:	1c1a      	adds	r2, r3, #0
 80052c4:	197b      	adds	r3, r7, r5
 80052c6:	681b      	ldr	r3, [r3, #0]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	1c19      	adds	r1, r3, #0
 80052cc:	1c10      	adds	r0, r2, #0
 80052ce:	f7fb fe13 	bl	8000ef8 <__aeabi_fsub>
 80052d2:	1c03      	adds	r3, r0, #0
 80052d4:	1c1a      	adds	r2, r3, #0
 80052d6:	231c      	movs	r3, #28
 80052d8:	001e      	movs	r6, r3
 80052da:	18fb      	adds	r3, r7, r3
 80052dc:	601a      	str	r2, [r3, #0]
    t3[1] = p1ap3_1 - p2[1] - p4[1];
 80052de:	193b      	adds	r3, r7, r4
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	3304      	adds	r3, #4
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	1c19      	adds	r1, r3, #0
 80052e8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80052ea:	f7fb fe05 	bl	8000ef8 <__aeabi_fsub>
 80052ee:	1c03      	adds	r3, r0, #0
 80052f0:	1c1a      	adds	r2, r3, #0
 80052f2:	197b      	adds	r3, r7, r5
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	3304      	adds	r3, #4
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	1c19      	adds	r1, r3, #0
 80052fc:	1c10      	adds	r0, r2, #0
 80052fe:	f7fb fdfb 	bl	8000ef8 <__aeabi_fsub>
 8005302:	1c03      	adds	r3, r0, #0
 8005304:	1c1a      	adds	r2, r3, #0
 8005306:	0033      	movs	r3, r6
 8005308:	18fb      	adds	r3, r7, r3
 800530a:	605a      	str	r2, [r3, #4]
    // col 4
    t4[0] = p1sp3_0 - p2[1] + p4[1];
 800530c:	193b      	adds	r3, r7, r4
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	3304      	adds	r3, #4
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	1c19      	adds	r1, r3, #0
 8005316:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8005318:	f7fb fdee 	bl	8000ef8 <__aeabi_fsub>
 800531c:	1c03      	adds	r3, r0, #0
 800531e:	1c1a      	adds	r2, r3, #0
 8005320:	002e      	movs	r6, r5
 8005322:	19bb      	adds	r3, r7, r6
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	3304      	adds	r3, #4
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	1c19      	adds	r1, r3, #0
 800532c:	1c10      	adds	r0, r2, #0
 800532e:	f7fb f93f 	bl	80005b0 <__aeabi_fadd>
 8005332:	1c03      	adds	r3, r0, #0
 8005334:	1c1a      	adds	r2, r3, #0
 8005336:	230c      	movs	r3, #12
 8005338:	001d      	movs	r5, r3
 800533a:	18fb      	adds	r3, r7, r3
 800533c:	601a      	str	r2, [r3, #0]
    t4[1] = p1sp3_1 + p2[0] - p4[0];
 800533e:	193b      	adds	r3, r7, r4
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8005346:	1c18      	adds	r0, r3, #0
 8005348:	f7fb f932 	bl	80005b0 <__aeabi_fadd>
 800534c:	1c03      	adds	r3, r0, #0
 800534e:	1c1a      	adds	r2, r3, #0
 8005350:	19bb      	adds	r3, r7, r6
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	1c19      	adds	r1, r3, #0
 8005358:	1c10      	adds	r0, r2, #0
 800535a:	f7fb fdcd 	bl	8000ef8 <__aeabi_fsub>
 800535e:	1c03      	adds	r3, r0, #0
 8005360:	1c1a      	adds	r2, r3, #0
 8005362:	002b      	movs	r3, r5
 8005364:	18fb      	adds	r3, r7, r3
 8005366:	605a      	str	r2, [r3, #4]
    // col 1 - Top
    *p1++ = p1ap3_0 + p2[0] + p4[0];
 8005368:	0025      	movs	r5, r4
 800536a:	193b      	adds	r3, r7, r4
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8005372:	1c18      	adds	r0, r3, #0
 8005374:	f7fb f91c 	bl	80005b0 <__aeabi_fadd>
 8005378:	1c03      	adds	r3, r0, #0
 800537a:	1c18      	adds	r0, r3, #0
 800537c:	19bb      	adds	r3, r7, r6
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	681a      	ldr	r2, [r3, #0]
 8005382:	683c      	ldr	r4, [r7, #0]
 8005384:	1d23      	adds	r3, r4, #4
 8005386:	603b      	str	r3, [r7, #0]
 8005388:	1c11      	adds	r1, r2, #0
 800538a:	f7fb f911 	bl	80005b0 <__aeabi_fadd>
 800538e:	1c03      	adds	r3, r0, #0
 8005390:	6023      	str	r3, [r4, #0]
    *p1++ = p1ap3_1 + p2[1] + p4[1];
 8005392:	002c      	movs	r4, r5
 8005394:	0025      	movs	r5, r4
 8005396:	193b      	adds	r3, r7, r4
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	3304      	adds	r3, #4
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 80053a0:	1c18      	adds	r0, r3, #0
 80053a2:	f7fb f905 	bl	80005b0 <__aeabi_fadd>
 80053a6:	1c03      	adds	r3, r0, #0
 80053a8:	1c18      	adds	r0, r3, #0
 80053aa:	19bb      	adds	r3, r7, r6
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	3304      	adds	r3, #4
 80053b0:	681a      	ldr	r2, [r3, #0]
 80053b2:	683c      	ldr	r4, [r7, #0]
 80053b4:	1d23      	adds	r3, r4, #4
 80053b6:	603b      	str	r3, [r7, #0]
 80053b8:	1c11      	adds	r1, r2, #0
 80053ba:	f7fb f8f9 	bl	80005b0 <__aeabi_fadd>
 80053be:	1c03      	adds	r3, r0, #0
 80053c0:	6023      	str	r3, [r4, #0]

    // COL 2
    twR = tw2[0];
 80053c2:	229c      	movs	r2, #156	; 0x9c
 80053c4:	18bb      	adds	r3, r7, r2
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	653b      	str	r3, [r7, #80]	; 0x50
    twI = tw2[1];
 80053cc:	18bb      	adds	r3, r7, r2
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	685b      	ldr	r3, [r3, #4]
 80053d2:	64fb      	str	r3, [r7, #76]	; 0x4c

    m0 = t2[0] * twR;
 80053d4:	242c      	movs	r4, #44	; 0x2c
 80053d6:	193b      	adds	r3, r7, r4
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	1c19      	adds	r1, r3, #0
 80053dc:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80053de:	f7fb fc59 	bl	8000c94 <__aeabi_fmul>
 80053e2:	1c03      	adds	r3, r0, #0
 80053e4:	64bb      	str	r3, [r7, #72]	; 0x48
    m1 = t2[1] * twI;
 80053e6:	193b      	adds	r3, r7, r4
 80053e8:	685b      	ldr	r3, [r3, #4]
 80053ea:	1c19      	adds	r1, r3, #0
 80053ec:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80053ee:	f7fb fc51 	bl	8000c94 <__aeabi_fmul>
 80053f2:	1c03      	adds	r3, r0, #0
 80053f4:	647b      	str	r3, [r7, #68]	; 0x44
    m2 = t2[1] * twR;
 80053f6:	193b      	adds	r3, r7, r4
 80053f8:	685b      	ldr	r3, [r3, #4]
 80053fa:	1c19      	adds	r1, r3, #0
 80053fc:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80053fe:	f7fb fc49 	bl	8000c94 <__aeabi_fmul>
 8005402:	1c03      	adds	r3, r0, #0
 8005404:	643b      	str	r3, [r7, #64]	; 0x40
    m3 = t2[0] * twI;
 8005406:	0023      	movs	r3, r4
 8005408:	18fb      	adds	r3, r7, r3
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	1c19      	adds	r1, r3, #0
 800540e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005410:	f7fb fc40 	bl	8000c94 <__aeabi_fmul>
 8005414:	1c03      	adds	r3, r0, #0
 8005416:	63fb      	str	r3, [r7, #60]	; 0x3c

    *p2++ = m0 + m1;
 8005418:	197b      	adds	r3, r7, r5
 800541a:	681c      	ldr	r4, [r3, #0]
 800541c:	1d23      	adds	r3, r4, #4
 800541e:	197a      	adds	r2, r7, r5
 8005420:	6013      	str	r3, [r2, #0]
 8005422:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8005424:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8005426:	f7fb f8c3 	bl	80005b0 <__aeabi_fadd>
 800542a:	1c03      	adds	r3, r0, #0
 800542c:	6023      	str	r3, [r4, #0]
    *p2++ = m2 - m3;
 800542e:	197b      	adds	r3, r7, r5
 8005430:	681c      	ldr	r4, [r3, #0]
 8005432:	1d23      	adds	r3, r4, #4
 8005434:	197a      	adds	r2, r7, r5
 8005436:	6013      	str	r3, [r2, #0]
 8005438:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800543a:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800543c:	f7fb fd5c 	bl	8000ef8 <__aeabi_fsub>
 8005440:	1c03      	adds	r3, r0, #0
 8005442:	6023      	str	r3, [r4, #0]
    // COL 3
    twR = tw3[0];
 8005444:	2298      	movs	r2, #152	; 0x98
 8005446:	18bb      	adds	r3, r7, r2
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	653b      	str	r3, [r7, #80]	; 0x50
    twI = tw3[1];
 800544e:	18bb      	adds	r3, r7, r2
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	685b      	ldr	r3, [r3, #4]
 8005454:	64fb      	str	r3, [r7, #76]	; 0x4c

    m0 = t3[0] * twR;
 8005456:	241c      	movs	r4, #28
 8005458:	193b      	adds	r3, r7, r4
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	1c19      	adds	r1, r3, #0
 800545e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005460:	f7fb fc18 	bl	8000c94 <__aeabi_fmul>
 8005464:	1c03      	adds	r3, r0, #0
 8005466:	64bb      	str	r3, [r7, #72]	; 0x48
    m1 = t3[1] * twI;
 8005468:	193b      	adds	r3, r7, r4
 800546a:	685b      	ldr	r3, [r3, #4]
 800546c:	1c19      	adds	r1, r3, #0
 800546e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005470:	f7fb fc10 	bl	8000c94 <__aeabi_fmul>
 8005474:	1c03      	adds	r3, r0, #0
 8005476:	647b      	str	r3, [r7, #68]	; 0x44
    m2 = t3[1] * twR;
 8005478:	193b      	adds	r3, r7, r4
 800547a:	685b      	ldr	r3, [r3, #4]
 800547c:	1c19      	adds	r1, r3, #0
 800547e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005480:	f7fb fc08 	bl	8000c94 <__aeabi_fmul>
 8005484:	1c03      	adds	r3, r0, #0
 8005486:	643b      	str	r3, [r7, #64]	; 0x40
    m3 = t3[0] * twI;
 8005488:	0023      	movs	r3, r4
 800548a:	18fb      	adds	r3, r7, r3
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	1c19      	adds	r1, r3, #0
 8005490:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005492:	f7fb fbff 	bl	8000c94 <__aeabi_fmul>
 8005496:	1c03      	adds	r3, r0, #0
 8005498:	63fb      	str	r3, [r7, #60]	; 0x3c

    *p3++ = m0 + m1;
 800549a:	258c      	movs	r5, #140	; 0x8c
 800549c:	197b      	adds	r3, r7, r5
 800549e:	681c      	ldr	r4, [r3, #0]
 80054a0:	1d23      	adds	r3, r4, #4
 80054a2:	197a      	adds	r2, r7, r5
 80054a4:	6013      	str	r3, [r2, #0]
 80054a6:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80054a8:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80054aa:	f7fb f881 	bl	80005b0 <__aeabi_fadd>
 80054ae:	1c03      	adds	r3, r0, #0
 80054b0:	6023      	str	r3, [r4, #0]
    *p3++ = m2 - m3;
 80054b2:	197b      	adds	r3, r7, r5
 80054b4:	681c      	ldr	r4, [r3, #0]
 80054b6:	1d23      	adds	r3, r4, #4
 80054b8:	197a      	adds	r2, r7, r5
 80054ba:	6013      	str	r3, [r2, #0]
 80054bc:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80054be:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80054c0:	f7fb fd1a 	bl	8000ef8 <__aeabi_fsub>
 80054c4:	1c03      	adds	r3, r0, #0
 80054c6:	6023      	str	r3, [r4, #0]
    // COL 4
    twR = tw4[0];
 80054c8:	2294      	movs	r2, #148	; 0x94
 80054ca:	18bb      	adds	r3, r7, r2
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	653b      	str	r3, [r7, #80]	; 0x50
    twI = tw4[1];
 80054d2:	18bb      	adds	r3, r7, r2
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	685b      	ldr	r3, [r3, #4]
 80054d8:	64fb      	str	r3, [r7, #76]	; 0x4c

    m0 = t4[0] * twR;
 80054da:	240c      	movs	r4, #12
 80054dc:	193b      	adds	r3, r7, r4
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	1c19      	adds	r1, r3, #0
 80054e2:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80054e4:	f7fb fbd6 	bl	8000c94 <__aeabi_fmul>
 80054e8:	1c03      	adds	r3, r0, #0
 80054ea:	64bb      	str	r3, [r7, #72]	; 0x48
    m1 = t4[1] * twI;
 80054ec:	193b      	adds	r3, r7, r4
 80054ee:	685b      	ldr	r3, [r3, #4]
 80054f0:	1c19      	adds	r1, r3, #0
 80054f2:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80054f4:	f7fb fbce 	bl	8000c94 <__aeabi_fmul>
 80054f8:	1c03      	adds	r3, r0, #0
 80054fa:	647b      	str	r3, [r7, #68]	; 0x44
    m2 = t4[1] * twR;
 80054fc:	193b      	adds	r3, r7, r4
 80054fe:	685b      	ldr	r3, [r3, #4]
 8005500:	1c19      	adds	r1, r3, #0
 8005502:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8005504:	f7fb fbc6 	bl	8000c94 <__aeabi_fmul>
 8005508:	1c03      	adds	r3, r0, #0
 800550a:	643b      	str	r3, [r7, #64]	; 0x40
    m3 = t4[0] * twI;
 800550c:	193b      	adds	r3, r7, r4
 800550e:	681b      	ldr	r3, [r3, #0]
 8005510:	1c19      	adds	r1, r3, #0
 8005512:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8005514:	f7fb fbbe 	bl	8000c94 <__aeabi_fmul>
 8005518:	1c03      	adds	r3, r0, #0
 800551a:	63fb      	str	r3, [r7, #60]	; 0x3c

    *p4++ = m0 + m1;
 800551c:	19bb      	adds	r3, r7, r6
 800551e:	681c      	ldr	r4, [r3, #0]
 8005520:	1d23      	adds	r3, r4, #4
 8005522:	19ba      	adds	r2, r7, r6
 8005524:	6013      	str	r3, [r2, #0]
 8005526:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8005528:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800552a:	f7fb f841 	bl	80005b0 <__aeabi_fadd>
 800552e:	1c03      	adds	r3, r0, #0
 8005530:	6023      	str	r3, [r4, #0]
    *p4++ = m2 - m3;
 8005532:	19bb      	adds	r3, r7, r6
 8005534:	681c      	ldr	r4, [r3, #0]
 8005536:	1d23      	adds	r3, r4, #4
 8005538:	19ba      	adds	r2, r7, r6
 800553a:	6013      	str	r3, [r2, #0]
 800553c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800553e:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8005540:	f7fb fcda 	bl	8000ef8 <__aeabi_fsub>
 8005544:	1c03      	adds	r3, r0, #0
 8005546:	6023      	str	r3, [r4, #0]

    // first col
    arm_radix8_butterfly_f32( pCol1, L, (float32_t *) S->pTwiddle, 4U);
 8005548:	2480      	movs	r4, #128	; 0x80
 800554a:	193b      	adds	r3, r7, r4
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	b299      	uxth	r1, r3
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	685a      	ldr	r2, [r3, #4]
 8005554:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8005556:	2304      	movs	r3, #4
 8005558:	f000 f8ce 	bl	80056f8 <arm_radix8_butterfly_f32>
    // second col
    arm_radix8_butterfly_f32( pCol2, L, (float32_t *) S->pTwiddle, 4U);
 800555c:	193b      	adds	r3, r7, r4
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	b299      	uxth	r1, r3
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	685a      	ldr	r2, [r3, #4]
 8005566:	6fb8      	ldr	r0, [r7, #120]	; 0x78
 8005568:	2304      	movs	r3, #4
 800556a:	f000 f8c5 	bl	80056f8 <arm_radix8_butterfly_f32>
    // third col
    arm_radix8_butterfly_f32( pCol3, L, (float32_t *) S->pTwiddle, 4U);
 800556e:	193b      	adds	r3, r7, r4
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	b299      	uxth	r1, r3
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	685a      	ldr	r2, [r3, #4]
 8005578:	6f78      	ldr	r0, [r7, #116]	; 0x74
 800557a:	2304      	movs	r3, #4
 800557c:	f000 f8bc 	bl	80056f8 <arm_radix8_butterfly_f32>
    // fourth col
    arm_radix8_butterfly_f32( pCol4, L, (float32_t *) S->pTwiddle, 4U);
 8005580:	193b      	adds	r3, r7, r4
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	b299      	uxth	r1, r3
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	685a      	ldr	r2, [r3, #4]
 800558a:	6f38      	ldr	r0, [r7, #112]	; 0x70
 800558c:	2304      	movs	r3, #4
 800558e:	f000 f8b3 	bl	80056f8 <arm_radix8_butterfly_f32>
}
 8005592:	46c0      	nop			; (mov r8, r8)
 8005594:	46bd      	mov	sp, r7
 8005596:	b02d      	add	sp, #180	; 0xb4
 8005598:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800559a <arm_cfft_f32>:
void arm_cfft_f32(
    const arm_cfft_instance_f32 * S,
    float32_t * p1,
    uint8_t ifftFlag,
    uint8_t bitReverseFlag)
{
 800559a:	b590      	push	{r4, r7, lr}
 800559c:	b089      	sub	sp, #36	; 0x24
 800559e:	af00      	add	r7, sp, #0
 80055a0:	60f8      	str	r0, [r7, #12]
 80055a2:	60b9      	str	r1, [r7, #8]
 80055a4:	0019      	movs	r1, r3
 80055a6:	1dfb      	adds	r3, r7, #7
 80055a8:	701a      	strb	r2, [r3, #0]
 80055aa:	1dbb      	adds	r3, r7, #6
 80055ac:	1c0a      	adds	r2, r1, #0
 80055ae:	701a      	strb	r2, [r3, #0]
    uint32_t  L = S->fftLen, l;
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	881b      	ldrh	r3, [r3, #0]
 80055b4:	617b      	str	r3, [r7, #20]
    float32_t invL, * pSrc;

    if (ifftFlag == 1U)
 80055b6:	1dfb      	adds	r3, r7, #7
 80055b8:	781b      	ldrb	r3, [r3, #0]
 80055ba:	2b01      	cmp	r3, #1
 80055bc:	d116      	bne.n	80055ec <arm_cfft_f32+0x52>
    {
        /*  Conjugate input data  */
        pSrc = p1 + 1;
 80055be:	68bb      	ldr	r3, [r7, #8]
 80055c0:	3304      	adds	r3, #4
 80055c2:	61bb      	str	r3, [r7, #24]
        for(l=0; l<L; l++)
 80055c4:	2300      	movs	r3, #0
 80055c6:	61fb      	str	r3, [r7, #28]
 80055c8:	e00c      	b.n	80055e4 <arm_cfft_f32+0x4a>
        {
            *pSrc = -*pSrc;
 80055ca:	69bb      	ldr	r3, [r7, #24]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	2280      	movs	r2, #128	; 0x80
 80055d0:	0612      	lsls	r2, r2, #24
 80055d2:	405a      	eors	r2, r3
 80055d4:	69bb      	ldr	r3, [r7, #24]
 80055d6:	601a      	str	r2, [r3, #0]
            pSrc += 2;
 80055d8:	69bb      	ldr	r3, [r7, #24]
 80055da:	3308      	adds	r3, #8
 80055dc:	61bb      	str	r3, [r7, #24]
        for(l=0; l<L; l++)
 80055de:	69fb      	ldr	r3, [r7, #28]
 80055e0:	3301      	adds	r3, #1
 80055e2:	61fb      	str	r3, [r7, #28]
 80055e4:	69fa      	ldr	r2, [r7, #28]
 80055e6:	697b      	ldr	r3, [r7, #20]
 80055e8:	429a      	cmp	r2, r3
 80055ea:	d3ee      	bcc.n	80055ca <arm_cfft_f32+0x30>
        }
    }

    switch (L)
 80055ec:	697b      	ldr	r3, [r7, #20]
 80055ee:	2280      	movs	r2, #128	; 0x80
 80055f0:	0052      	lsls	r2, r2, #1
 80055f2:	4293      	cmp	r3, r2
 80055f4:	d02b      	beq.n	800564e <arm_cfft_f32+0xb4>
 80055f6:	2280      	movs	r2, #128	; 0x80
 80055f8:	0052      	lsls	r2, r2, #1
 80055fa:	4293      	cmp	r3, r2
 80055fc:	d80a      	bhi.n	8005614 <arm_cfft_f32+0x7a>
 80055fe:	2b20      	cmp	r3, #32
 8005600:	d025      	beq.n	800564e <arm_cfft_f32+0xb4>
 8005602:	d802      	bhi.n	800560a <arm_cfft_f32+0x70>
 8005604:	2b10      	cmp	r3, #16
 8005606:	d01b      	beq.n	8005640 <arm_cfft_f32+0xa6>
 8005608:	e031      	b.n	800566e <arm_cfft_f32+0xd4>
 800560a:	2b40      	cmp	r3, #64	; 0x40
 800560c:	d026      	beq.n	800565c <arm_cfft_f32+0xc2>
 800560e:	2b80      	cmp	r3, #128	; 0x80
 8005610:	d016      	beq.n	8005640 <arm_cfft_f32+0xa6>
 8005612:	e02c      	b.n	800566e <arm_cfft_f32+0xd4>
 8005614:	2280      	movs	r2, #128	; 0x80
 8005616:	00d2      	lsls	r2, r2, #3
 8005618:	4293      	cmp	r3, r2
 800561a:	d011      	beq.n	8005640 <arm_cfft_f32+0xa6>
 800561c:	2280      	movs	r2, #128	; 0x80
 800561e:	00d2      	lsls	r2, r2, #3
 8005620:	4293      	cmp	r3, r2
 8005622:	d804      	bhi.n	800562e <arm_cfft_f32+0x94>
 8005624:	2280      	movs	r2, #128	; 0x80
 8005626:	0092      	lsls	r2, r2, #2
 8005628:	4293      	cmp	r3, r2
 800562a:	d017      	beq.n	800565c <arm_cfft_f32+0xc2>
 800562c:	e01f      	b.n	800566e <arm_cfft_f32+0xd4>
 800562e:	2280      	movs	r2, #128	; 0x80
 8005630:	0112      	lsls	r2, r2, #4
 8005632:	4293      	cmp	r3, r2
 8005634:	d00b      	beq.n	800564e <arm_cfft_f32+0xb4>
 8005636:	2280      	movs	r2, #128	; 0x80
 8005638:	0152      	lsls	r2, r2, #5
 800563a:	4293      	cmp	r3, r2
 800563c:	d00e      	beq.n	800565c <arm_cfft_f32+0xc2>
 800563e:	e016      	b.n	800566e <arm_cfft_f32+0xd4>
    {
    case 16:
    case 128:
    case 1024:
        arm_cfft_radix8by2_f32  ( (arm_cfft_instance_f32 *) S, p1);
 8005640:	68ba      	ldr	r2, [r7, #8]
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	0011      	movs	r1, r2
 8005646:	0018      	movs	r0, r3
 8005648:	f7fe fe75 	bl	8004336 <arm_cfft_radix8by2_f32>
        break;
 800564c:	e00f      	b.n	800566e <arm_cfft_f32+0xd4>
    case 32:
    case 256:
    case 2048:
        arm_cfft_radix8by4_f32  ( (arm_cfft_instance_f32 *) S, p1);
 800564e:	68ba      	ldr	r2, [r7, #8]
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	0011      	movs	r1, r2
 8005654:	0018      	movs	r0, r3
 8005656:	f7ff f899 	bl	800478c <arm_cfft_radix8by4_f32>
        break;
 800565a:	e008      	b.n	800566e <arm_cfft_f32+0xd4>
    case 64:
    case 512:
    case 4096:
        arm_radix8_butterfly_f32( p1, L, (float32_t *) S->pTwiddle, 1);
 800565c:	697b      	ldr	r3, [r7, #20]
 800565e:	b299      	uxth	r1, r3
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	685a      	ldr	r2, [r3, #4]
 8005664:	68b8      	ldr	r0, [r7, #8]
 8005666:	2301      	movs	r3, #1
 8005668:	f000 f846 	bl	80056f8 <arm_radix8_butterfly_f32>
        break;
 800566c:	46c0      	nop			; (mov r8, r8)
    }

    if ( bitReverseFlag )
 800566e:	1dbb      	adds	r3, r7, #6
 8005670:	781b      	ldrb	r3, [r3, #0]
 8005672:	2b00      	cmp	r3, #0
 8005674:	d007      	beq.n	8005686 <arm_cfft_f32+0xec>
        arm_bitreversal_32((uint32_t*)p1,S->bitRevLength,S->pBitRevTable);
 8005676:	68fb      	ldr	r3, [r7, #12]
 8005678:	8999      	ldrh	r1, [r3, #12]
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	689a      	ldr	r2, [r3, #8]
 800567e:	68bb      	ldr	r3, [r7, #8]
 8005680:	0018      	movs	r0, r3
 8005682:	f7fe fdfe 	bl	8004282 <arm_bitreversal_32>

    if (ifftFlag == 1U)
 8005686:	1dfb      	adds	r3, r7, #7
 8005688:	781b      	ldrb	r3, [r3, #0]
 800568a:	2b01      	cmp	r3, #1
 800568c:	d130      	bne.n	80056f0 <arm_cfft_f32+0x156>
    {
        invL = 1.0f/(float32_t)L;
 800568e:	6978      	ldr	r0, [r7, #20]
 8005690:	f7fb fe2c 	bl	80012ec <__aeabi_ui2f>
 8005694:	1c03      	adds	r3, r0, #0
 8005696:	1c19      	adds	r1, r3, #0
 8005698:	20fe      	movs	r0, #254	; 0xfe
 800569a:	0580      	lsls	r0, r0, #22
 800569c:	f7fb f922 	bl	80008e4 <__aeabi_fdiv>
 80056a0:	1c03      	adds	r3, r0, #0
 80056a2:	613b      	str	r3, [r7, #16]
        /*  Conjugate and scale output data */
        pSrc = p1;
 80056a4:	68bb      	ldr	r3, [r7, #8]
 80056a6:	61bb      	str	r3, [r7, #24]
        for(l=0; l<L; l++)
 80056a8:	2300      	movs	r3, #0
 80056aa:	61fb      	str	r3, [r7, #28]
 80056ac:	e01c      	b.n	80056e8 <arm_cfft_f32+0x14e>
        {
            *pSrc++ *=   invL ;
 80056ae:	69bc      	ldr	r4, [r7, #24]
 80056b0:	1d23      	adds	r3, r4, #4
 80056b2:	61bb      	str	r3, [r7, #24]
 80056b4:	6823      	ldr	r3, [r4, #0]
 80056b6:	6939      	ldr	r1, [r7, #16]
 80056b8:	1c18      	adds	r0, r3, #0
 80056ba:	f7fb faeb 	bl	8000c94 <__aeabi_fmul>
 80056be:	1c03      	adds	r3, r0, #0
 80056c0:	6023      	str	r3, [r4, #0]
            *pSrc  = -(*pSrc) * invL;
 80056c2:	69bb      	ldr	r3, [r7, #24]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	2280      	movs	r2, #128	; 0x80
 80056c8:	0612      	lsls	r2, r2, #24
 80056ca:	4053      	eors	r3, r2
 80056cc:	6939      	ldr	r1, [r7, #16]
 80056ce:	1c18      	adds	r0, r3, #0
 80056d0:	f7fb fae0 	bl	8000c94 <__aeabi_fmul>
 80056d4:	1c03      	adds	r3, r0, #0
 80056d6:	1c1a      	adds	r2, r3, #0
 80056d8:	69bb      	ldr	r3, [r7, #24]
 80056da:	601a      	str	r2, [r3, #0]
            pSrc++;
 80056dc:	69bb      	ldr	r3, [r7, #24]
 80056de:	3304      	adds	r3, #4
 80056e0:	61bb      	str	r3, [r7, #24]
        for(l=0; l<L; l++)
 80056e2:	69fb      	ldr	r3, [r7, #28]
 80056e4:	3301      	adds	r3, #1
 80056e6:	61fb      	str	r3, [r7, #28]
 80056e8:	69fa      	ldr	r2, [r7, #28]
 80056ea:	697b      	ldr	r3, [r7, #20]
 80056ec:	429a      	cmp	r2, r3
 80056ee:	d3de      	bcc.n	80056ae <arm_cfft_f32+0x114>
        }
    }
}
 80056f0:	46c0      	nop			; (mov r8, r8)
 80056f2:	46bd      	mov	sp, r7
 80056f4:	b009      	add	sp, #36	; 0x24
 80056f6:	bd90      	pop	{r4, r7, pc}

080056f8 <arm_radix8_butterfly_f32>:
void arm_radix8_butterfly_f32(
float32_t * pSrc,
uint16_t fftLen,
const float32_t * pCoef,
uint16_t twidCoefModifier)
{
 80056f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056fa:	b0bd      	sub	sp, #244	; 0xf4
 80056fc:	af00      	add	r7, sp, #0
 80056fe:	60f8      	str	r0, [r7, #12]
 8005700:	0008      	movs	r0, r1
 8005702:	607a      	str	r2, [r7, #4]
 8005704:	0019      	movs	r1, r3
 8005706:	240a      	movs	r4, #10
 8005708:	193b      	adds	r3, r7, r4
 800570a:	1c02      	adds	r2, r0, #0
 800570c:	801a      	strh	r2, [r3, #0]
 800570e:	2308      	movs	r3, #8
 8005710:	18fb      	adds	r3, r7, r3
 8005712:	1c0a      	adds	r2, r1, #0
 8005714:	801a      	strh	r2, [r3, #0]
   float32_t t1, t2;
   float32_t s1, s2, s3, s4, s5, s6, s7, s8;
   float32_t p1, p2, p3, p4;
   float32_t co2, co3, co4, co5, co6, co7, co8;
   float32_t si2, si3, si4, si5, si6, si7, si8;
   const float32_t C81 = 0.70710678118f;
 8005716:	4b0c      	ldr	r3, [pc, #48]	; (8005748 <arm_radix8_butterfly_f32+0x50>)
 8005718:	22dc      	movs	r2, #220	; 0xdc
 800571a:	18ba      	adds	r2, r7, r2
 800571c:	6013      	str	r3, [r2, #0]

   n2 = fftLen;
 800571e:	193b      	adds	r3, r7, r4
 8005720:	881b      	ldrh	r3, [r3, #0]
 8005722:	22e4      	movs	r2, #228	; 0xe4
 8005724:	18ba      	adds	r2, r7, r2
 8005726:	6013      	str	r3, [r2, #0]

   do
   {
      n1 = n2;
 8005728:	22e4      	movs	r2, #228	; 0xe4
 800572a:	18bb      	adds	r3, r7, r2
 800572c:	681b      	ldr	r3, [r3, #0]
 800572e:	21d8      	movs	r1, #216	; 0xd8
 8005730:	1879      	adds	r1, r7, r1
 8005732:	600b      	str	r3, [r1, #0]
      n2 = n2 >> 3;
 8005734:	18bb      	adds	r3, r7, r2
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	08db      	lsrs	r3, r3, #3
 800573a:	18ba      	adds	r2, r7, r2
 800573c:	6013      	str	r3, [r2, #0]
      i1 = 0;
 800573e:	2300      	movs	r3, #0
 8005740:	22e8      	movs	r2, #232	; 0xe8
 8005742:	18ba      	adds	r2, r7, r2
 8005744:	6013      	str	r3, [r2, #0]
 8005746:	e001      	b.n	800574c <arm_radix8_butterfly_f32+0x54>
 8005748:	3f3504f3 	.word	0x3f3504f3

      do
      {
         i2 = i1 + n2;
 800574c:	21e8      	movs	r1, #232	; 0xe8
 800574e:	187b      	adds	r3, r7, r1
 8005750:	681a      	ldr	r2, [r3, #0]
 8005752:	20e4      	movs	r0, #228	; 0xe4
 8005754:	183b      	adds	r3, r7, r0
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	18d3      	adds	r3, r2, r3
 800575a:	26d4      	movs	r6, #212	; 0xd4
 800575c:	19ba      	adds	r2, r7, r6
 800575e:	6013      	str	r3, [r2, #0]
         i3 = i2 + n2;
 8005760:	19bb      	adds	r3, r7, r6
 8005762:	681a      	ldr	r2, [r3, #0]
 8005764:	183b      	adds	r3, r7, r0
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	18d3      	adds	r3, r2, r3
 800576a:	25d0      	movs	r5, #208	; 0xd0
 800576c:	197a      	adds	r2, r7, r5
 800576e:	6013      	str	r3, [r2, #0]
         i4 = i3 + n2;
 8005770:	197a      	adds	r2, r7, r5
 8005772:	6812      	ldr	r2, [r2, #0]
 8005774:	183c      	adds	r4, r7, r0
 8005776:	6823      	ldr	r3, [r4, #0]
 8005778:	18d3      	adds	r3, r2, r3
 800577a:	22cc      	movs	r2, #204	; 0xcc
 800577c:	18bc      	adds	r4, r7, r2
 800577e:	6023      	str	r3, [r4, #0]
         i5 = i4 + n2;
 8005780:	18bc      	adds	r4, r7, r2
 8005782:	6822      	ldr	r2, [r4, #0]
 8005784:	183c      	adds	r4, r7, r0
 8005786:	6823      	ldr	r3, [r4, #0]
 8005788:	18d3      	adds	r3, r2, r3
 800578a:	24c8      	movs	r4, #200	; 0xc8
 800578c:	193a      	adds	r2, r7, r4
 800578e:	6013      	str	r3, [r2, #0]
         i6 = i5 + n2;
 8005790:	193b      	adds	r3, r7, r4
 8005792:	681a      	ldr	r2, [r3, #0]
 8005794:	0005      	movs	r5, r0
 8005796:	1838      	adds	r0, r7, r0
 8005798:	6803      	ldr	r3, [r0, #0]
 800579a:	18d3      	adds	r3, r2, r3
 800579c:	20c4      	movs	r0, #196	; 0xc4
 800579e:	183a      	adds	r2, r7, r0
 80057a0:	6013      	str	r3, [r2, #0]
         i7 = i6 + n2;
 80057a2:	183b      	adds	r3, r7, r0
 80057a4:	681a      	ldr	r2, [r3, #0]
 80057a6:	002b      	movs	r3, r5
 80057a8:	001d      	movs	r5, r3
 80057aa:	18fb      	adds	r3, r7, r3
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	18d3      	adds	r3, r2, r3
 80057b0:	20c0      	movs	r0, #192	; 0xc0
 80057b2:	183a      	adds	r2, r7, r0
 80057b4:	6013      	str	r3, [r2, #0]
         i8 = i7 + n2;
 80057b6:	0003      	movs	r3, r0
 80057b8:	18fb      	adds	r3, r7, r3
 80057ba:	681a      	ldr	r2, [r3, #0]
 80057bc:	002b      	movs	r3, r5
 80057be:	18fb      	adds	r3, r7, r3
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	18d3      	adds	r3, r2, r3
 80057c4:	22bc      	movs	r2, #188	; 0xbc
 80057c6:	18b8      	adds	r0, r7, r2
 80057c8:	6003      	str	r3, [r0, #0]
         r1 = pSrc[2 * i1] + pSrc[2 * i5];
 80057ca:	000d      	movs	r5, r1
 80057cc:	1879      	adds	r1, r7, r1
 80057ce:	680b      	ldr	r3, [r1, #0]
 80057d0:	00db      	lsls	r3, r3, #3
 80057d2:	68fa      	ldr	r2, [r7, #12]
 80057d4:	18d3      	adds	r3, r2, r3
 80057d6:	6818      	ldr	r0, [r3, #0]
 80057d8:	1939      	adds	r1, r7, r4
 80057da:	680b      	ldr	r3, [r1, #0]
 80057dc:	00db      	lsls	r3, r3, #3
 80057de:	68fa      	ldr	r2, [r7, #12]
 80057e0:	18d3      	adds	r3, r2, r3
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	1c19      	adds	r1, r3, #0
 80057e6:	f7fa fee3 	bl	80005b0 <__aeabi_fadd>
 80057ea:	1c03      	adds	r3, r0, #0
 80057ec:	24b8      	movs	r4, #184	; 0xb8
 80057ee:	1939      	adds	r1, r7, r4
 80057f0:	600b      	str	r3, [r1, #0]
         r5 = pSrc[2 * i1] - pSrc[2 * i5];
 80057f2:	0029      	movs	r1, r5
 80057f4:	1879      	adds	r1, r7, r1
 80057f6:	680b      	ldr	r3, [r1, #0]
 80057f8:	00db      	lsls	r3, r3, #3
 80057fa:	68fa      	ldr	r2, [r7, #12]
 80057fc:	18d3      	adds	r3, r2, r3
 80057fe:	6818      	ldr	r0, [r3, #0]
 8005800:	23c8      	movs	r3, #200	; 0xc8
 8005802:	18f9      	adds	r1, r7, r3
 8005804:	680b      	ldr	r3, [r1, #0]
 8005806:	00db      	lsls	r3, r3, #3
 8005808:	68fa      	ldr	r2, [r7, #12]
 800580a:	18d3      	adds	r3, r2, r3
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	1c19      	adds	r1, r3, #0
 8005810:	f7fb fb72 	bl	8000ef8 <__aeabi_fsub>
 8005814:	1c03      	adds	r3, r0, #0
 8005816:	21b4      	movs	r1, #180	; 0xb4
 8005818:	1878      	adds	r0, r7, r1
 800581a:	6003      	str	r3, [r0, #0]
         r2 = pSrc[2 * i2] + pSrc[2 * i6];
 800581c:	0035      	movs	r5, r6
 800581e:	197e      	adds	r6, r7, r5
 8005820:	6833      	ldr	r3, [r6, #0]
 8005822:	00db      	lsls	r3, r3, #3
 8005824:	68fa      	ldr	r2, [r7, #12]
 8005826:	18d3      	adds	r3, r2, r3
 8005828:	6818      	ldr	r0, [r3, #0]
 800582a:	26c4      	movs	r6, #196	; 0xc4
 800582c:	19be      	adds	r6, r7, r6
 800582e:	6833      	ldr	r3, [r6, #0]
 8005830:	00db      	lsls	r3, r3, #3
 8005832:	68fa      	ldr	r2, [r7, #12]
 8005834:	18d3      	adds	r3, r2, r3
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	1c19      	adds	r1, r3, #0
 800583a:	f7fa feb9 	bl	80005b0 <__aeabi_fadd>
 800583e:	1c03      	adds	r3, r0, #0
 8005840:	26b0      	movs	r6, #176	; 0xb0
 8005842:	19b8      	adds	r0, r7, r6
 8005844:	6003      	str	r3, [r0, #0]
         r6 = pSrc[2 * i2] - pSrc[2 * i6];
 8005846:	1978      	adds	r0, r7, r5
 8005848:	6803      	ldr	r3, [r0, #0]
 800584a:	00db      	lsls	r3, r3, #3
 800584c:	68fa      	ldr	r2, [r7, #12]
 800584e:	18d3      	adds	r3, r2, r3
 8005850:	6818      	ldr	r0, [r3, #0]
 8005852:	23c4      	movs	r3, #196	; 0xc4
 8005854:	18fb      	adds	r3, r7, r3
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	00db      	lsls	r3, r3, #3
 800585a:	68fa      	ldr	r2, [r7, #12]
 800585c:	18d3      	adds	r3, r2, r3
 800585e:	681b      	ldr	r3, [r3, #0]
 8005860:	1c19      	adds	r1, r3, #0
 8005862:	f7fb fb49 	bl	8000ef8 <__aeabi_fsub>
 8005866:	1c03      	adds	r3, r0, #0
 8005868:	20ac      	movs	r0, #172	; 0xac
 800586a:	1839      	adds	r1, r7, r0
 800586c:	600b      	str	r3, [r1, #0]
         r3 = pSrc[2 * i3] + pSrc[2 * i7];
 800586e:	23d0      	movs	r3, #208	; 0xd0
 8005870:	001d      	movs	r5, r3
 8005872:	18fb      	adds	r3, r7, r3
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	00db      	lsls	r3, r3, #3
 8005878:	68fa      	ldr	r2, [r7, #12]
 800587a:	18d3      	adds	r3, r2, r3
 800587c:	6818      	ldr	r0, [r3, #0]
 800587e:	23c0      	movs	r3, #192	; 0xc0
 8005880:	18fb      	adds	r3, r7, r3
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	00db      	lsls	r3, r3, #3
 8005886:	68fa      	ldr	r2, [r7, #12]
 8005888:	18d3      	adds	r3, r2, r3
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	1c19      	adds	r1, r3, #0
 800588e:	f7fa fe8f 	bl	80005b0 <__aeabi_fadd>
 8005892:	1c03      	adds	r3, r0, #0
 8005894:	21a8      	movs	r1, #168	; 0xa8
 8005896:	187a      	adds	r2, r7, r1
 8005898:	6013      	str	r3, [r2, #0]
         r7 = pSrc[2 * i3] - pSrc[2 * i7];
 800589a:	002b      	movs	r3, r5
 800589c:	18fa      	adds	r2, r7, r3
 800589e:	6813      	ldr	r3, [r2, #0]
 80058a0:	00db      	lsls	r3, r3, #3
 80058a2:	68fa      	ldr	r2, [r7, #12]
 80058a4:	18d3      	adds	r3, r2, r3
 80058a6:	6818      	ldr	r0, [r3, #0]
 80058a8:	23c0      	movs	r3, #192	; 0xc0
 80058aa:	18fa      	adds	r2, r7, r3
 80058ac:	6813      	ldr	r3, [r2, #0]
 80058ae:	00db      	lsls	r3, r3, #3
 80058b0:	68fa      	ldr	r2, [r7, #12]
 80058b2:	18d3      	adds	r3, r2, r3
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	1c19      	adds	r1, r3, #0
 80058b8:	f7fb fb1e 	bl	8000ef8 <__aeabi_fsub>
 80058bc:	1c03      	adds	r3, r0, #0
 80058be:	22a4      	movs	r2, #164	; 0xa4
 80058c0:	18b8      	adds	r0, r7, r2
 80058c2:	6003      	str	r3, [r0, #0]
         r4 = pSrc[2 * i4] + pSrc[2 * i8];
 80058c4:	22cc      	movs	r2, #204	; 0xcc
 80058c6:	0015      	movs	r5, r2
 80058c8:	18ba      	adds	r2, r7, r2
 80058ca:	6813      	ldr	r3, [r2, #0]
 80058cc:	00db      	lsls	r3, r3, #3
 80058ce:	68fa      	ldr	r2, [r7, #12]
 80058d0:	18d3      	adds	r3, r2, r3
 80058d2:	6818      	ldr	r0, [r3, #0]
 80058d4:	22bc      	movs	r2, #188	; 0xbc
 80058d6:	18ba      	adds	r2, r7, r2
 80058d8:	6813      	ldr	r3, [r2, #0]
 80058da:	00db      	lsls	r3, r3, #3
 80058dc:	68fa      	ldr	r2, [r7, #12]
 80058de:	18d3      	adds	r3, r2, r3
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	1c19      	adds	r1, r3, #0
 80058e4:	f7fa fe64 	bl	80005b0 <__aeabi_fadd>
 80058e8:	1c03      	adds	r3, r0, #0
 80058ea:	22a0      	movs	r2, #160	; 0xa0
 80058ec:	18ba      	adds	r2, r7, r2
 80058ee:	6013      	str	r3, [r2, #0]
         r8 = pSrc[2 * i4] - pSrc[2 * i8];
 80058f0:	002a      	movs	r2, r5
 80058f2:	18ba      	adds	r2, r7, r2
 80058f4:	6813      	ldr	r3, [r2, #0]
 80058f6:	00db      	lsls	r3, r3, #3
 80058f8:	68fa      	ldr	r2, [r7, #12]
 80058fa:	18d3      	adds	r3, r2, r3
 80058fc:	6818      	ldr	r0, [r3, #0]
 80058fe:	22bc      	movs	r2, #188	; 0xbc
 8005900:	18ba      	adds	r2, r7, r2
 8005902:	6813      	ldr	r3, [r2, #0]
 8005904:	00db      	lsls	r3, r3, #3
 8005906:	68fa      	ldr	r2, [r7, #12]
 8005908:	18d3      	adds	r3, r2, r3
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	1c19      	adds	r1, r3, #0
 800590e:	f7fb faf3 	bl	8000ef8 <__aeabi_fsub>
 8005912:	1c03      	adds	r3, r0, #0
 8005914:	209c      	movs	r0, #156	; 0x9c
 8005916:	183a      	adds	r2, r7, r0
 8005918:	6013      	str	r3, [r2, #0]
         t1 = r1 - r3;
 800591a:	21a8      	movs	r1, #168	; 0xa8
 800591c:	000d      	movs	r5, r1
 800591e:	1879      	adds	r1, r7, r1
 8005920:	6809      	ldr	r1, [r1, #0]
 8005922:	193a      	adds	r2, r7, r4
 8005924:	6810      	ldr	r0, [r2, #0]
 8005926:	f7fb fae7 	bl	8000ef8 <__aeabi_fsub>
 800592a:	1c03      	adds	r3, r0, #0
 800592c:	2198      	movs	r1, #152	; 0x98
 800592e:	1879      	adds	r1, r7, r1
 8005930:	600b      	str	r3, [r1, #0]
         r1 = r1 + r3;
 8005932:	002a      	movs	r2, r5
 8005934:	18b9      	adds	r1, r7, r2
 8005936:	6809      	ldr	r1, [r1, #0]
 8005938:	193b      	adds	r3, r7, r4
 800593a:	6818      	ldr	r0, [r3, #0]
 800593c:	f7fa fe38 	bl	80005b0 <__aeabi_fadd>
 8005940:	1c03      	adds	r3, r0, #0
 8005942:	0025      	movs	r5, r4
 8005944:	1939      	adds	r1, r7, r4
 8005946:	600b      	str	r3, [r1, #0]
         r3 = r2 - r4;
 8005948:	21a0      	movs	r1, #160	; 0xa0
 800594a:	000c      	movs	r4, r1
 800594c:	1879      	adds	r1, r7, r1
 800594e:	6809      	ldr	r1, [r1, #0]
 8005950:	19bb      	adds	r3, r7, r6
 8005952:	6818      	ldr	r0, [r3, #0]
 8005954:	f7fb fad0 	bl	8000ef8 <__aeabi_fsub>
 8005958:	1c03      	adds	r3, r0, #0
 800595a:	22a8      	movs	r2, #168	; 0xa8
 800595c:	18b9      	adds	r1, r7, r2
 800595e:	600b      	str	r3, [r1, #0]
         r2 = r2 + r4;
 8005960:	0021      	movs	r1, r4
 8005962:	1879      	adds	r1, r7, r1
 8005964:	6809      	ldr	r1, [r1, #0]
 8005966:	19bb      	adds	r3, r7, r6
 8005968:	6818      	ldr	r0, [r3, #0]
 800596a:	f7fa fe21 	bl	80005b0 <__aeabi_fadd>
 800596e:	1c03      	adds	r3, r0, #0
 8005970:	19b9      	adds	r1, r7, r6
 8005972:	600b      	str	r3, [r1, #0]
         pSrc[2 * i1] = r1 + r2;
 8005974:	21e8      	movs	r1, #232	; 0xe8
 8005976:	187b      	adds	r3, r7, r1
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	00db      	lsls	r3, r3, #3
 800597c:	68fa      	ldr	r2, [r7, #12]
 800597e:	18d4      	adds	r4, r2, r3
 8005980:	19bb      	adds	r3, r7, r6
 8005982:	6819      	ldr	r1, [r3, #0]
 8005984:	197b      	adds	r3, r7, r5
 8005986:	6818      	ldr	r0, [r3, #0]
 8005988:	f7fa fe12 	bl	80005b0 <__aeabi_fadd>
 800598c:	1c03      	adds	r3, r0, #0
 800598e:	6023      	str	r3, [r4, #0]
         pSrc[2 * i5] = r1 - r2;
 8005990:	24c8      	movs	r4, #200	; 0xc8
 8005992:	193b      	adds	r3, r7, r4
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	00db      	lsls	r3, r3, #3
 8005998:	68fa      	ldr	r2, [r7, #12]
 800599a:	18d4      	adds	r4, r2, r3
 800599c:	19bb      	adds	r3, r7, r6
 800599e:	6819      	ldr	r1, [r3, #0]
 80059a0:	197b      	adds	r3, r7, r5
 80059a2:	6818      	ldr	r0, [r3, #0]
 80059a4:	f7fb faa8 	bl	8000ef8 <__aeabi_fsub>
 80059a8:	1c03      	adds	r3, r0, #0
 80059aa:	6023      	str	r3, [r4, #0]
         r1 = pSrc[2 * i1 + 1] + pSrc[2 * i5 + 1];
 80059ac:	21e8      	movs	r1, #232	; 0xe8
 80059ae:	187b      	adds	r3, r7, r1
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	00db      	lsls	r3, r3, #3
 80059b4:	3304      	adds	r3, #4
 80059b6:	68fa      	ldr	r2, [r7, #12]
 80059b8:	18d3      	adds	r3, r2, r3
 80059ba:	6818      	ldr	r0, [r3, #0]
 80059bc:	24c8      	movs	r4, #200	; 0xc8
 80059be:	193b      	adds	r3, r7, r4
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	00db      	lsls	r3, r3, #3
 80059c4:	3304      	adds	r3, #4
 80059c6:	68fa      	ldr	r2, [r7, #12]
 80059c8:	18d3      	adds	r3, r2, r3
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	1c19      	adds	r1, r3, #0
 80059ce:	f7fa fdef 	bl	80005b0 <__aeabi_fadd>
 80059d2:	1c03      	adds	r3, r0, #0
 80059d4:	002c      	movs	r4, r5
 80059d6:	197a      	adds	r2, r7, r5
 80059d8:	6013      	str	r3, [r2, #0]
         s5 = pSrc[2 * i1 + 1] - pSrc[2 * i5 + 1];
 80059da:	21e8      	movs	r1, #232	; 0xe8
 80059dc:	187b      	adds	r3, r7, r1
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	00db      	lsls	r3, r3, #3
 80059e2:	3304      	adds	r3, #4
 80059e4:	68fa      	ldr	r2, [r7, #12]
 80059e6:	18d3      	adds	r3, r2, r3
 80059e8:	6818      	ldr	r0, [r3, #0]
 80059ea:	22c8      	movs	r2, #200	; 0xc8
 80059ec:	18bb      	adds	r3, r7, r2
 80059ee:	681b      	ldr	r3, [r3, #0]
 80059f0:	00db      	lsls	r3, r3, #3
 80059f2:	3304      	adds	r3, #4
 80059f4:	68fa      	ldr	r2, [r7, #12]
 80059f6:	18d3      	adds	r3, r2, r3
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	1c19      	adds	r1, r3, #0
 80059fc:	f7fb fa7c 	bl	8000ef8 <__aeabi_fsub>
 8005a00:	1c03      	adds	r3, r0, #0
 8005a02:	2194      	movs	r1, #148	; 0x94
 8005a04:	1878      	adds	r0, r7, r1
 8005a06:	6003      	str	r3, [r0, #0]
         r2 = pSrc[2 * i2 + 1] + pSrc[2 * i6 + 1];
 8005a08:	25d4      	movs	r5, #212	; 0xd4
 8005a0a:	197b      	adds	r3, r7, r5
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	00db      	lsls	r3, r3, #3
 8005a10:	3304      	adds	r3, #4
 8005a12:	68fa      	ldr	r2, [r7, #12]
 8005a14:	18d3      	adds	r3, r2, r3
 8005a16:	6818      	ldr	r0, [r3, #0]
 8005a18:	22c4      	movs	r2, #196	; 0xc4
 8005a1a:	18bb      	adds	r3, r7, r2
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	00db      	lsls	r3, r3, #3
 8005a20:	3304      	adds	r3, #4
 8005a22:	68fa      	ldr	r2, [r7, #12]
 8005a24:	18d3      	adds	r3, r2, r3
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	1c19      	adds	r1, r3, #0
 8005a2a:	f7fa fdc1 	bl	80005b0 <__aeabi_fadd>
 8005a2e:	1c03      	adds	r3, r0, #0
 8005a30:	19b8      	adds	r0, r7, r6
 8005a32:	6003      	str	r3, [r0, #0]
         s6 = pSrc[2 * i2 + 1] - pSrc[2 * i6 + 1];
 8005a34:	1978      	adds	r0, r7, r5
 8005a36:	6803      	ldr	r3, [r0, #0]
 8005a38:	00db      	lsls	r3, r3, #3
 8005a3a:	3304      	adds	r3, #4
 8005a3c:	68fa      	ldr	r2, [r7, #12]
 8005a3e:	18d3      	adds	r3, r2, r3
 8005a40:	6818      	ldr	r0, [r3, #0]
 8005a42:	23c4      	movs	r3, #196	; 0xc4
 8005a44:	18fb      	adds	r3, r7, r3
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	00db      	lsls	r3, r3, #3
 8005a4a:	3304      	adds	r3, #4
 8005a4c:	68fa      	ldr	r2, [r7, #12]
 8005a4e:	18d3      	adds	r3, r2, r3
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	1c19      	adds	r1, r3, #0
 8005a54:	f7fb fa50 	bl	8000ef8 <__aeabi_fsub>
 8005a58:	1c03      	adds	r3, r0, #0
 8005a5a:	2090      	movs	r0, #144	; 0x90
 8005a5c:	1838      	adds	r0, r7, r0
 8005a5e:	6003      	str	r3, [r0, #0]
         s3 = pSrc[2 * i3 + 1] + pSrc[2 * i7 + 1];
 8005a60:	23d0      	movs	r3, #208	; 0xd0
 8005a62:	001d      	movs	r5, r3
 8005a64:	18fb      	adds	r3, r7, r3
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	00db      	lsls	r3, r3, #3
 8005a6a:	3304      	adds	r3, #4
 8005a6c:	68fa      	ldr	r2, [r7, #12]
 8005a6e:	18d3      	adds	r3, r2, r3
 8005a70:	6818      	ldr	r0, [r3, #0]
 8005a72:	23c0      	movs	r3, #192	; 0xc0
 8005a74:	18fb      	adds	r3, r7, r3
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	00db      	lsls	r3, r3, #3
 8005a7a:	3304      	adds	r3, #4
 8005a7c:	68fa      	ldr	r2, [r7, #12]
 8005a7e:	18d3      	adds	r3, r2, r3
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	1c19      	adds	r1, r3, #0
 8005a84:	f7fa fd94 	bl	80005b0 <__aeabi_fadd>
 8005a88:	1c03      	adds	r3, r0, #0
 8005a8a:	208c      	movs	r0, #140	; 0x8c
 8005a8c:	1838      	adds	r0, r7, r0
 8005a8e:	6003      	str	r3, [r0, #0]
         s7 = pSrc[2 * i3 + 1] - pSrc[2 * i7 + 1];
 8005a90:	002b      	movs	r3, r5
 8005a92:	18f8      	adds	r0, r7, r3
 8005a94:	6803      	ldr	r3, [r0, #0]
 8005a96:	00db      	lsls	r3, r3, #3
 8005a98:	3304      	adds	r3, #4
 8005a9a:	68fa      	ldr	r2, [r7, #12]
 8005a9c:	18d3      	adds	r3, r2, r3
 8005a9e:	6818      	ldr	r0, [r3, #0]
 8005aa0:	23c0      	movs	r3, #192	; 0xc0
 8005aa2:	18fb      	adds	r3, r7, r3
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	00db      	lsls	r3, r3, #3
 8005aa8:	3304      	adds	r3, #4
 8005aaa:	68fa      	ldr	r2, [r7, #12]
 8005aac:	18d3      	adds	r3, r2, r3
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	1c19      	adds	r1, r3, #0
 8005ab2:	f7fb fa21 	bl	8000ef8 <__aeabi_fsub>
 8005ab6:	1c03      	adds	r3, r0, #0
 8005ab8:	2188      	movs	r1, #136	; 0x88
 8005aba:	1879      	adds	r1, r7, r1
 8005abc:	600b      	str	r3, [r1, #0]
         r4 = pSrc[2 * i4 + 1] + pSrc[2 * i8 + 1];
 8005abe:	22cc      	movs	r2, #204	; 0xcc
 8005ac0:	0015      	movs	r5, r2
 8005ac2:	18bb      	adds	r3, r7, r2
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	00db      	lsls	r3, r3, #3
 8005ac8:	3304      	adds	r3, #4
 8005aca:	68fa      	ldr	r2, [r7, #12]
 8005acc:	18d3      	adds	r3, r2, r3
 8005ace:	6818      	ldr	r0, [r3, #0]
 8005ad0:	22bc      	movs	r2, #188	; 0xbc
 8005ad2:	18bb      	adds	r3, r7, r2
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	00db      	lsls	r3, r3, #3
 8005ad8:	3304      	adds	r3, #4
 8005ada:	68fa      	ldr	r2, [r7, #12]
 8005adc:	18d3      	adds	r3, r2, r3
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	1c19      	adds	r1, r3, #0
 8005ae2:	f7fa fd65 	bl	80005b0 <__aeabi_fadd>
 8005ae6:	1c03      	adds	r3, r0, #0
 8005ae8:	20a0      	movs	r0, #160	; 0xa0
 8005aea:	1839      	adds	r1, r7, r0
 8005aec:	600b      	str	r3, [r1, #0]
         s8 = pSrc[2 * i4 + 1] - pSrc[2 * i8 + 1];
 8005aee:	002a      	movs	r2, r5
 8005af0:	18bb      	adds	r3, r7, r2
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	00db      	lsls	r3, r3, #3
 8005af6:	3304      	adds	r3, #4
 8005af8:	68fa      	ldr	r2, [r7, #12]
 8005afa:	18d3      	adds	r3, r2, r3
 8005afc:	6818      	ldr	r0, [r3, #0]
 8005afe:	22bc      	movs	r2, #188	; 0xbc
 8005b00:	18bb      	adds	r3, r7, r2
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	00db      	lsls	r3, r3, #3
 8005b06:	3304      	adds	r3, #4
 8005b08:	68fa      	ldr	r2, [r7, #12]
 8005b0a:	18d3      	adds	r3, r2, r3
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	1c19      	adds	r1, r3, #0
 8005b10:	f7fb f9f2 	bl	8000ef8 <__aeabi_fsub>
 8005b14:	1c03      	adds	r3, r0, #0
 8005b16:	2184      	movs	r1, #132	; 0x84
 8005b18:	1878      	adds	r0, r7, r1
 8005b1a:	6003      	str	r3, [r0, #0]
         t2 = r1 - s3;
 8005b1c:	208c      	movs	r0, #140	; 0x8c
 8005b1e:	0005      	movs	r5, r0
 8005b20:	1838      	adds	r0, r7, r0
 8005b22:	6801      	ldr	r1, [r0, #0]
 8005b24:	1938      	adds	r0, r7, r4
 8005b26:	6800      	ldr	r0, [r0, #0]
 8005b28:	f7fb f9e6 	bl	8000ef8 <__aeabi_fsub>
 8005b2c:	1c03      	adds	r3, r0, #0
 8005b2e:	2080      	movs	r0, #128	; 0x80
 8005b30:	1838      	adds	r0, r7, r0
 8005b32:	6003      	str	r3, [r0, #0]
         r1 = r1 + s3;
 8005b34:	0028      	movs	r0, r5
 8005b36:	183d      	adds	r5, r7, r0
 8005b38:	6829      	ldr	r1, [r5, #0]
 8005b3a:	193d      	adds	r5, r7, r4
 8005b3c:	6828      	ldr	r0, [r5, #0]
 8005b3e:	f7fa fd37 	bl	80005b0 <__aeabi_fadd>
 8005b42:	1c03      	adds	r3, r0, #0
 8005b44:	0025      	movs	r5, r4
 8005b46:	193a      	adds	r2, r7, r4
 8005b48:	6013      	str	r3, [r2, #0]
         s3 = r2 - r4;
 8005b4a:	20a0      	movs	r0, #160	; 0xa0
 8005b4c:	0004      	movs	r4, r0
 8005b4e:	1839      	adds	r1, r7, r0
 8005b50:	6809      	ldr	r1, [r1, #0]
 8005b52:	19bb      	adds	r3, r7, r6
 8005b54:	6818      	ldr	r0, [r3, #0]
 8005b56:	f7fb f9cf 	bl	8000ef8 <__aeabi_fsub>
 8005b5a:	1c03      	adds	r3, r0, #0
 8005b5c:	208c      	movs	r0, #140	; 0x8c
 8005b5e:	1839      	adds	r1, r7, r0
 8005b60:	600b      	str	r3, [r1, #0]
         r2 = r2 + r4;
 8005b62:	0020      	movs	r0, r4
 8005b64:	1839      	adds	r1, r7, r0
 8005b66:	6809      	ldr	r1, [r1, #0]
 8005b68:	19bc      	adds	r4, r7, r6
 8005b6a:	6820      	ldr	r0, [r4, #0]
 8005b6c:	f7fa fd20 	bl	80005b0 <__aeabi_fadd>
 8005b70:	1c03      	adds	r3, r0, #0
 8005b72:	19b9      	adds	r1, r7, r6
 8005b74:	600b      	str	r3, [r1, #0]
         pSrc[2 * i1 + 1] = r1 + r2;
 8005b76:	21e8      	movs	r1, #232	; 0xe8
 8005b78:	1879      	adds	r1, r7, r1
 8005b7a:	680b      	ldr	r3, [r1, #0]
 8005b7c:	00db      	lsls	r3, r3, #3
 8005b7e:	3304      	adds	r3, #4
 8005b80:	68fa      	ldr	r2, [r7, #12]
 8005b82:	18d4      	adds	r4, r2, r3
 8005b84:	19b9      	adds	r1, r7, r6
 8005b86:	6809      	ldr	r1, [r1, #0]
 8005b88:	197b      	adds	r3, r7, r5
 8005b8a:	6818      	ldr	r0, [r3, #0]
 8005b8c:	f7fa fd10 	bl	80005b0 <__aeabi_fadd>
 8005b90:	1c03      	adds	r3, r0, #0
 8005b92:	6023      	str	r3, [r4, #0]
         pSrc[2 * i5 + 1] = r1 - r2;
 8005b94:	24c8      	movs	r4, #200	; 0xc8
 8005b96:	193c      	adds	r4, r7, r4
 8005b98:	6823      	ldr	r3, [r4, #0]
 8005b9a:	00db      	lsls	r3, r3, #3
 8005b9c:	3304      	adds	r3, #4
 8005b9e:	68fa      	ldr	r2, [r7, #12]
 8005ba0:	18d4      	adds	r4, r2, r3
 8005ba2:	19ba      	adds	r2, r7, r6
 8005ba4:	6811      	ldr	r1, [r2, #0]
 8005ba6:	197a      	adds	r2, r7, r5
 8005ba8:	6810      	ldr	r0, [r2, #0]
 8005baa:	f7fb f9a5 	bl	8000ef8 <__aeabi_fsub>
 8005bae:	1c03      	adds	r3, r0, #0
 8005bb0:	6023      	str	r3, [r4, #0]
         pSrc[2 * i3]     = t1 + s3;
 8005bb2:	23d0      	movs	r3, #208	; 0xd0
 8005bb4:	18fc      	adds	r4, r7, r3
 8005bb6:	6823      	ldr	r3, [r4, #0]
 8005bb8:	00db      	lsls	r3, r3, #3
 8005bba:	68fa      	ldr	r2, [r7, #12]
 8005bbc:	18d4      	adds	r4, r2, r3
 8005bbe:	208c      	movs	r0, #140	; 0x8c
 8005bc0:	183a      	adds	r2, r7, r0
 8005bc2:	6811      	ldr	r1, [r2, #0]
 8005bc4:	2098      	movs	r0, #152	; 0x98
 8005bc6:	183a      	adds	r2, r7, r0
 8005bc8:	6810      	ldr	r0, [r2, #0]
 8005bca:	f7fa fcf1 	bl	80005b0 <__aeabi_fadd>
 8005bce:	1c03      	adds	r3, r0, #0
 8005bd0:	6023      	str	r3, [r4, #0]
         pSrc[2 * i7]     = t1 - s3;
 8005bd2:	20c0      	movs	r0, #192	; 0xc0
 8005bd4:	183c      	adds	r4, r7, r0
 8005bd6:	6823      	ldr	r3, [r4, #0]
 8005bd8:	00db      	lsls	r3, r3, #3
 8005bda:	68fa      	ldr	r2, [r7, #12]
 8005bdc:	18d4      	adds	r4, r2, r3
 8005bde:	208c      	movs	r0, #140	; 0x8c
 8005be0:	183a      	adds	r2, r7, r0
 8005be2:	6811      	ldr	r1, [r2, #0]
 8005be4:	2098      	movs	r0, #152	; 0x98
 8005be6:	183a      	adds	r2, r7, r0
 8005be8:	6810      	ldr	r0, [r2, #0]
 8005bea:	f7fb f985 	bl	8000ef8 <__aeabi_fsub>
 8005bee:	1c03      	adds	r3, r0, #0
 8005bf0:	6023      	str	r3, [r4, #0]
         pSrc[2 * i3 + 1] = t2 - r3;
 8005bf2:	23d0      	movs	r3, #208	; 0xd0
 8005bf4:	18fc      	adds	r4, r7, r3
 8005bf6:	6823      	ldr	r3, [r4, #0]
 8005bf8:	00db      	lsls	r3, r3, #3
 8005bfa:	3304      	adds	r3, #4
 8005bfc:	68fa      	ldr	r2, [r7, #12]
 8005bfe:	18d4      	adds	r4, r2, r3
 8005c00:	22a8      	movs	r2, #168	; 0xa8
 8005c02:	18bb      	adds	r3, r7, r2
 8005c04:	6819      	ldr	r1, [r3, #0]
 8005c06:	2380      	movs	r3, #128	; 0x80
 8005c08:	18fb      	adds	r3, r7, r3
 8005c0a:	6818      	ldr	r0, [r3, #0]
 8005c0c:	f7fb f974 	bl	8000ef8 <__aeabi_fsub>
 8005c10:	1c03      	adds	r3, r0, #0
 8005c12:	6023      	str	r3, [r4, #0]
         pSrc[2 * i7 + 1] = t2 + r3;
 8005c14:	20c0      	movs	r0, #192	; 0xc0
 8005c16:	183b      	adds	r3, r7, r0
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	00db      	lsls	r3, r3, #3
 8005c1c:	3304      	adds	r3, #4
 8005c1e:	68fa      	ldr	r2, [r7, #12]
 8005c20:	18d4      	adds	r4, r2, r3
 8005c22:	22a8      	movs	r2, #168	; 0xa8
 8005c24:	18bb      	adds	r3, r7, r2
 8005c26:	6819      	ldr	r1, [r3, #0]
 8005c28:	2380      	movs	r3, #128	; 0x80
 8005c2a:	18fb      	adds	r3, r7, r3
 8005c2c:	6818      	ldr	r0, [r3, #0]
 8005c2e:	f7fa fcbf 	bl	80005b0 <__aeabi_fadd>
 8005c32:	1c03      	adds	r3, r0, #0
 8005c34:	6023      	str	r3, [r4, #0]
         r1 = (r6 - r8) * C81;
 8005c36:	209c      	movs	r0, #156	; 0x9c
 8005c38:	183b      	adds	r3, r7, r0
 8005c3a:	6819      	ldr	r1, [r3, #0]
 8005c3c:	20ac      	movs	r0, #172	; 0xac
 8005c3e:	0004      	movs	r4, r0
 8005c40:	183b      	adds	r3, r7, r0
 8005c42:	6818      	ldr	r0, [r3, #0]
 8005c44:	f7fb f958 	bl	8000ef8 <__aeabi_fsub>
 8005c48:	1c03      	adds	r3, r0, #0
 8005c4a:	1c19      	adds	r1, r3, #0
 8005c4c:	23dc      	movs	r3, #220	; 0xdc
 8005c4e:	18fa      	adds	r2, r7, r3
 8005c50:	6810      	ldr	r0, [r2, #0]
 8005c52:	f7fb f81f 	bl	8000c94 <__aeabi_fmul>
 8005c56:	1c03      	adds	r3, r0, #0
 8005c58:	197a      	adds	r2, r7, r5
 8005c5a:	6013      	str	r3, [r2, #0]
         r6 = (r6 + r8) * C81;
 8005c5c:	209c      	movs	r0, #156	; 0x9c
 8005c5e:	183a      	adds	r2, r7, r0
 8005c60:	6811      	ldr	r1, [r2, #0]
 8005c62:	193a      	adds	r2, r7, r4
 8005c64:	6810      	ldr	r0, [r2, #0]
 8005c66:	f7fa fca3 	bl	80005b0 <__aeabi_fadd>
 8005c6a:	1c03      	adds	r3, r0, #0
 8005c6c:	1c19      	adds	r1, r3, #0
 8005c6e:	23dc      	movs	r3, #220	; 0xdc
 8005c70:	18fa      	adds	r2, r7, r3
 8005c72:	6810      	ldr	r0, [r2, #0]
 8005c74:	f7fb f80e 	bl	8000c94 <__aeabi_fmul>
 8005c78:	1c03      	adds	r3, r0, #0
 8005c7a:	193a      	adds	r2, r7, r4
 8005c7c:	6013      	str	r3, [r2, #0]
         r2 = (s6 - s8) * C81;
 8005c7e:	2384      	movs	r3, #132	; 0x84
 8005c80:	18fa      	adds	r2, r7, r3
 8005c82:	6811      	ldr	r1, [r2, #0]
 8005c84:	2390      	movs	r3, #144	; 0x90
 8005c86:	001c      	movs	r4, r3
 8005c88:	18fa      	adds	r2, r7, r3
 8005c8a:	6810      	ldr	r0, [r2, #0]
 8005c8c:	f7fb f934 	bl	8000ef8 <__aeabi_fsub>
 8005c90:	1c03      	adds	r3, r0, #0
 8005c92:	1c19      	adds	r1, r3, #0
 8005c94:	23dc      	movs	r3, #220	; 0xdc
 8005c96:	18fa      	adds	r2, r7, r3
 8005c98:	6810      	ldr	r0, [r2, #0]
 8005c9a:	f7fa fffb 	bl	8000c94 <__aeabi_fmul>
 8005c9e:	1c03      	adds	r3, r0, #0
 8005ca0:	19ba      	adds	r2, r7, r6
 8005ca2:	6013      	str	r3, [r2, #0]
         s6 = (s6 + s8) * C81;
 8005ca4:	2384      	movs	r3, #132	; 0x84
 8005ca6:	18fa      	adds	r2, r7, r3
 8005ca8:	6811      	ldr	r1, [r2, #0]
 8005caa:	0023      	movs	r3, r4
 8005cac:	001c      	movs	r4, r3
 8005cae:	18fa      	adds	r2, r7, r3
 8005cb0:	6810      	ldr	r0, [r2, #0]
 8005cb2:	f7fa fc7d 	bl	80005b0 <__aeabi_fadd>
 8005cb6:	1c03      	adds	r3, r0, #0
 8005cb8:	1c19      	adds	r1, r3, #0
 8005cba:	23dc      	movs	r3, #220	; 0xdc
 8005cbc:	18fa      	adds	r2, r7, r3
 8005cbe:	6810      	ldr	r0, [r2, #0]
 8005cc0:	f7fa ffe8 	bl	8000c94 <__aeabi_fmul>
 8005cc4:	1c03      	adds	r3, r0, #0
 8005cc6:	0022      	movs	r2, r4
 8005cc8:	18ba      	adds	r2, r7, r2
 8005cca:	6013      	str	r3, [r2, #0]
         t1 = r5 - r1;
 8005ccc:	197a      	adds	r2, r7, r5
 8005cce:	6811      	ldr	r1, [r2, #0]
 8005cd0:	24b4      	movs	r4, #180	; 0xb4
 8005cd2:	193a      	adds	r2, r7, r4
 8005cd4:	6810      	ldr	r0, [r2, #0]
 8005cd6:	f7fb f90f 	bl	8000ef8 <__aeabi_fsub>
 8005cda:	1c03      	adds	r3, r0, #0
 8005cdc:	2098      	movs	r0, #152	; 0x98
 8005cde:	183a      	adds	r2, r7, r0
 8005ce0:	6013      	str	r3, [r2, #0]
         r5 = r5 + r1;
 8005ce2:	197a      	adds	r2, r7, r5
 8005ce4:	6811      	ldr	r1, [r2, #0]
 8005ce6:	193a      	adds	r2, r7, r4
 8005ce8:	6810      	ldr	r0, [r2, #0]
 8005cea:	f7fa fc61 	bl	80005b0 <__aeabi_fadd>
 8005cee:	1c03      	adds	r3, r0, #0
 8005cf0:	193a      	adds	r2, r7, r4
 8005cf2:	6013      	str	r3, [r2, #0]
         r8 = r7 - r6;
 8005cf4:	24ac      	movs	r4, #172	; 0xac
 8005cf6:	193a      	adds	r2, r7, r4
 8005cf8:	6811      	ldr	r1, [r2, #0]
 8005cfa:	20a4      	movs	r0, #164	; 0xa4
 8005cfc:	0005      	movs	r5, r0
 8005cfe:	183a      	adds	r2, r7, r0
 8005d00:	6810      	ldr	r0, [r2, #0]
 8005d02:	f7fb f8f9 	bl	8000ef8 <__aeabi_fsub>
 8005d06:	1c03      	adds	r3, r0, #0
 8005d08:	209c      	movs	r0, #156	; 0x9c
 8005d0a:	183a      	adds	r2, r7, r0
 8005d0c:	6013      	str	r3, [r2, #0]
         r7 = r7 + r6;
 8005d0e:	0020      	movs	r0, r4
 8005d10:	183a      	adds	r2, r7, r0
 8005d12:	6811      	ldr	r1, [r2, #0]
 8005d14:	0028      	movs	r0, r5
 8005d16:	0004      	movs	r4, r0
 8005d18:	183a      	adds	r2, r7, r0
 8005d1a:	6810      	ldr	r0, [r2, #0]
 8005d1c:	f7fa fc48 	bl	80005b0 <__aeabi_fadd>
 8005d20:	1c03      	adds	r3, r0, #0
 8005d22:	0020      	movs	r0, r4
 8005d24:	183a      	adds	r2, r7, r0
 8005d26:	6013      	str	r3, [r2, #0]
         t2 = s5 - r2;
 8005d28:	19ba      	adds	r2, r7, r6
 8005d2a:	6811      	ldr	r1, [r2, #0]
 8005d2c:	2394      	movs	r3, #148	; 0x94
 8005d2e:	001c      	movs	r4, r3
 8005d30:	18fa      	adds	r2, r7, r3
 8005d32:	6810      	ldr	r0, [r2, #0]
 8005d34:	f7fb f8e0 	bl	8000ef8 <__aeabi_fsub>
 8005d38:	1c03      	adds	r3, r0, #0
 8005d3a:	2280      	movs	r2, #128	; 0x80
 8005d3c:	18ba      	adds	r2, r7, r2
 8005d3e:	6013      	str	r3, [r2, #0]
         s5 = s5 + r2;
 8005d40:	19ba      	adds	r2, r7, r6
 8005d42:	6811      	ldr	r1, [r2, #0]
 8005d44:	193a      	adds	r2, r7, r4
 8005d46:	6810      	ldr	r0, [r2, #0]
 8005d48:	f7fa fc32 	bl	80005b0 <__aeabi_fadd>
 8005d4c:	1c03      	adds	r3, r0, #0
 8005d4e:	193a      	adds	r2, r7, r4
 8005d50:	6013      	str	r3, [r2, #0]
         s8 = s7 - s6;
 8005d52:	2690      	movs	r6, #144	; 0x90
 8005d54:	19ba      	adds	r2, r7, r6
 8005d56:	6811      	ldr	r1, [r2, #0]
 8005d58:	2388      	movs	r3, #136	; 0x88
 8005d5a:	001c      	movs	r4, r3
 8005d5c:	18fa      	adds	r2, r7, r3
 8005d5e:	6810      	ldr	r0, [r2, #0]
 8005d60:	f7fb f8ca 	bl	8000ef8 <__aeabi_fsub>
 8005d64:	1c03      	adds	r3, r0, #0
 8005d66:	2184      	movs	r1, #132	; 0x84
 8005d68:	187a      	adds	r2, r7, r1
 8005d6a:	6013      	str	r3, [r2, #0]
         s7 = s7 + s6;
 8005d6c:	19be      	adds	r6, r7, r6
 8005d6e:	6831      	ldr	r1, [r6, #0]
 8005d70:	0026      	movs	r6, r4
 8005d72:	19ba      	adds	r2, r7, r6
 8005d74:	6810      	ldr	r0, [r2, #0]
 8005d76:	f7fa fc1b 	bl	80005b0 <__aeabi_fadd>
 8005d7a:	1c03      	adds	r3, r0, #0
 8005d7c:	19ba      	adds	r2, r7, r6
 8005d7e:	6013      	str	r3, [r2, #0]
         pSrc[2 * i2]     = r5 + s7;
 8005d80:	25d4      	movs	r5, #212	; 0xd4
 8005d82:	197a      	adds	r2, r7, r5
 8005d84:	6813      	ldr	r3, [r2, #0]
 8005d86:	00db      	lsls	r3, r3, #3
 8005d88:	68fa      	ldr	r2, [r7, #12]
 8005d8a:	18d4      	adds	r4, r2, r3
 8005d8c:	19be      	adds	r6, r7, r6
 8005d8e:	6831      	ldr	r1, [r6, #0]
 8005d90:	20b4      	movs	r0, #180	; 0xb4
 8005d92:	0006      	movs	r6, r0
 8005d94:	183a      	adds	r2, r7, r0
 8005d96:	6810      	ldr	r0, [r2, #0]
 8005d98:	f7fa fc0a 	bl	80005b0 <__aeabi_fadd>
 8005d9c:	1c03      	adds	r3, r0, #0
 8005d9e:	6023      	str	r3, [r4, #0]
         pSrc[2 * i8]     = r5 - s7;
 8005da0:	22bc      	movs	r2, #188	; 0xbc
 8005da2:	18bc      	adds	r4, r7, r2
 8005da4:	6823      	ldr	r3, [r4, #0]
 8005da6:	00db      	lsls	r3, r3, #3
 8005da8:	68fa      	ldr	r2, [r7, #12]
 8005daa:	18d4      	adds	r4, r2, r3
 8005dac:	2388      	movs	r3, #136	; 0x88
 8005dae:	18fa      	adds	r2, r7, r3
 8005db0:	6811      	ldr	r1, [r2, #0]
 8005db2:	0030      	movs	r0, r6
 8005db4:	183e      	adds	r6, r7, r0
 8005db6:	6830      	ldr	r0, [r6, #0]
 8005db8:	f7fb f89e 	bl	8000ef8 <__aeabi_fsub>
 8005dbc:	1c03      	adds	r3, r0, #0
 8005dbe:	6023      	str	r3, [r4, #0]
         pSrc[2 * i6]     = t1 + s8;
 8005dc0:	23c4      	movs	r3, #196	; 0xc4
 8005dc2:	18fe      	adds	r6, r7, r3
 8005dc4:	6833      	ldr	r3, [r6, #0]
 8005dc6:	00db      	lsls	r3, r3, #3
 8005dc8:	68fa      	ldr	r2, [r7, #12]
 8005dca:	18d4      	adds	r4, r2, r3
 8005dcc:	2384      	movs	r3, #132	; 0x84
 8005dce:	18fe      	adds	r6, r7, r3
 8005dd0:	6831      	ldr	r1, [r6, #0]
 8005dd2:	2098      	movs	r0, #152	; 0x98
 8005dd4:	183e      	adds	r6, r7, r0
 8005dd6:	6830      	ldr	r0, [r6, #0]
 8005dd8:	f7fa fbea 	bl	80005b0 <__aeabi_fadd>
 8005ddc:	1c03      	adds	r3, r0, #0
 8005dde:	6023      	str	r3, [r4, #0]
         pSrc[2 * i4]     = t1 - s8;
 8005de0:	26cc      	movs	r6, #204	; 0xcc
 8005de2:	19bc      	adds	r4, r7, r6
 8005de4:	6823      	ldr	r3, [r4, #0]
 8005de6:	00db      	lsls	r3, r3, #3
 8005de8:	68fa      	ldr	r2, [r7, #12]
 8005dea:	18d4      	adds	r4, r2, r3
 8005dec:	2384      	movs	r3, #132	; 0x84
 8005dee:	18f9      	adds	r1, r7, r3
 8005df0:	6809      	ldr	r1, [r1, #0]
 8005df2:	2098      	movs	r0, #152	; 0x98
 8005df4:	1838      	adds	r0, r7, r0
 8005df6:	6800      	ldr	r0, [r0, #0]
 8005df8:	f7fb f87e 	bl	8000ef8 <__aeabi_fsub>
 8005dfc:	1c03      	adds	r3, r0, #0
 8005dfe:	6023      	str	r3, [r4, #0]
         pSrc[2 * i2 + 1] = s5 - r7;
 8005e00:	1978      	adds	r0, r7, r5
 8005e02:	6803      	ldr	r3, [r0, #0]
 8005e04:	00db      	lsls	r3, r3, #3
 8005e06:	3304      	adds	r3, #4
 8005e08:	68fa      	ldr	r2, [r7, #12]
 8005e0a:	18d4      	adds	r4, r2, r3
 8005e0c:	25a4      	movs	r5, #164	; 0xa4
 8005e0e:	1978      	adds	r0, r7, r5
 8005e10:	6801      	ldr	r1, [r0, #0]
 8005e12:	2394      	movs	r3, #148	; 0x94
 8005e14:	18f8      	adds	r0, r7, r3
 8005e16:	6800      	ldr	r0, [r0, #0]
 8005e18:	f7fb f86e 	bl	8000ef8 <__aeabi_fsub>
 8005e1c:	1c03      	adds	r3, r0, #0
 8005e1e:	6023      	str	r3, [r4, #0]
         pSrc[2 * i8 + 1] = s5 + r7;
 8005e20:	22bc      	movs	r2, #188	; 0xbc
 8005e22:	18ba      	adds	r2, r7, r2
 8005e24:	6813      	ldr	r3, [r2, #0]
 8005e26:	00db      	lsls	r3, r3, #3
 8005e28:	3304      	adds	r3, #4
 8005e2a:	68fa      	ldr	r2, [r7, #12]
 8005e2c:	18d4      	adds	r4, r2, r3
 8005e2e:	197d      	adds	r5, r7, r5
 8005e30:	6829      	ldr	r1, [r5, #0]
 8005e32:	2294      	movs	r2, #148	; 0x94
 8005e34:	18bd      	adds	r5, r7, r2
 8005e36:	6828      	ldr	r0, [r5, #0]
 8005e38:	f7fa fbba 	bl	80005b0 <__aeabi_fadd>
 8005e3c:	1c03      	adds	r3, r0, #0
 8005e3e:	6023      	str	r3, [r4, #0]
         pSrc[2 * i6 + 1] = t2 - r8;
 8005e40:	23c4      	movs	r3, #196	; 0xc4
 8005e42:	18fc      	adds	r4, r7, r3
 8005e44:	6823      	ldr	r3, [r4, #0]
 8005e46:	00db      	lsls	r3, r3, #3
 8005e48:	3304      	adds	r3, #4
 8005e4a:	68fa      	ldr	r2, [r7, #12]
 8005e4c:	18d4      	adds	r4, r2, r3
 8005e4e:	209c      	movs	r0, #156	; 0x9c
 8005e50:	0005      	movs	r5, r0
 8005e52:	1838      	adds	r0, r7, r0
 8005e54:	6801      	ldr	r1, [r0, #0]
 8005e56:	2380      	movs	r3, #128	; 0x80
 8005e58:	18f8      	adds	r0, r7, r3
 8005e5a:	6800      	ldr	r0, [r0, #0]
 8005e5c:	f7fb f84c 	bl	8000ef8 <__aeabi_fsub>
 8005e60:	1c03      	adds	r3, r0, #0
 8005e62:	6023      	str	r3, [r4, #0]
         pSrc[2 * i4 + 1] = t2 + r8;
 8005e64:	19b8      	adds	r0, r7, r6
 8005e66:	6803      	ldr	r3, [r0, #0]
 8005e68:	00db      	lsls	r3, r3, #3
 8005e6a:	3304      	adds	r3, #4
 8005e6c:	68fa      	ldr	r2, [r7, #12]
 8005e6e:	18d4      	adds	r4, r2, r3
 8005e70:	1978      	adds	r0, r7, r5
 8005e72:	6801      	ldr	r1, [r0, #0]
 8005e74:	2380      	movs	r3, #128	; 0x80
 8005e76:	18fb      	adds	r3, r7, r3
 8005e78:	6818      	ldr	r0, [r3, #0]
 8005e7a:	f7fa fb99 	bl	80005b0 <__aeabi_fadd>
 8005e7e:	1c03      	adds	r3, r0, #0
 8005e80:	6023      	str	r3, [r4, #0]

         i1 += n1;
 8005e82:	21e8      	movs	r1, #232	; 0xe8
 8005e84:	187b      	adds	r3, r7, r1
 8005e86:	681a      	ldr	r2, [r3, #0]
 8005e88:	23d8      	movs	r3, #216	; 0xd8
 8005e8a:	18fb      	adds	r3, r7, r3
 8005e8c:	681b      	ldr	r3, [r3, #0]
 8005e8e:	18d3      	adds	r3, r2, r3
 8005e90:	187a      	adds	r2, r7, r1
 8005e92:	6013      	str	r3, [r2, #0]
      } while (i1 < fftLen);
 8005e94:	230a      	movs	r3, #10
 8005e96:	18fb      	adds	r3, r7, r3
 8005e98:	881b      	ldrh	r3, [r3, #0]
 8005e9a:	187a      	adds	r2, r7, r1
 8005e9c:	6812      	ldr	r2, [r2, #0]
 8005e9e:	429a      	cmp	r2, r3
 8005ea0:	d200      	bcs.n	8005ea4 <arm_radix8_butterfly_f32+0x7ac>
 8005ea2:	e453      	b.n	800574c <arm_radix8_butterfly_f32+0x54>

      if (n2 < 8)
 8005ea4:	23e4      	movs	r3, #228	; 0xe4
 8005ea6:	18fb      	adds	r3, r7, r3
 8005ea8:	681b      	ldr	r3, [r3, #0]
 8005eaa:	2b07      	cmp	r3, #7
 8005eac:	d801      	bhi.n	8005eb2 <arm_radix8_butterfly_f32+0x7ba>
 8005eae:	f000 fd78 	bl	80069a2 <arm_radix8_butterfly_f32+0x12aa>
         break;

      ia1 = 0;
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	22ec      	movs	r2, #236	; 0xec
 8005eb6:	18ba      	adds	r2, r7, r2
 8005eb8:	6013      	str	r3, [r2, #0]
      j = 1;
 8005eba:	2301      	movs	r3, #1
 8005ebc:	22e0      	movs	r2, #224	; 0xe0
 8005ebe:	18ba      	adds	r2, r7, r2
 8005ec0:	6013      	str	r3, [r2, #0]

      do
      {
         /*  index calculation for the coefficients */
         id  = ia1 + twidCoefModifier;
 8005ec2:	2308      	movs	r3, #8
 8005ec4:	18fb      	adds	r3, r7, r3
 8005ec6:	881b      	ldrh	r3, [r3, #0]
 8005ec8:	21ec      	movs	r1, #236	; 0xec
 8005eca:	187a      	adds	r2, r7, r1
 8005ecc:	6812      	ldr	r2, [r2, #0]
 8005ece:	18d3      	adds	r3, r2, r3
 8005ed0:	67fb      	str	r3, [r7, #124]	; 0x7c
         ia1 = id;
 8005ed2:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005ed4:	187a      	adds	r2, r7, r1
 8005ed6:	6013      	str	r3, [r2, #0]
         ia2 = ia1 + id;
 8005ed8:	187b      	adds	r3, r7, r1
 8005eda:	681a      	ldr	r2, [r3, #0]
 8005edc:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005ede:	18d3      	adds	r3, r2, r3
 8005ee0:	67bb      	str	r3, [r7, #120]	; 0x78
         ia3 = ia2 + id;
 8005ee2:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8005ee4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005ee6:	18d3      	adds	r3, r2, r3
 8005ee8:	677b      	str	r3, [r7, #116]	; 0x74
         ia4 = ia3 + id;
 8005eea:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8005eec:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005eee:	18d3      	adds	r3, r2, r3
 8005ef0:	673b      	str	r3, [r7, #112]	; 0x70
         ia5 = ia4 + id;
 8005ef2:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8005ef4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005ef6:	18d3      	adds	r3, r2, r3
 8005ef8:	66fb      	str	r3, [r7, #108]	; 0x6c
         ia6 = ia5 + id;
 8005efa:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8005efc:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005efe:	18d3      	adds	r3, r2, r3
 8005f00:	66bb      	str	r3, [r7, #104]	; 0x68
         ia7 = ia6 + id;
 8005f02:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8005f04:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005f06:	18d3      	adds	r3, r2, r3
 8005f08:	667b      	str	r3, [r7, #100]	; 0x64

         co2 = pCoef[2 * ia1];
 8005f0a:	187b      	adds	r3, r7, r1
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	00db      	lsls	r3, r3, #3
 8005f10:	687a      	ldr	r2, [r7, #4]
 8005f12:	18d3      	adds	r3, r2, r3
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	663b      	str	r3, [r7, #96]	; 0x60
         co3 = pCoef[2 * ia2];
 8005f18:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005f1a:	00db      	lsls	r3, r3, #3
 8005f1c:	687a      	ldr	r2, [r7, #4]
 8005f1e:	18d3      	adds	r3, r2, r3
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	65fb      	str	r3, [r7, #92]	; 0x5c
         co4 = pCoef[2 * ia3];
 8005f24:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005f26:	00db      	lsls	r3, r3, #3
 8005f28:	687a      	ldr	r2, [r7, #4]
 8005f2a:	18d3      	adds	r3, r2, r3
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	65bb      	str	r3, [r7, #88]	; 0x58
         co5 = pCoef[2 * ia4];
 8005f30:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005f32:	00db      	lsls	r3, r3, #3
 8005f34:	687a      	ldr	r2, [r7, #4]
 8005f36:	18d3      	adds	r3, r2, r3
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	657b      	str	r3, [r7, #84]	; 0x54
         co6 = pCoef[2 * ia5];
 8005f3c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8005f3e:	00db      	lsls	r3, r3, #3
 8005f40:	687a      	ldr	r2, [r7, #4]
 8005f42:	18d3      	adds	r3, r2, r3
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	653b      	str	r3, [r7, #80]	; 0x50
         co7 = pCoef[2 * ia6];
 8005f48:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8005f4a:	00db      	lsls	r3, r3, #3
 8005f4c:	687a      	ldr	r2, [r7, #4]
 8005f4e:	18d3      	adds	r3, r2, r3
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	64fb      	str	r3, [r7, #76]	; 0x4c
         co8 = pCoef[2 * ia7];
 8005f54:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005f56:	00db      	lsls	r3, r3, #3
 8005f58:	687a      	ldr	r2, [r7, #4]
 8005f5a:	18d3      	adds	r3, r2, r3
 8005f5c:	681b      	ldr	r3, [r3, #0]
 8005f5e:	64bb      	str	r3, [r7, #72]	; 0x48
         si2 = pCoef[2 * ia1 + 1];
 8005f60:	187b      	adds	r3, r7, r1
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	00db      	lsls	r3, r3, #3
 8005f66:	3304      	adds	r3, #4
 8005f68:	687a      	ldr	r2, [r7, #4]
 8005f6a:	18d3      	adds	r3, r2, r3
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	647b      	str	r3, [r7, #68]	; 0x44
         si3 = pCoef[2 * ia2 + 1];
 8005f70:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005f72:	00db      	lsls	r3, r3, #3
 8005f74:	3304      	adds	r3, #4
 8005f76:	687a      	ldr	r2, [r7, #4]
 8005f78:	18d3      	adds	r3, r2, r3
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	643b      	str	r3, [r7, #64]	; 0x40
         si4 = pCoef[2 * ia3 + 1];
 8005f7e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005f80:	00db      	lsls	r3, r3, #3
 8005f82:	3304      	adds	r3, #4
 8005f84:	687a      	ldr	r2, [r7, #4]
 8005f86:	18d3      	adds	r3, r2, r3
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	63fb      	str	r3, [r7, #60]	; 0x3c
         si5 = pCoef[2 * ia4 + 1];
 8005f8c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005f8e:	00db      	lsls	r3, r3, #3
 8005f90:	3304      	adds	r3, #4
 8005f92:	687a      	ldr	r2, [r7, #4]
 8005f94:	18d3      	adds	r3, r2, r3
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	63bb      	str	r3, [r7, #56]	; 0x38
         si6 = pCoef[2 * ia5 + 1];
 8005f9a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8005f9c:	00db      	lsls	r3, r3, #3
 8005f9e:	3304      	adds	r3, #4
 8005fa0:	687a      	ldr	r2, [r7, #4]
 8005fa2:	18d3      	adds	r3, r2, r3
 8005fa4:	681b      	ldr	r3, [r3, #0]
 8005fa6:	637b      	str	r3, [r7, #52]	; 0x34
         si7 = pCoef[2 * ia6 + 1];
 8005fa8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8005faa:	00db      	lsls	r3, r3, #3
 8005fac:	3304      	adds	r3, #4
 8005fae:	687a      	ldr	r2, [r7, #4]
 8005fb0:	18d3      	adds	r3, r2, r3
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	633b      	str	r3, [r7, #48]	; 0x30
         si8 = pCoef[2 * ia7 + 1];
 8005fb6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005fb8:	00db      	lsls	r3, r3, #3
 8005fba:	3304      	adds	r3, #4
 8005fbc:	687a      	ldr	r2, [r7, #4]
 8005fbe:	18d3      	adds	r3, r2, r3
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	62fb      	str	r3, [r7, #44]	; 0x2c

         i1 = j;
 8005fc4:	23e0      	movs	r3, #224	; 0xe0
 8005fc6:	18fb      	adds	r3, r7, r3
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	22e8      	movs	r2, #232	; 0xe8
 8005fcc:	18ba      	adds	r2, r7, r2
 8005fce:	6013      	str	r3, [r2, #0]

         do
         {
            /*  index calculation for the input */
            i2 = i1 + n2;
 8005fd0:	21e8      	movs	r1, #232	; 0xe8
 8005fd2:	187b      	adds	r3, r7, r1
 8005fd4:	681a      	ldr	r2, [r3, #0]
 8005fd6:	20e4      	movs	r0, #228	; 0xe4
 8005fd8:	183b      	adds	r3, r7, r0
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	18d3      	adds	r3, r2, r3
 8005fde:	25d4      	movs	r5, #212	; 0xd4
 8005fe0:	197a      	adds	r2, r7, r5
 8005fe2:	6013      	str	r3, [r2, #0]
            i3 = i2 + n2;
 8005fe4:	197b      	adds	r3, r7, r5
 8005fe6:	681a      	ldr	r2, [r3, #0]
 8005fe8:	183b      	adds	r3, r7, r0
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	18d3      	adds	r3, r2, r3
 8005fee:	26d0      	movs	r6, #208	; 0xd0
 8005ff0:	19ba      	adds	r2, r7, r6
 8005ff2:	6013      	str	r3, [r2, #0]
            i4 = i3 + n2;
 8005ff4:	19bb      	adds	r3, r7, r6
 8005ff6:	681a      	ldr	r2, [r3, #0]
 8005ff8:	183b      	adds	r3, r7, r0
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	18d3      	adds	r3, r2, r3
 8005ffe:	22cc      	movs	r2, #204	; 0xcc
 8006000:	18bc      	adds	r4, r7, r2
 8006002:	6023      	str	r3, [r4, #0]
            i5 = i4 + n2;
 8006004:	18bb      	adds	r3, r7, r2
 8006006:	681a      	ldr	r2, [r3, #0]
 8006008:	183b      	adds	r3, r7, r0
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	18d3      	adds	r3, r2, r3
 800600e:	24c8      	movs	r4, #200	; 0xc8
 8006010:	193a      	adds	r2, r7, r4
 8006012:	6013      	str	r3, [r2, #0]
            i6 = i5 + n2;
 8006014:	193b      	adds	r3, r7, r4
 8006016:	681a      	ldr	r2, [r3, #0]
 8006018:	183b      	adds	r3, r7, r0
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	18d3      	adds	r3, r2, r3
 800601e:	22c4      	movs	r2, #196	; 0xc4
 8006020:	18be      	adds	r6, r7, r2
 8006022:	6033      	str	r3, [r6, #0]
            i7 = i6 + n2;
 8006024:	18bb      	adds	r3, r7, r2
 8006026:	681a      	ldr	r2, [r3, #0]
 8006028:	0006      	movs	r6, r0
 800602a:	183b      	adds	r3, r7, r0
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	18d3      	adds	r3, r2, r3
 8006030:	20c0      	movs	r0, #192	; 0xc0
 8006032:	183a      	adds	r2, r7, r0
 8006034:	6013      	str	r3, [r2, #0]
            i8 = i7 + n2;
 8006036:	183b      	adds	r3, r7, r0
 8006038:	681a      	ldr	r2, [r3, #0]
 800603a:	0033      	movs	r3, r6
 800603c:	18fb      	adds	r3, r7, r3
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	18d3      	adds	r3, r2, r3
 8006042:	20bc      	movs	r0, #188	; 0xbc
 8006044:	183a      	adds	r2, r7, r0
 8006046:	6013      	str	r3, [r2, #0]
            r1 = pSrc[2 * i1] + pSrc[2 * i5];
 8006048:	000d      	movs	r5, r1
 800604a:	187b      	adds	r3, r7, r1
 800604c:	681b      	ldr	r3, [r3, #0]
 800604e:	00db      	lsls	r3, r3, #3
 8006050:	68fa      	ldr	r2, [r7, #12]
 8006052:	18d3      	adds	r3, r2, r3
 8006054:	6818      	ldr	r0, [r3, #0]
 8006056:	0026      	movs	r6, r4
 8006058:	193b      	adds	r3, r7, r4
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	00db      	lsls	r3, r3, #3
 800605e:	68fa      	ldr	r2, [r7, #12]
 8006060:	18d3      	adds	r3, r2, r3
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	1c19      	adds	r1, r3, #0
 8006066:	f7fa faa3 	bl	80005b0 <__aeabi_fadd>
 800606a:	1c03      	adds	r3, r0, #0
 800606c:	24b8      	movs	r4, #184	; 0xb8
 800606e:	1939      	adds	r1, r7, r4
 8006070:	600b      	str	r3, [r1, #0]
            r5 = pSrc[2 * i1] - pSrc[2 * i5];
 8006072:	197b      	adds	r3, r7, r5
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	00db      	lsls	r3, r3, #3
 8006078:	68fa      	ldr	r2, [r7, #12]
 800607a:	18d3      	adds	r3, r2, r3
 800607c:	6818      	ldr	r0, [r3, #0]
 800607e:	0033      	movs	r3, r6
 8006080:	18fb      	adds	r3, r7, r3
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	00db      	lsls	r3, r3, #3
 8006086:	68fa      	ldr	r2, [r7, #12]
 8006088:	18d3      	adds	r3, r2, r3
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	1c19      	adds	r1, r3, #0
 800608e:	f7fa ff33 	bl	8000ef8 <__aeabi_fsub>
 8006092:	1c03      	adds	r3, r0, #0
 8006094:	26b4      	movs	r6, #180	; 0xb4
 8006096:	19b9      	adds	r1, r7, r6
 8006098:	600b      	str	r3, [r1, #0]
            r2 = pSrc[2 * i2] + pSrc[2 * i6];
 800609a:	25d4      	movs	r5, #212	; 0xd4
 800609c:	197b      	adds	r3, r7, r5
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	00db      	lsls	r3, r3, #3
 80060a2:	68fa      	ldr	r2, [r7, #12]
 80060a4:	18d3      	adds	r3, r2, r3
 80060a6:	6818      	ldr	r0, [r3, #0]
 80060a8:	22c4      	movs	r2, #196	; 0xc4
 80060aa:	0016      	movs	r6, r2
 80060ac:	18bb      	adds	r3, r7, r2
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	00db      	lsls	r3, r3, #3
 80060b2:	68fa      	ldr	r2, [r7, #12]
 80060b4:	18d3      	adds	r3, r2, r3
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	1c19      	adds	r1, r3, #0
 80060ba:	f7fa fa79 	bl	80005b0 <__aeabi_fadd>
 80060be:	1c03      	adds	r3, r0, #0
 80060c0:	20b0      	movs	r0, #176	; 0xb0
 80060c2:	183a      	adds	r2, r7, r0
 80060c4:	6013      	str	r3, [r2, #0]
            r6 = pSrc[2 * i2] - pSrc[2 * i6];
 80060c6:	002b      	movs	r3, r5
 80060c8:	18fa      	adds	r2, r7, r3
 80060ca:	6813      	ldr	r3, [r2, #0]
 80060cc:	00db      	lsls	r3, r3, #3
 80060ce:	68fa      	ldr	r2, [r7, #12]
 80060d0:	18d3      	adds	r3, r2, r3
 80060d2:	6818      	ldr	r0, [r3, #0]
 80060d4:	0032      	movs	r2, r6
 80060d6:	18bb      	adds	r3, r7, r2
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	00db      	lsls	r3, r3, #3
 80060dc:	68fa      	ldr	r2, [r7, #12]
 80060de:	18d3      	adds	r3, r2, r3
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	1c19      	adds	r1, r3, #0
 80060e4:	f7fa ff08 	bl	8000ef8 <__aeabi_fsub>
 80060e8:	1c03      	adds	r3, r0, #0
 80060ea:	22ac      	movs	r2, #172	; 0xac
 80060ec:	18b9      	adds	r1, r7, r2
 80060ee:	600b      	str	r3, [r1, #0]
            r3 = pSrc[2 * i3] + pSrc[2 * i7];
 80060f0:	26d0      	movs	r6, #208	; 0xd0
 80060f2:	19bb      	adds	r3, r7, r6
 80060f4:	681b      	ldr	r3, [r3, #0]
 80060f6:	00db      	lsls	r3, r3, #3
 80060f8:	68fa      	ldr	r2, [r7, #12]
 80060fa:	18d3      	adds	r3, r2, r3
 80060fc:	6818      	ldr	r0, [r3, #0]
 80060fe:	23c0      	movs	r3, #192	; 0xc0
 8006100:	001d      	movs	r5, r3
 8006102:	18fb      	adds	r3, r7, r3
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	00db      	lsls	r3, r3, #3
 8006108:	68fa      	ldr	r2, [r7, #12]
 800610a:	18d3      	adds	r3, r2, r3
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	1c19      	adds	r1, r3, #0
 8006110:	f7fa fa4e 	bl	80005b0 <__aeabi_fadd>
 8006114:	1c03      	adds	r3, r0, #0
 8006116:	21a8      	movs	r1, #168	; 0xa8
 8006118:	1879      	adds	r1, r7, r1
 800611a:	600b      	str	r3, [r1, #0]
            r7 = pSrc[2 * i3] - pSrc[2 * i7];
 800611c:	19bb      	adds	r3, r7, r6
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	00db      	lsls	r3, r3, #3
 8006122:	68fa      	ldr	r2, [r7, #12]
 8006124:	18d3      	adds	r3, r2, r3
 8006126:	6818      	ldr	r0, [r3, #0]
 8006128:	002b      	movs	r3, r5
 800612a:	18fb      	adds	r3, r7, r3
 800612c:	681b      	ldr	r3, [r3, #0]
 800612e:	00db      	lsls	r3, r3, #3
 8006130:	68fa      	ldr	r2, [r7, #12]
 8006132:	18d3      	adds	r3, r2, r3
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	1c19      	adds	r1, r3, #0
 8006138:	f7fa fede 	bl	8000ef8 <__aeabi_fsub>
 800613c:	1c03      	adds	r3, r0, #0
 800613e:	21a4      	movs	r1, #164	; 0xa4
 8006140:	187a      	adds	r2, r7, r1
 8006142:	6013      	str	r3, [r2, #0]
            r4 = pSrc[2 * i4] + pSrc[2 * i8];
 8006144:	23cc      	movs	r3, #204	; 0xcc
 8006146:	001e      	movs	r6, r3
 8006148:	18fb      	adds	r3, r7, r3
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	00db      	lsls	r3, r3, #3
 800614e:	68fa      	ldr	r2, [r7, #12]
 8006150:	18d3      	adds	r3, r2, r3
 8006152:	6818      	ldr	r0, [r3, #0]
 8006154:	21bc      	movs	r1, #188	; 0xbc
 8006156:	000d      	movs	r5, r1
 8006158:	187b      	adds	r3, r7, r1
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	00db      	lsls	r3, r3, #3
 800615e:	68fa      	ldr	r2, [r7, #12]
 8006160:	18d3      	adds	r3, r2, r3
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	1c19      	adds	r1, r3, #0
 8006166:	f7fa fa23 	bl	80005b0 <__aeabi_fadd>
 800616a:	1c03      	adds	r3, r0, #0
 800616c:	20a0      	movs	r0, #160	; 0xa0
 800616e:	183a      	adds	r2, r7, r0
 8006170:	6013      	str	r3, [r2, #0]
            r8 = pSrc[2 * i4] - pSrc[2 * i8];
 8006172:	0033      	movs	r3, r6
 8006174:	18fb      	adds	r3, r7, r3
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	00db      	lsls	r3, r3, #3
 800617a:	68fa      	ldr	r2, [r7, #12]
 800617c:	18d3      	adds	r3, r2, r3
 800617e:	6818      	ldr	r0, [r3, #0]
 8006180:	0029      	movs	r1, r5
 8006182:	187b      	adds	r3, r7, r1
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	00db      	lsls	r3, r3, #3
 8006188:	68fa      	ldr	r2, [r7, #12]
 800618a:	18d3      	adds	r3, r2, r3
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	1c19      	adds	r1, r3, #0
 8006190:	f7fa feb2 	bl	8000ef8 <__aeabi_fsub>
 8006194:	1c03      	adds	r3, r0, #0
 8006196:	209c      	movs	r0, #156	; 0x9c
 8006198:	183a      	adds	r2, r7, r0
 800619a:	6013      	str	r3, [r2, #0]
            t1 = r1 - r3;
 800619c:	23a8      	movs	r3, #168	; 0xa8
 800619e:	001d      	movs	r5, r3
 80061a0:	18fb      	adds	r3, r7, r3
 80061a2:	6819      	ldr	r1, [r3, #0]
 80061a4:	193b      	adds	r3, r7, r4
 80061a6:	6818      	ldr	r0, [r3, #0]
 80061a8:	f7fa fea6 	bl	8000ef8 <__aeabi_fsub>
 80061ac:	1c03      	adds	r3, r0, #0
 80061ae:	2698      	movs	r6, #152	; 0x98
 80061b0:	19ba      	adds	r2, r7, r6
 80061b2:	6013      	str	r3, [r2, #0]
            r1 = r1 + r3;
 80061b4:	002b      	movs	r3, r5
 80061b6:	18fb      	adds	r3, r7, r3
 80061b8:	6819      	ldr	r1, [r3, #0]
 80061ba:	193b      	adds	r3, r7, r4
 80061bc:	6818      	ldr	r0, [r3, #0]
 80061be:	f7fa f9f7 	bl	80005b0 <__aeabi_fadd>
 80061c2:	1c03      	adds	r3, r0, #0
 80061c4:	0025      	movs	r5, r4
 80061c6:	193c      	adds	r4, r7, r4
 80061c8:	6023      	str	r3, [r4, #0]
            r3 = r2 - r4;
 80061ca:	24a0      	movs	r4, #160	; 0xa0
 80061cc:	193c      	adds	r4, r7, r4
 80061ce:	6821      	ldr	r1, [r4, #0]
 80061d0:	20b0      	movs	r0, #176	; 0xb0
 80061d2:	0004      	movs	r4, r0
 80061d4:	183b      	adds	r3, r7, r0
 80061d6:	6818      	ldr	r0, [r3, #0]
 80061d8:	f7fa fe8e 	bl	8000ef8 <__aeabi_fsub>
 80061dc:	1c03      	adds	r3, r0, #0
 80061de:	20a8      	movs	r0, #168	; 0xa8
 80061e0:	183a      	adds	r2, r7, r0
 80061e2:	6013      	str	r3, [r2, #0]
            r2 = r2 + r4;
 80061e4:	20a0      	movs	r0, #160	; 0xa0
 80061e6:	1838      	adds	r0, r7, r0
 80061e8:	6801      	ldr	r1, [r0, #0]
 80061ea:	1938      	adds	r0, r7, r4
 80061ec:	6800      	ldr	r0, [r0, #0]
 80061ee:	f7fa f9df 	bl	80005b0 <__aeabi_fadd>
 80061f2:	1c03      	adds	r3, r0, #0
 80061f4:	0020      	movs	r0, r4
 80061f6:	193c      	adds	r4, r7, r4
 80061f8:	6023      	str	r3, [r4, #0]
            pSrc[2 * i1] = r1 + r2;
 80061fa:	21e8      	movs	r1, #232	; 0xe8
 80061fc:	187c      	adds	r4, r7, r1
 80061fe:	6823      	ldr	r3, [r4, #0]
 8006200:	00db      	lsls	r3, r3, #3
 8006202:	68fa      	ldr	r2, [r7, #12]
 8006204:	18d4      	adds	r4, r2, r3
 8006206:	183b      	adds	r3, r7, r0
 8006208:	6819      	ldr	r1, [r3, #0]
 800620a:	197b      	adds	r3, r7, r5
 800620c:	6818      	ldr	r0, [r3, #0]
 800620e:	f7fa f9cf 	bl	80005b0 <__aeabi_fadd>
 8006212:	1c03      	adds	r3, r0, #0
 8006214:	6023      	str	r3, [r4, #0]
            r2 = r1 - r2;
 8006216:	20b0      	movs	r0, #176	; 0xb0
 8006218:	183c      	adds	r4, r7, r0
 800621a:	6821      	ldr	r1, [r4, #0]
 800621c:	002c      	movs	r4, r5
 800621e:	197b      	adds	r3, r7, r5
 8006220:	6818      	ldr	r0, [r3, #0]
 8006222:	f7fa fe69 	bl	8000ef8 <__aeabi_fsub>
 8006226:	1c03      	adds	r3, r0, #0
 8006228:	20b0      	movs	r0, #176	; 0xb0
 800622a:	183a      	adds	r2, r7, r0
 800622c:	6013      	str	r3, [r2, #0]
            s1 = pSrc[2 * i1 + 1] + pSrc[2 * i5 + 1];
 800622e:	25e8      	movs	r5, #232	; 0xe8
 8006230:	1979      	adds	r1, r7, r5
 8006232:	680b      	ldr	r3, [r1, #0]
 8006234:	00db      	lsls	r3, r3, #3
 8006236:	3304      	adds	r3, #4
 8006238:	68fa      	ldr	r2, [r7, #12]
 800623a:	18d3      	adds	r3, r2, r3
 800623c:	6818      	ldr	r0, [r3, #0]
 800623e:	21c8      	movs	r1, #200	; 0xc8
 8006240:	1879      	adds	r1, r7, r1
 8006242:	680b      	ldr	r3, [r1, #0]
 8006244:	00db      	lsls	r3, r3, #3
 8006246:	3304      	adds	r3, #4
 8006248:	68fa      	ldr	r2, [r7, #12]
 800624a:	18d3      	adds	r3, r2, r3
 800624c:	681b      	ldr	r3, [r3, #0]
 800624e:	1c19      	adds	r1, r3, #0
 8006250:	f7fa f9ae 	bl	80005b0 <__aeabi_fadd>
 8006254:	1c03      	adds	r3, r0, #0
 8006256:	62bb      	str	r3, [r7, #40]	; 0x28
            s5 = pSrc[2 * i1 + 1] - pSrc[2 * i5 + 1];
 8006258:	1979      	adds	r1, r7, r5
 800625a:	680b      	ldr	r3, [r1, #0]
 800625c:	00db      	lsls	r3, r3, #3
 800625e:	3304      	adds	r3, #4
 8006260:	68fa      	ldr	r2, [r7, #12]
 8006262:	18d3      	adds	r3, r2, r3
 8006264:	6818      	ldr	r0, [r3, #0]
 8006266:	21c8      	movs	r1, #200	; 0xc8
 8006268:	1879      	adds	r1, r7, r1
 800626a:	680b      	ldr	r3, [r1, #0]
 800626c:	00db      	lsls	r3, r3, #3
 800626e:	3304      	adds	r3, #4
 8006270:	68fa      	ldr	r2, [r7, #12]
 8006272:	18d3      	adds	r3, r2, r3
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	1c19      	adds	r1, r3, #0
 8006278:	f7fa fe3e 	bl	8000ef8 <__aeabi_fsub>
 800627c:	1c03      	adds	r3, r0, #0
 800627e:	2194      	movs	r1, #148	; 0x94
 8006280:	187a      	adds	r2, r7, r1
 8006282:	6013      	str	r3, [r2, #0]
            s2 = pSrc[2 * i2 + 1] + pSrc[2 * i6 + 1];
 8006284:	23d4      	movs	r3, #212	; 0xd4
 8006286:	001d      	movs	r5, r3
 8006288:	18fb      	adds	r3, r7, r3
 800628a:	681b      	ldr	r3, [r3, #0]
 800628c:	00db      	lsls	r3, r3, #3
 800628e:	3304      	adds	r3, #4
 8006290:	68fa      	ldr	r2, [r7, #12]
 8006292:	18d3      	adds	r3, r2, r3
 8006294:	6818      	ldr	r0, [r3, #0]
 8006296:	21c4      	movs	r1, #196	; 0xc4
 8006298:	187b      	adds	r3, r7, r1
 800629a:	681b      	ldr	r3, [r3, #0]
 800629c:	00db      	lsls	r3, r3, #3
 800629e:	3304      	adds	r3, #4
 80062a0:	68fa      	ldr	r2, [r7, #12]
 80062a2:	18d3      	adds	r3, r2, r3
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	1c19      	adds	r1, r3, #0
 80062a8:	f7fa f982 	bl	80005b0 <__aeabi_fadd>
 80062ac:	1c03      	adds	r3, r0, #0
 80062ae:	627b      	str	r3, [r7, #36]	; 0x24
            s6 = pSrc[2 * i2 + 1] - pSrc[2 * i6 + 1];
 80062b0:	002b      	movs	r3, r5
 80062b2:	18fa      	adds	r2, r7, r3
 80062b4:	6813      	ldr	r3, [r2, #0]
 80062b6:	00db      	lsls	r3, r3, #3
 80062b8:	3304      	adds	r3, #4
 80062ba:	68fa      	ldr	r2, [r7, #12]
 80062bc:	18d3      	adds	r3, r2, r3
 80062be:	6818      	ldr	r0, [r3, #0]
 80062c0:	21c4      	movs	r1, #196	; 0xc4
 80062c2:	187a      	adds	r2, r7, r1
 80062c4:	6813      	ldr	r3, [r2, #0]
 80062c6:	00db      	lsls	r3, r3, #3
 80062c8:	3304      	adds	r3, #4
 80062ca:	68fa      	ldr	r2, [r7, #12]
 80062cc:	18d3      	adds	r3, r2, r3
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	1c19      	adds	r1, r3, #0
 80062d2:	f7fa fe11 	bl	8000ef8 <__aeabi_fsub>
 80062d6:	1c03      	adds	r3, r0, #0
 80062d8:	2190      	movs	r1, #144	; 0x90
 80062da:	187a      	adds	r2, r7, r1
 80062dc:	6013      	str	r3, [r2, #0]
            s3 = pSrc[2 * i3 + 1] + pSrc[2 * i7 + 1];
 80062de:	21d0      	movs	r1, #208	; 0xd0
 80062e0:	000d      	movs	r5, r1
 80062e2:	187a      	adds	r2, r7, r1
 80062e4:	6813      	ldr	r3, [r2, #0]
 80062e6:	00db      	lsls	r3, r3, #3
 80062e8:	3304      	adds	r3, #4
 80062ea:	68fa      	ldr	r2, [r7, #12]
 80062ec:	18d3      	adds	r3, r2, r3
 80062ee:	6818      	ldr	r0, [r3, #0]
 80062f0:	21c0      	movs	r1, #192	; 0xc0
 80062f2:	187a      	adds	r2, r7, r1
 80062f4:	6813      	ldr	r3, [r2, #0]
 80062f6:	00db      	lsls	r3, r3, #3
 80062f8:	3304      	adds	r3, #4
 80062fa:	68fa      	ldr	r2, [r7, #12]
 80062fc:	18d3      	adds	r3, r2, r3
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	1c19      	adds	r1, r3, #0
 8006302:	f7fa f955 	bl	80005b0 <__aeabi_fadd>
 8006306:	1c03      	adds	r3, r0, #0
 8006308:	228c      	movs	r2, #140	; 0x8c
 800630a:	18b9      	adds	r1, r7, r2
 800630c:	600b      	str	r3, [r1, #0]
            s7 = pSrc[2 * i3 + 1] - pSrc[2 * i7 + 1];
 800630e:	0029      	movs	r1, r5
 8006310:	187a      	adds	r2, r7, r1
 8006312:	6813      	ldr	r3, [r2, #0]
 8006314:	00db      	lsls	r3, r3, #3
 8006316:	3304      	adds	r3, #4
 8006318:	68fa      	ldr	r2, [r7, #12]
 800631a:	18d3      	adds	r3, r2, r3
 800631c:	6818      	ldr	r0, [r3, #0]
 800631e:	23c0      	movs	r3, #192	; 0xc0
 8006320:	18fa      	adds	r2, r7, r3
 8006322:	6813      	ldr	r3, [r2, #0]
 8006324:	00db      	lsls	r3, r3, #3
 8006326:	3304      	adds	r3, #4
 8006328:	68fa      	ldr	r2, [r7, #12]
 800632a:	18d3      	adds	r3, r2, r3
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	1c19      	adds	r1, r3, #0
 8006330:	f7fa fde2 	bl	8000ef8 <__aeabi_fsub>
 8006334:	1c03      	adds	r3, r0, #0
 8006336:	2288      	movs	r2, #136	; 0x88
 8006338:	18ba      	adds	r2, r7, r2
 800633a:	6013      	str	r3, [r2, #0]
            s4 = pSrc[2 * i4 + 1] + pSrc[2 * i8 + 1];
 800633c:	23cc      	movs	r3, #204	; 0xcc
 800633e:	001d      	movs	r5, r3
 8006340:	18fa      	adds	r2, r7, r3
 8006342:	6813      	ldr	r3, [r2, #0]
 8006344:	00db      	lsls	r3, r3, #3
 8006346:	3304      	adds	r3, #4
 8006348:	68fa      	ldr	r2, [r7, #12]
 800634a:	18d3      	adds	r3, r2, r3
 800634c:	6818      	ldr	r0, [r3, #0]
 800634e:	21bc      	movs	r1, #188	; 0xbc
 8006350:	187a      	adds	r2, r7, r1
 8006352:	6813      	ldr	r3, [r2, #0]
 8006354:	00db      	lsls	r3, r3, #3
 8006356:	3304      	adds	r3, #4
 8006358:	68fa      	ldr	r2, [r7, #12]
 800635a:	18d3      	adds	r3, r2, r3
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	1c19      	adds	r1, r3, #0
 8006360:	f7fa f926 	bl	80005b0 <__aeabi_fadd>
 8006364:	1c03      	adds	r3, r0, #0
 8006366:	623b      	str	r3, [r7, #32]
            s8 = pSrc[2 * i4 + 1] - pSrc[2 * i8 + 1];
 8006368:	002b      	movs	r3, r5
 800636a:	18fa      	adds	r2, r7, r3
 800636c:	6813      	ldr	r3, [r2, #0]
 800636e:	00db      	lsls	r3, r3, #3
 8006370:	3304      	adds	r3, #4
 8006372:	68fa      	ldr	r2, [r7, #12]
 8006374:	18d3      	adds	r3, r2, r3
 8006376:	6818      	ldr	r0, [r3, #0]
 8006378:	21bc      	movs	r1, #188	; 0xbc
 800637a:	187a      	adds	r2, r7, r1
 800637c:	6813      	ldr	r3, [r2, #0]
 800637e:	00db      	lsls	r3, r3, #3
 8006380:	3304      	adds	r3, #4
 8006382:	68fa      	ldr	r2, [r7, #12]
 8006384:	18d3      	adds	r3, r2, r3
 8006386:	681b      	ldr	r3, [r3, #0]
 8006388:	1c19      	adds	r1, r3, #0
 800638a:	f7fa fdb5 	bl	8000ef8 <__aeabi_fsub>
 800638e:	1c03      	adds	r3, r0, #0
 8006390:	2284      	movs	r2, #132	; 0x84
 8006392:	18b8      	adds	r0, r7, r2
 8006394:	6003      	str	r3, [r0, #0]
            t2 = s1 - s3;
 8006396:	228c      	movs	r2, #140	; 0x8c
 8006398:	0015      	movs	r5, r2
 800639a:	18ba      	adds	r2, r7, r2
 800639c:	6811      	ldr	r1, [r2, #0]
 800639e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80063a0:	f7fa fdaa 	bl	8000ef8 <__aeabi_fsub>
 80063a4:	1c03      	adds	r3, r0, #0
 80063a6:	2280      	movs	r2, #128	; 0x80
 80063a8:	18b8      	adds	r0, r7, r2
 80063aa:	6003      	str	r3, [r0, #0]
            s1 = s1 + s3;
 80063ac:	002a      	movs	r2, r5
 80063ae:	0015      	movs	r5, r2
 80063b0:	18bb      	adds	r3, r7, r2
 80063b2:	6819      	ldr	r1, [r3, #0]
 80063b4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80063b6:	f7fa f8fb 	bl	80005b0 <__aeabi_fadd>
 80063ba:	1c03      	adds	r3, r0, #0
 80063bc:	62bb      	str	r3, [r7, #40]	; 0x28
            s3 = s2 - s4;
 80063be:	6a39      	ldr	r1, [r7, #32]
 80063c0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80063c2:	f7fa fd99 	bl	8000ef8 <__aeabi_fsub>
 80063c6:	1c03      	adds	r3, r0, #0
 80063c8:	002a      	movs	r2, r5
 80063ca:	0015      	movs	r5, r2
 80063cc:	18b8      	adds	r0, r7, r2
 80063ce:	6003      	str	r3, [r0, #0]
            s2 = s2 + s4;
 80063d0:	6a39      	ldr	r1, [r7, #32]
 80063d2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80063d4:	f7fa f8ec 	bl	80005b0 <__aeabi_fadd>
 80063d8:	1c03      	adds	r3, r0, #0
 80063da:	627b      	str	r3, [r7, #36]	; 0x24
            r1 = t1 + s3;
 80063dc:	002a      	movs	r2, r5
 80063de:	18bb      	adds	r3, r7, r2
 80063e0:	6819      	ldr	r1, [r3, #0]
 80063e2:	19bb      	adds	r3, r7, r6
 80063e4:	6818      	ldr	r0, [r3, #0]
 80063e6:	f7fa f8e3 	bl	80005b0 <__aeabi_fadd>
 80063ea:	1c03      	adds	r3, r0, #0
 80063ec:	0025      	movs	r5, r4
 80063ee:	197c      	adds	r4, r7, r5
 80063f0:	6023      	str	r3, [r4, #0]
            t1 = t1 - s3;
 80063f2:	248c      	movs	r4, #140	; 0x8c
 80063f4:	193c      	adds	r4, r7, r4
 80063f6:	6821      	ldr	r1, [r4, #0]
 80063f8:	19bc      	adds	r4, r7, r6
 80063fa:	6820      	ldr	r0, [r4, #0]
 80063fc:	f7fa fd7c 	bl	8000ef8 <__aeabi_fsub>
 8006400:	1c03      	adds	r3, r0, #0
 8006402:	19bc      	adds	r4, r7, r6
 8006404:	6023      	str	r3, [r4, #0]
            pSrc[2 * i1 + 1] = s1 + s2;
 8006406:	23e8      	movs	r3, #232	; 0xe8
 8006408:	18fc      	adds	r4, r7, r3
 800640a:	6823      	ldr	r3, [r4, #0]
 800640c:	00db      	lsls	r3, r3, #3
 800640e:	3304      	adds	r3, #4
 8006410:	68fa      	ldr	r2, [r7, #12]
 8006412:	18d4      	adds	r4, r2, r3
 8006414:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006416:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006418:	f7fa f8ca 	bl	80005b0 <__aeabi_fadd>
 800641c:	1c03      	adds	r3, r0, #0
 800641e:	6023      	str	r3, [r4, #0]
            s2 = s1 - s2;
 8006420:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006422:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006424:	f7fa fd68 	bl	8000ef8 <__aeabi_fsub>
 8006428:	1c03      	adds	r3, r0, #0
 800642a:	627b      	str	r3, [r7, #36]	; 0x24
            s1 = t2 - r3;
 800642c:	24a8      	movs	r4, #168	; 0xa8
 800642e:	193c      	adds	r4, r7, r4
 8006430:	6821      	ldr	r1, [r4, #0]
 8006432:	2280      	movs	r2, #128	; 0x80
 8006434:	0014      	movs	r4, r2
 8006436:	18ba      	adds	r2, r7, r2
 8006438:	6810      	ldr	r0, [r2, #0]
 800643a:	f7fa fd5d 	bl	8000ef8 <__aeabi_fsub>
 800643e:	1c03      	adds	r3, r0, #0
 8006440:	62bb      	str	r3, [r7, #40]	; 0x28
            t2 = t2 + r3;
 8006442:	22a8      	movs	r2, #168	; 0xa8
 8006444:	18bb      	adds	r3, r7, r2
 8006446:	6819      	ldr	r1, [r3, #0]
 8006448:	193b      	adds	r3, r7, r4
 800644a:	6818      	ldr	r0, [r3, #0]
 800644c:	f7fa f8b0 	bl	80005b0 <__aeabi_fadd>
 8006450:	1c03      	adds	r3, r0, #0
 8006452:	193c      	adds	r4, r7, r4
 8006454:	6023      	str	r3, [r4, #0]
            p1 = co5 * r2;
 8006456:	20b0      	movs	r0, #176	; 0xb0
 8006458:	0004      	movs	r4, r0
 800645a:	1838      	adds	r0, r7, r0
 800645c:	6801      	ldr	r1, [r0, #0]
 800645e:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8006460:	f7fa fc18 	bl	8000c94 <__aeabi_fmul>
 8006464:	1c03      	adds	r3, r0, #0
 8006466:	61fb      	str	r3, [r7, #28]
            p2 = si5 * s2;
 8006468:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800646a:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800646c:	f7fa fc12 	bl	8000c94 <__aeabi_fmul>
 8006470:	1c03      	adds	r3, r0, #0
 8006472:	61bb      	str	r3, [r7, #24]
            p3 = co5 * s2;
 8006474:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006476:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8006478:	f7fa fc0c 	bl	8000c94 <__aeabi_fmul>
 800647c:	1c03      	adds	r3, r0, #0
 800647e:	617b      	str	r3, [r7, #20]
            p4 = si5 * r2;
 8006480:	0021      	movs	r1, r4
 8006482:	1878      	adds	r0, r7, r1
 8006484:	6801      	ldr	r1, [r0, #0]
 8006486:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8006488:	f7fa fc04 	bl	8000c94 <__aeabi_fmul>
 800648c:	1c03      	adds	r3, r0, #0
 800648e:	613b      	str	r3, [r7, #16]
            pSrc[2 * i5]     = p1 + p2;
 8006490:	20c8      	movs	r0, #200	; 0xc8
 8006492:	1838      	adds	r0, r7, r0
 8006494:	6803      	ldr	r3, [r0, #0]
 8006496:	00db      	lsls	r3, r3, #3
 8006498:	68fa      	ldr	r2, [r7, #12]
 800649a:	18d4      	adds	r4, r2, r3
 800649c:	69b9      	ldr	r1, [r7, #24]
 800649e:	69f8      	ldr	r0, [r7, #28]
 80064a0:	f7fa f886 	bl	80005b0 <__aeabi_fadd>
 80064a4:	1c03      	adds	r3, r0, #0
 80064a6:	6023      	str	r3, [r4, #0]
            pSrc[2 * i5 + 1] = p3 - p4;
 80064a8:	20c8      	movs	r0, #200	; 0xc8
 80064aa:	1838      	adds	r0, r7, r0
 80064ac:	6803      	ldr	r3, [r0, #0]
 80064ae:	00db      	lsls	r3, r3, #3
 80064b0:	3304      	adds	r3, #4
 80064b2:	68fa      	ldr	r2, [r7, #12]
 80064b4:	18d4      	adds	r4, r2, r3
 80064b6:	6939      	ldr	r1, [r7, #16]
 80064b8:	6978      	ldr	r0, [r7, #20]
 80064ba:	f7fa fd1d 	bl	8000ef8 <__aeabi_fsub>
 80064be:	1c03      	adds	r3, r0, #0
 80064c0:	6023      	str	r3, [r4, #0]
            p1 = co3 * r1;
 80064c2:	1978      	adds	r0, r7, r5
 80064c4:	6801      	ldr	r1, [r0, #0]
 80064c6:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 80064c8:	f7fa fbe4 	bl	8000c94 <__aeabi_fmul>
 80064cc:	1c03      	adds	r3, r0, #0
 80064ce:	61fb      	str	r3, [r7, #28]
            p2 = si3 * s1;
 80064d0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80064d2:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80064d4:	f7fa fbde 	bl	8000c94 <__aeabi_fmul>
 80064d8:	1c03      	adds	r3, r0, #0
 80064da:	61bb      	str	r3, [r7, #24]
            p3 = co3 * s1;
 80064dc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80064de:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 80064e0:	f7fa fbd8 	bl	8000c94 <__aeabi_fmul>
 80064e4:	1c03      	adds	r3, r0, #0
 80064e6:	617b      	str	r3, [r7, #20]
            p4 = si3 * r1;
 80064e8:	1978      	adds	r0, r7, r5
 80064ea:	6801      	ldr	r1, [r0, #0]
 80064ec:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80064ee:	f7fa fbd1 	bl	8000c94 <__aeabi_fmul>
 80064f2:	1c03      	adds	r3, r0, #0
 80064f4:	613b      	str	r3, [r7, #16]
            pSrc[2 * i3]     = p1 + p2;
 80064f6:	21d0      	movs	r1, #208	; 0xd0
 80064f8:	1878      	adds	r0, r7, r1
 80064fa:	6803      	ldr	r3, [r0, #0]
 80064fc:	00db      	lsls	r3, r3, #3
 80064fe:	68fa      	ldr	r2, [r7, #12]
 8006500:	18d4      	adds	r4, r2, r3
 8006502:	69b9      	ldr	r1, [r7, #24]
 8006504:	69f8      	ldr	r0, [r7, #28]
 8006506:	f7fa f853 	bl	80005b0 <__aeabi_fadd>
 800650a:	1c03      	adds	r3, r0, #0
 800650c:	6023      	str	r3, [r4, #0]
            pSrc[2 * i3 + 1] = p3 - p4;
 800650e:	21d0      	movs	r1, #208	; 0xd0
 8006510:	1878      	adds	r0, r7, r1
 8006512:	6803      	ldr	r3, [r0, #0]
 8006514:	00db      	lsls	r3, r3, #3
 8006516:	3304      	adds	r3, #4
 8006518:	68fa      	ldr	r2, [r7, #12]
 800651a:	18d4      	adds	r4, r2, r3
 800651c:	6939      	ldr	r1, [r7, #16]
 800651e:	6978      	ldr	r0, [r7, #20]
 8006520:	f7fa fcea 	bl	8000ef8 <__aeabi_fsub>
 8006524:	1c03      	adds	r3, r0, #0
 8006526:	6023      	str	r3, [r4, #0]
            p1 = co7 * t1;
 8006528:	19b8      	adds	r0, r7, r6
 800652a:	6801      	ldr	r1, [r0, #0]
 800652c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800652e:	f7fa fbb1 	bl	8000c94 <__aeabi_fmul>
 8006532:	1c03      	adds	r3, r0, #0
 8006534:	61fb      	str	r3, [r7, #28]
            p2 = si7 * t2;
 8006536:	2480      	movs	r4, #128	; 0x80
 8006538:	1938      	adds	r0, r7, r4
 800653a:	6801      	ldr	r1, [r0, #0]
 800653c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800653e:	f7fa fba9 	bl	8000c94 <__aeabi_fmul>
 8006542:	1c03      	adds	r3, r0, #0
 8006544:	61bb      	str	r3, [r7, #24]
            p3 = co7 * t2;
 8006546:	193c      	adds	r4, r7, r4
 8006548:	6821      	ldr	r1, [r4, #0]
 800654a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800654c:	f7fa fba2 	bl	8000c94 <__aeabi_fmul>
 8006550:	1c03      	adds	r3, r0, #0
 8006552:	617b      	str	r3, [r7, #20]
            p4 = si7 * t1;
 8006554:	19bc      	adds	r4, r7, r6
 8006556:	6821      	ldr	r1, [r4, #0]
 8006558:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800655a:	f7fa fb9b 	bl	8000c94 <__aeabi_fmul>
 800655e:	1c03      	adds	r3, r0, #0
 8006560:	613b      	str	r3, [r7, #16]
            pSrc[2 * i7]     = p1 + p2;
 8006562:	23c0      	movs	r3, #192	; 0xc0
 8006564:	18fc      	adds	r4, r7, r3
 8006566:	6823      	ldr	r3, [r4, #0]
 8006568:	00db      	lsls	r3, r3, #3
 800656a:	68fa      	ldr	r2, [r7, #12]
 800656c:	18d4      	adds	r4, r2, r3
 800656e:	69b9      	ldr	r1, [r7, #24]
 8006570:	69f8      	ldr	r0, [r7, #28]
 8006572:	f7fa f81d 	bl	80005b0 <__aeabi_fadd>
 8006576:	1c03      	adds	r3, r0, #0
 8006578:	6023      	str	r3, [r4, #0]
            pSrc[2 * i7 + 1] = p3 - p4;
 800657a:	23c0      	movs	r3, #192	; 0xc0
 800657c:	18fc      	adds	r4, r7, r3
 800657e:	6823      	ldr	r3, [r4, #0]
 8006580:	00db      	lsls	r3, r3, #3
 8006582:	3304      	adds	r3, #4
 8006584:	68fa      	ldr	r2, [r7, #12]
 8006586:	18d4      	adds	r4, r2, r3
 8006588:	6939      	ldr	r1, [r7, #16]
 800658a:	6978      	ldr	r0, [r7, #20]
 800658c:	f7fa fcb4 	bl	8000ef8 <__aeabi_fsub>
 8006590:	1c03      	adds	r3, r0, #0
 8006592:	6023      	str	r3, [r4, #0]
            r1 = (r6 - r8) * C81;
 8006594:	209c      	movs	r0, #156	; 0x9c
 8006596:	183c      	adds	r4, r7, r0
 8006598:	6821      	ldr	r1, [r4, #0]
 800659a:	22ac      	movs	r2, #172	; 0xac
 800659c:	18bc      	adds	r4, r7, r2
 800659e:	6820      	ldr	r0, [r4, #0]
 80065a0:	f7fa fcaa 	bl	8000ef8 <__aeabi_fsub>
 80065a4:	1c03      	adds	r3, r0, #0
 80065a6:	1c19      	adds	r1, r3, #0
 80065a8:	24dc      	movs	r4, #220	; 0xdc
 80065aa:	193c      	adds	r4, r7, r4
 80065ac:	6820      	ldr	r0, [r4, #0]
 80065ae:	f7fa fb71 	bl	8000c94 <__aeabi_fmul>
 80065b2:	1c03      	adds	r3, r0, #0
 80065b4:	002c      	movs	r4, r5
 80065b6:	1938      	adds	r0, r7, r4
 80065b8:	6003      	str	r3, [r0, #0]
            r6 = (r6 + r8) * C81;
 80065ba:	209c      	movs	r0, #156	; 0x9c
 80065bc:	183b      	adds	r3, r7, r0
 80065be:	6819      	ldr	r1, [r3, #0]
 80065c0:	20ac      	movs	r0, #172	; 0xac
 80065c2:	0005      	movs	r5, r0
 80065c4:	183b      	adds	r3, r7, r0
 80065c6:	6818      	ldr	r0, [r3, #0]
 80065c8:	f7f9 fff2 	bl	80005b0 <__aeabi_fadd>
 80065cc:	1c03      	adds	r3, r0, #0
 80065ce:	1c19      	adds	r1, r3, #0
 80065d0:	23dc      	movs	r3, #220	; 0xdc
 80065d2:	18fb      	adds	r3, r7, r3
 80065d4:	6818      	ldr	r0, [r3, #0]
 80065d6:	f7fa fb5d 	bl	8000c94 <__aeabi_fmul>
 80065da:	1c03      	adds	r3, r0, #0
 80065dc:	0029      	movs	r1, r5
 80065de:	187a      	adds	r2, r7, r1
 80065e0:	6013      	str	r3, [r2, #0]
            s1 = (s6 - s8) * C81;
 80065e2:	2284      	movs	r2, #132	; 0x84
 80065e4:	18bb      	adds	r3, r7, r2
 80065e6:	6819      	ldr	r1, [r3, #0]
 80065e8:	2390      	movs	r3, #144	; 0x90
 80065ea:	001d      	movs	r5, r3
 80065ec:	18fb      	adds	r3, r7, r3
 80065ee:	6818      	ldr	r0, [r3, #0]
 80065f0:	f7fa fc82 	bl	8000ef8 <__aeabi_fsub>
 80065f4:	1c03      	adds	r3, r0, #0
 80065f6:	1c19      	adds	r1, r3, #0
 80065f8:	23dc      	movs	r3, #220	; 0xdc
 80065fa:	18f8      	adds	r0, r7, r3
 80065fc:	6800      	ldr	r0, [r0, #0]
 80065fe:	f7fa fb49 	bl	8000c94 <__aeabi_fmul>
 8006602:	1c03      	adds	r3, r0, #0
 8006604:	62bb      	str	r3, [r7, #40]	; 0x28
            s6 = (s6 + s8) * C81;
 8006606:	2284      	movs	r2, #132	; 0x84
 8006608:	18b8      	adds	r0, r7, r2
 800660a:	6801      	ldr	r1, [r0, #0]
 800660c:	002b      	movs	r3, r5
 800660e:	001d      	movs	r5, r3
 8006610:	18f8      	adds	r0, r7, r3
 8006612:	6800      	ldr	r0, [r0, #0]
 8006614:	f7f9 ffcc 	bl	80005b0 <__aeabi_fadd>
 8006618:	1c03      	adds	r3, r0, #0
 800661a:	1c19      	adds	r1, r3, #0
 800661c:	23dc      	movs	r3, #220	; 0xdc
 800661e:	18fb      	adds	r3, r7, r3
 8006620:	6818      	ldr	r0, [r3, #0]
 8006622:	f7fa fb37 	bl	8000c94 <__aeabi_fmul>
 8006626:	1c03      	adds	r3, r0, #0
 8006628:	002a      	movs	r2, r5
 800662a:	18b8      	adds	r0, r7, r2
 800662c:	6003      	str	r3, [r0, #0]
            t1 = r5 - r1;
 800662e:	193b      	adds	r3, r7, r4
 8006630:	6819      	ldr	r1, [r3, #0]
 8006632:	22b4      	movs	r2, #180	; 0xb4
 8006634:	18bb      	adds	r3, r7, r2
 8006636:	6818      	ldr	r0, [r3, #0]
 8006638:	f7fa fc5e 	bl	8000ef8 <__aeabi_fsub>
 800663c:	1c03      	adds	r3, r0, #0
 800663e:	0035      	movs	r5, r6
 8006640:	19b8      	adds	r0, r7, r6
 8006642:	6003      	str	r3, [r0, #0]
            r5 = r5 + r1;
 8006644:	193b      	adds	r3, r7, r4
 8006646:	6819      	ldr	r1, [r3, #0]
 8006648:	22b4      	movs	r2, #180	; 0xb4
 800664a:	0016      	movs	r6, r2
 800664c:	18bb      	adds	r3, r7, r2
 800664e:	6818      	ldr	r0, [r3, #0]
 8006650:	f7f9 ffae 	bl	80005b0 <__aeabi_fadd>
 8006654:	1c03      	adds	r3, r0, #0
 8006656:	0032      	movs	r2, r6
 8006658:	18b8      	adds	r0, r7, r2
 800665a:	6003      	str	r3, [r0, #0]
            r8 = r7 - r6;
 800665c:	21ac      	movs	r1, #172	; 0xac
 800665e:	000e      	movs	r6, r1
 8006660:	187b      	adds	r3, r7, r1
 8006662:	6819      	ldr	r1, [r3, #0]
 8006664:	20a4      	movs	r0, #164	; 0xa4
 8006666:	183b      	adds	r3, r7, r0
 8006668:	6818      	ldr	r0, [r3, #0]
 800666a:	f7fa fc45 	bl	8000ef8 <__aeabi_fsub>
 800666e:	1c03      	adds	r3, r0, #0
 8006670:	209c      	movs	r0, #156	; 0x9c
 8006672:	1838      	adds	r0, r7, r0
 8006674:	6003      	str	r3, [r0, #0]
            r7 = r7 + r6;
 8006676:	0031      	movs	r1, r6
 8006678:	187b      	adds	r3, r7, r1
 800667a:	6819      	ldr	r1, [r3, #0]
 800667c:	20a4      	movs	r0, #164	; 0xa4
 800667e:	0006      	movs	r6, r0
 8006680:	183b      	adds	r3, r7, r0
 8006682:	6818      	ldr	r0, [r3, #0]
 8006684:	f7f9 ff94 	bl	80005b0 <__aeabi_fadd>
 8006688:	1c03      	adds	r3, r0, #0
 800668a:	0030      	movs	r0, r6
 800668c:	1839      	adds	r1, r7, r0
 800668e:	600b      	str	r3, [r1, #0]
            t2 = s5 - s1;
 8006690:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006692:	2094      	movs	r0, #148	; 0x94
 8006694:	183b      	adds	r3, r7, r0
 8006696:	6818      	ldr	r0, [r3, #0]
 8006698:	f7fa fc2e 	bl	8000ef8 <__aeabi_fsub>
 800669c:	1c03      	adds	r3, r0, #0
 800669e:	2680      	movs	r6, #128	; 0x80
 80066a0:	19b9      	adds	r1, r7, r6
 80066a2:	600b      	str	r3, [r1, #0]
            s5 = s5 + s1;
 80066a4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80066a6:	2094      	movs	r0, #148	; 0x94
 80066a8:	183b      	adds	r3, r7, r0
 80066aa:	6818      	ldr	r0, [r3, #0]
 80066ac:	f7f9 ff80 	bl	80005b0 <__aeabi_fadd>
 80066b0:	1c03      	adds	r3, r0, #0
 80066b2:	2094      	movs	r0, #148	; 0x94
 80066b4:	1839      	adds	r1, r7, r0
 80066b6:	600b      	str	r3, [r1, #0]
            s8 = s7 - s6;
 80066b8:	2190      	movs	r1, #144	; 0x90
 80066ba:	187b      	adds	r3, r7, r1
 80066bc:	6819      	ldr	r1, [r3, #0]
 80066be:	2388      	movs	r3, #136	; 0x88
 80066c0:	18fb      	adds	r3, r7, r3
 80066c2:	6818      	ldr	r0, [r3, #0]
 80066c4:	f7fa fc18 	bl	8000ef8 <__aeabi_fsub>
 80066c8:	1c03      	adds	r3, r0, #0
 80066ca:	2284      	movs	r2, #132	; 0x84
 80066cc:	18b9      	adds	r1, r7, r2
 80066ce:	600b      	str	r3, [r1, #0]
            s7 = s7 + s6;
 80066d0:	2190      	movs	r1, #144	; 0x90
 80066d2:	187b      	adds	r3, r7, r1
 80066d4:	6819      	ldr	r1, [r3, #0]
 80066d6:	2388      	movs	r3, #136	; 0x88
 80066d8:	18fb      	adds	r3, r7, r3
 80066da:	6818      	ldr	r0, [r3, #0]
 80066dc:	f7f9 ff68 	bl	80005b0 <__aeabi_fadd>
 80066e0:	1c03      	adds	r3, r0, #0
 80066e2:	2188      	movs	r1, #136	; 0x88
 80066e4:	187a      	adds	r2, r7, r1
 80066e6:	6013      	str	r3, [r2, #0]
            r1 = r5 + s7;
 80066e8:	187b      	adds	r3, r7, r1
 80066ea:	6819      	ldr	r1, [r3, #0]
 80066ec:	22b4      	movs	r2, #180	; 0xb4
 80066ee:	18bb      	adds	r3, r7, r2
 80066f0:	6818      	ldr	r0, [r3, #0]
 80066f2:	f7f9 ff5d 	bl	80005b0 <__aeabi_fadd>
 80066f6:	1c03      	adds	r3, r0, #0
 80066f8:	193a      	adds	r2, r7, r4
 80066fa:	6013      	str	r3, [r2, #0]
            r5 = r5 - s7;
 80066fc:	2188      	movs	r1, #136	; 0x88
 80066fe:	1879      	adds	r1, r7, r1
 8006700:	6809      	ldr	r1, [r1, #0]
 8006702:	22b4      	movs	r2, #180	; 0xb4
 8006704:	18bb      	adds	r3, r7, r2
 8006706:	6818      	ldr	r0, [r3, #0]
 8006708:	f7fa fbf6 	bl	8000ef8 <__aeabi_fsub>
 800670c:	1c03      	adds	r3, r0, #0
 800670e:	22b4      	movs	r2, #180	; 0xb4
 8006710:	18b9      	adds	r1, r7, r2
 8006712:	600b      	str	r3, [r1, #0]
            r6 = t1 + s8;
 8006714:	2384      	movs	r3, #132	; 0x84
 8006716:	18f9      	adds	r1, r7, r3
 8006718:	6809      	ldr	r1, [r1, #0]
 800671a:	197b      	adds	r3, r7, r5
 800671c:	6818      	ldr	r0, [r3, #0]
 800671e:	f7f9 ff47 	bl	80005b0 <__aeabi_fadd>
 8006722:	1c03      	adds	r3, r0, #0
 8006724:	21ac      	movs	r1, #172	; 0xac
 8006726:	1879      	adds	r1, r7, r1
 8006728:	600b      	str	r3, [r1, #0]
            t1 = t1 - s8;
 800672a:	2384      	movs	r3, #132	; 0x84
 800672c:	18fb      	adds	r3, r7, r3
 800672e:	6819      	ldr	r1, [r3, #0]
 8006730:	197b      	adds	r3, r7, r5
 8006732:	6818      	ldr	r0, [r3, #0]
 8006734:	f7fa fbe0 	bl	8000ef8 <__aeabi_fsub>
 8006738:	1c03      	adds	r3, r0, #0
 800673a:	1979      	adds	r1, r7, r5
 800673c:	600b      	str	r3, [r1, #0]
            s1 = s5 - r7;
 800673e:	23a4      	movs	r3, #164	; 0xa4
 8006740:	18fb      	adds	r3, r7, r3
 8006742:	6819      	ldr	r1, [r3, #0]
 8006744:	2094      	movs	r0, #148	; 0x94
 8006746:	183b      	adds	r3, r7, r0
 8006748:	6818      	ldr	r0, [r3, #0]
 800674a:	f7fa fbd5 	bl	8000ef8 <__aeabi_fsub>
 800674e:	1c03      	adds	r3, r0, #0
 8006750:	62bb      	str	r3, [r7, #40]	; 0x28
            s5 = s5 + r7;
 8006752:	23a4      	movs	r3, #164	; 0xa4
 8006754:	18fb      	adds	r3, r7, r3
 8006756:	6819      	ldr	r1, [r3, #0]
 8006758:	2094      	movs	r0, #148	; 0x94
 800675a:	183b      	adds	r3, r7, r0
 800675c:	6818      	ldr	r0, [r3, #0]
 800675e:	f7f9 ff27 	bl	80005b0 <__aeabi_fadd>
 8006762:	1c03      	adds	r3, r0, #0
 8006764:	2094      	movs	r0, #148	; 0x94
 8006766:	1839      	adds	r1, r7, r0
 8006768:	600b      	str	r3, [r1, #0]
            s6 = t2 - r8;
 800676a:	209c      	movs	r0, #156	; 0x9c
 800676c:	183b      	adds	r3, r7, r0
 800676e:	6819      	ldr	r1, [r3, #0]
 8006770:	19bb      	adds	r3, r7, r6
 8006772:	6818      	ldr	r0, [r3, #0]
 8006774:	f7fa fbc0 	bl	8000ef8 <__aeabi_fsub>
 8006778:	1c03      	adds	r3, r0, #0
 800677a:	2190      	movs	r1, #144	; 0x90
 800677c:	187a      	adds	r2, r7, r1
 800677e:	6013      	str	r3, [r2, #0]
            t2 = t2 + r8;
 8006780:	209c      	movs	r0, #156	; 0x9c
 8006782:	183b      	adds	r3, r7, r0
 8006784:	6819      	ldr	r1, [r3, #0]
 8006786:	19bb      	adds	r3, r7, r6
 8006788:	6818      	ldr	r0, [r3, #0]
 800678a:	f7f9 ff11 	bl	80005b0 <__aeabi_fadd>
 800678e:	1c03      	adds	r3, r0, #0
 8006790:	19b8      	adds	r0, r7, r6
 8006792:	6003      	str	r3, [r0, #0]
            p1 = co2 * r1;
 8006794:	193b      	adds	r3, r7, r4
 8006796:	6819      	ldr	r1, [r3, #0]
 8006798:	6e38      	ldr	r0, [r7, #96]	; 0x60
 800679a:	f7fa fa7b 	bl	8000c94 <__aeabi_fmul>
 800679e:	1c03      	adds	r3, r0, #0
 80067a0:	61fb      	str	r3, [r7, #28]
            p2 = si2 * s1;
 80067a2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80067a4:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80067a6:	f7fa fa75 	bl	8000c94 <__aeabi_fmul>
 80067aa:	1c03      	adds	r3, r0, #0
 80067ac:	61bb      	str	r3, [r7, #24]
            p3 = co2 * s1;
 80067ae:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80067b0:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80067b2:	f7fa fa6f 	bl	8000c94 <__aeabi_fmul>
 80067b6:	1c03      	adds	r3, r0, #0
 80067b8:	617b      	str	r3, [r7, #20]
            p4 = si2 * r1;
 80067ba:	193b      	adds	r3, r7, r4
 80067bc:	6819      	ldr	r1, [r3, #0]
 80067be:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80067c0:	f7fa fa68 	bl	8000c94 <__aeabi_fmul>
 80067c4:	1c03      	adds	r3, r0, #0
 80067c6:	613b      	str	r3, [r7, #16]
            pSrc[2 * i2]     = p1 + p2;
 80067c8:	23d4      	movs	r3, #212	; 0xd4
 80067ca:	18fc      	adds	r4, r7, r3
 80067cc:	6823      	ldr	r3, [r4, #0]
 80067ce:	00db      	lsls	r3, r3, #3
 80067d0:	68fa      	ldr	r2, [r7, #12]
 80067d2:	18d4      	adds	r4, r2, r3
 80067d4:	69b9      	ldr	r1, [r7, #24]
 80067d6:	69f8      	ldr	r0, [r7, #28]
 80067d8:	f7f9 feea 	bl	80005b0 <__aeabi_fadd>
 80067dc:	1c03      	adds	r3, r0, #0
 80067de:	6023      	str	r3, [r4, #0]
            pSrc[2 * i2 + 1] = p3 - p4;
 80067e0:	23d4      	movs	r3, #212	; 0xd4
 80067e2:	18fb      	adds	r3, r7, r3
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	00db      	lsls	r3, r3, #3
 80067e8:	3304      	adds	r3, #4
 80067ea:	68fa      	ldr	r2, [r7, #12]
 80067ec:	18d4      	adds	r4, r2, r3
 80067ee:	6939      	ldr	r1, [r7, #16]
 80067f0:	6978      	ldr	r0, [r7, #20]
 80067f2:	f7fa fb81 	bl	8000ef8 <__aeabi_fsub>
 80067f6:	1c03      	adds	r3, r0, #0
 80067f8:	6023      	str	r3, [r4, #0]
            p1 = co8 * r5;
 80067fa:	22b4      	movs	r2, #180	; 0xb4
 80067fc:	0014      	movs	r4, r2
 80067fe:	18bb      	adds	r3, r7, r2
 8006800:	6819      	ldr	r1, [r3, #0]
 8006802:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8006804:	f7fa fa46 	bl	8000c94 <__aeabi_fmul>
 8006808:	1c03      	adds	r3, r0, #0
 800680a:	61fb      	str	r3, [r7, #28]
            p2 = si8 * s5;
 800680c:	2094      	movs	r0, #148	; 0x94
 800680e:	183b      	adds	r3, r7, r0
 8006810:	6819      	ldr	r1, [r3, #0]
 8006812:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8006814:	f7fa fa3e 	bl	8000c94 <__aeabi_fmul>
 8006818:	1c03      	adds	r3, r0, #0
 800681a:	61bb      	str	r3, [r7, #24]
            p3 = co8 * s5;
 800681c:	2094      	movs	r0, #148	; 0x94
 800681e:	1838      	adds	r0, r7, r0
 8006820:	6801      	ldr	r1, [r0, #0]
 8006822:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8006824:	f7fa fa36 	bl	8000c94 <__aeabi_fmul>
 8006828:	1c03      	adds	r3, r0, #0
 800682a:	617b      	str	r3, [r7, #20]
            p4 = si8 * r5;
 800682c:	1938      	adds	r0, r7, r4
 800682e:	6801      	ldr	r1, [r0, #0]
 8006830:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8006832:	f7fa fa2f 	bl	8000c94 <__aeabi_fmul>
 8006836:	1c03      	adds	r3, r0, #0
 8006838:	613b      	str	r3, [r7, #16]
            pSrc[2 * i8]     = p1 + p2;
 800683a:	20bc      	movs	r0, #188	; 0xbc
 800683c:	183b      	adds	r3, r7, r0
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	00db      	lsls	r3, r3, #3
 8006842:	68fa      	ldr	r2, [r7, #12]
 8006844:	18d4      	adds	r4, r2, r3
 8006846:	69b9      	ldr	r1, [r7, #24]
 8006848:	69f8      	ldr	r0, [r7, #28]
 800684a:	f7f9 feb1 	bl	80005b0 <__aeabi_fadd>
 800684e:	1c03      	adds	r3, r0, #0
 8006850:	6023      	str	r3, [r4, #0]
            pSrc[2 * i8 + 1] = p3 - p4;
 8006852:	20bc      	movs	r0, #188	; 0xbc
 8006854:	1838      	adds	r0, r7, r0
 8006856:	6803      	ldr	r3, [r0, #0]
 8006858:	00db      	lsls	r3, r3, #3
 800685a:	3304      	adds	r3, #4
 800685c:	68fa      	ldr	r2, [r7, #12]
 800685e:	18d4      	adds	r4, r2, r3
 8006860:	6939      	ldr	r1, [r7, #16]
 8006862:	6978      	ldr	r0, [r7, #20]
 8006864:	f7fa fb48 	bl	8000ef8 <__aeabi_fsub>
 8006868:	1c03      	adds	r3, r0, #0
 800686a:	6023      	str	r3, [r4, #0]
            p1 = co6 * r6;
 800686c:	24ac      	movs	r4, #172	; 0xac
 800686e:	1938      	adds	r0, r7, r4
 8006870:	6801      	ldr	r1, [r0, #0]
 8006872:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8006874:	f7fa fa0e 	bl	8000c94 <__aeabi_fmul>
 8006878:	1c03      	adds	r3, r0, #0
 800687a:	61fb      	str	r3, [r7, #28]
            p2 = si6 * s6;
 800687c:	2190      	movs	r1, #144	; 0x90
 800687e:	1878      	adds	r0, r7, r1
 8006880:	6801      	ldr	r1, [r0, #0]
 8006882:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8006884:	f7fa fa06 	bl	8000c94 <__aeabi_fmul>
 8006888:	1c03      	adds	r3, r0, #0
 800688a:	61bb      	str	r3, [r7, #24]
            p3 = co6 * s6;
 800688c:	2190      	movs	r1, #144	; 0x90
 800688e:	1879      	adds	r1, r7, r1
 8006890:	6809      	ldr	r1, [r1, #0]
 8006892:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8006894:	f7fa f9fe 	bl	8000c94 <__aeabi_fmul>
 8006898:	1c03      	adds	r3, r0, #0
 800689a:	617b      	str	r3, [r7, #20]
            p4 = si6 * r6;
 800689c:	1939      	adds	r1, r7, r4
 800689e:	6809      	ldr	r1, [r1, #0]
 80068a0:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80068a2:	f7fa f9f7 	bl	8000c94 <__aeabi_fmul>
 80068a6:	1c03      	adds	r3, r0, #0
 80068a8:	613b      	str	r3, [r7, #16]
            pSrc[2 * i6]     = p1 + p2;
 80068aa:	21c4      	movs	r1, #196	; 0xc4
 80068ac:	187a      	adds	r2, r7, r1
 80068ae:	6813      	ldr	r3, [r2, #0]
 80068b0:	00db      	lsls	r3, r3, #3
 80068b2:	68fa      	ldr	r2, [r7, #12]
 80068b4:	18d4      	adds	r4, r2, r3
 80068b6:	69b9      	ldr	r1, [r7, #24]
 80068b8:	69f8      	ldr	r0, [r7, #28]
 80068ba:	f7f9 fe79 	bl	80005b0 <__aeabi_fadd>
 80068be:	1c03      	adds	r3, r0, #0
 80068c0:	6023      	str	r3, [r4, #0]
            pSrc[2 * i6 + 1] = p3 - p4;
 80068c2:	21c4      	movs	r1, #196	; 0xc4
 80068c4:	187a      	adds	r2, r7, r1
 80068c6:	6813      	ldr	r3, [r2, #0]
 80068c8:	00db      	lsls	r3, r3, #3
 80068ca:	3304      	adds	r3, #4
 80068cc:	68fa      	ldr	r2, [r7, #12]
 80068ce:	18d4      	adds	r4, r2, r3
 80068d0:	6939      	ldr	r1, [r7, #16]
 80068d2:	6978      	ldr	r0, [r7, #20]
 80068d4:	f7fa fb10 	bl	8000ef8 <__aeabi_fsub>
 80068d8:	1c03      	adds	r3, r0, #0
 80068da:	6023      	str	r3, [r4, #0]
            p1 = co4 * t1;
 80068dc:	197a      	adds	r2, r7, r5
 80068de:	6811      	ldr	r1, [r2, #0]
 80068e0:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80068e2:	f7fa f9d7 	bl	8000c94 <__aeabi_fmul>
 80068e6:	1c03      	adds	r3, r0, #0
 80068e8:	61fb      	str	r3, [r7, #28]
            p2 = si4 * t2;
 80068ea:	19ba      	adds	r2, r7, r6
 80068ec:	6811      	ldr	r1, [r2, #0]
 80068ee:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80068f0:	f7fa f9d0 	bl	8000c94 <__aeabi_fmul>
 80068f4:	1c03      	adds	r3, r0, #0
 80068f6:	61bb      	str	r3, [r7, #24]
            p3 = co4 * t2;
 80068f8:	19ba      	adds	r2, r7, r6
 80068fa:	6811      	ldr	r1, [r2, #0]
 80068fc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80068fe:	f7fa f9c9 	bl	8000c94 <__aeabi_fmul>
 8006902:	1c03      	adds	r3, r0, #0
 8006904:	617b      	str	r3, [r7, #20]
            p4 = si4 * t1;
 8006906:	197a      	adds	r2, r7, r5
 8006908:	6811      	ldr	r1, [r2, #0]
 800690a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800690c:	f7fa f9c2 	bl	8000c94 <__aeabi_fmul>
 8006910:	1c03      	adds	r3, r0, #0
 8006912:	613b      	str	r3, [r7, #16]
            pSrc[2 * i4]     = p1 + p2;
 8006914:	26cc      	movs	r6, #204	; 0xcc
 8006916:	19ba      	adds	r2, r7, r6
 8006918:	6813      	ldr	r3, [r2, #0]
 800691a:	00db      	lsls	r3, r3, #3
 800691c:	68fa      	ldr	r2, [r7, #12]
 800691e:	18d4      	adds	r4, r2, r3
 8006920:	69b9      	ldr	r1, [r7, #24]
 8006922:	69f8      	ldr	r0, [r7, #28]
 8006924:	f7f9 fe44 	bl	80005b0 <__aeabi_fadd>
 8006928:	1c03      	adds	r3, r0, #0
 800692a:	6023      	str	r3, [r4, #0]
            pSrc[2 * i4 + 1] = p3 - p4;
 800692c:	19ba      	adds	r2, r7, r6
 800692e:	6813      	ldr	r3, [r2, #0]
 8006930:	00db      	lsls	r3, r3, #3
 8006932:	3304      	adds	r3, #4
 8006934:	68fa      	ldr	r2, [r7, #12]
 8006936:	18d4      	adds	r4, r2, r3
 8006938:	6939      	ldr	r1, [r7, #16]
 800693a:	6978      	ldr	r0, [r7, #20]
 800693c:	f7fa fadc 	bl	8000ef8 <__aeabi_fsub>
 8006940:	1c03      	adds	r3, r0, #0
 8006942:	6023      	str	r3, [r4, #0]

            i1 += n1;
 8006944:	25e8      	movs	r5, #232	; 0xe8
 8006946:	197b      	adds	r3, r7, r5
 8006948:	681a      	ldr	r2, [r3, #0]
 800694a:	23d8      	movs	r3, #216	; 0xd8
 800694c:	18fb      	adds	r3, r7, r3
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	18d3      	adds	r3, r2, r3
 8006952:	197a      	adds	r2, r7, r5
 8006954:	6013      	str	r3, [r2, #0]
         } while (i1 < fftLen);
 8006956:	230a      	movs	r3, #10
 8006958:	18fb      	adds	r3, r7, r3
 800695a:	881b      	ldrh	r3, [r3, #0]
 800695c:	197a      	adds	r2, r7, r5
 800695e:	6812      	ldr	r2, [r2, #0]
 8006960:	429a      	cmp	r2, r3
 8006962:	d201      	bcs.n	8006968 <arm_radix8_butterfly_f32+0x1270>
 8006964:	f7ff fb34 	bl	8005fd0 <arm_radix8_butterfly_f32+0x8d8>

         j++;
 8006968:	22e0      	movs	r2, #224	; 0xe0
 800696a:	18bb      	adds	r3, r7, r2
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	3301      	adds	r3, #1
 8006970:	18b9      	adds	r1, r7, r2
 8006972:	600b      	str	r3, [r1, #0]
      } while (j < n2);
 8006974:	18bb      	adds	r3, r7, r2
 8006976:	681a      	ldr	r2, [r3, #0]
 8006978:	23e4      	movs	r3, #228	; 0xe4
 800697a:	18fb      	adds	r3, r7, r3
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	429a      	cmp	r2, r3
 8006980:	d201      	bcs.n	8006986 <arm_radix8_butterfly_f32+0x128e>
 8006982:	f7ff fa9e 	bl	8005ec2 <arm_radix8_butterfly_f32+0x7ca>

      twidCoefModifier <<= 3;
 8006986:	2208      	movs	r2, #8
 8006988:	18bb      	adds	r3, r7, r2
 800698a:	18ba      	adds	r2, r7, r2
 800698c:	8812      	ldrh	r2, [r2, #0]
 800698e:	00d2      	lsls	r2, r2, #3
 8006990:	801a      	strh	r2, [r3, #0]
   } while (n2 > 7);
 8006992:	23e4      	movs	r3, #228	; 0xe4
 8006994:	18fb      	adds	r3, r7, r3
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	2b07      	cmp	r3, #7
 800699a:	d901      	bls.n	80069a0 <arm_radix8_butterfly_f32+0x12a8>
 800699c:	f7fe fec4 	bl	8005728 <arm_radix8_butterfly_f32+0x30>
}
 80069a0:	e000      	b.n	80069a4 <arm_radix8_butterfly_f32+0x12ac>
         break;
 80069a2:	46c0      	nop			; (mov r8, r8)
}
 80069a4:	46c0      	nop			; (mov r8, r8)
 80069a6:	46bd      	mov	sp, r7
 80069a8:	b03d      	add	sp, #244	; 0xf4
 80069aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080069ac <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80069ac:	b580      	push	{r7, lr}
 80069ae:	b082      	sub	sp, #8
 80069b0:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 80069b2:	1dfb      	adds	r3, r7, #7
 80069b4:	2200      	movs	r2, #0
 80069b6:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 80069b8:	4b0b      	ldr	r3, [pc, #44]	; (80069e8 <HAL_Init+0x3c>)
 80069ba:	681a      	ldr	r2, [r3, #0]
 80069bc:	4b0a      	ldr	r3, [pc, #40]	; (80069e8 <HAL_Init+0x3c>)
 80069be:	2140      	movs	r1, #64	; 0x40
 80069c0:	430a      	orrs	r2, r1
 80069c2:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80069c4:	2000      	movs	r0, #0
 80069c6:	f000 f811 	bl	80069ec <HAL_InitTick>
 80069ca:	1e03      	subs	r3, r0, #0
 80069cc:	d003      	beq.n	80069d6 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 80069ce:	1dfb      	adds	r3, r7, #7
 80069d0:	2201      	movs	r2, #1
 80069d2:	701a      	strb	r2, [r3, #0]
 80069d4:	e001      	b.n	80069da <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80069d6:	f7fd fa67 	bl	8003ea8 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80069da:	1dfb      	adds	r3, r7, #7
 80069dc:	781b      	ldrb	r3, [r3, #0]
}
 80069de:	0018      	movs	r0, r3
 80069e0:	46bd      	mov	sp, r7
 80069e2:	b002      	add	sp, #8
 80069e4:	bd80      	pop	{r7, pc}
 80069e6:	46c0      	nop			; (mov r8, r8)
 80069e8:	40022000 	.word	0x40022000

080069ec <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80069ec:	b580      	push	{r7, lr}
 80069ee:	b084      	sub	sp, #16
 80069f0:	af00      	add	r7, sp, #0
 80069f2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 80069f4:	230f      	movs	r3, #15
 80069f6:	18fb      	adds	r3, r7, r3
 80069f8:	2200      	movs	r2, #0
 80069fa:	701a      	strb	r2, [r3, #0]

  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 80069fc:	4b0f      	ldr	r3, [pc, #60]	; (8006a3c <HAL_InitTick+0x50>)
 80069fe:	681a      	ldr	r2, [r3, #0]
 8006a00:	23fa      	movs	r3, #250	; 0xfa
 8006a02:	0099      	lsls	r1, r3, #2
 8006a04:	0010      	movs	r0, r2
 8006a06:	f7f9 fb91 	bl	800012c <__udivsi3>
 8006a0a:	0003      	movs	r3, r0
 8006a0c:	0018      	movs	r0, r3
 8006a0e:	f000 fc68 	bl	80072e2 <HAL_SYSTICK_Config>
 8006a12:	1e03      	subs	r3, r0, #0
 8006a14:	d004      	beq.n	8006a20 <HAL_InitTick+0x34>
  {
    status = HAL_ERROR;
 8006a16:	230f      	movs	r3, #15
 8006a18:	18fb      	adds	r3, r7, r3
 8006a1a:	2201      	movs	r2, #1
 8006a1c:	701a      	strb	r2, [r3, #0]
 8006a1e:	e006      	b.n	8006a2e <HAL_InitTick+0x42>
  }
  else
  {
    /*Configure the SysTick IRQ priority */
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 8006a20:	6879      	ldr	r1, [r7, #4]
 8006a22:	2301      	movs	r3, #1
 8006a24:	425b      	negs	r3, r3
 8006a26:	2200      	movs	r2, #0
 8006a28:	0018      	movs	r0, r3
 8006a2a:	f000 fc35 	bl	8007298 <HAL_NVIC_SetPriority>
  }

  /* Return function status */
  return status;
 8006a2e:	230f      	movs	r3, #15
 8006a30:	18fb      	adds	r3, r7, r3
 8006a32:	781b      	ldrb	r3, [r3, #0]
}
 8006a34:	0018      	movs	r0, r3
 8006a36:	46bd      	mov	sp, r7
 8006a38:	b004      	add	sp, #16
 8006a3a:	bd80      	pop	{r7, pc}
 8006a3c:	200000fc 	.word	0x200000fc

08006a40 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8006a40:	b580      	push	{r7, lr}
 8006a42:	af00      	add	r7, sp, #0
  uwTick++;
 8006a44:	4b03      	ldr	r3, [pc, #12]	; (8006a54 <HAL_IncTick+0x14>)
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	1c5a      	adds	r2, r3, #1
 8006a4a:	4b02      	ldr	r3, [pc, #8]	; (8006a54 <HAL_IncTick+0x14>)
 8006a4c:	601a      	str	r2, [r3, #0]
}
 8006a4e:	46c0      	nop			; (mov r8, r8)
 8006a50:	46bd      	mov	sp, r7
 8006a52:	bd80      	pop	{r7, pc}
 8006a54:	20004468 	.word	0x20004468

08006a58 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8006a58:	b580      	push	{r7, lr}
 8006a5a:	af00      	add	r7, sp, #0
  return uwTick;
 8006a5c:	4b02      	ldr	r3, [pc, #8]	; (8006a68 <HAL_GetTick+0x10>)
 8006a5e:	681b      	ldr	r3, [r3, #0]
}
 8006a60:	0018      	movs	r0, r3
 8006a62:	46bd      	mov	sp, r7
 8006a64:	bd80      	pop	{r7, pc}
 8006a66:	46c0      	nop			; (mov r8, r8)
 8006a68:	20004468 	.word	0x20004468

08006a6c <HAL_ADC_Init>:
  *         function "HAL_ADCEx_EnableVREFINTTempSensor()" must be called similarilly.  
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8006a6c:	b580      	push	{r7, lr}
 8006a6e:	b082      	sub	sp, #8
 8006a70:	af00      	add	r7, sp, #0
 8006a72:	6078      	str	r0, [r7, #4]
 
  /* Check ADC handle */
  if(hadc == NULL)
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	d101      	bne.n	8006a7e <HAL_ADC_Init+0x12>
  {
    return HAL_ERROR;
 8006a7a:	2301      	movs	r3, #1
 8006a7c:	e159      	b.n	8006d32 <HAL_ADC_Init+0x2c6>
  /* Refer to header of this file for more details on clock enabling procedure*/
  
  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if(hadc->State == HAL_ADC_STATE_RESET)
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a82:	2b00      	cmp	r3, #0
 8006a84:	d10a      	bne.n	8006a9c <HAL_ADC_Init+0x30>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	2200      	movs	r2, #0
 8006a8a:	659a      	str	r2, [r3, #88]	; 0x58
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	2250      	movs	r2, #80	; 0x50
 8006a90:	2100      	movs	r1, #0
 8006a92:	5499      	strb	r1, [r3, r2]
    
    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	0018      	movs	r0, r3
 8006a98:	f7fd fa1a 	bl	8003ed0 <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006aa0:	2210      	movs	r2, #16
 8006aa2:	4013      	ands	r3, r2
 8006aa4:	2b10      	cmp	r3, #16
 8006aa6:	d005      	beq.n	8006ab4 <HAL_ADC_Init+0x48>
     (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET)  )
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	689b      	ldr	r3, [r3, #8]
 8006aae:	2204      	movs	r2, #4
 8006ab0:	4013      	ands	r3, r2
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 8006ab2:	d00b      	beq.n	8006acc <HAL_ADC_Init+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006ab8:	2210      	movs	r2, #16
 8006aba:	431a      	orrs	r2, r3
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	655a      	str	r2, [r3, #84]	; 0x54
        
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	2250      	movs	r2, #80	; 0x50
 8006ac4:	2100      	movs	r1, #0
 8006ac6:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 8006ac8:	2301      	movs	r3, #1
 8006aca:	e132      	b.n	8006d32 <HAL_ADC_Init+0x2c6>
  }

  /* Set ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006ad0:	4a9a      	ldr	r2, [pc, #616]	; (8006d3c <HAL_ADC_Init+0x2d0>)
 8006ad2:	4013      	ands	r3, r2
 8006ad4:	2202      	movs	r2, #2
 8006ad6:	431a      	orrs	r2, r3
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	655a      	str	r2, [r3, #84]	; 0x54
  /* Parameters update conditioned to ADC state:                            */
  /* Parameters that can be updated only when ADC is disabled:              */
  /*  - ADC clock mode                                                      */
  /*  - ADC clock prescaler                                                 */
  /*  - ADC Resolution                                                      */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	681b      	ldr	r3, [r3, #0]
 8006ae0:	689b      	ldr	r3, [r3, #8]
 8006ae2:	2203      	movs	r2, #3
 8006ae4:	4013      	ands	r3, r2
 8006ae6:	2b01      	cmp	r3, #1
 8006ae8:	d108      	bne.n	8006afc <HAL_ADC_Init+0x90>
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	2201      	movs	r2, #1
 8006af2:	4013      	ands	r3, r2
 8006af4:	2b01      	cmp	r3, #1
 8006af6:	d101      	bne.n	8006afc <HAL_ADC_Init+0x90>
 8006af8:	2301      	movs	r3, #1
 8006afa:	e000      	b.n	8006afe <HAL_ADC_Init+0x92>
 8006afc:	2300      	movs	r3, #0
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d149      	bne.n	8006b96 <HAL_ADC_Init+0x12a>
    /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
    /*     (set into HAL_ADC_ConfigChannel() )                              */
   
    /* Configuration of ADC clock: clock source PCLK or asynchronous with 
    selectable prescaler */
    __HAL_ADC_CLOCK_PRESCALER(hadc);
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	685a      	ldr	r2, [r3, #4]
 8006b06:	23c0      	movs	r3, #192	; 0xc0
 8006b08:	061b      	lsls	r3, r3, #24
 8006b0a:	429a      	cmp	r2, r3
 8006b0c:	d00b      	beq.n	8006b26 <HAL_ADC_Init+0xba>
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	685a      	ldr	r2, [r3, #4]
 8006b12:	2380      	movs	r3, #128	; 0x80
 8006b14:	05db      	lsls	r3, r3, #23
 8006b16:	429a      	cmp	r2, r3
 8006b18:	d005      	beq.n	8006b26 <HAL_ADC_Init+0xba>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	685a      	ldr	r2, [r3, #4]
 8006b1e:	2380      	movs	r3, #128	; 0x80
 8006b20:	061b      	lsls	r3, r3, #24
 8006b22:	429a      	cmp	r2, r3
 8006b24:	d111      	bne.n	8006b4a <HAL_ADC_Init+0xde>
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	691a      	ldr	r2, [r3, #16]
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	0092      	lsls	r2, r2, #2
 8006b32:	0892      	lsrs	r2, r2, #2
 8006b34:	611a      	str	r2, [r3, #16]
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	6919      	ldr	r1, [r3, #16]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	685a      	ldr	r2, [r3, #4]
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	430a      	orrs	r2, r1
 8006b46:	611a      	str	r2, [r3, #16]
 8006b48:	e014      	b.n	8006b74 <HAL_ADC_Init+0x108>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	691a      	ldr	r2, [r3, #16]
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	0092      	lsls	r2, r2, #2
 8006b56:	0892      	lsrs	r2, r2, #2
 8006b58:	611a      	str	r2, [r3, #16]
 8006b5a:	4b79      	ldr	r3, [pc, #484]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b5c:	681a      	ldr	r2, [r3, #0]
 8006b5e:	4b78      	ldr	r3, [pc, #480]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b60:	4978      	ldr	r1, [pc, #480]	; (8006d44 <HAL_ADC_Init+0x2d8>)
 8006b62:	400a      	ands	r2, r1
 8006b64:	601a      	str	r2, [r3, #0]
 8006b66:	4b76      	ldr	r3, [pc, #472]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b68:	6819      	ldr	r1, [r3, #0]
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	685a      	ldr	r2, [r3, #4]
 8006b6e:	4b74      	ldr	r3, [pc, #464]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b70:	430a      	orrs	r2, r1
 8006b72:	601a      	str	r2, [r3, #0]
    
    /* Configuration of ADC:                                                */
    /*  - Resolution                                                        */
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_RES);
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	68da      	ldr	r2, [r3, #12]
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	2118      	movs	r1, #24
 8006b80:	438a      	bics	r2, r1
 8006b82:	60da      	str	r2, [r3, #12]
    hadc->Instance->CFGR1 |= hadc->Init.Resolution;    
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	68d9      	ldr	r1, [r3, #12]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	689a      	ldr	r2, [r3, #8]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	430a      	orrs	r2, r1
 8006b94:	60da      	str	r2, [r3, #12]
  }
  
  /* Set the Low Frequency mode */
  ADC->CCR &= (uint32_t)~ADC_CCR_LFMEN;
 8006b96:	4b6a      	ldr	r3, [pc, #424]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b98:	681a      	ldr	r2, [r3, #0]
 8006b9a:	4b69      	ldr	r3, [pc, #420]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006b9c:	496a      	ldr	r1, [pc, #424]	; (8006d48 <HAL_ADC_Init+0x2dc>)
 8006b9e:	400a      	ands	r2, r1
 8006ba0:	601a      	str	r2, [r3, #0]
  ADC->CCR |=__HAL_ADC_CCR_LOWFREQUENCY(hadc->Init.LowPowerFrequencyMode);  
 8006ba2:	4b67      	ldr	r3, [pc, #412]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006ba4:	6819      	ldr	r1, [r3, #0]
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006baa:	065a      	lsls	r2, r3, #25
 8006bac:	4b64      	ldr	r3, [pc, #400]	; (8006d40 <HAL_ADC_Init+0x2d4>)
 8006bae:	430a      	orrs	r2, r1
 8006bb0:	601a      	str	r2, [r3, #0]
   
  /* Enable voltage regulator (if disabled at this step) */
  if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	689a      	ldr	r2, [r3, #8]
 8006bb8:	2380      	movs	r3, #128	; 0x80
 8006bba:	055b      	lsls	r3, r3, #21
 8006bbc:	4013      	ands	r3, r2
 8006bbe:	d108      	bne.n	8006bd2 <HAL_ADC_Init+0x166>
  {
    /* Set ADVREGEN bit */
    hadc->Instance->CR |= ADC_CR_ADVREGEN;
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	689a      	ldr	r2, [r3, #8]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	2180      	movs	r1, #128	; 0x80
 8006bcc:	0549      	lsls	r1, r1, #21
 8006bce:	430a      	orrs	r2, r1
 8006bd0:	609a      	str	r2, [r3, #8]
  /*  - Continuous conversion mode                                            */
  /*  - DMA continuous request                                                */
  /*  - Overrun                                                               */
  /*  - AutoDelay feature                                                     */
  /*  - Discontinuous mode                                                    */
  hadc->Instance->CFGR1 &= ~(ADC_CFGR1_ALIGN   |
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	681b      	ldr	r3, [r3, #0]
 8006bd6:	68da      	ldr	r2, [r3, #12]
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	495b      	ldr	r1, [pc, #364]	; (8006d4c <HAL_ADC_Init+0x2e0>)
 8006bde:	400a      	ands	r2, r1
 8006be0:	60da      	str	r2, [r3, #12]
                             ADC_CFGR1_OVRMOD  |
                             ADC_CFGR1_AUTDLY  |
                             ADC_CFGR1_AUTOFF  |
                             ADC_CFGR1_DISCEN   );
  
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	681b      	ldr	r3, [r3, #0]
 8006be6:	68d9      	ldr	r1, [r3, #12]
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	68da      	ldr	r2, [r3, #12]
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	691b      	ldr	r3, [r3, #16]
 8006bf0:	2b02      	cmp	r3, #2
 8006bf2:	d101      	bne.n	8006bf8 <HAL_ADC_Init+0x18c>
 8006bf4:	2304      	movs	r3, #4
 8006bf6:	e000      	b.n	8006bfa <HAL_ADC_Init+0x18e>
 8006bf8:	2300      	movs	r3, #0
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8006bfa:	431a      	orrs	r2, r3
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	2020      	movs	r0, #32
 8006c00:	5c1b      	ldrb	r3, [r3, r0]
 8006c02:	035b      	lsls	r3, r3, #13
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8006c04:	431a      	orrs	r2, r3
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	202c      	movs	r0, #44	; 0x2c
 8006c0a:	5c1b      	ldrb	r3, [r3, r0]
 8006c0c:	005b      	lsls	r3, r3, #1
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8006c0e:	431a      	orrs	r2, r3
                            hadc->Init.Overrun                               |
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 8006c14:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	699b      	ldr	r3, [r3, #24]
 8006c1a:	039b      	lsls	r3, r3, #14
                            hadc->Init.Overrun                               |
 8006c1c:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AUTOFF(hadc->Init.LowPowerAutoPowerOff));
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	69db      	ldr	r3, [r3, #28]
 8006c22:	03db      	lsls	r3, r3, #15
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 8006c24:	431a      	orrs	r2, r3
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	430a      	orrs	r2, r1
 8006c2c:	60da      	str	r2, [r3, #12]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006c32:	23c2      	movs	r3, #194	; 0xc2
 8006c34:	33ff      	adds	r3, #255	; 0xff
 8006c36:	429a      	cmp	r2, r3
 8006c38:	d00b      	beq.n	8006c52 <HAL_ADC_Init+0x1e6>
  {
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	681b      	ldr	r3, [r3, #0]
 8006c3e:	68d9      	ldr	r1, [r3, #12]
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                             hadc->Init.ExternalTrigConvEdge;
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 8006c48:	431a      	orrs	r2, r3
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	681b      	ldr	r3, [r3, #0]
 8006c4e:	430a      	orrs	r2, r1
 8006c50:	60da      	str	r2, [r3, #12]
  }
  
  /* Enable discontinuous mode only if continuous mode is disabled */
  if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	2221      	movs	r2, #33	; 0x21
 8006c56:	5c9b      	ldrb	r3, [r3, r2]
 8006c58:	2b01      	cmp	r3, #1
 8006c5a:	d11a      	bne.n	8006c92 <HAL_ADC_Init+0x226>
  {
    if (hadc->Init.ContinuousConvMode == DISABLE)
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	2220      	movs	r2, #32
 8006c60:	5c9b      	ldrb	r3, [r3, r2]
 8006c62:	2b00      	cmp	r3, #0
 8006c64:	d109      	bne.n	8006c7a <HAL_ADC_Init+0x20e>
    {
      /* Enable the selected ADC group regular discontinuous mode */
      hadc->Instance->CFGR1 |= (ADC_CFGR1_DISCEN);
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	68da      	ldr	r2, [r3, #12]
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	2180      	movs	r1, #128	; 0x80
 8006c72:	0249      	lsls	r1, r1, #9
 8006c74:	430a      	orrs	r2, r1
 8006c76:	60da      	str	r2, [r3, #12]
 8006c78:	e00b      	b.n	8006c92 <HAL_ADC_Init+0x226>
      /* ADC regular group discontinuous was intended to be enabled,        */
      /* but ADC regular group modes continuous and sequencer discontinuous */
      /* cannot be enabled simultaneously.                                  */
      
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006c7e:	2220      	movs	r2, #32
 8006c80:	431a      	orrs	r2, r3
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006c8a:	2201      	movs	r2, #1
 8006c8c:	431a      	orrs	r2, r3
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	659a      	str	r2, [r3, #88]	; 0x58
    }
  }
  
  if (hadc->Init.OversamplingMode == ENABLE)
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006c96:	2b01      	cmp	r3, #1
 8006c98:	d11f      	bne.n	8006cda <HAL_ADC_Init+0x26e>
    /* Configuration of Oversampler:                                          */
    /*  - Oversampling Ratio                                                  */
    /*  - Right bit shift                                                     */
    /*  - Triggered mode                                                      */
    
    hadc->Instance->CFGR2 &= ~( ADC_CFGR2_OVSR |
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	681b      	ldr	r3, [r3, #0]
 8006c9e:	691a      	ldr	r2, [r3, #16]
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	492a      	ldr	r1, [pc, #168]	; (8006d50 <HAL_ADC_Init+0x2e4>)
 8006ca6:	400a      	ands	r2, r1
 8006ca8:	611a      	str	r2, [r3, #16]
                                ADC_CFGR2_OVSS |
                                ADC_CFGR2_TOVS );
    
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	6919      	ldr	r1, [r3, #16]
 8006cb0:	687b      	ldr	r3, [r7, #4]
 8006cb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
                               hadc->Init.Oversample.RightBitShift             |
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8006cb8:	431a      	orrs	r2, r3
                               hadc->Init.Oversample.TriggeredMode );
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
                               hadc->Init.Oversample.RightBitShift             |
 8006cbe:	431a      	orrs	r2, r3
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	430a      	orrs	r2, r1
 8006cc6:	611a      	str	r2, [r3, #16]
    
    /* Enable OverSampling mode */
     hadc->Instance->CFGR2 |= ADC_CFGR2_OVSE;
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	681b      	ldr	r3, [r3, #0]
 8006ccc:	691a      	ldr	r2, [r3, #16]
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	2101      	movs	r1, #1
 8006cd4:	430a      	orrs	r2, r1
 8006cd6:	611a      	str	r2, [r3, #16]
 8006cd8:	e00e      	b.n	8006cf8 <HAL_ADC_Init+0x28c>
  }
  else
  {
    if(HAL_IS_BIT_SET(hadc->Instance->CFGR2, ADC_CFGR2_OVSE))
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	681b      	ldr	r3, [r3, #0]
 8006cde:	691b      	ldr	r3, [r3, #16]
 8006ce0:	2201      	movs	r2, #1
 8006ce2:	4013      	ands	r3, r2
 8006ce4:	2b01      	cmp	r3, #1
 8006ce6:	d107      	bne.n	8006cf8 <HAL_ADC_Init+0x28c>
    {
      /* Disable OverSampling mode if needed */
      hadc->Instance->CFGR2 &= ~ADC_CFGR2_OVSE;
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	681b      	ldr	r3, [r3, #0]
 8006cec:	691a      	ldr	r2, [r3, #16]
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	2101      	movs	r1, #1
 8006cf4:	438a      	bics	r2, r1
 8006cf6:	611a      	str	r2, [r3, #16]
    }
  }    
  
  /* Clear the old sampling time */
  hadc->Instance->SMPR &= (uint32_t)(~ADC_SMPR_SMPR);
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	695a      	ldr	r2, [r3, #20]
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	681b      	ldr	r3, [r3, #0]
 8006d02:	2107      	movs	r1, #7
 8006d04:	438a      	bics	r2, r1
 8006d06:	615a      	str	r2, [r3, #20]
  
  /* Set the new sample time */
  hadc->Instance->SMPR |= hadc->Init.SamplingTime;
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	681b      	ldr	r3, [r3, #0]
 8006d0c:	6959      	ldr	r1, [r3, #20]
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	430a      	orrs	r2, r1
 8006d18:	615a      	str	r2, [r3, #20]
  
  /* Clear ADC error code */
  ADC_CLEAR_ERRORCODE(hadc);
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	2200      	movs	r2, #0
 8006d1e:	659a      	str	r2, [r3, #88]	; 0x58

  /* Set the ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006d24:	2203      	movs	r2, #3
 8006d26:	4393      	bics	r3, r2
 8006d28:	2201      	movs	r2, #1
 8006d2a:	431a      	orrs	r2, r3
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	655a      	str	r2, [r3, #84]	; 0x54
                    HAL_ADC_STATE_BUSY_INTERNAL,
                    HAL_ADC_STATE_READY);


  /* Return function status */
  return HAL_OK;
 8006d30:	2300      	movs	r3, #0
}
 8006d32:	0018      	movs	r0, r3
 8006d34:	46bd      	mov	sp, r7
 8006d36:	b002      	add	sp, #8
 8006d38:	bd80      	pop	{r7, pc}
 8006d3a:	46c0      	nop			; (mov r8, r8)
 8006d3c:	fffffefd 	.word	0xfffffefd
 8006d40:	40012708 	.word	0x40012708
 8006d44:	ffc3ffff 	.word	0xffc3ffff
 8006d48:	fdffffff 	.word	0xfdffffff
 8006d4c:	fffe0219 	.word	0xfffe0219
 8006d50:	fffffc03 	.word	0xfffffc03

08006d54 <HAL_ADC_Start>:
  * @note   Interruptions enabled in this function: None.
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8006d54:	b590      	push	{r4, r7, lr}
 8006d56:	b085      	sub	sp, #20
 8006d58:	af00      	add	r7, sp, #0
 8006d5a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8006d5c:	230f      	movs	r3, #15
 8006d5e:	18fb      	adds	r3, r7, r3
 8006d60:	2200      	movs	r2, #0
 8006d62:	701a      	strb	r2, [r3, #0]
  
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Perform ADC enable and conversion start if no conversion is on going */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	689b      	ldr	r3, [r3, #8]
 8006d6a:	2204      	movs	r2, #4
 8006d6c:	4013      	ands	r3, r2
 8006d6e:	d138      	bne.n	8006de2 <HAL_ADC_Start+0x8e>
  {
    /* Process locked */
    __HAL_LOCK(hadc);
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	2250      	movs	r2, #80	; 0x50
 8006d74:	5c9b      	ldrb	r3, [r3, r2]
 8006d76:	2b01      	cmp	r3, #1
 8006d78:	d101      	bne.n	8006d7e <HAL_ADC_Start+0x2a>
 8006d7a:	2302      	movs	r3, #2
 8006d7c:	e038      	b.n	8006df0 <HAL_ADC_Start+0x9c>
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	2250      	movs	r2, #80	; 0x50
 8006d82:	2101      	movs	r1, #1
 8006d84:	5499      	strb	r1, [r3, r2]
    
    /* Enable the ADC peripheral */
    /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
    /* performed automatically by hardware.                                   */
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	69db      	ldr	r3, [r3, #28]
 8006d8a:	2b01      	cmp	r3, #1
 8006d8c:	d007      	beq.n	8006d9e <HAL_ADC_Start+0x4a>
    {
      tmp_hal_status = ADC_Enable(hadc);
 8006d8e:	230f      	movs	r3, #15
 8006d90:	18fc      	adds	r4, r7, r3
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	0018      	movs	r0, r3
 8006d96:	f000 f959 	bl	800704c <ADC_Enable>
 8006d9a:	0003      	movs	r3, r0
 8006d9c:	7023      	strb	r3, [r4, #0]
    }
    
    /* Start conversion if ADC is effectively enabled */
    if (tmp_hal_status == HAL_OK)
 8006d9e:	230f      	movs	r3, #15
 8006da0:	18fb      	adds	r3, r7, r3
 8006da2:	781b      	ldrb	r3, [r3, #0]
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d120      	bne.n	8006dea <HAL_ADC_Start+0x96>
    {
      /* Set ADC state                                                        */
      /* - Clear state bitfield related to regular group conversion results   */
      /* - Set state bitfield related to regular operation                    */
      ADC_STATE_CLR_SET(hadc->State,
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006dac:	4a12      	ldr	r2, [pc, #72]	; (8006df8 <HAL_ADC_Start+0xa4>)
 8006dae:	4013      	ands	r3, r2
 8006db0:	2280      	movs	r2, #128	; 0x80
 8006db2:	0052      	lsls	r2, r2, #1
 8006db4:	431a      	orrs	r2, r3
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	655a      	str	r2, [r3, #84]	; 0x54
                        HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC_STATE_REG_EOSMP,
                        HAL_ADC_STATE_REG_BUSY);
      
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	2200      	movs	r2, #0
 8006dbe:	659a      	str	r2, [r3, #88]	; 0x58
      
      /* Process unlocked */
      /* Unlock before starting ADC conversions: in case of potential         */
      /* interruption, to let the process to ADC IRQ Handler.                 */
      __HAL_UNLOCK(hadc);
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	2250      	movs	r2, #80	; 0x50
 8006dc4:	2100      	movs	r1, #0
 8006dc6:	5499      	strb	r1, [r3, r2]
      
      /* Clear regular group conversion flag and overrun flag */
      /* (To ensure of no unknown state from potential previous ADC           */
      /* operations)                                                          */
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	221c      	movs	r2, #28
 8006dce:	601a      	str	r2, [r3, #0]
      
      /* Enable conversion of regular group.                                  */
      /* If software start has been selected, conversion starts immediately.  */
      /* If external trigger has been selected, conversion will start at next */
      /* trigger event.                                                       */
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	689a      	ldr	r2, [r3, #8]
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	2104      	movs	r1, #4
 8006ddc:	430a      	orrs	r2, r1
 8006dde:	609a      	str	r2, [r3, #8]
 8006de0:	e003      	b.n	8006dea <HAL_ADC_Start+0x96>
    }
  }
  else
  {
    tmp_hal_status = HAL_BUSY;
 8006de2:	230f      	movs	r3, #15
 8006de4:	18fb      	adds	r3, r7, r3
 8006de6:	2202      	movs	r2, #2
 8006de8:	701a      	strb	r2, [r3, #0]
  }
  
  /* Return function status */
  return tmp_hal_status;
 8006dea:	230f      	movs	r3, #15
 8006dec:	18fb      	adds	r3, r7, r3
 8006dee:	781b      	ldrb	r3, [r3, #0]
}
 8006df0:	0018      	movs	r0, r3
 8006df2:	46bd      	mov	sp, r7
 8006df4:	b005      	add	sp, #20
 8006df6:	bd90      	pop	{r4, r7, pc}
 8006df8:	fffff0fe 	.word	0xfffff0fe

08006dfc <HAL_ADC_PollForConversion>:
  * @param  hadc ADC handle
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8006dfc:	b580      	push	{r7, lr}
 8006dfe:	b084      	sub	sp, #16
 8006e00:	af00      	add	r7, sp, #0
 8006e02:	6078      	str	r0, [r7, #4]
 8006e04:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8006e06:	2300      	movs	r3, #0
 8006e08:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_Flag_EOC   = 0x00;
 8006e0a:	2300      	movs	r3, #0
 8006e0c:	60fb      	str	r3, [r7, #12]
  
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* If end of conversion selected to end of sequence conversions */
  if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	695b      	ldr	r3, [r3, #20]
 8006e12:	2b08      	cmp	r3, #8
 8006e14:	d102      	bne.n	8006e1c <HAL_ADC_PollForConversion+0x20>
  {
    tmp_Flag_EOC = ADC_FLAG_EOS;
 8006e16:	2308      	movs	r3, #8
 8006e18:	60fb      	str	r3, [r7, #12]
 8006e1a:	e014      	b.n	8006e46 <HAL_ADC_PollForConversion+0x4a>
    /* each conversion:                                                       */
    /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
    /* several ranks and polling for end of each conversion.                  */
    /* For code simplicity sake, this particular case is generalized to       */
    /* ADC configured in DMA mode and and polling for end of each conversion. */
    if (HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN))
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	681b      	ldr	r3, [r3, #0]
 8006e20:	68db      	ldr	r3, [r3, #12]
 8006e22:	2201      	movs	r2, #1
 8006e24:	4013      	ands	r3, r2
 8006e26:	2b01      	cmp	r3, #1
 8006e28:	d10b      	bne.n	8006e42 <HAL_ADC_PollForConversion+0x46>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006e2e:	2220      	movs	r2, #32
 8006e30:	431a      	orrs	r2, r3
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Process unlocked */
      __HAL_UNLOCK(hadc);
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	2250      	movs	r2, #80	; 0x50
 8006e3a:	2100      	movs	r1, #0
 8006e3c:	5499      	strb	r1, [r3, r2]
      
      return HAL_ERROR;
 8006e3e:	2301      	movs	r3, #1
 8006e40:	e06c      	b.n	8006f1c <HAL_ADC_PollForConversion+0x120>
    }
    else
    {
      tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 8006e42:	230c      	movs	r3, #12
 8006e44:	60fb      	str	r3, [r7, #12]
    }
  }
  
  /* Get tick count */
  tickstart = HAL_GetTick();
 8006e46:	f7ff fe07 	bl	8006a58 <HAL_GetTick>
 8006e4a:	0003      	movs	r3, r0
 8006e4c:	60bb      	str	r3, [r7, #8]
  
  /* Wait until End of unitary conversion or sequence conversions flag is raised */
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8006e4e:	e019      	b.n	8006e84 <HAL_ADC_PollForConversion+0x88>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8006e50:	683b      	ldr	r3, [r7, #0]
 8006e52:	3301      	adds	r3, #1
 8006e54:	d016      	beq.n	8006e84 <HAL_ADC_PollForConversion+0x88>
    {
      if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 8006e56:	683b      	ldr	r3, [r7, #0]
 8006e58:	2b00      	cmp	r3, #0
 8006e5a:	d007      	beq.n	8006e6c <HAL_ADC_PollForConversion+0x70>
 8006e5c:	f7ff fdfc 	bl	8006a58 <HAL_GetTick>
 8006e60:	0002      	movs	r2, r0
 8006e62:	68bb      	ldr	r3, [r7, #8]
 8006e64:	1ad3      	subs	r3, r2, r3
 8006e66:	683a      	ldr	r2, [r7, #0]
 8006e68:	429a      	cmp	r2, r3
 8006e6a:	d20b      	bcs.n	8006e84 <HAL_ADC_PollForConversion+0x88>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006e70:	2204      	movs	r2, #4
 8006e72:	431a      	orrs	r2, r3
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	2250      	movs	r2, #80	; 0x50
 8006e7c:	2100      	movs	r1, #0
 8006e7e:	5499      	strb	r1, [r3, r2]
        
        return HAL_TIMEOUT;
 8006e80:	2303      	movs	r3, #3
 8006e82:	e04b      	b.n	8006f1c <HAL_ADC_PollForConversion+0x120>
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	681b      	ldr	r3, [r3, #0]
 8006e8a:	68fa      	ldr	r2, [r7, #12]
 8006e8c:	4013      	ands	r3, r2
 8006e8e:	d0df      	beq.n	8006e50 <HAL_ADC_PollForConversion+0x54>
      }
    }
  }
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006e94:	2280      	movs	r2, #128	; 0x80
 8006e96:	0092      	lsls	r2, r2, #2
 8006e98:	431a      	orrs	r2, r3
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	655a      	str	r2, [r3, #84]	; 0x54
  
  /* Determine whether any further conversion upcoming on group regular       */
  /* by external trigger, continuous mode or scan sequence on going.          */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	68da      	ldr	r2, [r3, #12]
 8006ea4:	23c0      	movs	r3, #192	; 0xc0
 8006ea6:	011b      	lsls	r3, r3, #4
 8006ea8:	4013      	ands	r3, r2
 8006eaa:	d12e      	bne.n	8006f0a <HAL_ADC_PollForConversion+0x10e>
     (hadc->Init.ContinuousConvMode == DISABLE)   )
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	2220      	movs	r2, #32
 8006eb0:	5c9b      	ldrb	r3, [r3, r2]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	d129      	bne.n	8006f0a <HAL_ADC_PollForConversion+0x10e>
  {
    /* If End of Sequence is reached, disable interrupts */
    if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	681b      	ldr	r3, [r3, #0]
 8006eba:	681b      	ldr	r3, [r3, #0]
 8006ebc:	2208      	movs	r2, #8
 8006ebe:	4013      	ands	r3, r2
 8006ec0:	2b08      	cmp	r3, #8
 8006ec2:	d122      	bne.n	8006f0a <HAL_ADC_PollForConversion+0x10e>
    {
      /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
      /* ADSTART==0 (no conversion on going)                                  */
      if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	681b      	ldr	r3, [r3, #0]
 8006ec8:	689b      	ldr	r3, [r3, #8]
 8006eca:	2204      	movs	r2, #4
 8006ecc:	4013      	ands	r3, r2
 8006ece:	d110      	bne.n	8006ef2 <HAL_ADC_PollForConversion+0xf6>
      {
        /* Disable ADC end of single conversion interrupt on group regular */
        /* Note: Overrun interrupt was enabled with EOC interrupt in          */
        /* HAL_Start_IT(), but is not disabled here because can be used       */
        /* by overrun IRQ process below.                                      */
        __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	681b      	ldr	r3, [r3, #0]
 8006ed4:	685a      	ldr	r2, [r3, #4]
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	210c      	movs	r1, #12
 8006edc:	438a      	bics	r2, r1
 8006ede:	605a      	str	r2, [r3, #4]
        
        /* Set ADC state */
        ADC_STATE_CLR_SET(hadc->State,
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006ee4:	4a0f      	ldr	r2, [pc, #60]	; (8006f24 <HAL_ADC_PollForConversion+0x128>)
 8006ee6:	4013      	ands	r3, r2
 8006ee8:	2201      	movs	r2, #1
 8006eea:	431a      	orrs	r2, r3
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	655a      	str	r2, [r3, #84]	; 0x54
 8006ef0:	e00b      	b.n	8006f0a <HAL_ADC_PollForConversion+0x10e>
                          HAL_ADC_STATE_READY);
      }
      else
      {
        /* Change ADC state to error state */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006ef6:	2220      	movs	r2, #32
 8006ef8:	431a      	orrs	r2, r3
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Set ADC error code to ADC peripheral internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006f02:	2201      	movs	r2, #1
 8006f04:	431a      	orrs	r2, r3
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	659a      	str	r2, [r3, #88]	; 0x58
  }
  
  /* Clear end of conversion flag of regular group if low power feature       */
  /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
  /* until data register is read using function HAL_ADC_GetValue().           */
  if (hadc->Init.LowPowerAutoWait == DISABLE)
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	699b      	ldr	r3, [r3, #24]
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d103      	bne.n	8006f1a <HAL_ADC_PollForConversion+0x11e>
  {
    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	220c      	movs	r2, #12
 8006f18:	601a      	str	r2, [r3, #0]
  }
  
  /* Return function status */
  return HAL_OK;
 8006f1a:	2300      	movs	r3, #0
}
 8006f1c:	0018      	movs	r0, r3
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	b004      	add	sp, #16
 8006f22:	bd80      	pop	{r7, pc}
 8006f24:	fffffefe 	.word	0xfffffefe

08006f28 <HAL_ADC_GetValue>:
  *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
  * @param  hadc ADC handle
  * @retval ADC group regular conversion data
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{
 8006f28:	b580      	push	{r7, lr}
 8006f2a:	b082      	sub	sp, #8
 8006f2c:	af00      	add	r7, sp, #0
 8006f2e:	6078      	str	r0, [r7, #4]

  /* Note: EOC flag is not cleared here by software because automatically     */
  /*       cleared by hardware when reading register DR.                      */
  
  /* Return ADC converted value */ 
  return hadc->Instance->DR;
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	681b      	ldr	r3, [r3, #0]
 8006f34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 8006f36:	0018      	movs	r0, r3
 8006f38:	46bd      	mov	sp, r7
 8006f3a:	b002      	add	sp, #8
 8006f3c:	bd80      	pop	{r7, pc}
	...

08006f40 <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8006f40:	b580      	push	{r7, lr}
 8006f42:	b082      	sub	sp, #8
 8006f44:	af00      	add	r7, sp, #0
 8006f46:	6078      	str	r0, [r7, #4]
 8006f48:	6039      	str	r1, [r7, #0]
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_RANK(sConfig->Rank));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	2250      	movs	r2, #80	; 0x50
 8006f4e:	5c9b      	ldrb	r3, [r3, r2]
 8006f50:	2b01      	cmp	r3, #1
 8006f52:	d101      	bne.n	8006f58 <HAL_ADC_ConfigChannel+0x18>
 8006f54:	2302      	movs	r3, #2
 8006f56:	e06c      	b.n	8007032 <HAL_ADC_ConfigChannel+0xf2>
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	2250      	movs	r2, #80	; 0x50
 8006f5c:	2101      	movs	r1, #1
 8006f5e:	5499      	strb	r1, [r3, r2]
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Management of internal measurement channels: Vbat/VrefInt/TempSensor  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET)
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	681b      	ldr	r3, [r3, #0]
 8006f64:	689b      	ldr	r3, [r3, #8]
 8006f66:	2204      	movs	r2, #4
 8006f68:	4013      	ands	r3, r2
 8006f6a:	d00b      	beq.n	8006f84 <HAL_ADC_ConfigChannel+0x44>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006f70:	2220      	movs	r2, #32
 8006f72:	431a      	orrs	r2, r3
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	655a      	str	r2, [r3, #84]	; 0x54
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	2250      	movs	r2, #80	; 0x50
 8006f7c:	2100      	movs	r1, #0
 8006f7e:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 8006f80:	2301      	movs	r3, #1
 8006f82:	e056      	b.n	8007032 <HAL_ADC_ConfigChannel+0xf2>
  }
  
  if (sConfig->Rank != ADC_RANK_NONE)
 8006f84:	683b      	ldr	r3, [r7, #0]
 8006f86:	685b      	ldr	r3, [r3, #4]
 8006f88:	4a2c      	ldr	r2, [pc, #176]	; (800703c <HAL_ADC_ConfigChannel+0xfc>)
 8006f8a:	4293      	cmp	r3, r2
 8006f8c:	d028      	beq.n	8006fe0 <HAL_ADC_ConfigChannel+0xa0>
  {
    /* Enable selected channels */
    hadc->Instance->CHSELR |= (uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK);
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8006f94:	683b      	ldr	r3, [r7, #0]
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	035b      	lsls	r3, r3, #13
 8006f9a:	0b5a      	lsrs	r2, r3, #13
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	430a      	orrs	r2, r1
 8006fa2:	629a      	str	r2, [r3, #40]	; 0x28
    /* dedicated internal buffers and path.                                     */
    
    #if defined(ADC_CCR_TSEN)
    /* If Temperature sensor channel is selected, then enable the internal      */
    /* buffers and path  */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_TEMPSENSOR ) == (ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_MASK))
 8006fa4:	683b      	ldr	r3, [r7, #0]
 8006fa6:	681a      	ldr	r2, [r3, #0]
 8006fa8:	2380      	movs	r3, #128	; 0x80
 8006faa:	02db      	lsls	r3, r3, #11
 8006fac:	4013      	ands	r3, r2
 8006fae:	d009      	beq.n	8006fc4 <HAL_ADC_ConfigChannel+0x84>
    {
      ADC->CCR |= ADC_CCR_TSEN;   
 8006fb0:	4b23      	ldr	r3, [pc, #140]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8006fb2:	681a      	ldr	r2, [r3, #0]
 8006fb4:	4b22      	ldr	r3, [pc, #136]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8006fb6:	2180      	movs	r1, #128	; 0x80
 8006fb8:	0409      	lsls	r1, r1, #16
 8006fba:	430a      	orrs	r2, r1
 8006fbc:	601a      	str	r2, [r3, #0]
      
      /* Delay for temperature sensor stabilization time */
      ADC_DelayMicroSecond(ADC_TEMPSENSOR_DELAY_US);
 8006fbe:	200a      	movs	r0, #10
 8006fc0:	f000 f8a4 	bl	800710c <ADC_DelayMicroSecond>
    }
    #endif
    
    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 8006fc4:	683b      	ldr	r3, [r7, #0]
 8006fc6:	681a      	ldr	r2, [r3, #0]
 8006fc8:	2380      	movs	r3, #128	; 0x80
 8006fca:	029b      	lsls	r3, r3, #10
 8006fcc:	4013      	ands	r3, r2
 8006fce:	d02b      	beq.n	8007028 <HAL_ADC_ConfigChannel+0xe8>
    {
      ADC->CCR |= ADC_CCR_VREFEN;   
 8006fd0:	4b1b      	ldr	r3, [pc, #108]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8006fd2:	681a      	ldr	r2, [r3, #0]
 8006fd4:	4b1a      	ldr	r3, [pc, #104]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8006fd6:	2180      	movs	r1, #128	; 0x80
 8006fd8:	03c9      	lsls	r1, r1, #15
 8006fda:	430a      	orrs	r2, r1
 8006fdc:	601a      	str	r2, [r3, #0]
 8006fde:	e023      	b.n	8007028 <HAL_ADC_ConfigChannel+0xe8>
  }
  else
  {
    /* Regular sequence configuration */
    /* Reset the channel selection register from the selected channel */
    hadc->Instance->CHSELR &= ~((uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK));
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006fe6:	683b      	ldr	r3, [r7, #0]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	035b      	lsls	r3, r3, #13
 8006fec:	0b5b      	lsrs	r3, r3, #13
 8006fee:	43d9      	mvns	r1, r3
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	400a      	ands	r2, r1
 8006ff6:	629a      	str	r2, [r3, #40]	; 0x28
    
    /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
    /* internal measurement paths disable: If internal channel selected,    */
    /* disable dedicated internal buffers and path.                         */
    #if defined(ADC_CCR_TSEN)
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_TEMPSENSOR ) == (ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_MASK))
 8006ff8:	683b      	ldr	r3, [r7, #0]
 8006ffa:	681a      	ldr	r2, [r3, #0]
 8006ffc:	2380      	movs	r3, #128	; 0x80
 8006ffe:	02db      	lsls	r3, r3, #11
 8007000:	4013      	ands	r3, r2
 8007002:	d005      	beq.n	8007010 <HAL_ADC_ConfigChannel+0xd0>
    {
      ADC->CCR &= ~ADC_CCR_TSEN;   
 8007004:	4b0e      	ldr	r3, [pc, #56]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8007006:	681a      	ldr	r2, [r3, #0]
 8007008:	4b0d      	ldr	r3, [pc, #52]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 800700a:	490e      	ldr	r1, [pc, #56]	; (8007044 <HAL_ADC_ConfigChannel+0x104>)
 800700c:	400a      	ands	r2, r1
 800700e:	601a      	str	r2, [r3, #0]
    }
    #endif
    
    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 8007010:	683b      	ldr	r3, [r7, #0]
 8007012:	681a      	ldr	r2, [r3, #0]
 8007014:	2380      	movs	r3, #128	; 0x80
 8007016:	029b      	lsls	r3, r3, #10
 8007018:	4013      	ands	r3, r2
 800701a:	d005      	beq.n	8007028 <HAL_ADC_ConfigChannel+0xe8>
    {
      ADC->CCR &= ~ADC_CCR_VREFEN;   
 800701c:	4b08      	ldr	r3, [pc, #32]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 800701e:	681a      	ldr	r2, [r3, #0]
 8007020:	4b07      	ldr	r3, [pc, #28]	; (8007040 <HAL_ADC_ConfigChannel+0x100>)
 8007022:	4909      	ldr	r1, [pc, #36]	; (8007048 <HAL_ADC_ConfigChannel+0x108>)
 8007024:	400a      	ands	r2, r1
 8007026:	601a      	str	r2, [r3, #0]
    }
#endif
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	2250      	movs	r2, #80	; 0x50
 800702c:	2100      	movs	r1, #0
 800702e:	5499      	strb	r1, [r3, r2]
  
  /* Return function status */
  return HAL_OK;
 8007030:	2300      	movs	r3, #0
}
 8007032:	0018      	movs	r0, r3
 8007034:	46bd      	mov	sp, r7
 8007036:	b002      	add	sp, #8
 8007038:	bd80      	pop	{r7, pc}
 800703a:	46c0      	nop			; (mov r8, r8)
 800703c:	00001001 	.word	0x00001001
 8007040:	40012708 	.word	0x40012708
 8007044:	ff7fffff 	.word	0xff7fffff
 8007048:	ffbfffff 	.word	0xffbfffff

0800704c <ADC_Enable>:
  *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
{
 800704c:	b580      	push	{r7, lr}
 800704e:	b084      	sub	sp, #16
 8007050:	af00      	add	r7, sp, #0
 8007052:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8007054:	2300      	movs	r3, #0
 8007056:	60fb      	str	r3, [r7, #12]

  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	681b      	ldr	r3, [r3, #0]
 800705c:	689b      	ldr	r3, [r3, #8]
 800705e:	2203      	movs	r2, #3
 8007060:	4013      	ands	r3, r2
 8007062:	2b01      	cmp	r3, #1
 8007064:	d108      	bne.n	8007078 <ADC_Enable+0x2c>
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	2201      	movs	r2, #1
 800706e:	4013      	ands	r3, r2
 8007070:	2b01      	cmp	r3, #1
 8007072:	d101      	bne.n	8007078 <ADC_Enable+0x2c>
 8007074:	2301      	movs	r3, #1
 8007076:	e000      	b.n	800707a <ADC_Enable+0x2e>
 8007078:	2300      	movs	r3, #0
 800707a:	2b00      	cmp	r3, #0
 800707c:	d13f      	bne.n	80070fe <ADC_Enable+0xb2>
  {
    /* Check if conditions to enable the ADC are fulfilled */
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	689b      	ldr	r3, [r3, #8]
 8007084:	4a20      	ldr	r2, [pc, #128]	; (8007108 <ADC_Enable+0xbc>)
 8007086:	4013      	ands	r3, r2
 8007088:	d00d      	beq.n	80070a6 <ADC_Enable+0x5a>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800708e:	2210      	movs	r2, #16
 8007090:	431a      	orrs	r2, r3
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800709a:	2201      	movs	r2, #1
 800709c:	431a      	orrs	r2, r3
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	659a      	str	r2, [r3, #88]	; 0x58
      
      return HAL_ERROR;
 80070a2:	2301      	movs	r3, #1
 80070a4:	e02c      	b.n	8007100 <ADC_Enable+0xb4>
    }
    
    /* Enable the ADC peripheral */
    __HAL_ADC_ENABLE(hadc);
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	689a      	ldr	r2, [r3, #8]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	2101      	movs	r1, #1
 80070b2:	430a      	orrs	r2, r1
 80070b4:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time. */
    ADC_DelayMicroSecond(ADC_STAB_DELAY_US);
 80070b6:	2001      	movs	r0, #1
 80070b8:	f000 f828 	bl	800710c <ADC_DelayMicroSecond>

    /* Get tick count */
    tickstart = HAL_GetTick();
 80070bc:	f7ff fccc 	bl	8006a58 <HAL_GetTick>
 80070c0:	0003      	movs	r3, r0
 80070c2:	60fb      	str	r3, [r7, #12]
    
    /* Wait for ADC effectively enabled */
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 80070c4:	e014      	b.n	80070f0 <ADC_Enable+0xa4>
    {
      if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 80070c6:	f7ff fcc7 	bl	8006a58 <HAL_GetTick>
 80070ca:	0002      	movs	r2, r0
 80070cc:	68fb      	ldr	r3, [r7, #12]
 80070ce:	1ad3      	subs	r3, r2, r3
 80070d0:	2b0a      	cmp	r3, #10
 80070d2:	d90d      	bls.n	80070f0 <ADC_Enable+0xa4>
      {
        /* Update ADC state machine to error */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80070d8:	2210      	movs	r2, #16
 80070da:	431a      	orrs	r2, r3
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Set ADC error code to ADC peripheral internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070e4:	2201      	movs	r2, #1
 80070e6:	431a      	orrs	r2, r3
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	659a      	str	r2, [r3, #88]	; 0x58
        
        return HAL_ERROR;
 80070ec:	2301      	movs	r3, #1
 80070ee:	e007      	b.n	8007100 <ADC_Enable+0xb4>
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	2201      	movs	r2, #1
 80070f8:	4013      	ands	r3, r2
 80070fa:	2b01      	cmp	r3, #1
 80070fc:	d1e3      	bne.n	80070c6 <ADC_Enable+0x7a>
      }
    }
  }
   
  /* Return HAL status */
  return HAL_OK;
 80070fe:	2300      	movs	r3, #0
}
 8007100:	0018      	movs	r0, r3
 8007102:	46bd      	mov	sp, r7
 8007104:	b004      	add	sp, #16
 8007106:	bd80      	pop	{r7, pc}
 8007108:	80000017 	.word	0x80000017

0800710c <ADC_DelayMicroSecond>:
  * @brief  Delay micro seconds 
  * @param  microSecond  delay
  * @retval None
  */
static void ADC_DelayMicroSecond(uint32_t microSecond)
{
 800710c:	b580      	push	{r7, lr}
 800710e:	b084      	sub	sp, #16
 8007110:	af00      	add	r7, sp, #0
 8007112:	6078      	str	r0, [r7, #4]
  /* Compute number of CPU cycles to wait for */
  __IO uint32_t waitLoopIndex = (microSecond * (SystemCoreClock / 1000000U));
 8007114:	4b0a      	ldr	r3, [pc, #40]	; (8007140 <ADC_DelayMicroSecond+0x34>)
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	490a      	ldr	r1, [pc, #40]	; (8007144 <ADC_DelayMicroSecond+0x38>)
 800711a:	0018      	movs	r0, r3
 800711c:	f7f9 f806 	bl	800012c <__udivsi3>
 8007120:	0003      	movs	r3, r0
 8007122:	001a      	movs	r2, r3
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	4353      	muls	r3, r2
 8007128:	60fb      	str	r3, [r7, #12]

  while(waitLoopIndex != 0U)
 800712a:	e002      	b.n	8007132 <ADC_DelayMicroSecond+0x26>
  {
    waitLoopIndex--;
 800712c:	68fb      	ldr	r3, [r7, #12]
 800712e:	3b01      	subs	r3, #1
 8007130:	60fb      	str	r3, [r7, #12]
  while(waitLoopIndex != 0U)
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	2b00      	cmp	r3, #0
 8007136:	d1f9      	bne.n	800712c <ADC_DelayMicroSecond+0x20>
  } 
}
 8007138:	46c0      	nop			; (mov r8, r8)
 800713a:	46bd      	mov	sp, r7
 800713c:	b004      	add	sp, #16
 800713e:	bd80      	pop	{r7, pc}
 8007140:	200000fc 	.word	0x200000fc
 8007144:	000f4240 	.word	0x000f4240

08007148 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8007148:	b580      	push	{r7, lr}
 800714a:	b082      	sub	sp, #8
 800714c:	af00      	add	r7, sp, #0
 800714e:	0002      	movs	r2, r0
 8007150:	1dfb      	adds	r3, r7, #7
 8007152:	701a      	strb	r2, [r3, #0]
  NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8007154:	1dfb      	adds	r3, r7, #7
 8007156:	781b      	ldrb	r3, [r3, #0]
 8007158:	001a      	movs	r2, r3
 800715a:	231f      	movs	r3, #31
 800715c:	401a      	ands	r2, r3
 800715e:	4b04      	ldr	r3, [pc, #16]	; (8007170 <NVIC_EnableIRQ+0x28>)
 8007160:	2101      	movs	r1, #1
 8007162:	4091      	lsls	r1, r2
 8007164:	000a      	movs	r2, r1
 8007166:	601a      	str	r2, [r3, #0]
}
 8007168:	46c0      	nop			; (mov r8, r8)
 800716a:	46bd      	mov	sp, r7
 800716c:	b002      	add	sp, #8
 800716e:	bd80      	pop	{r7, pc}
 8007170:	e000e100 	.word	0xe000e100

08007174 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8007174:	b590      	push	{r4, r7, lr}
 8007176:	b083      	sub	sp, #12
 8007178:	af00      	add	r7, sp, #0
 800717a:	0002      	movs	r2, r0
 800717c:	6039      	str	r1, [r7, #0]
 800717e:	1dfb      	adds	r3, r7, #7
 8007180:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) < 0)
 8007182:	1dfb      	adds	r3, r7, #7
 8007184:	781b      	ldrb	r3, [r3, #0]
 8007186:	2b7f      	cmp	r3, #127	; 0x7f
 8007188:	d932      	bls.n	80071f0 <NVIC_SetPriority+0x7c>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800718a:	4a2f      	ldr	r2, [pc, #188]	; (8007248 <NVIC_SetPriority+0xd4>)
 800718c:	1dfb      	adds	r3, r7, #7
 800718e:	781b      	ldrb	r3, [r3, #0]
 8007190:	0019      	movs	r1, r3
 8007192:	230f      	movs	r3, #15
 8007194:	400b      	ands	r3, r1
 8007196:	3b08      	subs	r3, #8
 8007198:	089b      	lsrs	r3, r3, #2
 800719a:	3306      	adds	r3, #6
 800719c:	009b      	lsls	r3, r3, #2
 800719e:	18d3      	adds	r3, r2, r3
 80071a0:	3304      	adds	r3, #4
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	1dfa      	adds	r2, r7, #7
 80071a6:	7812      	ldrb	r2, [r2, #0]
 80071a8:	0011      	movs	r1, r2
 80071aa:	2203      	movs	r2, #3
 80071ac:	400a      	ands	r2, r1
 80071ae:	00d2      	lsls	r2, r2, #3
 80071b0:	21ff      	movs	r1, #255	; 0xff
 80071b2:	4091      	lsls	r1, r2
 80071b4:	000a      	movs	r2, r1
 80071b6:	43d2      	mvns	r2, r2
 80071b8:	401a      	ands	r2, r3
 80071ba:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	019b      	lsls	r3, r3, #6
 80071c0:	22ff      	movs	r2, #255	; 0xff
 80071c2:	401a      	ands	r2, r3
 80071c4:	1dfb      	adds	r3, r7, #7
 80071c6:	781b      	ldrb	r3, [r3, #0]
 80071c8:	0018      	movs	r0, r3
 80071ca:	2303      	movs	r3, #3
 80071cc:	4003      	ands	r3, r0
 80071ce:	00db      	lsls	r3, r3, #3
 80071d0:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80071d2:	481d      	ldr	r0, [pc, #116]	; (8007248 <NVIC_SetPriority+0xd4>)
 80071d4:	1dfb      	adds	r3, r7, #7
 80071d6:	781b      	ldrb	r3, [r3, #0]
 80071d8:	001c      	movs	r4, r3
 80071da:	230f      	movs	r3, #15
 80071dc:	4023      	ands	r3, r4
 80071de:	3b08      	subs	r3, #8
 80071e0:	089b      	lsrs	r3, r3, #2
 80071e2:	430a      	orrs	r2, r1
 80071e4:	3306      	adds	r3, #6
 80071e6:	009b      	lsls	r3, r3, #2
 80071e8:	18c3      	adds	r3, r0, r3
 80071ea:	3304      	adds	r3, #4
 80071ec:	601a      	str	r2, [r3, #0]
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80071ee:	e027      	b.n	8007240 <NVIC_SetPriority+0xcc>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80071f0:	4a16      	ldr	r2, [pc, #88]	; (800724c <NVIC_SetPriority+0xd8>)
 80071f2:	1dfb      	adds	r3, r7, #7
 80071f4:	781b      	ldrb	r3, [r3, #0]
 80071f6:	b25b      	sxtb	r3, r3
 80071f8:	089b      	lsrs	r3, r3, #2
 80071fa:	33c0      	adds	r3, #192	; 0xc0
 80071fc:	009b      	lsls	r3, r3, #2
 80071fe:	589b      	ldr	r3, [r3, r2]
 8007200:	1dfa      	adds	r2, r7, #7
 8007202:	7812      	ldrb	r2, [r2, #0]
 8007204:	0011      	movs	r1, r2
 8007206:	2203      	movs	r2, #3
 8007208:	400a      	ands	r2, r1
 800720a:	00d2      	lsls	r2, r2, #3
 800720c:	21ff      	movs	r1, #255	; 0xff
 800720e:	4091      	lsls	r1, r2
 8007210:	000a      	movs	r2, r1
 8007212:	43d2      	mvns	r2, r2
 8007214:	401a      	ands	r2, r3
 8007216:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8007218:	683b      	ldr	r3, [r7, #0]
 800721a:	019b      	lsls	r3, r3, #6
 800721c:	22ff      	movs	r2, #255	; 0xff
 800721e:	401a      	ands	r2, r3
 8007220:	1dfb      	adds	r3, r7, #7
 8007222:	781b      	ldrb	r3, [r3, #0]
 8007224:	0018      	movs	r0, r3
 8007226:	2303      	movs	r3, #3
 8007228:	4003      	ands	r3, r0
 800722a:	00db      	lsls	r3, r3, #3
 800722c:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800722e:	4807      	ldr	r0, [pc, #28]	; (800724c <NVIC_SetPriority+0xd8>)
 8007230:	1dfb      	adds	r3, r7, #7
 8007232:	781b      	ldrb	r3, [r3, #0]
 8007234:	b25b      	sxtb	r3, r3
 8007236:	089b      	lsrs	r3, r3, #2
 8007238:	430a      	orrs	r2, r1
 800723a:	33c0      	adds	r3, #192	; 0xc0
 800723c:	009b      	lsls	r3, r3, #2
 800723e:	501a      	str	r2, [r3, r0]
}
 8007240:	46c0      	nop			; (mov r8, r8)
 8007242:	46bd      	mov	sp, r7
 8007244:	b003      	add	sp, #12
 8007246:	bd90      	pop	{r4, r7, pc}
 8007248:	e000ed00 	.word	0xe000ed00
 800724c:	e000e100 	.word	0xe000e100

08007250 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8007250:	b580      	push	{r7, lr}
 8007252:	b082      	sub	sp, #8
 8007254:	af00      	add	r7, sp, #0
 8007256:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	3b01      	subs	r3, #1
 800725c:	4a0c      	ldr	r2, [pc, #48]	; (8007290 <SysTick_Config+0x40>)
 800725e:	4293      	cmp	r3, r2
 8007260:	d901      	bls.n	8007266 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8007262:	2301      	movs	r3, #1
 8007264:	e010      	b.n	8007288 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8007266:	4b0b      	ldr	r3, [pc, #44]	; (8007294 <SysTick_Config+0x44>)
 8007268:	687a      	ldr	r2, [r7, #4]
 800726a:	3a01      	subs	r2, #1
 800726c:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800726e:	2301      	movs	r3, #1
 8007270:	425b      	negs	r3, r3
 8007272:	2103      	movs	r1, #3
 8007274:	0018      	movs	r0, r3
 8007276:	f7ff ff7d 	bl	8007174 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800727a:	4b06      	ldr	r3, [pc, #24]	; (8007294 <SysTick_Config+0x44>)
 800727c:	2200      	movs	r2, #0
 800727e:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8007280:	4b04      	ldr	r3, [pc, #16]	; (8007294 <SysTick_Config+0x44>)
 8007282:	2207      	movs	r2, #7
 8007284:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8007286:	2300      	movs	r3, #0
}
 8007288:	0018      	movs	r0, r3
 800728a:	46bd      	mov	sp, r7
 800728c:	b002      	add	sp, #8
 800728e:	bd80      	pop	{r7, pc}
 8007290:	00ffffff 	.word	0x00ffffff
 8007294:	e000e010 	.word	0xe000e010

08007298 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007298:	b580      	push	{r7, lr}
 800729a:	b084      	sub	sp, #16
 800729c:	af00      	add	r7, sp, #0
 800729e:	60b9      	str	r1, [r7, #8]
 80072a0:	607a      	str	r2, [r7, #4]
 80072a2:	210f      	movs	r1, #15
 80072a4:	187b      	adds	r3, r7, r1
 80072a6:	1c02      	adds	r2, r0, #0
 80072a8:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80072aa:	68ba      	ldr	r2, [r7, #8]
 80072ac:	187b      	adds	r3, r7, r1
 80072ae:	781b      	ldrb	r3, [r3, #0]
 80072b0:	b25b      	sxtb	r3, r3
 80072b2:	0011      	movs	r1, r2
 80072b4:	0018      	movs	r0, r3
 80072b6:	f7ff ff5d 	bl	8007174 <NVIC_SetPriority>
}
 80072ba:	46c0      	nop			; (mov r8, r8)
 80072bc:	46bd      	mov	sp, r7
 80072be:	b004      	add	sp, #16
 80072c0:	bd80      	pop	{r7, pc}

080072c2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of  IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80072c2:	b580      	push	{r7, lr}
 80072c4:	b082      	sub	sp, #8
 80072c6:	af00      	add	r7, sp, #0
 80072c8:	0002      	movs	r2, r0
 80072ca:	1dfb      	adds	r3, r7, #7
 80072cc:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80072ce:	1dfb      	adds	r3, r7, #7
 80072d0:	781b      	ldrb	r3, [r3, #0]
 80072d2:	b25b      	sxtb	r3, r3
 80072d4:	0018      	movs	r0, r3
 80072d6:	f7ff ff37 	bl	8007148 <NVIC_EnableIRQ>
}
 80072da:	46c0      	nop			; (mov r8, r8)
 80072dc:	46bd      	mov	sp, r7
 80072de:	b002      	add	sp, #8
 80072e0:	bd80      	pop	{r7, pc}

080072e2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80072e2:	b580      	push	{r7, lr}
 80072e4:	b082      	sub	sp, #8
 80072e6:	af00      	add	r7, sp, #0
 80072e8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	0018      	movs	r0, r3
 80072ee:	f7ff ffaf 	bl	8007250 <SysTick_Config>
 80072f2:	0003      	movs	r3, r0
}
 80072f4:	0018      	movs	r0, r3
 80072f6:	46bd      	mov	sp, r7
 80072f8:	b002      	add	sp, #8
 80072fa:	bd80      	pop	{r7, pc}

080072fc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80072fc:	b580      	push	{r7, lr}
 80072fe:	b086      	sub	sp, #24
 8007300:	af00      	add	r7, sp, #0
 8007302:	6078      	str	r0, [r7, #4]
 8007304:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8007306:	2300      	movs	r3, #0
 8007308:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800730a:	2300      	movs	r3, #0
 800730c:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 800730e:	2300      	movs	r3, #0
 8007310:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,(GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 8007312:	e155      	b.n	80075c0 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8007314:	683b      	ldr	r3, [r7, #0]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	2101      	movs	r1, #1
 800731a:	697a      	ldr	r2, [r7, #20]
 800731c:	4091      	lsls	r1, r2
 800731e:	000a      	movs	r2, r1
 8007320:	4013      	ands	r3, r2
 8007322:	60fb      	str	r3, [r7, #12]
    
    if(iocurrent)
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	2b00      	cmp	r3, #0
 8007328:	d100      	bne.n	800732c <HAL_GPIO_Init+0x30>
 800732a:	e146      	b.n	80075ba <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 800732c:	683b      	ldr	r3, [r7, #0]
 800732e:	685b      	ldr	r3, [r3, #4]
 8007330:	2b02      	cmp	r3, #2
 8007332:	d003      	beq.n	800733c <HAL_GPIO_Init+0x40>
 8007334:	683b      	ldr	r3, [r7, #0]
 8007336:	685b      	ldr	r3, [r3, #4]
 8007338:	2b12      	cmp	r3, #18
 800733a:	d123      	bne.n	8007384 <HAL_GPIO_Init+0x88>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */ 
        temp = GPIOx->AFR[position >> 3U];
 800733c:	697b      	ldr	r3, [r7, #20]
 800733e:	08da      	lsrs	r2, r3, #3
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	3208      	adds	r2, #8
 8007344:	0092      	lsls	r2, r2, #2
 8007346:	58d3      	ldr	r3, [r2, r3]
 8007348:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U)) ;
 800734a:	697b      	ldr	r3, [r7, #20]
 800734c:	2207      	movs	r2, #7
 800734e:	4013      	ands	r3, r2
 8007350:	009b      	lsls	r3, r3, #2
 8007352:	220f      	movs	r2, #15
 8007354:	409a      	lsls	r2, r3
 8007356:	0013      	movs	r3, r2
 8007358:	43da      	mvns	r2, r3
 800735a:	693b      	ldr	r3, [r7, #16]
 800735c:	4013      	ands	r3, r2
 800735e:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U)) ;
 8007360:	683b      	ldr	r3, [r7, #0]
 8007362:	691a      	ldr	r2, [r3, #16]
 8007364:	697b      	ldr	r3, [r7, #20]
 8007366:	2107      	movs	r1, #7
 8007368:	400b      	ands	r3, r1
 800736a:	009b      	lsls	r3, r3, #2
 800736c:	409a      	lsls	r2, r3
 800736e:	0013      	movs	r3, r2
 8007370:	693a      	ldr	r2, [r7, #16]
 8007372:	4313      	orrs	r3, r2
 8007374:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8007376:	697b      	ldr	r3, [r7, #20]
 8007378:	08da      	lsrs	r2, r3, #3
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	3208      	adds	r2, #8
 800737e:	0092      	lsls	r2, r2, #2
 8007380:	6939      	ldr	r1, [r7, #16]
 8007382:	50d1      	str	r1, [r2, r3]
      } 

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8007384:	683b      	ldr	r3, [r7, #0]
 8007386:	685b      	ldr	r3, [r3, #4]
 8007388:	2b01      	cmp	r3, #1
 800738a:	d00b      	beq.n	80073a4 <HAL_GPIO_Init+0xa8>
 800738c:	683b      	ldr	r3, [r7, #0]
 800738e:	685b      	ldr	r3, [r3, #4]
 8007390:	2b02      	cmp	r3, #2
 8007392:	d007      	beq.n	80073a4 <HAL_GPIO_Init+0xa8>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8007394:	683b      	ldr	r3, [r7, #0]
 8007396:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8007398:	2b11      	cmp	r3, #17
 800739a:	d003      	beq.n	80073a4 <HAL_GPIO_Init+0xa8>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800739c:	683b      	ldr	r3, [r7, #0]
 800739e:	685b      	ldr	r3, [r3, #4]
 80073a0:	2b12      	cmp	r3, #18
 80073a2:	d130      	bne.n	8007406 <HAL_GPIO_Init+0x10a>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	689b      	ldr	r3, [r3, #8]
 80073a8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 80073aa:	697b      	ldr	r3, [r7, #20]
 80073ac:	005b      	lsls	r3, r3, #1
 80073ae:	2203      	movs	r2, #3
 80073b0:	409a      	lsls	r2, r3
 80073b2:	0013      	movs	r3, r2
 80073b4:	43da      	mvns	r2, r3
 80073b6:	693b      	ldr	r3, [r7, #16]
 80073b8:	4013      	ands	r3, r2
 80073ba:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80073bc:	683b      	ldr	r3, [r7, #0]
 80073be:	68da      	ldr	r2, [r3, #12]
 80073c0:	697b      	ldr	r3, [r7, #20]
 80073c2:	005b      	lsls	r3, r3, #1
 80073c4:	409a      	lsls	r2, r3
 80073c6:	0013      	movs	r3, r2
 80073c8:	693a      	ldr	r2, [r7, #16]
 80073ca:	4313      	orrs	r3, r2
 80073cc:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	693a      	ldr	r2, [r7, #16]
 80073d2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp= GPIOx->OTYPER;
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	685b      	ldr	r3, [r3, #4]
 80073d8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80073da:	2201      	movs	r2, #1
 80073dc:	697b      	ldr	r3, [r7, #20]
 80073de:	409a      	lsls	r2, r3
 80073e0:	0013      	movs	r3, r2
 80073e2:	43da      	mvns	r2, r3
 80073e4:	693b      	ldr	r3, [r7, #16]
 80073e6:	4013      	ands	r3, r2
 80073e8:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80073ea:	683b      	ldr	r3, [r7, #0]
 80073ec:	685b      	ldr	r3, [r3, #4]
 80073ee:	091b      	lsrs	r3, r3, #4
 80073f0:	2201      	movs	r2, #1
 80073f2:	401a      	ands	r2, r3
 80073f4:	697b      	ldr	r3, [r7, #20]
 80073f6:	409a      	lsls	r2, r3
 80073f8:	0013      	movs	r3, r2
 80073fa:	693a      	ldr	r2, [r7, #16]
 80073fc:	4313      	orrs	r3, r2
 80073fe:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	693a      	ldr	r2, [r7, #16]
 8007404:	605a      	str	r2, [r3, #4]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 800740c:	697b      	ldr	r3, [r7, #20]
 800740e:	005b      	lsls	r3, r3, #1
 8007410:	2203      	movs	r2, #3
 8007412:	409a      	lsls	r2, r3
 8007414:	0013      	movs	r3, r2
 8007416:	43da      	mvns	r2, r3
 8007418:	693b      	ldr	r3, [r7, #16]
 800741a:	4013      	ands	r3, r2
 800741c:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800741e:	683b      	ldr	r3, [r7, #0]
 8007420:	685b      	ldr	r3, [r3, #4]
 8007422:	2203      	movs	r2, #3
 8007424:	401a      	ands	r2, r3
 8007426:	697b      	ldr	r3, [r7, #20]
 8007428:	005b      	lsls	r3, r3, #1
 800742a:	409a      	lsls	r2, r3
 800742c:	0013      	movs	r3, r2
 800742e:	693a      	ldr	r2, [r7, #16]
 8007430:	4313      	orrs	r3, r2
 8007432:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	693a      	ldr	r2, [r7, #16]
 8007438:	601a      	str	r2, [r3, #0]

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	68db      	ldr	r3, [r3, #12]
 800743e:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8007440:	697b      	ldr	r3, [r7, #20]
 8007442:	005b      	lsls	r3, r3, #1
 8007444:	2203      	movs	r2, #3
 8007446:	409a      	lsls	r2, r3
 8007448:	0013      	movs	r3, r2
 800744a:	43da      	mvns	r2, r3
 800744c:	693b      	ldr	r3, [r7, #16]
 800744e:	4013      	ands	r3, r2
 8007450:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2U)); 
 8007452:	683b      	ldr	r3, [r7, #0]
 8007454:	689a      	ldr	r2, [r3, #8]
 8007456:	697b      	ldr	r3, [r7, #20]
 8007458:	005b      	lsls	r3, r3, #1
 800745a:	409a      	lsls	r2, r3
 800745c:	0013      	movs	r3, r2
 800745e:	693a      	ldr	r2, [r7, #16]
 8007460:	4313      	orrs	r3, r2
 8007462:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	693a      	ldr	r2, [r7, #16]
 8007468:	60da      	str	r2, [r3, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 800746a:	683b      	ldr	r3, [r7, #0]
 800746c:	685a      	ldr	r2, [r3, #4]
 800746e:	2380      	movs	r3, #128	; 0x80
 8007470:	055b      	lsls	r3, r3, #21
 8007472:	4013      	ands	r3, r2
 8007474:	d100      	bne.n	8007478 <HAL_GPIO_Init+0x17c>
 8007476:	e0a0      	b.n	80075ba <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007478:	4b57      	ldr	r3, [pc, #348]	; (80075d8 <HAL_GPIO_Init+0x2dc>)
 800747a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800747c:	4b56      	ldr	r3, [pc, #344]	; (80075d8 <HAL_GPIO_Init+0x2dc>)
 800747e:	2101      	movs	r1, #1
 8007480:	430a      	orrs	r2, r1
 8007482:	635a      	str	r2, [r3, #52]	; 0x34
        
        temp = SYSCFG->EXTICR[position >> 2U];
 8007484:	4a55      	ldr	r2, [pc, #340]	; (80075dc <HAL_GPIO_Init+0x2e0>)
 8007486:	697b      	ldr	r3, [r7, #20]
 8007488:	089b      	lsrs	r3, r3, #2
 800748a:	3302      	adds	r3, #2
 800748c:	009b      	lsls	r3, r3, #2
 800748e:	589b      	ldr	r3, [r3, r2]
 8007490:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 8007492:	697b      	ldr	r3, [r7, #20]
 8007494:	2203      	movs	r2, #3
 8007496:	4013      	ands	r3, r2
 8007498:	009b      	lsls	r3, r3, #2
 800749a:	220f      	movs	r2, #15
 800749c:	409a      	lsls	r2, r3
 800749e:	0013      	movs	r3, r2
 80074a0:	43da      	mvns	r2, r3
 80074a2:	693b      	ldr	r3, [r7, #16]
 80074a4:	4013      	ands	r3, r2
 80074a6:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80074a8:	687a      	ldr	r2, [r7, #4]
 80074aa:	23a0      	movs	r3, #160	; 0xa0
 80074ac:	05db      	lsls	r3, r3, #23
 80074ae:	429a      	cmp	r2, r3
 80074b0:	d01f      	beq.n	80074f2 <HAL_GPIO_Init+0x1f6>
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	4a4a      	ldr	r2, [pc, #296]	; (80075e0 <HAL_GPIO_Init+0x2e4>)
 80074b6:	4293      	cmp	r3, r2
 80074b8:	d019      	beq.n	80074ee <HAL_GPIO_Init+0x1f2>
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	4a49      	ldr	r2, [pc, #292]	; (80075e4 <HAL_GPIO_Init+0x2e8>)
 80074be:	4293      	cmp	r3, r2
 80074c0:	d013      	beq.n	80074ea <HAL_GPIO_Init+0x1ee>
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	4a48      	ldr	r2, [pc, #288]	; (80075e8 <HAL_GPIO_Init+0x2ec>)
 80074c6:	4293      	cmp	r3, r2
 80074c8:	d00d      	beq.n	80074e6 <HAL_GPIO_Init+0x1ea>
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	4a47      	ldr	r2, [pc, #284]	; (80075ec <HAL_GPIO_Init+0x2f0>)
 80074ce:	4293      	cmp	r3, r2
 80074d0:	d007      	beq.n	80074e2 <HAL_GPIO_Init+0x1e6>
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	4a46      	ldr	r2, [pc, #280]	; (80075f0 <HAL_GPIO_Init+0x2f4>)
 80074d6:	4293      	cmp	r3, r2
 80074d8:	d101      	bne.n	80074de <HAL_GPIO_Init+0x1e2>
 80074da:	2305      	movs	r3, #5
 80074dc:	e00a      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074de:	2306      	movs	r3, #6
 80074e0:	e008      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074e2:	2304      	movs	r3, #4
 80074e4:	e006      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074e6:	2303      	movs	r3, #3
 80074e8:	e004      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074ea:	2302      	movs	r3, #2
 80074ec:	e002      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074ee:	2301      	movs	r3, #1
 80074f0:	e000      	b.n	80074f4 <HAL_GPIO_Init+0x1f8>
 80074f2:	2300      	movs	r3, #0
 80074f4:	697a      	ldr	r2, [r7, #20]
 80074f6:	2103      	movs	r1, #3
 80074f8:	400a      	ands	r2, r1
 80074fa:	0092      	lsls	r2, r2, #2
 80074fc:	4093      	lsls	r3, r2
 80074fe:	693a      	ldr	r2, [r7, #16]
 8007500:	4313      	orrs	r3, r2
 8007502:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007504:	4935      	ldr	r1, [pc, #212]	; (80075dc <HAL_GPIO_Init+0x2e0>)
 8007506:	697b      	ldr	r3, [r7, #20]
 8007508:	089b      	lsrs	r3, r3, #2
 800750a:	3302      	adds	r3, #2
 800750c:	009b      	lsls	r3, r3, #2
 800750e:	693a      	ldr	r2, [r7, #16]
 8007510:	505a      	str	r2, [r3, r1]
                  
        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007512:	4b38      	ldr	r3, [pc, #224]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 8007514:	681b      	ldr	r3, [r3, #0]
 8007516:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8007518:	68fb      	ldr	r3, [r7, #12]
 800751a:	43da      	mvns	r2, r3
 800751c:	693b      	ldr	r3, [r7, #16]
 800751e:	4013      	ands	r3, r2
 8007520:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8007522:	683b      	ldr	r3, [r7, #0]
 8007524:	685a      	ldr	r2, [r3, #4]
 8007526:	2380      	movs	r3, #128	; 0x80
 8007528:	025b      	lsls	r3, r3, #9
 800752a:	4013      	ands	r3, r2
 800752c:	d003      	beq.n	8007536 <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 800752e:	693a      	ldr	r2, [r7, #16]
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	4313      	orrs	r3, r2
 8007534:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8007536:	4b2f      	ldr	r3, [pc, #188]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 8007538:	693a      	ldr	r2, [r7, #16]
 800753a:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 800753c:	4b2d      	ldr	r3, [pc, #180]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 800753e:	685b      	ldr	r3, [r3, #4]
 8007540:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	43da      	mvns	r2, r3
 8007546:	693b      	ldr	r3, [r7, #16]
 8007548:	4013      	ands	r3, r2
 800754a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	685a      	ldr	r2, [r3, #4]
 8007550:	2380      	movs	r3, #128	; 0x80
 8007552:	029b      	lsls	r3, r3, #10
 8007554:	4013      	ands	r3, r2
 8007556:	d003      	beq.n	8007560 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8007558:	693a      	ldr	r2, [r7, #16]
 800755a:	68fb      	ldr	r3, [r7, #12]
 800755c:	4313      	orrs	r3, r2
 800755e:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8007560:	4b24      	ldr	r3, [pc, #144]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 8007562:	693a      	ldr	r2, [r7, #16]
 8007564:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007566:	4b23      	ldr	r3, [pc, #140]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 8007568:	689b      	ldr	r3, [r3, #8]
 800756a:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	43da      	mvns	r2, r3
 8007570:	693b      	ldr	r3, [r7, #16]
 8007572:	4013      	ands	r3, r2
 8007574:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8007576:	683b      	ldr	r3, [r7, #0]
 8007578:	685a      	ldr	r2, [r3, #4]
 800757a:	2380      	movs	r3, #128	; 0x80
 800757c:	035b      	lsls	r3, r3, #13
 800757e:	4013      	ands	r3, r2
 8007580:	d003      	beq.n	800758a <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 8007582:	693a      	ldr	r2, [r7, #16]
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	4313      	orrs	r3, r2
 8007588:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 800758a:	4b1a      	ldr	r3, [pc, #104]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 800758c:	693a      	ldr	r2, [r7, #16]
 800758e:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8007590:	4b18      	ldr	r3, [pc, #96]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 8007592:	68db      	ldr	r3, [r3, #12]
 8007594:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	43da      	mvns	r2, r3
 800759a:	693b      	ldr	r3, [r7, #16]
 800759c:	4013      	ands	r3, r2
 800759e:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80075a0:	683b      	ldr	r3, [r7, #0]
 80075a2:	685a      	ldr	r2, [r3, #4]
 80075a4:	2380      	movs	r3, #128	; 0x80
 80075a6:	039b      	lsls	r3, r3, #14
 80075a8:	4013      	ands	r3, r2
 80075aa:	d003      	beq.n	80075b4 <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 80075ac:	693a      	ldr	r2, [r7, #16]
 80075ae:	68fb      	ldr	r3, [r7, #12]
 80075b0:	4313      	orrs	r3, r2
 80075b2:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80075b4:	4b0f      	ldr	r3, [pc, #60]	; (80075f4 <HAL_GPIO_Init+0x2f8>)
 80075b6:	693a      	ldr	r2, [r7, #16]
 80075b8:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 80075ba:	697b      	ldr	r3, [r7, #20]
 80075bc:	3301      	adds	r3, #1
 80075be:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 80075c0:	683b      	ldr	r3, [r7, #0]
 80075c2:	681a      	ldr	r2, [r3, #0]
 80075c4:	697b      	ldr	r3, [r7, #20]
 80075c6:	40da      	lsrs	r2, r3
 80075c8:	1e13      	subs	r3, r2, #0
 80075ca:	d000      	beq.n	80075ce <HAL_GPIO_Init+0x2d2>
 80075cc:	e6a2      	b.n	8007314 <HAL_GPIO_Init+0x18>
  }
}
 80075ce:	46c0      	nop			; (mov r8, r8)
 80075d0:	46bd      	mov	sp, r7
 80075d2:	b006      	add	sp, #24
 80075d4:	bd80      	pop	{r7, pc}
 80075d6:	46c0      	nop			; (mov r8, r8)
 80075d8:	40021000 	.word	0x40021000
 80075dc:	40010000 	.word	0x40010000
 80075e0:	50000400 	.word	0x50000400
 80075e4:	50000800 	.word	0x50000800
 80075e8:	50000c00 	.word	0x50000c00
 80075ec:	50001000 	.word	0x50001000
 80075f0:	50001c00 	.word	0x50001c00
 80075f4:	40010400 	.word	0x40010400

080075f8 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80075f8:	b580      	push	{r7, lr}
 80075fa:	b082      	sub	sp, #8
 80075fc:	af00      	add	r7, sp, #0
 80075fe:	6078      	str	r0, [r7, #4]
 8007600:	0008      	movs	r0, r1
 8007602:	0011      	movs	r1, r2
 8007604:	1cbb      	adds	r3, r7, #2
 8007606:	1c02      	adds	r2, r0, #0
 8007608:	801a      	strh	r2, [r3, #0]
 800760a:	1c7b      	adds	r3, r7, #1
 800760c:	1c0a      	adds	r2, r1, #0
 800760e:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));
  
  if(PinState != GPIO_PIN_RESET)
 8007610:	1c7b      	adds	r3, r7, #1
 8007612:	781b      	ldrb	r3, [r3, #0]
 8007614:	2b00      	cmp	r3, #0
 8007616:	d004      	beq.n	8007622 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 8007618:	1cbb      	adds	r3, r7, #2
 800761a:	881a      	ldrh	r2, [r3, #0]
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8007620:	e003      	b.n	800762a <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8007622:	1cbb      	adds	r3, r7, #2
 8007624:	881a      	ldrh	r2, [r3, #0]
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	629a      	str	r2, [r3, #40]	; 0x28
}
 800762a:	46c0      	nop			; (mov r8, r8)
 800762c:	46bd      	mov	sp, r7
 800762e:	b002      	add	sp, #8
 8007630:	bd80      	pop	{r7, pc}
	...

08007634 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected to the EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8007634:	b580      	push	{r7, lr}
 8007636:	b082      	sub	sp, #8
 8007638:	af00      	add	r7, sp, #0
 800763a:	0002      	movs	r2, r0
 800763c:	1dbb      	adds	r3, r7, #6
 800763e:	801a      	strh	r2, [r3, #0]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET) 
 8007640:	4b09      	ldr	r3, [pc, #36]	; (8007668 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 8007642:	695b      	ldr	r3, [r3, #20]
 8007644:	1dba      	adds	r2, r7, #6
 8007646:	8812      	ldrh	r2, [r2, #0]
 8007648:	4013      	ands	r3, r2
 800764a:	d008      	beq.n	800765e <HAL_GPIO_EXTI_IRQHandler+0x2a>
  { 
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800764c:	4b06      	ldr	r3, [pc, #24]	; (8007668 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 800764e:	1dba      	adds	r2, r7, #6
 8007650:	8812      	ldrh	r2, [r2, #0]
 8007652:	615a      	str	r2, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8007654:	1dbb      	adds	r3, r7, #6
 8007656:	881b      	ldrh	r3, [r3, #0]
 8007658:	0018      	movs	r0, r3
 800765a:	f000 f807 	bl	800766c <HAL_GPIO_EXTI_Callback>
  }
}
 800765e:	46c0      	nop			; (mov r8, r8)
 8007660:	46bd      	mov	sp, r7
 8007662:	b002      	add	sp, #8
 8007664:	bd80      	pop	{r7, pc}
 8007666:	46c0      	nop			; (mov r8, r8)
 8007668:	40010400 	.word	0x40010400

0800766c <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected to the EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800766c:	b580      	push	{r7, lr}
 800766e:	b082      	sub	sp, #8
 8007670:	af00      	add	r7, sp, #0
 8007672:	0002      	movs	r2, r0
 8007674:	1dbb      	adds	r3, r7, #6
 8007676:	801a      	strh	r2, [r3, #0]
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */ 
}
 8007678:	46c0      	nop			; (mov r8, r8)
 800767a:	46bd      	mov	sp, r7
 800767c:	b002      	add	sp, #8
 800767e:	bd80      	pop	{r7, pc}

08007680 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007680:	b5b0      	push	{r4, r5, r7, lr}
 8007682:	b08a      	sub	sp, #40	; 0x28
 8007684:	af00      	add	r7, sp, #0
 8007686:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check the parameters */
  if(RCC_OscInitStruct == NULL)
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	2b00      	cmp	r3, #0
 800768c:	d102      	bne.n	8007694 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 800768e:	2301      	movs	r3, #1
 8007690:	f000 fbbc 	bl	8007e0c <HAL_RCC_OscConfig+0x78c>
  }

  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007694:	4bc8      	ldr	r3, [pc, #800]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007696:	68db      	ldr	r3, [r3, #12]
 8007698:	220c      	movs	r2, #12
 800769a:	4013      	ands	r3, r2
 800769c:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 800769e:	4bc6      	ldr	r3, [pc, #792]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80076a0:	68da      	ldr	r2, [r3, #12]
 80076a2:	2380      	movs	r3, #128	; 0x80
 80076a4:	025b      	lsls	r3, r3, #9
 80076a6:	4013      	ands	r3, r2
 80076a8:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	681b      	ldr	r3, [r3, #0]
 80076ae:	2201      	movs	r2, #1
 80076b0:	4013      	ands	r3, r2
 80076b2:	d100      	bne.n	80076b6 <HAL_RCC_OscConfig+0x36>
 80076b4:	e07e      	b.n	80077b4 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80076b6:	69fb      	ldr	r3, [r7, #28]
 80076b8:	2b08      	cmp	r3, #8
 80076ba:	d007      	beq.n	80076cc <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 80076bc:	69fb      	ldr	r3, [r7, #28]
 80076be:	2b0c      	cmp	r3, #12
 80076c0:	d112      	bne.n	80076e8 <HAL_RCC_OscConfig+0x68>
 80076c2:	69ba      	ldr	r2, [r7, #24]
 80076c4:	2380      	movs	r3, #128	; 0x80
 80076c6:	025b      	lsls	r3, r3, #9
 80076c8:	429a      	cmp	r2, r3
 80076ca:	d10d      	bne.n	80076e8 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80076cc:	4bba      	ldr	r3, [pc, #744]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80076ce:	681a      	ldr	r2, [r3, #0]
 80076d0:	2380      	movs	r3, #128	; 0x80
 80076d2:	029b      	lsls	r3, r3, #10
 80076d4:	4013      	ands	r3, r2
 80076d6:	d100      	bne.n	80076da <HAL_RCC_OscConfig+0x5a>
 80076d8:	e06b      	b.n	80077b2 <HAL_RCC_OscConfig+0x132>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	685b      	ldr	r3, [r3, #4]
 80076de:	2b00      	cmp	r3, #0
 80076e0:	d167      	bne.n	80077b2 <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 80076e2:	2301      	movs	r3, #1
 80076e4:	f000 fb92 	bl	8007e0c <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	685a      	ldr	r2, [r3, #4]
 80076ec:	2380      	movs	r3, #128	; 0x80
 80076ee:	025b      	lsls	r3, r3, #9
 80076f0:	429a      	cmp	r2, r3
 80076f2:	d107      	bne.n	8007704 <HAL_RCC_OscConfig+0x84>
 80076f4:	4bb0      	ldr	r3, [pc, #704]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80076f6:	681a      	ldr	r2, [r3, #0]
 80076f8:	4baf      	ldr	r3, [pc, #700]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80076fa:	2180      	movs	r1, #128	; 0x80
 80076fc:	0249      	lsls	r1, r1, #9
 80076fe:	430a      	orrs	r2, r1
 8007700:	601a      	str	r2, [r3, #0]
 8007702:	e027      	b.n	8007754 <HAL_RCC_OscConfig+0xd4>
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	685a      	ldr	r2, [r3, #4]
 8007708:	23a0      	movs	r3, #160	; 0xa0
 800770a:	02db      	lsls	r3, r3, #11
 800770c:	429a      	cmp	r2, r3
 800770e:	d10e      	bne.n	800772e <HAL_RCC_OscConfig+0xae>
 8007710:	4ba9      	ldr	r3, [pc, #676]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007712:	681a      	ldr	r2, [r3, #0]
 8007714:	4ba8      	ldr	r3, [pc, #672]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007716:	2180      	movs	r1, #128	; 0x80
 8007718:	02c9      	lsls	r1, r1, #11
 800771a:	430a      	orrs	r2, r1
 800771c:	601a      	str	r2, [r3, #0]
 800771e:	4ba6      	ldr	r3, [pc, #664]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007720:	681a      	ldr	r2, [r3, #0]
 8007722:	4ba5      	ldr	r3, [pc, #660]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007724:	2180      	movs	r1, #128	; 0x80
 8007726:	0249      	lsls	r1, r1, #9
 8007728:	430a      	orrs	r2, r1
 800772a:	601a      	str	r2, [r3, #0]
 800772c:	e012      	b.n	8007754 <HAL_RCC_OscConfig+0xd4>
 800772e:	4ba2      	ldr	r3, [pc, #648]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007730:	681a      	ldr	r2, [r3, #0]
 8007732:	4ba1      	ldr	r3, [pc, #644]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007734:	49a1      	ldr	r1, [pc, #644]	; (80079bc <HAL_RCC_OscConfig+0x33c>)
 8007736:	400a      	ands	r2, r1
 8007738:	601a      	str	r2, [r3, #0]
 800773a:	4b9f      	ldr	r3, [pc, #636]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800773c:	681a      	ldr	r2, [r3, #0]
 800773e:	2380      	movs	r3, #128	; 0x80
 8007740:	025b      	lsls	r3, r3, #9
 8007742:	4013      	ands	r3, r2
 8007744:	60fb      	str	r3, [r7, #12]
 8007746:	68fb      	ldr	r3, [r7, #12]
 8007748:	4b9b      	ldr	r3, [pc, #620]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800774a:	681a      	ldr	r2, [r3, #0]
 800774c:	4b9a      	ldr	r3, [pc, #616]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800774e:	499c      	ldr	r1, [pc, #624]	; (80079c0 <HAL_RCC_OscConfig+0x340>)
 8007750:	400a      	ands	r2, r1
 8007752:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	685b      	ldr	r3, [r3, #4]
 8007758:	2b00      	cmp	r3, #0
 800775a:	d015      	beq.n	8007788 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800775c:	f7ff f97c 	bl	8006a58 <HAL_GetTick>
 8007760:	0003      	movs	r3, r0
 8007762:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007764:	e009      	b.n	800777a <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007766:	f7ff f977 	bl	8006a58 <HAL_GetTick>
 800776a:	0002      	movs	r2, r0
 800776c:	697b      	ldr	r3, [r7, #20]
 800776e:	1ad3      	subs	r3, r2, r3
 8007770:	2b64      	cmp	r3, #100	; 0x64
 8007772:	d902      	bls.n	800777a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8007774:	2303      	movs	r3, #3
 8007776:	f000 fb49 	bl	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800777a:	4b8f      	ldr	r3, [pc, #572]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800777c:	681a      	ldr	r2, [r3, #0]
 800777e:	2380      	movs	r3, #128	; 0x80
 8007780:	029b      	lsls	r3, r3, #10
 8007782:	4013      	ands	r3, r2
 8007784:	d0ef      	beq.n	8007766 <HAL_RCC_OscConfig+0xe6>
 8007786:	e015      	b.n	80077b4 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007788:	f7ff f966 	bl	8006a58 <HAL_GetTick>
 800778c:	0003      	movs	r3, r0
 800778e:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8007790:	e008      	b.n	80077a4 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007792:	f7ff f961 	bl	8006a58 <HAL_GetTick>
 8007796:	0002      	movs	r2, r0
 8007798:	697b      	ldr	r3, [r7, #20]
 800779a:	1ad3      	subs	r3, r2, r3
 800779c:	2b64      	cmp	r3, #100	; 0x64
 800779e:	d901      	bls.n	80077a4 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 80077a0:	2303      	movs	r3, #3
 80077a2:	e333      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80077a4:	4b84      	ldr	r3, [pc, #528]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80077a6:	681a      	ldr	r2, [r3, #0]
 80077a8:	2380      	movs	r3, #128	; 0x80
 80077aa:	029b      	lsls	r3, r3, #10
 80077ac:	4013      	ands	r3, r2
 80077ae:	d1f0      	bne.n	8007792 <HAL_RCC_OscConfig+0x112>
 80077b0:	e000      	b.n	80077b4 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80077b2:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	2202      	movs	r2, #2
 80077ba:	4013      	ands	r3, r2
 80077bc:	d100      	bne.n	80077c0 <HAL_RCC_OscConfig+0x140>
 80077be:	e098      	b.n	80078f2 <HAL_RCC_OscConfig+0x272>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	68db      	ldr	r3, [r3, #12]
 80077c4:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 80077c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077c8:	2220      	movs	r2, #32
 80077ca:	4013      	ands	r3, r2
 80077cc:	d009      	beq.n	80077e2 <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 80077ce:	4b7a      	ldr	r3, [pc, #488]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80077d0:	681a      	ldr	r2, [r3, #0]
 80077d2:	4b79      	ldr	r3, [pc, #484]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80077d4:	2120      	movs	r1, #32
 80077d6:	430a      	orrs	r2, r1
 80077d8:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 80077da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077dc:	2220      	movs	r2, #32
 80077de:	4393      	bics	r3, r2
 80077e0:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 80077e2:	69fb      	ldr	r3, [r7, #28]
 80077e4:	2b04      	cmp	r3, #4
 80077e6:	d005      	beq.n	80077f4 <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 80077e8:	69fb      	ldr	r3, [r7, #28]
 80077ea:	2b0c      	cmp	r3, #12
 80077ec:	d13d      	bne.n	800786a <HAL_RCC_OscConfig+0x1ea>
 80077ee:	69bb      	ldr	r3, [r7, #24]
 80077f0:	2b00      	cmp	r3, #0
 80077f2:	d13a      	bne.n	800786a <HAL_RCC_OscConfig+0x1ea>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 80077f4:	4b70      	ldr	r3, [pc, #448]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	2204      	movs	r2, #4
 80077fa:	4013      	ands	r3, r2
 80077fc:	d004      	beq.n	8007808 <HAL_RCC_OscConfig+0x188>
 80077fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007800:	2b00      	cmp	r3, #0
 8007802:	d101      	bne.n	8007808 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8007804:	2301      	movs	r3, #1
 8007806:	e301      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007808:	4b6b      	ldr	r3, [pc, #428]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800780a:	685b      	ldr	r3, [r3, #4]
 800780c:	4a6d      	ldr	r2, [pc, #436]	; (80079c4 <HAL_RCC_OscConfig+0x344>)
 800780e:	4013      	ands	r3, r2
 8007810:	0019      	movs	r1, r3
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	691b      	ldr	r3, [r3, #16]
 8007816:	021a      	lsls	r2, r3, #8
 8007818:	4b67      	ldr	r3, [pc, #412]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800781a:	430a      	orrs	r2, r1
 800781c:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 800781e:	4b66      	ldr	r3, [pc, #408]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	2209      	movs	r2, #9
 8007824:	4393      	bics	r3, r2
 8007826:	0019      	movs	r1, r3
 8007828:	4b63      	ldr	r3, [pc, #396]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800782a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800782c:	430a      	orrs	r2, r1
 800782e:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007830:	f000 fc20 	bl	8008074 <HAL_RCC_GetSysClockFreq>
 8007834:	0001      	movs	r1, r0
 8007836:	4b60      	ldr	r3, [pc, #384]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007838:	68db      	ldr	r3, [r3, #12]
 800783a:	091b      	lsrs	r3, r3, #4
 800783c:	220f      	movs	r2, #15
 800783e:	4013      	ands	r3, r2
 8007840:	4a61      	ldr	r2, [pc, #388]	; (80079c8 <HAL_RCC_OscConfig+0x348>)
 8007842:	5cd3      	ldrb	r3, [r2, r3]
 8007844:	000a      	movs	r2, r1
 8007846:	40da      	lsrs	r2, r3
 8007848:	4b60      	ldr	r3, [pc, #384]	; (80079cc <HAL_RCC_OscConfig+0x34c>)
 800784a:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (TICK_INT_PRIORITY);
 800784c:	2513      	movs	r5, #19
 800784e:	197c      	adds	r4, r7, r5
 8007850:	2000      	movs	r0, #0
 8007852:	f7ff f8cb 	bl	80069ec <HAL_InitTick>
 8007856:	0003      	movs	r3, r0
 8007858:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 800785a:	197b      	adds	r3, r7, r5
 800785c:	781b      	ldrb	r3, [r3, #0]
 800785e:	2b00      	cmp	r3, #0
 8007860:	d047      	beq.n	80078f2 <HAL_RCC_OscConfig+0x272>
      {
        return status;
 8007862:	2313      	movs	r3, #19
 8007864:	18fb      	adds	r3, r7, r3
 8007866:	781b      	ldrb	r3, [r3, #0]
 8007868:	e2d0      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 800786a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800786c:	2b00      	cmp	r3, #0
 800786e:	d027      	beq.n	80078c0 <HAL_RCC_OscConfig+0x240>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8007870:	4b51      	ldr	r3, [pc, #324]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	2209      	movs	r2, #9
 8007876:	4393      	bics	r3, r2
 8007878:	0019      	movs	r1, r3
 800787a:	4b4f      	ldr	r3, [pc, #316]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800787c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800787e:	430a      	orrs	r2, r1
 8007880:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007882:	f7ff f8e9 	bl	8006a58 <HAL_GetTick>
 8007886:	0003      	movs	r3, r0
 8007888:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800788a:	e008      	b.n	800789e <HAL_RCC_OscConfig+0x21e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800788c:	f7ff f8e4 	bl	8006a58 <HAL_GetTick>
 8007890:	0002      	movs	r2, r0
 8007892:	697b      	ldr	r3, [r7, #20]
 8007894:	1ad3      	subs	r3, r2, r3
 8007896:	2b02      	cmp	r3, #2
 8007898:	d901      	bls.n	800789e <HAL_RCC_OscConfig+0x21e>
          {
            return HAL_TIMEOUT;
 800789a:	2303      	movs	r3, #3
 800789c:	e2b6      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800789e:	4b46      	ldr	r3, [pc, #280]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	2204      	movs	r2, #4
 80078a4:	4013      	ands	r3, r2
 80078a6:	d0f1      	beq.n	800788c <HAL_RCC_OscConfig+0x20c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80078a8:	4b43      	ldr	r3, [pc, #268]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078aa:	685b      	ldr	r3, [r3, #4]
 80078ac:	4a45      	ldr	r2, [pc, #276]	; (80079c4 <HAL_RCC_OscConfig+0x344>)
 80078ae:	4013      	ands	r3, r2
 80078b0:	0019      	movs	r1, r3
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	691b      	ldr	r3, [r3, #16]
 80078b6:	021a      	lsls	r2, r3, #8
 80078b8:	4b3f      	ldr	r3, [pc, #252]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078ba:	430a      	orrs	r2, r1
 80078bc:	605a      	str	r2, [r3, #4]
 80078be:	e018      	b.n	80078f2 <HAL_RCC_OscConfig+0x272>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80078c0:	4b3d      	ldr	r3, [pc, #244]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078c2:	681a      	ldr	r2, [r3, #0]
 80078c4:	4b3c      	ldr	r3, [pc, #240]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078c6:	2101      	movs	r1, #1
 80078c8:	438a      	bics	r2, r1
 80078ca:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80078cc:	f7ff f8c4 	bl	8006a58 <HAL_GetTick>
 80078d0:	0003      	movs	r3, r0
 80078d2:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80078d4:	e008      	b.n	80078e8 <HAL_RCC_OscConfig+0x268>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80078d6:	f7ff f8bf 	bl	8006a58 <HAL_GetTick>
 80078da:	0002      	movs	r2, r0
 80078dc:	697b      	ldr	r3, [r7, #20]
 80078de:	1ad3      	subs	r3, r2, r3
 80078e0:	2b02      	cmp	r3, #2
 80078e2:	d901      	bls.n	80078e8 <HAL_RCC_OscConfig+0x268>
          {
            return HAL_TIMEOUT;
 80078e4:	2303      	movs	r3, #3
 80078e6:	e291      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80078e8:	4b33      	ldr	r3, [pc, #204]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 80078ea:	681b      	ldr	r3, [r3, #0]
 80078ec:	2204      	movs	r2, #4
 80078ee:	4013      	ands	r3, r2
 80078f0:	d1f1      	bne.n	80078d6 <HAL_RCC_OscConfig+0x256>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	681b      	ldr	r3, [r3, #0]
 80078f6:	2210      	movs	r2, #16
 80078f8:	4013      	ands	r3, r2
 80078fa:	d100      	bne.n	80078fe <HAL_RCC_OscConfig+0x27e>
 80078fc:	e09f      	b.n	8007a3e <HAL_RCC_OscConfig+0x3be>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if((sysclk_source == RCC_CFGR_SWS_MSI) )
 80078fe:	69fb      	ldr	r3, [r7, #28]
 8007900:	2b00      	cmp	r3, #0
 8007902:	d13f      	bne.n	8007984 <HAL_RCC_OscConfig+0x304>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8007904:	4b2c      	ldr	r3, [pc, #176]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007906:	681a      	ldr	r2, [r3, #0]
 8007908:	2380      	movs	r3, #128	; 0x80
 800790a:	009b      	lsls	r3, r3, #2
 800790c:	4013      	ands	r3, r2
 800790e:	d005      	beq.n	800791c <HAL_RCC_OscConfig+0x29c>
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	69db      	ldr	r3, [r3, #28]
 8007914:	2b00      	cmp	r3, #0
 8007916:	d101      	bne.n	800791c <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 8007918:	2301      	movs	r3, #1
 800791a:	e277      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 800791c:	4b26      	ldr	r3, [pc, #152]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800791e:	685b      	ldr	r3, [r3, #4]
 8007920:	4a2b      	ldr	r2, [pc, #172]	; (80079d0 <HAL_RCC_OscConfig+0x350>)
 8007922:	4013      	ands	r3, r2
 8007924:	0019      	movs	r1, r3
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800792a:	4b23      	ldr	r3, [pc, #140]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800792c:	430a      	orrs	r2, r1
 800792e:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8007930:	4b21      	ldr	r3, [pc, #132]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007932:	685b      	ldr	r3, [r3, #4]
 8007934:	021b      	lsls	r3, r3, #8
 8007936:	0a19      	lsrs	r1, r3, #8
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	6a1b      	ldr	r3, [r3, #32]
 800793c:	061a      	lsls	r2, r3, #24
 800793e:	4b1e      	ldr	r3, [pc, #120]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007940:	430a      	orrs	r2, r1
 8007942:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007948:	0b5b      	lsrs	r3, r3, #13
 800794a:	3301      	adds	r3, #1
 800794c:	2280      	movs	r2, #128	; 0x80
 800794e:	0212      	lsls	r2, r2, #8
 8007950:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8007952:	4b19      	ldr	r3, [pc, #100]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007954:	68db      	ldr	r3, [r3, #12]
 8007956:	091b      	lsrs	r3, r3, #4
 8007958:	210f      	movs	r1, #15
 800795a:	400b      	ands	r3, r1
 800795c:	491a      	ldr	r1, [pc, #104]	; (80079c8 <HAL_RCC_OscConfig+0x348>)
 800795e:	5ccb      	ldrb	r3, [r1, r3]
 8007960:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8007962:	4b1a      	ldr	r3, [pc, #104]	; (80079cc <HAL_RCC_OscConfig+0x34c>)
 8007964:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8007966:	2513      	movs	r5, #19
 8007968:	197c      	adds	r4, r7, r5
 800796a:	2000      	movs	r0, #0
 800796c:	f7ff f83e 	bl	80069ec <HAL_InitTick>
 8007970:	0003      	movs	r3, r0
 8007972:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8007974:	197b      	adds	r3, r7, r5
 8007976:	781b      	ldrb	r3, [r3, #0]
 8007978:	2b00      	cmp	r3, #0
 800797a:	d060      	beq.n	8007a3e <HAL_RCC_OscConfig+0x3be>
        {
          return status;
 800797c:	2313      	movs	r3, #19
 800797e:	18fb      	adds	r3, r7, r3
 8007980:	781b      	ldrb	r3, [r3, #0]
 8007982:	e243      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	69db      	ldr	r3, [r3, #28]
 8007988:	2b00      	cmp	r3, #0
 800798a:	d03e      	beq.n	8007a0a <HAL_RCC_OscConfig+0x38a>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 800798c:	4b0a      	ldr	r3, [pc, #40]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 800798e:	681a      	ldr	r2, [r3, #0]
 8007990:	4b09      	ldr	r3, [pc, #36]	; (80079b8 <HAL_RCC_OscConfig+0x338>)
 8007992:	2180      	movs	r1, #128	; 0x80
 8007994:	0049      	lsls	r1, r1, #1
 8007996:	430a      	orrs	r2, r1
 8007998:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800799a:	f7ff f85d 	bl	8006a58 <HAL_GetTick>
 800799e:	0003      	movs	r3, r0
 80079a0:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80079a2:	e017      	b.n	80079d4 <HAL_RCC_OscConfig+0x354>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80079a4:	f7ff f858 	bl	8006a58 <HAL_GetTick>
 80079a8:	0002      	movs	r2, r0
 80079aa:	697b      	ldr	r3, [r7, #20]
 80079ac:	1ad3      	subs	r3, r2, r3
 80079ae:	2b02      	cmp	r3, #2
 80079b0:	d910      	bls.n	80079d4 <HAL_RCC_OscConfig+0x354>
          {
            return HAL_TIMEOUT;
 80079b2:	2303      	movs	r3, #3
 80079b4:	e22a      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
 80079b6:	46c0      	nop			; (mov r8, r8)
 80079b8:	40021000 	.word	0x40021000
 80079bc:	fffeffff 	.word	0xfffeffff
 80079c0:	fffbffff 	.word	0xfffbffff
 80079c4:	ffffe0ff 	.word	0xffffe0ff
 80079c8:	0800dd18 	.word	0x0800dd18
 80079cc:	200000fc 	.word	0x200000fc
 80079d0:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80079d4:	4bc6      	ldr	r3, [pc, #792]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 80079d6:	681a      	ldr	r2, [r3, #0]
 80079d8:	2380      	movs	r3, #128	; 0x80
 80079da:	009b      	lsls	r3, r3, #2
 80079dc:	4013      	ands	r3, r2
 80079de:	d0e1      	beq.n	80079a4 <HAL_RCC_OscConfig+0x324>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80079e0:	4bc3      	ldr	r3, [pc, #780]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 80079e2:	685b      	ldr	r3, [r3, #4]
 80079e4:	4ac3      	ldr	r2, [pc, #780]	; (8007cf4 <HAL_RCC_OscConfig+0x674>)
 80079e6:	4013      	ands	r3, r2
 80079e8:	0019      	movs	r1, r3
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80079ee:	4bc0      	ldr	r3, [pc, #768]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 80079f0:	430a      	orrs	r2, r1
 80079f2:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80079f4:	4bbe      	ldr	r3, [pc, #760]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 80079f6:	685b      	ldr	r3, [r3, #4]
 80079f8:	021b      	lsls	r3, r3, #8
 80079fa:	0a19      	lsrs	r1, r3, #8
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	6a1b      	ldr	r3, [r3, #32]
 8007a00:	061a      	lsls	r2, r3, #24
 8007a02:	4bbb      	ldr	r3, [pc, #748]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a04:	430a      	orrs	r2, r1
 8007a06:	605a      	str	r2, [r3, #4]
 8007a08:	e019      	b.n	8007a3e <HAL_RCC_OscConfig+0x3be>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8007a0a:	4bb9      	ldr	r3, [pc, #740]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a0c:	681a      	ldr	r2, [r3, #0]
 8007a0e:	4bb8      	ldr	r3, [pc, #736]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a10:	49b9      	ldr	r1, [pc, #740]	; (8007cf8 <HAL_RCC_OscConfig+0x678>)
 8007a12:	400a      	ands	r2, r1
 8007a14:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007a16:	f7ff f81f 	bl	8006a58 <HAL_GetTick>
 8007a1a:	0003      	movs	r3, r0
 8007a1c:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8007a1e:	e008      	b.n	8007a32 <HAL_RCC_OscConfig+0x3b2>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8007a20:	f7ff f81a 	bl	8006a58 <HAL_GetTick>
 8007a24:	0002      	movs	r2, r0
 8007a26:	697b      	ldr	r3, [r7, #20]
 8007a28:	1ad3      	subs	r3, r2, r3
 8007a2a:	2b02      	cmp	r3, #2
 8007a2c:	d901      	bls.n	8007a32 <HAL_RCC_OscConfig+0x3b2>
          {
            return HAL_TIMEOUT;
 8007a2e:	2303      	movs	r3, #3
 8007a30:	e1ec      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8007a32:	4baf      	ldr	r3, [pc, #700]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a34:	681a      	ldr	r2, [r3, #0]
 8007a36:	2380      	movs	r3, #128	; 0x80
 8007a38:	009b      	lsls	r3, r3, #2
 8007a3a:	4013      	ands	r3, r2
 8007a3c:	d1f0      	bne.n	8007a20 <HAL_RCC_OscConfig+0x3a0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007a3e:	687b      	ldr	r3, [r7, #4]
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	2208      	movs	r2, #8
 8007a44:	4013      	ands	r3, r2
 8007a46:	d036      	beq.n	8007ab6 <HAL_RCC_OscConfig+0x436>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	695b      	ldr	r3, [r3, #20]
 8007a4c:	2b00      	cmp	r3, #0
 8007a4e:	d019      	beq.n	8007a84 <HAL_RCC_OscConfig+0x404>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8007a50:	4ba7      	ldr	r3, [pc, #668]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a52:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007a54:	4ba6      	ldr	r3, [pc, #664]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a56:	2101      	movs	r1, #1
 8007a58:	430a      	orrs	r2, r1
 8007a5a:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007a5c:	f7fe fffc 	bl	8006a58 <HAL_GetTick>
 8007a60:	0003      	movs	r3, r0
 8007a62:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8007a64:	e008      	b.n	8007a78 <HAL_RCC_OscConfig+0x3f8>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007a66:	f7fe fff7 	bl	8006a58 <HAL_GetTick>
 8007a6a:	0002      	movs	r2, r0
 8007a6c:	697b      	ldr	r3, [r7, #20]
 8007a6e:	1ad3      	subs	r3, r2, r3
 8007a70:	2b02      	cmp	r3, #2
 8007a72:	d901      	bls.n	8007a78 <HAL_RCC_OscConfig+0x3f8>
        {
          return HAL_TIMEOUT;
 8007a74:	2303      	movs	r3, #3
 8007a76:	e1c9      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8007a78:	4b9d      	ldr	r3, [pc, #628]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a7a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007a7c:	2202      	movs	r2, #2
 8007a7e:	4013      	ands	r3, r2
 8007a80:	d0f1      	beq.n	8007a66 <HAL_RCC_OscConfig+0x3e6>
 8007a82:	e018      	b.n	8007ab6 <HAL_RCC_OscConfig+0x436>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8007a84:	4b9a      	ldr	r3, [pc, #616]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a86:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007a88:	4b99      	ldr	r3, [pc, #612]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007a8a:	2101      	movs	r1, #1
 8007a8c:	438a      	bics	r2, r1
 8007a8e:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007a90:	f7fe ffe2 	bl	8006a58 <HAL_GetTick>
 8007a94:	0003      	movs	r3, r0
 8007a96:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007a98:	e008      	b.n	8007aac <HAL_RCC_OscConfig+0x42c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007a9a:	f7fe ffdd 	bl	8006a58 <HAL_GetTick>
 8007a9e:	0002      	movs	r2, r0
 8007aa0:	697b      	ldr	r3, [r7, #20]
 8007aa2:	1ad3      	subs	r3, r2, r3
 8007aa4:	2b02      	cmp	r3, #2
 8007aa6:	d901      	bls.n	8007aac <HAL_RCC_OscConfig+0x42c>
        {
          return HAL_TIMEOUT;
 8007aa8:	2303      	movs	r3, #3
 8007aaa:	e1af      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007aac:	4b90      	ldr	r3, [pc, #576]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007aae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007ab0:	2202      	movs	r2, #2
 8007ab2:	4013      	ands	r3, r2
 8007ab4:	d1f1      	bne.n	8007a9a <HAL_RCC_OscConfig+0x41a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	681b      	ldr	r3, [r3, #0]
 8007aba:	2204      	movs	r2, #4
 8007abc:	4013      	ands	r3, r2
 8007abe:	d100      	bne.n	8007ac2 <HAL_RCC_OscConfig+0x442>
 8007ac0:	e0af      	b.n	8007c22 <HAL_RCC_OscConfig+0x5a2>
  {
    FlagStatus       pwrclkchanged = RESET;
 8007ac2:	2323      	movs	r3, #35	; 0x23
 8007ac4:	18fb      	adds	r3, r7, r3
 8007ac6:	2200      	movs	r2, #0
 8007ac8:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007aca:	4b89      	ldr	r3, [pc, #548]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007acc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007ace:	2380      	movs	r3, #128	; 0x80
 8007ad0:	055b      	lsls	r3, r3, #21
 8007ad2:	4013      	ands	r3, r2
 8007ad4:	d10a      	bne.n	8007aec <HAL_RCC_OscConfig+0x46c>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8007ad6:	4b86      	ldr	r3, [pc, #536]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007ad8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007ada:	4b85      	ldr	r3, [pc, #532]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007adc:	2180      	movs	r1, #128	; 0x80
 8007ade:	0549      	lsls	r1, r1, #21
 8007ae0:	430a      	orrs	r2, r1
 8007ae2:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8007ae4:	2323      	movs	r3, #35	; 0x23
 8007ae6:	18fb      	adds	r3, r7, r3
 8007ae8:	2201      	movs	r2, #1
 8007aea:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007aec:	4b83      	ldr	r3, [pc, #524]	; (8007cfc <HAL_RCC_OscConfig+0x67c>)
 8007aee:	681a      	ldr	r2, [r3, #0]
 8007af0:	2380      	movs	r3, #128	; 0x80
 8007af2:	005b      	lsls	r3, r3, #1
 8007af4:	4013      	ands	r3, r2
 8007af6:	d11a      	bne.n	8007b2e <HAL_RCC_OscConfig+0x4ae>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007af8:	4b80      	ldr	r3, [pc, #512]	; (8007cfc <HAL_RCC_OscConfig+0x67c>)
 8007afa:	681a      	ldr	r2, [r3, #0]
 8007afc:	4b7f      	ldr	r3, [pc, #508]	; (8007cfc <HAL_RCC_OscConfig+0x67c>)
 8007afe:	2180      	movs	r1, #128	; 0x80
 8007b00:	0049      	lsls	r1, r1, #1
 8007b02:	430a      	orrs	r2, r1
 8007b04:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8007b06:	f7fe ffa7 	bl	8006a58 <HAL_GetTick>
 8007b0a:	0003      	movs	r3, r0
 8007b0c:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007b0e:	e008      	b.n	8007b22 <HAL_RCC_OscConfig+0x4a2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007b10:	f7fe ffa2 	bl	8006a58 <HAL_GetTick>
 8007b14:	0002      	movs	r2, r0
 8007b16:	697b      	ldr	r3, [r7, #20]
 8007b18:	1ad3      	subs	r3, r2, r3
 8007b1a:	2b64      	cmp	r3, #100	; 0x64
 8007b1c:	d901      	bls.n	8007b22 <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 8007b1e:	2303      	movs	r3, #3
 8007b20:	e174      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007b22:	4b76      	ldr	r3, [pc, #472]	; (8007cfc <HAL_RCC_OscConfig+0x67c>)
 8007b24:	681a      	ldr	r2, [r3, #0]
 8007b26:	2380      	movs	r3, #128	; 0x80
 8007b28:	005b      	lsls	r3, r3, #1
 8007b2a:	4013      	ands	r3, r2
 8007b2c:	d0f0      	beq.n	8007b10 <HAL_RCC_OscConfig+0x490>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	689a      	ldr	r2, [r3, #8]
 8007b32:	2380      	movs	r3, #128	; 0x80
 8007b34:	005b      	lsls	r3, r3, #1
 8007b36:	429a      	cmp	r2, r3
 8007b38:	d107      	bne.n	8007b4a <HAL_RCC_OscConfig+0x4ca>
 8007b3a:	4b6d      	ldr	r3, [pc, #436]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b3c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b3e:	4b6c      	ldr	r3, [pc, #432]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b40:	2180      	movs	r1, #128	; 0x80
 8007b42:	0049      	lsls	r1, r1, #1
 8007b44:	430a      	orrs	r2, r1
 8007b46:	651a      	str	r2, [r3, #80]	; 0x50
 8007b48:	e031      	b.n	8007bae <HAL_RCC_OscConfig+0x52e>
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	689b      	ldr	r3, [r3, #8]
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	d10c      	bne.n	8007b6c <HAL_RCC_OscConfig+0x4ec>
 8007b52:	4b67      	ldr	r3, [pc, #412]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b54:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b56:	4b66      	ldr	r3, [pc, #408]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b58:	4967      	ldr	r1, [pc, #412]	; (8007cf8 <HAL_RCC_OscConfig+0x678>)
 8007b5a:	400a      	ands	r2, r1
 8007b5c:	651a      	str	r2, [r3, #80]	; 0x50
 8007b5e:	4b64      	ldr	r3, [pc, #400]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b60:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b62:	4b63      	ldr	r3, [pc, #396]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b64:	4966      	ldr	r1, [pc, #408]	; (8007d00 <HAL_RCC_OscConfig+0x680>)
 8007b66:	400a      	ands	r2, r1
 8007b68:	651a      	str	r2, [r3, #80]	; 0x50
 8007b6a:	e020      	b.n	8007bae <HAL_RCC_OscConfig+0x52e>
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	689a      	ldr	r2, [r3, #8]
 8007b70:	23a0      	movs	r3, #160	; 0xa0
 8007b72:	00db      	lsls	r3, r3, #3
 8007b74:	429a      	cmp	r2, r3
 8007b76:	d10e      	bne.n	8007b96 <HAL_RCC_OscConfig+0x516>
 8007b78:	4b5d      	ldr	r3, [pc, #372]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b7a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b7c:	4b5c      	ldr	r3, [pc, #368]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b7e:	2180      	movs	r1, #128	; 0x80
 8007b80:	00c9      	lsls	r1, r1, #3
 8007b82:	430a      	orrs	r2, r1
 8007b84:	651a      	str	r2, [r3, #80]	; 0x50
 8007b86:	4b5a      	ldr	r3, [pc, #360]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b88:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b8a:	4b59      	ldr	r3, [pc, #356]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b8c:	2180      	movs	r1, #128	; 0x80
 8007b8e:	0049      	lsls	r1, r1, #1
 8007b90:	430a      	orrs	r2, r1
 8007b92:	651a      	str	r2, [r3, #80]	; 0x50
 8007b94:	e00b      	b.n	8007bae <HAL_RCC_OscConfig+0x52e>
 8007b96:	4b56      	ldr	r3, [pc, #344]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b98:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007b9a:	4b55      	ldr	r3, [pc, #340]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007b9c:	4956      	ldr	r1, [pc, #344]	; (8007cf8 <HAL_RCC_OscConfig+0x678>)
 8007b9e:	400a      	ands	r2, r1
 8007ba0:	651a      	str	r2, [r3, #80]	; 0x50
 8007ba2:	4b53      	ldr	r3, [pc, #332]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007ba4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007ba6:	4b52      	ldr	r3, [pc, #328]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007ba8:	4955      	ldr	r1, [pc, #340]	; (8007d00 <HAL_RCC_OscConfig+0x680>)
 8007baa:	400a      	ands	r2, r1
 8007bac:	651a      	str	r2, [r3, #80]	; 0x50
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	689b      	ldr	r3, [r3, #8]
 8007bb2:	2b00      	cmp	r3, #0
 8007bb4:	d015      	beq.n	8007be2 <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007bb6:	f7fe ff4f 	bl	8006a58 <HAL_GetTick>
 8007bba:	0003      	movs	r3, r0
 8007bbc:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007bbe:	e009      	b.n	8007bd4 <HAL_RCC_OscConfig+0x554>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007bc0:	f7fe ff4a 	bl	8006a58 <HAL_GetTick>
 8007bc4:	0002      	movs	r2, r0
 8007bc6:	697b      	ldr	r3, [r7, #20]
 8007bc8:	1ad3      	subs	r3, r2, r3
 8007bca:	4a4e      	ldr	r2, [pc, #312]	; (8007d04 <HAL_RCC_OscConfig+0x684>)
 8007bcc:	4293      	cmp	r3, r2
 8007bce:	d901      	bls.n	8007bd4 <HAL_RCC_OscConfig+0x554>
        {
          return HAL_TIMEOUT;
 8007bd0:	2303      	movs	r3, #3
 8007bd2:	e11b      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007bd4:	4b46      	ldr	r3, [pc, #280]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007bd6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007bd8:	2380      	movs	r3, #128	; 0x80
 8007bda:	009b      	lsls	r3, r3, #2
 8007bdc:	4013      	ands	r3, r2
 8007bde:	d0ef      	beq.n	8007bc0 <HAL_RCC_OscConfig+0x540>
 8007be0:	e014      	b.n	8007c0c <HAL_RCC_OscConfig+0x58c>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007be2:	f7fe ff39 	bl	8006a58 <HAL_GetTick>
 8007be6:	0003      	movs	r3, r0
 8007be8:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8007bea:	e009      	b.n	8007c00 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007bec:	f7fe ff34 	bl	8006a58 <HAL_GetTick>
 8007bf0:	0002      	movs	r2, r0
 8007bf2:	697b      	ldr	r3, [r7, #20]
 8007bf4:	1ad3      	subs	r3, r2, r3
 8007bf6:	4a43      	ldr	r2, [pc, #268]	; (8007d04 <HAL_RCC_OscConfig+0x684>)
 8007bf8:	4293      	cmp	r3, r2
 8007bfa:	d901      	bls.n	8007c00 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8007bfc:	2303      	movs	r3, #3
 8007bfe:	e105      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8007c00:	4b3b      	ldr	r3, [pc, #236]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c02:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8007c04:	2380      	movs	r3, #128	; 0x80
 8007c06:	009b      	lsls	r3, r3, #2
 8007c08:	4013      	ands	r3, r2
 8007c0a:	d1ef      	bne.n	8007bec <HAL_RCC_OscConfig+0x56c>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8007c0c:	2323      	movs	r3, #35	; 0x23
 8007c0e:	18fb      	adds	r3, r7, r3
 8007c10:	781b      	ldrb	r3, [r3, #0]
 8007c12:	2b01      	cmp	r3, #1
 8007c14:	d105      	bne.n	8007c22 <HAL_RCC_OscConfig+0x5a2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8007c16:	4b36      	ldr	r3, [pc, #216]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007c1a:	4b35      	ldr	r3, [pc, #212]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c1c:	493a      	ldr	r1, [pc, #232]	; (8007d08 <HAL_RCC_OscConfig+0x688>)
 8007c1e:	400a      	ands	r2, r1
 8007c20:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	681b      	ldr	r3, [r3, #0]
 8007c26:	2220      	movs	r2, #32
 8007c28:	4013      	ands	r3, r2
 8007c2a:	d049      	beq.n	8007cc0 <HAL_RCC_OscConfig+0x640>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	699b      	ldr	r3, [r3, #24]
 8007c30:	2b00      	cmp	r3, #0
 8007c32:	d026      	beq.n	8007c82 <HAL_RCC_OscConfig+0x602>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8007c34:	4b2e      	ldr	r3, [pc, #184]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c36:	689a      	ldr	r2, [r3, #8]
 8007c38:	4b2d      	ldr	r3, [pc, #180]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c3a:	2101      	movs	r1, #1
 8007c3c:	430a      	orrs	r2, r1
 8007c3e:	609a      	str	r2, [r3, #8]
 8007c40:	4b2b      	ldr	r3, [pc, #172]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c42:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007c44:	4b2a      	ldr	r3, [pc, #168]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c46:	2101      	movs	r1, #1
 8007c48:	430a      	orrs	r2, r1
 8007c4a:	635a      	str	r2, [r3, #52]	; 0x34
 8007c4c:	4b2f      	ldr	r3, [pc, #188]	; (8007d0c <HAL_RCC_OscConfig+0x68c>)
 8007c4e:	6a1a      	ldr	r2, [r3, #32]
 8007c50:	4b2e      	ldr	r3, [pc, #184]	; (8007d0c <HAL_RCC_OscConfig+0x68c>)
 8007c52:	2180      	movs	r1, #128	; 0x80
 8007c54:	0189      	lsls	r1, r1, #6
 8007c56:	430a      	orrs	r2, r1
 8007c58:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007c5a:	f7fe fefd 	bl	8006a58 <HAL_GetTick>
 8007c5e:	0003      	movs	r3, r0
 8007c60:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007c62:	e008      	b.n	8007c76 <HAL_RCC_OscConfig+0x5f6>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007c64:	f7fe fef8 	bl	8006a58 <HAL_GetTick>
 8007c68:	0002      	movs	r2, r0
 8007c6a:	697b      	ldr	r3, [r7, #20]
 8007c6c:	1ad3      	subs	r3, r2, r3
 8007c6e:	2b02      	cmp	r3, #2
 8007c70:	d901      	bls.n	8007c76 <HAL_RCC_OscConfig+0x5f6>
          {
            return HAL_TIMEOUT;
 8007c72:	2303      	movs	r3, #3
 8007c74:	e0ca      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007c76:	4b1e      	ldr	r3, [pc, #120]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c78:	689b      	ldr	r3, [r3, #8]
 8007c7a:	2202      	movs	r2, #2
 8007c7c:	4013      	ands	r3, r2
 8007c7e:	d0f1      	beq.n	8007c64 <HAL_RCC_OscConfig+0x5e4>
 8007c80:	e01e      	b.n	8007cc0 <HAL_RCC_OscConfig+0x640>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8007c82:	4b1b      	ldr	r3, [pc, #108]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c84:	689a      	ldr	r2, [r3, #8]
 8007c86:	4b1a      	ldr	r3, [pc, #104]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007c88:	2101      	movs	r1, #1
 8007c8a:	438a      	bics	r2, r1
 8007c8c:	609a      	str	r2, [r3, #8]
 8007c8e:	4b1f      	ldr	r3, [pc, #124]	; (8007d0c <HAL_RCC_OscConfig+0x68c>)
 8007c90:	6a1a      	ldr	r2, [r3, #32]
 8007c92:	4b1e      	ldr	r3, [pc, #120]	; (8007d0c <HAL_RCC_OscConfig+0x68c>)
 8007c94:	491e      	ldr	r1, [pc, #120]	; (8007d10 <HAL_RCC_OscConfig+0x690>)
 8007c96:	400a      	ands	r2, r1
 8007c98:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007c9a:	f7fe fedd 	bl	8006a58 <HAL_GetTick>
 8007c9e:	0003      	movs	r3, r0
 8007ca0:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007ca2:	e008      	b.n	8007cb6 <HAL_RCC_OscConfig+0x636>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007ca4:	f7fe fed8 	bl	8006a58 <HAL_GetTick>
 8007ca8:	0002      	movs	r2, r0
 8007caa:	697b      	ldr	r3, [r7, #20]
 8007cac:	1ad3      	subs	r3, r2, r3
 8007cae:	2b02      	cmp	r3, #2
 8007cb0:	d901      	bls.n	8007cb6 <HAL_RCC_OscConfig+0x636>
          {
            return HAL_TIMEOUT;
 8007cb2:	2303      	movs	r3, #3
 8007cb4:	e0aa      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007cb6:	4b0e      	ldr	r3, [pc, #56]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007cb8:	689b      	ldr	r3, [r3, #8]
 8007cba:	2202      	movs	r2, #2
 8007cbc:	4013      	ands	r3, r2
 8007cbe:	d1f1      	bne.n	8007ca4 <HAL_RCC_OscConfig+0x624>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d100      	bne.n	8007cca <HAL_RCC_OscConfig+0x64a>
 8007cc8:	e09f      	b.n	8007e0a <HAL_RCC_OscConfig+0x78a>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007cca:	69fb      	ldr	r3, [r7, #28]
 8007ccc:	2b0c      	cmp	r3, #12
 8007cce:	d100      	bne.n	8007cd2 <HAL_RCC_OscConfig+0x652>
 8007cd0:	e078      	b.n	8007dc4 <HAL_RCC_OscConfig+0x744>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cd6:	2b02      	cmp	r3, #2
 8007cd8:	d159      	bne.n	8007d8e <HAL_RCC_OscConfig+0x70e>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007cda:	4b05      	ldr	r3, [pc, #20]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007cdc:	681a      	ldr	r2, [r3, #0]
 8007cde:	4b04      	ldr	r3, [pc, #16]	; (8007cf0 <HAL_RCC_OscConfig+0x670>)
 8007ce0:	490c      	ldr	r1, [pc, #48]	; (8007d14 <HAL_RCC_OscConfig+0x694>)
 8007ce2:	400a      	ands	r2, r1
 8007ce4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007ce6:	f7fe feb7 	bl	8006a58 <HAL_GetTick>
 8007cea:	0003      	movs	r3, r0
 8007cec:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8007cee:	e01c      	b.n	8007d2a <HAL_RCC_OscConfig+0x6aa>
 8007cf0:	40021000 	.word	0x40021000
 8007cf4:	ffff1fff 	.word	0xffff1fff
 8007cf8:	fffffeff 	.word	0xfffffeff
 8007cfc:	40007000 	.word	0x40007000
 8007d00:	fffffbff 	.word	0xfffffbff
 8007d04:	00001388 	.word	0x00001388
 8007d08:	efffffff 	.word	0xefffffff
 8007d0c:	40010000 	.word	0x40010000
 8007d10:	ffffdfff 	.word	0xffffdfff
 8007d14:	feffffff 	.word	0xfeffffff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007d18:	f7fe fe9e 	bl	8006a58 <HAL_GetTick>
 8007d1c:	0002      	movs	r2, r0
 8007d1e:	697b      	ldr	r3, [r7, #20]
 8007d20:	1ad3      	subs	r3, r2, r3
 8007d22:	2b02      	cmp	r3, #2
 8007d24:	d901      	bls.n	8007d2a <HAL_RCC_OscConfig+0x6aa>
          {
            return HAL_TIMEOUT;
 8007d26:	2303      	movs	r3, #3
 8007d28:	e070      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8007d2a:	4b3a      	ldr	r3, [pc, #232]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d2c:	681a      	ldr	r2, [r3, #0]
 8007d2e:	2380      	movs	r3, #128	; 0x80
 8007d30:	049b      	lsls	r3, r3, #18
 8007d32:	4013      	ands	r3, r2
 8007d34:	d1f0      	bne.n	8007d18 <HAL_RCC_OscConfig+0x698>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007d36:	4b37      	ldr	r3, [pc, #220]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d38:	68db      	ldr	r3, [r3, #12]
 8007d3a:	4a37      	ldr	r2, [pc, #220]	; (8007e18 <HAL_RCC_OscConfig+0x798>)
 8007d3c:	4013      	ands	r3, r2
 8007d3e:	0019      	movs	r1, r3
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007d48:	431a      	orrs	r2, r3
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d4e:	431a      	orrs	r2, r3
 8007d50:	4b30      	ldr	r3, [pc, #192]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d52:	430a      	orrs	r2, r1
 8007d54:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8007d56:	4b2f      	ldr	r3, [pc, #188]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d58:	681a      	ldr	r2, [r3, #0]
 8007d5a:	4b2e      	ldr	r3, [pc, #184]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d5c:	2180      	movs	r1, #128	; 0x80
 8007d5e:	0449      	lsls	r1, r1, #17
 8007d60:	430a      	orrs	r2, r1
 8007d62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007d64:	f7fe fe78 	bl	8006a58 <HAL_GetTick>
 8007d68:	0003      	movs	r3, r0
 8007d6a:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8007d6c:	e008      	b.n	8007d80 <HAL_RCC_OscConfig+0x700>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007d6e:	f7fe fe73 	bl	8006a58 <HAL_GetTick>
 8007d72:	0002      	movs	r2, r0
 8007d74:	697b      	ldr	r3, [r7, #20]
 8007d76:	1ad3      	subs	r3, r2, r3
 8007d78:	2b02      	cmp	r3, #2
 8007d7a:	d901      	bls.n	8007d80 <HAL_RCC_OscConfig+0x700>
          {
            return HAL_TIMEOUT;
 8007d7c:	2303      	movs	r3, #3
 8007d7e:	e045      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8007d80:	4b24      	ldr	r3, [pc, #144]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d82:	681a      	ldr	r2, [r3, #0]
 8007d84:	2380      	movs	r3, #128	; 0x80
 8007d86:	049b      	lsls	r3, r3, #18
 8007d88:	4013      	ands	r3, r2
 8007d8a:	d0f0      	beq.n	8007d6e <HAL_RCC_OscConfig+0x6ee>
 8007d8c:	e03d      	b.n	8007e0a <HAL_RCC_OscConfig+0x78a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007d8e:	4b21      	ldr	r3, [pc, #132]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d90:	681a      	ldr	r2, [r3, #0]
 8007d92:	4b20      	ldr	r3, [pc, #128]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007d94:	4921      	ldr	r1, [pc, #132]	; (8007e1c <HAL_RCC_OscConfig+0x79c>)
 8007d96:	400a      	ands	r2, r1
 8007d98:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007d9a:	f7fe fe5d 	bl	8006a58 <HAL_GetTick>
 8007d9e:	0003      	movs	r3, r0
 8007da0:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8007da2:	e008      	b.n	8007db6 <HAL_RCC_OscConfig+0x736>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007da4:	f7fe fe58 	bl	8006a58 <HAL_GetTick>
 8007da8:	0002      	movs	r2, r0
 8007daa:	697b      	ldr	r3, [r7, #20]
 8007dac:	1ad3      	subs	r3, r2, r3
 8007dae:	2b02      	cmp	r3, #2
 8007db0:	d901      	bls.n	8007db6 <HAL_RCC_OscConfig+0x736>
          {
            return HAL_TIMEOUT;
 8007db2:	2303      	movs	r3, #3
 8007db4:	e02a      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8007db6:	4b17      	ldr	r3, [pc, #92]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007db8:	681a      	ldr	r2, [r3, #0]
 8007dba:	2380      	movs	r3, #128	; 0x80
 8007dbc:	049b      	lsls	r3, r3, #18
 8007dbe:	4013      	ands	r3, r2
 8007dc0:	d1f0      	bne.n	8007da4 <HAL_RCC_OscConfig+0x724>
 8007dc2:	e022      	b.n	8007e0a <HAL_RCC_OscConfig+0x78a>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007dc8:	2b01      	cmp	r3, #1
 8007dca:	d101      	bne.n	8007dd0 <HAL_RCC_OscConfig+0x750>
      {
        return HAL_ERROR;
 8007dcc:	2301      	movs	r3, #1
 8007dce:	e01d      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8007dd0:	4b10      	ldr	r3, [pc, #64]	; (8007e14 <HAL_RCC_OscConfig+0x794>)
 8007dd2:	68db      	ldr	r3, [r3, #12]
 8007dd4:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007dd6:	69ba      	ldr	r2, [r7, #24]
 8007dd8:	2380      	movs	r3, #128	; 0x80
 8007dda:	025b      	lsls	r3, r3, #9
 8007ddc:	401a      	ands	r2, r3
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007de2:	429a      	cmp	r2, r3
 8007de4:	d10f      	bne.n	8007e06 <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8007de6:	69ba      	ldr	r2, [r7, #24]
 8007de8:	23f0      	movs	r3, #240	; 0xf0
 8007dea:	039b      	lsls	r3, r3, #14
 8007dec:	401a      	ands	r2, r3
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007df2:	429a      	cmp	r2, r3
 8007df4:	d107      	bne.n	8007e06 <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8007df6:	69ba      	ldr	r2, [r7, #24]
 8007df8:	23c0      	movs	r3, #192	; 0xc0
 8007dfa:	041b      	lsls	r3, r3, #16
 8007dfc:	401a      	ands	r2, r3
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8007e02:	429a      	cmp	r2, r3
 8007e04:	d001      	beq.n	8007e0a <HAL_RCC_OscConfig+0x78a>
        {
          return HAL_ERROR;
 8007e06:	2301      	movs	r3, #1
 8007e08:	e000      	b.n	8007e0c <HAL_RCC_OscConfig+0x78c>
        }
      }
    }
  }

  return HAL_OK;
 8007e0a:	2300      	movs	r3, #0
}
 8007e0c:	0018      	movs	r0, r3
 8007e0e:	46bd      	mov	sp, r7
 8007e10:	b00a      	add	sp, #40	; 0x28
 8007e12:	bdb0      	pop	{r4, r5, r7, pc}
 8007e14:	40021000 	.word	0x40021000
 8007e18:	ff02ffff 	.word	0xff02ffff
 8007e1c:	feffffff 	.word	0xfeffffff

08007e20 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007e20:	b5b0      	push	{r4, r5, r7, lr}
 8007e22:	b084      	sub	sp, #16
 8007e24:	af00      	add	r7, sp, #0
 8007e26:	6078      	str	r0, [r7, #4]
 8007e28:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check the parameters */
  if(RCC_ClkInitStruct == NULL)
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	2b00      	cmp	r3, #0
 8007e2e:	d101      	bne.n	8007e34 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007e30:	2301      	movs	r3, #1
 8007e32:	e10d      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007e34:	4b88      	ldr	r3, [pc, #544]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	2201      	movs	r2, #1
 8007e3a:	4013      	ands	r3, r2
 8007e3c:	683a      	ldr	r2, [r7, #0]
 8007e3e:	429a      	cmp	r2, r3
 8007e40:	d911      	bls.n	8007e66 <HAL_RCC_ClockConfig+0x46>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007e42:	4b85      	ldr	r3, [pc, #532]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007e44:	681b      	ldr	r3, [r3, #0]
 8007e46:	2201      	movs	r2, #1
 8007e48:	4393      	bics	r3, r2
 8007e4a:	0019      	movs	r1, r3
 8007e4c:	4b82      	ldr	r3, [pc, #520]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007e4e:	683a      	ldr	r2, [r7, #0]
 8007e50:	430a      	orrs	r2, r1
 8007e52:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007e54:	4b80      	ldr	r3, [pc, #512]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	2201      	movs	r2, #1
 8007e5a:	4013      	ands	r3, r2
 8007e5c:	683a      	ldr	r2, [r7, #0]
 8007e5e:	429a      	cmp	r2, r3
 8007e60:	d001      	beq.n	8007e66 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8007e62:	2301      	movs	r3, #1
 8007e64:	e0f4      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	681b      	ldr	r3, [r3, #0]
 8007e6a:	2202      	movs	r2, #2
 8007e6c:	4013      	ands	r3, r2
 8007e6e:	d009      	beq.n	8007e84 <HAL_RCC_ClockConfig+0x64>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007e70:	4b7a      	ldr	r3, [pc, #488]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007e72:	68db      	ldr	r3, [r3, #12]
 8007e74:	22f0      	movs	r2, #240	; 0xf0
 8007e76:	4393      	bics	r3, r2
 8007e78:	0019      	movs	r1, r3
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	689a      	ldr	r2, [r3, #8]
 8007e7e:	4b77      	ldr	r3, [pc, #476]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007e80:	430a      	orrs	r2, r1
 8007e82:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	2201      	movs	r2, #1
 8007e8a:	4013      	ands	r3, r2
 8007e8c:	d100      	bne.n	8007e90 <HAL_RCC_ClockConfig+0x70>
 8007e8e:	e089      	b.n	8007fa4 <HAL_RCC_ClockConfig+0x184>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	685b      	ldr	r3, [r3, #4]
 8007e94:	2b02      	cmp	r3, #2
 8007e96:	d107      	bne.n	8007ea8 <HAL_RCC_ClockConfig+0x88>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007e98:	4b70      	ldr	r3, [pc, #448]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007e9a:	681a      	ldr	r2, [r3, #0]
 8007e9c:	2380      	movs	r3, #128	; 0x80
 8007e9e:	029b      	lsls	r3, r3, #10
 8007ea0:	4013      	ands	r3, r2
 8007ea2:	d120      	bne.n	8007ee6 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8007ea4:	2301      	movs	r3, #1
 8007ea6:	e0d3      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	685b      	ldr	r3, [r3, #4]
 8007eac:	2b03      	cmp	r3, #3
 8007eae:	d107      	bne.n	8007ec0 <HAL_RCC_ClockConfig+0xa0>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007eb0:	4b6a      	ldr	r3, [pc, #424]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007eb2:	681a      	ldr	r2, [r3, #0]
 8007eb4:	2380      	movs	r3, #128	; 0x80
 8007eb6:	049b      	lsls	r3, r3, #18
 8007eb8:	4013      	ands	r3, r2
 8007eba:	d114      	bne.n	8007ee6 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8007ebc:	2301      	movs	r3, #1
 8007ebe:	e0c7      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8007ec0:	687b      	ldr	r3, [r7, #4]
 8007ec2:	685b      	ldr	r3, [r3, #4]
 8007ec4:	2b01      	cmp	r3, #1
 8007ec6:	d106      	bne.n	8007ed6 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007ec8:	4b64      	ldr	r3, [pc, #400]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	2204      	movs	r2, #4
 8007ece:	4013      	ands	r3, r2
 8007ed0:	d109      	bne.n	8007ee6 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8007ed2:	2301      	movs	r3, #1
 8007ed4:	e0bc      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8007ed6:	4b61      	ldr	r3, [pc, #388]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007ed8:	681a      	ldr	r2, [r3, #0]
 8007eda:	2380      	movs	r3, #128	; 0x80
 8007edc:	009b      	lsls	r3, r3, #2
 8007ede:	4013      	ands	r3, r2
 8007ee0:	d101      	bne.n	8007ee6 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8007ee2:	2301      	movs	r3, #1
 8007ee4:	e0b4      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007ee6:	4b5d      	ldr	r3, [pc, #372]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007ee8:	68db      	ldr	r3, [r3, #12]
 8007eea:	2203      	movs	r2, #3
 8007eec:	4393      	bics	r3, r2
 8007eee:	0019      	movs	r1, r3
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	685a      	ldr	r2, [r3, #4]
 8007ef4:	4b59      	ldr	r3, [pc, #356]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007ef6:	430a      	orrs	r2, r1
 8007ef8:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8007efa:	f7fe fdad 	bl	8006a58 <HAL_GetTick>
 8007efe:	0003      	movs	r3, r0
 8007f00:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	685b      	ldr	r3, [r3, #4]
 8007f06:	2b02      	cmp	r3, #2
 8007f08:	d111      	bne.n	8007f2e <HAL_RCC_ClockConfig+0x10e>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8007f0a:	e009      	b.n	8007f20 <HAL_RCC_ClockConfig+0x100>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007f0c:	f7fe fda4 	bl	8006a58 <HAL_GetTick>
 8007f10:	0002      	movs	r2, r0
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	1ad3      	subs	r3, r2, r3
 8007f16:	4a52      	ldr	r2, [pc, #328]	; (8008060 <HAL_RCC_ClockConfig+0x240>)
 8007f18:	4293      	cmp	r3, r2
 8007f1a:	d901      	bls.n	8007f20 <HAL_RCC_ClockConfig+0x100>
        {
          return HAL_TIMEOUT;
 8007f1c:	2303      	movs	r3, #3
 8007f1e:	e097      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8007f20:	4b4e      	ldr	r3, [pc, #312]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007f22:	68db      	ldr	r3, [r3, #12]
 8007f24:	220c      	movs	r2, #12
 8007f26:	4013      	ands	r3, r2
 8007f28:	2b08      	cmp	r3, #8
 8007f2a:	d1ef      	bne.n	8007f0c <HAL_RCC_ClockConfig+0xec>
 8007f2c:	e03a      	b.n	8007fa4 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	685b      	ldr	r3, [r3, #4]
 8007f32:	2b03      	cmp	r3, #3
 8007f34:	d111      	bne.n	8007f5a <HAL_RCC_ClockConfig+0x13a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007f36:	e009      	b.n	8007f4c <HAL_RCC_ClockConfig+0x12c>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007f38:	f7fe fd8e 	bl	8006a58 <HAL_GetTick>
 8007f3c:	0002      	movs	r2, r0
 8007f3e:	68fb      	ldr	r3, [r7, #12]
 8007f40:	1ad3      	subs	r3, r2, r3
 8007f42:	4a47      	ldr	r2, [pc, #284]	; (8008060 <HAL_RCC_ClockConfig+0x240>)
 8007f44:	4293      	cmp	r3, r2
 8007f46:	d901      	bls.n	8007f4c <HAL_RCC_ClockConfig+0x12c>
        {
          return HAL_TIMEOUT;
 8007f48:	2303      	movs	r3, #3
 8007f4a:	e081      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007f4c:	4b43      	ldr	r3, [pc, #268]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007f4e:	68db      	ldr	r3, [r3, #12]
 8007f50:	220c      	movs	r2, #12
 8007f52:	4013      	ands	r3, r2
 8007f54:	2b0c      	cmp	r3, #12
 8007f56:	d1ef      	bne.n	8007f38 <HAL_RCC_ClockConfig+0x118>
 8007f58:	e024      	b.n	8007fa4 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	685b      	ldr	r3, [r3, #4]
 8007f5e:	2b01      	cmp	r3, #1
 8007f60:	d11b      	bne.n	8007f9a <HAL_RCC_ClockConfig+0x17a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8007f62:	e009      	b.n	8007f78 <HAL_RCC_ClockConfig+0x158>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007f64:	f7fe fd78 	bl	8006a58 <HAL_GetTick>
 8007f68:	0002      	movs	r2, r0
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	1ad3      	subs	r3, r2, r3
 8007f6e:	4a3c      	ldr	r2, [pc, #240]	; (8008060 <HAL_RCC_ClockConfig+0x240>)
 8007f70:	4293      	cmp	r3, r2
 8007f72:	d901      	bls.n	8007f78 <HAL_RCC_ClockConfig+0x158>
        {
          return HAL_TIMEOUT;
 8007f74:	2303      	movs	r3, #3
 8007f76:	e06b      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8007f78:	4b38      	ldr	r3, [pc, #224]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007f7a:	68db      	ldr	r3, [r3, #12]
 8007f7c:	220c      	movs	r2, #12
 8007f7e:	4013      	ands	r3, r2
 8007f80:	2b04      	cmp	r3, #4
 8007f82:	d1ef      	bne.n	8007f64 <HAL_RCC_ClockConfig+0x144>
 8007f84:	e00e      	b.n	8007fa4 <HAL_RCC_ClockConfig+0x184>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007f86:	f7fe fd67 	bl	8006a58 <HAL_GetTick>
 8007f8a:	0002      	movs	r2, r0
 8007f8c:	68fb      	ldr	r3, [r7, #12]
 8007f8e:	1ad3      	subs	r3, r2, r3
 8007f90:	4a33      	ldr	r2, [pc, #204]	; (8008060 <HAL_RCC_ClockConfig+0x240>)
 8007f92:	4293      	cmp	r3, r2
 8007f94:	d901      	bls.n	8007f9a <HAL_RCC_ClockConfig+0x17a>
        {
          return HAL_TIMEOUT;
 8007f96:	2303      	movs	r3, #3
 8007f98:	e05a      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8007f9a:	4b30      	ldr	r3, [pc, #192]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007f9c:	68db      	ldr	r3, [r3, #12]
 8007f9e:	220c      	movs	r2, #12
 8007fa0:	4013      	ands	r3, r2
 8007fa2:	d1f0      	bne.n	8007f86 <HAL_RCC_ClockConfig+0x166>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007fa4:	4b2c      	ldr	r3, [pc, #176]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	2201      	movs	r2, #1
 8007faa:	4013      	ands	r3, r2
 8007fac:	683a      	ldr	r2, [r7, #0]
 8007fae:	429a      	cmp	r2, r3
 8007fb0:	d211      	bcs.n	8007fd6 <HAL_RCC_ClockConfig+0x1b6>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007fb2:	4b29      	ldr	r3, [pc, #164]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	2201      	movs	r2, #1
 8007fb8:	4393      	bics	r3, r2
 8007fba:	0019      	movs	r1, r3
 8007fbc:	4b26      	ldr	r3, [pc, #152]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007fbe:	683a      	ldr	r2, [r7, #0]
 8007fc0:	430a      	orrs	r2, r1
 8007fc2:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007fc4:	4b24      	ldr	r3, [pc, #144]	; (8008058 <HAL_RCC_ClockConfig+0x238>)
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	2201      	movs	r2, #1
 8007fca:	4013      	ands	r3, r2
 8007fcc:	683a      	ldr	r2, [r7, #0]
 8007fce:	429a      	cmp	r2, r3
 8007fd0:	d001      	beq.n	8007fd6 <HAL_RCC_ClockConfig+0x1b6>
    {
      return HAL_ERROR;
 8007fd2:	2301      	movs	r3, #1
 8007fd4:	e03c      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	681b      	ldr	r3, [r3, #0]
 8007fda:	2204      	movs	r2, #4
 8007fdc:	4013      	ands	r3, r2
 8007fde:	d009      	beq.n	8007ff4 <HAL_RCC_ClockConfig+0x1d4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007fe0:	4b1e      	ldr	r3, [pc, #120]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007fe2:	68db      	ldr	r3, [r3, #12]
 8007fe4:	4a1f      	ldr	r2, [pc, #124]	; (8008064 <HAL_RCC_ClockConfig+0x244>)
 8007fe6:	4013      	ands	r3, r2
 8007fe8:	0019      	movs	r1, r3
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	68da      	ldr	r2, [r3, #12]
 8007fee:	4b1b      	ldr	r3, [pc, #108]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8007ff0:	430a      	orrs	r2, r1
 8007ff2:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	2208      	movs	r2, #8
 8007ffa:	4013      	ands	r3, r2
 8007ffc:	d00a      	beq.n	8008014 <HAL_RCC_ClockConfig+0x1f4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8007ffe:	4b17      	ldr	r3, [pc, #92]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8008000:	68db      	ldr	r3, [r3, #12]
 8008002:	4a19      	ldr	r2, [pc, #100]	; (8008068 <HAL_RCC_ClockConfig+0x248>)
 8008004:	4013      	ands	r3, r2
 8008006:	0019      	movs	r1, r3
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	691b      	ldr	r3, [r3, #16]
 800800c:	00da      	lsls	r2, r3, #3
 800800e:	4b13      	ldr	r3, [pc, #76]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 8008010:	430a      	orrs	r2, r1
 8008012:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8008014:	f000 f82e 	bl	8008074 <HAL_RCC_GetSysClockFreq>
 8008018:	0001      	movs	r1, r0
 800801a:	4b10      	ldr	r3, [pc, #64]	; (800805c <HAL_RCC_ClockConfig+0x23c>)
 800801c:	68db      	ldr	r3, [r3, #12]
 800801e:	091b      	lsrs	r3, r3, #4
 8008020:	220f      	movs	r2, #15
 8008022:	4013      	ands	r3, r2
 8008024:	4a11      	ldr	r2, [pc, #68]	; (800806c <HAL_RCC_ClockConfig+0x24c>)
 8008026:	5cd3      	ldrb	r3, [r2, r3]
 8008028:	000a      	movs	r2, r1
 800802a:	40da      	lsrs	r2, r3
 800802c:	4b10      	ldr	r3, [pc, #64]	; (8008070 <HAL_RCC_ClockConfig+0x250>)
 800802e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(TICK_INT_PRIORITY);
 8008030:	250b      	movs	r5, #11
 8008032:	197c      	adds	r4, r7, r5
 8008034:	2000      	movs	r0, #0
 8008036:	f7fe fcd9 	bl	80069ec <HAL_InitTick>
 800803a:	0003      	movs	r3, r0
 800803c:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 800803e:	197b      	adds	r3, r7, r5
 8008040:	781b      	ldrb	r3, [r3, #0]
 8008042:	2b00      	cmp	r3, #0
 8008044:	d003      	beq.n	800804e <HAL_RCC_ClockConfig+0x22e>
  {
    return status;
 8008046:	230b      	movs	r3, #11
 8008048:	18fb      	adds	r3, r7, r3
 800804a:	781b      	ldrb	r3, [r3, #0]
 800804c:	e000      	b.n	8008050 <HAL_RCC_ClockConfig+0x230>
  }

  return HAL_OK;
 800804e:	2300      	movs	r3, #0
}
 8008050:	0018      	movs	r0, r3
 8008052:	46bd      	mov	sp, r7
 8008054:	b004      	add	sp, #16
 8008056:	bdb0      	pop	{r4, r5, r7, pc}
 8008058:	40022000 	.word	0x40022000
 800805c:	40021000 	.word	0x40021000
 8008060:	00001388 	.word	0x00001388
 8008064:	fffff8ff 	.word	0xfffff8ff
 8008068:	ffffc7ff 	.word	0xffffc7ff
 800806c:	0800dd18 	.word	0x0800dd18
 8008070:	200000fc 	.word	0x200000fc

08008074 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8008074:	b580      	push	{r7, lr}
 8008076:	b086      	sub	sp, #24
 8008078:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 800807a:	4b3b      	ldr	r3, [pc, #236]	; (8008168 <HAL_RCC_GetSysClockFreq+0xf4>)
 800807c:	68db      	ldr	r3, [r3, #12]
 800807e:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8008080:	68fb      	ldr	r3, [r7, #12]
 8008082:	220c      	movs	r2, #12
 8008084:	4013      	ands	r3, r2
 8008086:	2b08      	cmp	r3, #8
 8008088:	d00e      	beq.n	80080a8 <HAL_RCC_GetSysClockFreq+0x34>
 800808a:	2b0c      	cmp	r3, #12
 800808c:	d00f      	beq.n	80080ae <HAL_RCC_GetSysClockFreq+0x3a>
 800808e:	2b04      	cmp	r3, #4
 8008090:	d157      	bne.n	8008142 <HAL_RCC_GetSysClockFreq+0xce>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8008092:	4b35      	ldr	r3, [pc, #212]	; (8008168 <HAL_RCC_GetSysClockFreq+0xf4>)
 8008094:	681b      	ldr	r3, [r3, #0]
 8008096:	2210      	movs	r2, #16
 8008098:	4013      	ands	r3, r2
 800809a:	d002      	beq.n	80080a2 <HAL_RCC_GetSysClockFreq+0x2e>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 800809c:	4b33      	ldr	r3, [pc, #204]	; (800816c <HAL_RCC_GetSysClockFreq+0xf8>)
 800809e:	613b      	str	r3, [r7, #16]
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 80080a0:	e05d      	b.n	800815e <HAL_RCC_GetSysClockFreq+0xea>
        sysclockfreq =  HSI_VALUE;
 80080a2:	4b33      	ldr	r3, [pc, #204]	; (8008170 <HAL_RCC_GetSysClockFreq+0xfc>)
 80080a4:	613b      	str	r3, [r7, #16]
      break;
 80080a6:	e05a      	b.n	800815e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80080a8:	4b32      	ldr	r3, [pc, #200]	; (8008174 <HAL_RCC_GetSysClockFreq+0x100>)
 80080aa:	613b      	str	r3, [r7, #16]
      break;
 80080ac:	e057      	b.n	800815e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 80080ae:	68fb      	ldr	r3, [r7, #12]
 80080b0:	0c9b      	lsrs	r3, r3, #18
 80080b2:	220f      	movs	r2, #15
 80080b4:	4013      	ands	r3, r2
 80080b6:	4a30      	ldr	r2, [pc, #192]	; (8008178 <HAL_RCC_GetSysClockFreq+0x104>)
 80080b8:	5cd3      	ldrb	r3, [r2, r3]
 80080ba:	60bb      	str	r3, [r7, #8]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 80080bc:	68fb      	ldr	r3, [r7, #12]
 80080be:	0d9b      	lsrs	r3, r3, #22
 80080c0:	2203      	movs	r2, #3
 80080c2:	4013      	ands	r3, r2
 80080c4:	3301      	adds	r3, #1
 80080c6:	607b      	str	r3, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80080c8:	4b27      	ldr	r3, [pc, #156]	; (8008168 <HAL_RCC_GetSysClockFreq+0xf4>)
 80080ca:	68da      	ldr	r2, [r3, #12]
 80080cc:	2380      	movs	r3, #128	; 0x80
 80080ce:	025b      	lsls	r3, r3, #9
 80080d0:	4013      	ands	r3, r2
 80080d2:	d00f      	beq.n	80080f4 <HAL_RCC_GetSysClockFreq+0x80>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE * pllm) / plld;
 80080d4:	68b9      	ldr	r1, [r7, #8]
 80080d6:	000a      	movs	r2, r1
 80080d8:	0152      	lsls	r2, r2, #5
 80080da:	1a52      	subs	r2, r2, r1
 80080dc:	0193      	lsls	r3, r2, #6
 80080de:	1a9b      	subs	r3, r3, r2
 80080e0:	00db      	lsls	r3, r3, #3
 80080e2:	185b      	adds	r3, r3, r1
 80080e4:	025b      	lsls	r3, r3, #9
 80080e6:	6879      	ldr	r1, [r7, #4]
 80080e8:	0018      	movs	r0, r3
 80080ea:	f7f8 f81f 	bl	800012c <__udivsi3>
 80080ee:	0003      	movs	r3, r0
 80080f0:	617b      	str	r3, [r7, #20]
 80080f2:	e023      	b.n	800813c <HAL_RCC_GetSysClockFreq+0xc8>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 80080f4:	4b1c      	ldr	r3, [pc, #112]	; (8008168 <HAL_RCC_GetSysClockFreq+0xf4>)
 80080f6:	681b      	ldr	r3, [r3, #0]
 80080f8:	2210      	movs	r2, #16
 80080fa:	4013      	ands	r3, r2
 80080fc:	d00f      	beq.n	800811e <HAL_RCC_GetSysClockFreq+0xaa>
        {
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 80080fe:	68b9      	ldr	r1, [r7, #8]
 8008100:	000a      	movs	r2, r1
 8008102:	0152      	lsls	r2, r2, #5
 8008104:	1a52      	subs	r2, r2, r1
 8008106:	0193      	lsls	r3, r2, #6
 8008108:	1a9b      	subs	r3, r3, r2
 800810a:	00db      	lsls	r3, r3, #3
 800810c:	185b      	adds	r3, r3, r1
 800810e:	021b      	lsls	r3, r3, #8
 8008110:	6879      	ldr	r1, [r7, #4]
 8008112:	0018      	movs	r0, r3
 8008114:	f7f8 f80a 	bl	800012c <__udivsi3>
 8008118:	0003      	movs	r3, r0
 800811a:	617b      	str	r3, [r7, #20]
 800811c:	e00e      	b.n	800813c <HAL_RCC_GetSysClockFreq+0xc8>
        }
        else
        {
         pllvco = (HSI_VALUE * pllm) / plld;
 800811e:	68b9      	ldr	r1, [r7, #8]
 8008120:	000a      	movs	r2, r1
 8008122:	0152      	lsls	r2, r2, #5
 8008124:	1a52      	subs	r2, r2, r1
 8008126:	0193      	lsls	r3, r2, #6
 8008128:	1a9b      	subs	r3, r3, r2
 800812a:	00db      	lsls	r3, r3, #3
 800812c:	185b      	adds	r3, r3, r1
 800812e:	029b      	lsls	r3, r3, #10
 8008130:	6879      	ldr	r1, [r7, #4]
 8008132:	0018      	movs	r0, r3
 8008134:	f7f7 fffa 	bl	800012c <__udivsi3>
 8008138:	0003      	movs	r3, r0
 800813a:	617b      	str	r3, [r7, #20]
        }
      }
      sysclockfreq = pllvco;
 800813c:	697b      	ldr	r3, [r7, #20]
 800813e:	613b      	str	r3, [r7, #16]
      break;
 8008140:	e00d      	b.n	800815e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8008142:	4b09      	ldr	r3, [pc, #36]	; (8008168 <HAL_RCC_GetSysClockFreq+0xf4>)
 8008144:	685b      	ldr	r3, [r3, #4]
 8008146:	0b5b      	lsrs	r3, r3, #13
 8008148:	2207      	movs	r2, #7
 800814a:	4013      	ands	r3, r2
 800814c:	603b      	str	r3, [r7, #0]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 800814e:	683b      	ldr	r3, [r7, #0]
 8008150:	3301      	adds	r3, #1
 8008152:	2280      	movs	r2, #128	; 0x80
 8008154:	0212      	lsls	r2, r2, #8
 8008156:	409a      	lsls	r2, r3
 8008158:	0013      	movs	r3, r2
 800815a:	613b      	str	r3, [r7, #16]
      break;
 800815c:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 800815e:	693b      	ldr	r3, [r7, #16]
}
 8008160:	0018      	movs	r0, r3
 8008162:	46bd      	mov	sp, r7
 8008164:	b006      	add	sp, #24
 8008166:	bd80      	pop	{r7, pc}
 8008168:	40021000 	.word	0x40021000
 800816c:	003d0900 	.word	0x003d0900
 8008170:	00f42400 	.word	0x00f42400
 8008174:	007a1200 	.word	0x007a1200
 8008178:	0800dd28 	.word	0x0800dd28

0800817c <HAL_RCCEx_PeriphCLKConfig>:
  * @retval HAL status
  * @note   If HAL_ERROR returned, first switch-OFF HSE clock oscillator with @ref HAL_RCC_OscConfig()
  *         to possibly update HSE divider.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800817c:	b580      	push	{r7, lr}
 800817e:	b086      	sub	sp, #24
 8008180:	af00      	add	r7, sp, #0
 8008182:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*------------------------------- RTC/LCD Configuration ------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	681b      	ldr	r3, [r3, #0]
 8008188:	2220      	movs	r2, #32
 800818a:	4013      	ands	r3, r2
 800818c:	d100      	bne.n	8008190 <HAL_RCCEx_PeriphCLKConfig+0x14>
 800818e:	e0c7      	b.n	8008320 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    {
      assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->LCDClockSelection));
    }
#endif /* LCD */

    FlagStatus       pwrclkchanged = RESET;
 8008190:	2317      	movs	r3, #23
 8008192:	18fb      	adds	r3, r7, r3
 8008194:	2200      	movs	r2, #0
 8008196:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008198:	4b99      	ldr	r3, [pc, #612]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800819a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800819c:	2380      	movs	r3, #128	; 0x80
 800819e:	055b      	lsls	r3, r3, #21
 80081a0:	4013      	ands	r3, r2
 80081a2:	d10a      	bne.n	80081ba <HAL_RCCEx_PeriphCLKConfig+0x3e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80081a4:	4b96      	ldr	r3, [pc, #600]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80081a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80081a8:	4b95      	ldr	r3, [pc, #596]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80081aa:	2180      	movs	r1, #128	; 0x80
 80081ac:	0549      	lsls	r1, r1, #21
 80081ae:	430a      	orrs	r2, r1
 80081b0:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 80081b2:	2317      	movs	r3, #23
 80081b4:	18fb      	adds	r3, r7, r3
 80081b6:	2201      	movs	r2, #1
 80081b8:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80081ba:	4b92      	ldr	r3, [pc, #584]	; (8008404 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 80081bc:	681a      	ldr	r2, [r3, #0]
 80081be:	2380      	movs	r3, #128	; 0x80
 80081c0:	005b      	lsls	r3, r3, #1
 80081c2:	4013      	ands	r3, r2
 80081c4:	d11a      	bne.n	80081fc <HAL_RCCEx_PeriphCLKConfig+0x80>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80081c6:	4b8f      	ldr	r3, [pc, #572]	; (8008404 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 80081c8:	681a      	ldr	r2, [r3, #0]
 80081ca:	4b8e      	ldr	r3, [pc, #568]	; (8008404 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 80081cc:	2180      	movs	r1, #128	; 0x80
 80081ce:	0049      	lsls	r1, r1, #1
 80081d0:	430a      	orrs	r2, r1
 80081d2:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80081d4:	f7fe fc40 	bl	8006a58 <HAL_GetTick>
 80081d8:	0003      	movs	r3, r0
 80081da:	613b      	str	r3, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80081dc:	e008      	b.n	80081f0 <HAL_RCCEx_PeriphCLKConfig+0x74>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80081de:	f7fe fc3b 	bl	8006a58 <HAL_GetTick>
 80081e2:	0002      	movs	r2, r0
 80081e4:	693b      	ldr	r3, [r7, #16]
 80081e6:	1ad3      	subs	r3, r2, r3
 80081e8:	2b64      	cmp	r3, #100	; 0x64
 80081ea:	d901      	bls.n	80081f0 <HAL_RCCEx_PeriphCLKConfig+0x74>
        {
          return HAL_TIMEOUT;
 80081ec:	2303      	movs	r3, #3
 80081ee:	e102      	b.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x27a>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80081f0:	4b84      	ldr	r3, [pc, #528]	; (8008404 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 80081f2:	681a      	ldr	r2, [r3, #0]
 80081f4:	2380      	movs	r3, #128	; 0x80
 80081f6:	005b      	lsls	r3, r3, #1
 80081f8:	4013      	ands	r3, r2
 80081fa:	d0f0      	beq.n	80081de <HAL_RCCEx_PeriphCLKConfig+0x62>
        }
      }
    }

    /* Check if user wants to change HSE RTC prescaler whereas HSE is enabled */
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 80081fc:	4b80      	ldr	r3, [pc, #512]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80081fe:	681a      	ldr	r2, [r3, #0]
 8008200:	23c0      	movs	r3, #192	; 0xc0
 8008202:	039b      	lsls	r3, r3, #14
 8008204:	4013      	ands	r3, r2
 8008206:	60fb      	str	r3, [r7, #12]
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	685a      	ldr	r2, [r3, #4]
 800820c:	23c0      	movs	r3, #192	; 0xc0
 800820e:	039b      	lsls	r3, r3, #14
 8008210:	4013      	ands	r3, r2
 8008212:	68fa      	ldr	r2, [r7, #12]
 8008214:	429a      	cmp	r2, r3
 8008216:	d013      	beq.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0xc4>
#if defined (LCD)
     || (temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CR_RTCPRE))
#endif /* LCD */
       )
    { /* Check HSE State */
      if ((PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL) == RCC_CSR_RTCSEL_HSE)
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	685a      	ldr	r2, [r3, #4]
 800821c:	23c0      	movs	r3, #192	; 0xc0
 800821e:	029b      	lsls	r3, r3, #10
 8008220:	401a      	ands	r2, r3
 8008222:	23c0      	movs	r3, #192	; 0xc0
 8008224:	029b      	lsls	r3, r3, #10
 8008226:	429a      	cmp	r2, r3
 8008228:	d10a      	bne.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0xc4>
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 800822a:	4b75      	ldr	r3, [pc, #468]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800822c:	681a      	ldr	r2, [r3, #0]
 800822e:	2380      	movs	r3, #128	; 0x80
 8008230:	029b      	lsls	r3, r3, #10
 8008232:	401a      	ands	r2, r3
 8008234:	2380      	movs	r3, #128	; 0x80
 8008236:	029b      	lsls	r3, r3, #10
 8008238:	429a      	cmp	r2, r3
 800823a:	d101      	bne.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0xc4>
        {
          /* To update HSE divider, first switch-OFF HSE clock oscillator*/
          return HAL_ERROR;
 800823c:	2301      	movs	r3, #1
 800823e:	e0da      	b.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x27a>
        }
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    temp_reg = (RCC->CSR & RCC_CSR_RTCSEL);
 8008240:	4b6f      	ldr	r3, [pc, #444]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008242:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8008244:	23c0      	movs	r3, #192	; 0xc0
 8008246:	029b      	lsls	r3, r3, #10
 8008248:	4013      	ands	r3, r2
 800824a:	60fb      	str	r3, [r7, #12]

    if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL)) \
 800824c:	68fb      	ldr	r3, [r7, #12]
 800824e:	2b00      	cmp	r3, #0
 8008250:	d03b      	beq.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	685a      	ldr	r2, [r3, #4]
 8008256:	23c0      	movs	r3, #192	; 0xc0
 8008258:	029b      	lsls	r3, r3, #10
 800825a:	4013      	ands	r3, r2
 800825c:	68fa      	ldr	r2, [r7, #12]
 800825e:	429a      	cmp	r2, r3
 8008260:	d033      	beq.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x14e>
      && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC))
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	681b      	ldr	r3, [r3, #0]
 8008266:	2220      	movs	r2, #32
 8008268:	4013      	ands	r3, r2
 800826a:	d02e      	beq.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x14e>
       && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD))
#endif /* LCD */
     ))
    {
      /* Store the content of CSR register before the reset of Backup Domain */
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 800826c:	4b64      	ldr	r3, [pc, #400]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800826e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008270:	4a65      	ldr	r2, [pc, #404]	; (8008408 <HAL_RCCEx_PeriphCLKConfig+0x28c>)
 8008272:	4013      	ands	r3, r2
 8008274:	60fb      	str	r3, [r7, #12]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8008276:	4b62      	ldr	r3, [pc, #392]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008278:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800827a:	4b61      	ldr	r3, [pc, #388]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800827c:	2180      	movs	r1, #128	; 0x80
 800827e:	0309      	lsls	r1, r1, #12
 8008280:	430a      	orrs	r2, r1
 8008282:	651a      	str	r2, [r3, #80]	; 0x50
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008284:	4b5e      	ldr	r3, [pc, #376]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008286:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8008288:	4b5d      	ldr	r3, [pc, #372]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800828a:	4960      	ldr	r1, [pc, #384]	; (800840c <HAL_RCCEx_PeriphCLKConfig+0x290>)
 800828c:	400a      	ands	r2, r1
 800828e:	651a      	str	r2, [r3, #80]	; 0x50

      /* Restore the Content of CSR register */
      RCC->CSR = temp_reg;
 8008290:	4b5b      	ldr	r3, [pc, #364]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008292:	68fa      	ldr	r2, [r7, #12]
 8008294:	651a      	str	r2, [r3, #80]	; 0x50

       /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_CSR_LSEON))
 8008296:	68fa      	ldr	r2, [r7, #12]
 8008298:	2380      	movs	r3, #128	; 0x80
 800829a:	005b      	lsls	r3, r3, #1
 800829c:	4013      	ands	r3, r2
 800829e:	d014      	beq.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x14e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80082a0:	f7fe fbda 	bl	8006a58 <HAL_GetTick>
 80082a4:	0003      	movs	r3, r0
 80082a6:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80082a8:	e009      	b.n	80082be <HAL_RCCEx_PeriphCLKConfig+0x142>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80082aa:	f7fe fbd5 	bl	8006a58 <HAL_GetTick>
 80082ae:	0002      	movs	r2, r0
 80082b0:	693b      	ldr	r3, [r7, #16]
 80082b2:	1ad3      	subs	r3, r2, r3
 80082b4:	4a56      	ldr	r2, [pc, #344]	; (8008410 <HAL_RCCEx_PeriphCLKConfig+0x294>)
 80082b6:	4293      	cmp	r3, r2
 80082b8:	d901      	bls.n	80082be <HAL_RCCEx_PeriphCLKConfig+0x142>
          {
            return HAL_TIMEOUT;
 80082ba:	2303      	movs	r3, #3
 80082bc:	e09b      	b.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x27a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80082be:	4b50      	ldr	r3, [pc, #320]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80082c0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80082c2:	2380      	movs	r3, #128	; 0x80
 80082c4:	009b      	lsls	r3, r3, #2
 80082c6:	4013      	ands	r3, r2
 80082c8:	d0ef      	beq.n	80082aa <HAL_RCCEx_PeriphCLKConfig+0x12e>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	685a      	ldr	r2, [r3, #4]
 80082ce:	23c0      	movs	r3, #192	; 0xc0
 80082d0:	029b      	lsls	r3, r3, #10
 80082d2:	401a      	ands	r2, r3
 80082d4:	23c0      	movs	r3, #192	; 0xc0
 80082d6:	029b      	lsls	r3, r3, #10
 80082d8:	429a      	cmp	r2, r3
 80082da:	d10c      	bne.n	80082f6 <HAL_RCCEx_PeriphCLKConfig+0x17a>
 80082dc:	4b48      	ldr	r3, [pc, #288]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	4a4c      	ldr	r2, [pc, #304]	; (8008414 <HAL_RCCEx_PeriphCLKConfig+0x298>)
 80082e2:	4013      	ands	r3, r2
 80082e4:	0019      	movs	r1, r3
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	685a      	ldr	r2, [r3, #4]
 80082ea:	23c0      	movs	r3, #192	; 0xc0
 80082ec:	039b      	lsls	r3, r3, #14
 80082ee:	401a      	ands	r2, r3
 80082f0:	4b43      	ldr	r3, [pc, #268]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80082f2:	430a      	orrs	r2, r1
 80082f4:	601a      	str	r2, [r3, #0]
 80082f6:	4b42      	ldr	r3, [pc, #264]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80082f8:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	685a      	ldr	r2, [r3, #4]
 80082fe:	23c0      	movs	r3, #192	; 0xc0
 8008300:	029b      	lsls	r3, r3, #10
 8008302:	401a      	ands	r2, r3
 8008304:	4b3e      	ldr	r3, [pc, #248]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008306:	430a      	orrs	r2, r1
 8008308:	651a      	str	r2, [r3, #80]	; 0x50

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800830a:	2317      	movs	r3, #23
 800830c:	18fb      	adds	r3, r7, r3
 800830e:	781b      	ldrb	r3, [r3, #0]
 8008310:	2b01      	cmp	r3, #1
 8008312:	d105      	bne.n	8008320 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8008314:	4b3a      	ldr	r3, [pc, #232]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008316:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008318:	4b39      	ldr	r3, [pc, #228]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800831a:	493f      	ldr	r1, [pc, #252]	; (8008418 <HAL_RCCEx_PeriphCLKConfig+0x29c>)
 800831c:	400a      	ands	r2, r1
 800831e:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined (RCC_CCIPR_USART1SEL)
  /*------------------------------- USART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	681b      	ldr	r3, [r3, #0]
 8008324:	2201      	movs	r2, #1
 8008326:	4013      	ands	r3, r2
 8008328:	d009      	beq.n	800833e <HAL_RCCEx_PeriphCLKConfig+0x1c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800832a:	4b35      	ldr	r3, [pc, #212]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800832c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800832e:	2203      	movs	r2, #3
 8008330:	4393      	bics	r3, r2
 8008332:	0019      	movs	r1, r3
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	689a      	ldr	r2, [r3, #8]
 8008338:	4b31      	ldr	r3, [pc, #196]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800833a:	430a      	orrs	r2, r1
 800833c:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_USART1SEL */

  /*----------------------------- USART2 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	681b      	ldr	r3, [r3, #0]
 8008342:	2202      	movs	r2, #2
 8008344:	4013      	ands	r3, r2
 8008346:	d009      	beq.n	800835c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8008348:	4b2d      	ldr	r3, [pc, #180]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800834a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800834c:	220c      	movs	r2, #12
 800834e:	4393      	bics	r3, r2
 8008350:	0019      	movs	r1, r3
 8008352:	687b      	ldr	r3, [r7, #4]
 8008354:	68da      	ldr	r2, [r3, #12]
 8008356:	4b2a      	ldr	r3, [pc, #168]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008358:	430a      	orrs	r2, r1
 800835a:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  /*------------------------------ LPUART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	681b      	ldr	r3, [r3, #0]
 8008360:	2204      	movs	r2, #4
 8008362:	4013      	ands	r3, r2
 8008364:	d009      	beq.n	800837a <HAL_RCCEx_PeriphCLKConfig+0x1fe>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUAR1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008366:	4b26      	ldr	r3, [pc, #152]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008368:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800836a:	4a2c      	ldr	r2, [pc, #176]	; (800841c <HAL_RCCEx_PeriphCLKConfig+0x2a0>)
 800836c:	4013      	ands	r3, r2
 800836e:	0019      	movs	r1, r3
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	691a      	ldr	r2, [r3, #16]
 8008374:	4b22      	ldr	r3, [pc, #136]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008376:	430a      	orrs	r2, r1
 8008378:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  /*------------------------------ I2C1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	2208      	movs	r2, #8
 8008380:	4013      	ands	r3, r2
 8008382:	d009      	beq.n	8008398 <HAL_RCCEx_PeriphCLKConfig+0x21c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8008384:	4b1e      	ldr	r3, [pc, #120]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008386:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008388:	4a25      	ldr	r2, [pc, #148]	; (8008420 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800838a:	4013      	ands	r3, r2
 800838c:	0019      	movs	r1, r3
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	695a      	ldr	r2, [r3, #20]
 8008392:	4b1b      	ldr	r3, [pc, #108]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008394:	430a      	orrs	r2, r1
 8008396:	64da      	str	r2, [r3, #76]	; 0x4c
  }

#if defined (RCC_CCIPR_I2C3SEL)
    /*------------------------------ I2C3 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	681a      	ldr	r2, [r3, #0]
 800839c:	2380      	movs	r3, #128	; 0x80
 800839e:	005b      	lsls	r3, r3, #1
 80083a0:	4013      	ands	r3, r2
 80083a2:	d009      	beq.n	80083b8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 80083a4:	4b16      	ldr	r3, [pc, #88]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083a6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083a8:	4a17      	ldr	r2, [pc, #92]	; (8008408 <HAL_RCCEx_PeriphCLKConfig+0x28c>)
 80083aa:	4013      	ands	r3, r2
 80083ac:	0019      	movs	r1, r3
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	699a      	ldr	r2, [r3, #24]
 80083b2:	4b13      	ldr	r3, [pc, #76]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083b4:	430a      	orrs	r2, r1
 80083b6:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_I2C3SEL */

#if defined(USB)
 /*---------------------------- USB and RNG configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 80083b8:	687b      	ldr	r3, [r7, #4]
 80083ba:	681b      	ldr	r3, [r3, #0]
 80083bc:	2240      	movs	r2, #64	; 0x40
 80083be:	4013      	ands	r3, r2
 80083c0:	d009      	beq.n	80083d6 <HAL_RCCEx_PeriphCLKConfig+0x25a>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80083c2:	4b0f      	ldr	r3, [pc, #60]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083c6:	4a17      	ldr	r2, [pc, #92]	; (8008424 <HAL_RCCEx_PeriphCLKConfig+0x2a8>)
 80083c8:	4013      	ands	r3, r2
 80083ca:	0019      	movs	r1, r3
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	6a1a      	ldr	r2, [r3, #32]
 80083d0:	4b0b      	ldr	r3, [pc, #44]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083d2:	430a      	orrs	r2, r1
 80083d4:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* USB */

  /*---------------------------- LPTIM1 configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	2280      	movs	r2, #128	; 0x80
 80083dc:	4013      	ands	r3, r2
 80083de:	d009      	beq.n	80083f4 <HAL_RCCEx_PeriphCLKConfig+0x278>
  {
    assert_param(IS_RCC_LPTIMCLK(PeriphClkInit->LptimClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->LptimClockSelection);
 80083e0:	4b07      	ldr	r3, [pc, #28]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083e2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083e4:	4a10      	ldr	r2, [pc, #64]	; (8008428 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80083e6:	4013      	ands	r3, r2
 80083e8:	0019      	movs	r1, r3
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	69da      	ldr	r2, [r3, #28]
 80083ee:	4b04      	ldr	r3, [pc, #16]	; (8008400 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80083f0:	430a      	orrs	r2, r1
 80083f2:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  return HAL_OK;
 80083f4:	2300      	movs	r3, #0
}
 80083f6:	0018      	movs	r0, r3
 80083f8:	46bd      	mov	sp, r7
 80083fa:	b006      	add	sp, #24
 80083fc:	bd80      	pop	{r7, pc}
 80083fe:	46c0      	nop			; (mov r8, r8)
 8008400:	40021000 	.word	0x40021000
 8008404:	40007000 	.word	0x40007000
 8008408:	fffcffff 	.word	0xfffcffff
 800840c:	fff7ffff 	.word	0xfff7ffff
 8008410:	00001388 	.word	0x00001388
 8008414:	ffcfffff 	.word	0xffcfffff
 8008418:	efffffff 	.word	0xefffffff
 800841c:	fffff3ff 	.word	0xfffff3ff
 8008420:	ffffcfff 	.word	0xffffcfff
 8008424:	fbffffff 	.word	0xfbffffff
 8008428:	fff3ffff 	.word	0xfff3ffff

0800842c <HAL_RTC_Init>:
  * @brief  Initialize the RTC peripheral
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
{
 800842c:	b580      	push	{r7, lr}
 800842e:	b082      	sub	sp, #8
 8008430:	af00      	add	r7, sp, #0
 8008432:	6078      	str	r0, [r7, #4]
  /* Check the RTC peripheral state */
  if (hrtc == NULL)
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	2b00      	cmp	r3, #0
 8008438:	d101      	bne.n	800843e <HAL_RTC_Init+0x12>
  {
    return HAL_ERROR;
 800843a:	2301      	movs	r3, #1
 800843c:	e08e      	b.n	800855c <HAL_RTC_Init+0x130>
    {
      hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
    }
  }
#else
  if (hrtc->State == HAL_RTC_STATE_RESET)
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	2221      	movs	r2, #33	; 0x21
 8008442:	5c9b      	ldrb	r3, [r3, r2]
 8008444:	b2db      	uxtb	r3, r3
 8008446:	2b00      	cmp	r3, #0
 8008448:	d107      	bne.n	800845a <HAL_RTC_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hrtc->Lock = HAL_UNLOCKED;
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	2220      	movs	r2, #32
 800844e:	2100      	movs	r1, #0
 8008450:	5499      	strb	r1, [r3, r2]

    /* Initialize RTC MSP */
    HAL_RTC_MspInit(hrtc);
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	0018      	movs	r0, r3
 8008456:	f7fb fd79 	bl	8003f4c <HAL_RTC_MspInit>
  }
#endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */

  /* Set RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	2221      	movs	r2, #33	; 0x21
 800845e:	2102      	movs	r1, #2
 8008460:	5499      	strb	r1, [r3, r2]

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	681b      	ldr	r3, [r3, #0]
 8008466:	22ca      	movs	r2, #202	; 0xca
 8008468:	625a      	str	r2, [r3, #36]	; 0x24
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	681b      	ldr	r3, [r3, #0]
 800846e:	2253      	movs	r2, #83	; 0x53
 8008470:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set Initialization mode */
  if (RTC_EnterInitMode(hrtc) != HAL_OK)
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	0018      	movs	r0, r3
 8008476:	f000 fbb2 	bl	8008bde <RTC_EnterInitMode>
 800847a:	1e03      	subs	r3, r0, #0
 800847c:	d009      	beq.n	8008492 <HAL_RTC_Init+0x66>
  {
    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800847e:	687b      	ldr	r3, [r7, #4]
 8008480:	681b      	ldr	r3, [r3, #0]
 8008482:	22ff      	movs	r2, #255	; 0xff
 8008484:	625a      	str	r2, [r3, #36]	; 0x24

    /* Set RTC state */
    hrtc->State = HAL_RTC_STATE_ERROR;
 8008486:	687b      	ldr	r3, [r7, #4]
 8008488:	2221      	movs	r2, #33	; 0x21
 800848a:	2104      	movs	r1, #4
 800848c:	5499      	strb	r1, [r3, r2]

    return HAL_ERROR;
 800848e:	2301      	movs	r3, #1
 8008490:	e064      	b.n	800855c <HAL_RTC_Init+0x130>
  }
  else
  {
    /* Clear RTC_CR FMT, OSEL and POL Bits */
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	681b      	ldr	r3, [r3, #0]
 8008496:	689a      	ldr	r2, [r3, #8]
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	4931      	ldr	r1, [pc, #196]	; (8008564 <HAL_RTC_Init+0x138>)
 800849e:	400a      	ands	r2, r1
 80084a0:	609a      	str	r2, [r3, #8]
    /* Set RTC_CR register */
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	6899      	ldr	r1, [r3, #8]
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	685a      	ldr	r2, [r3, #4]
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	691b      	ldr	r3, [r3, #16]
 80084b0:	431a      	orrs	r2, r3
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	699b      	ldr	r3, [r3, #24]
 80084b6:	431a      	orrs	r2, r3
 80084b8:	687b      	ldr	r3, [r7, #4]
 80084ba:	681b      	ldr	r3, [r3, #0]
 80084bc:	430a      	orrs	r2, r1
 80084be:	609a      	str	r2, [r3, #8]

    /* Configure the RTC PRER */
    hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	687a      	ldr	r2, [r7, #4]
 80084c6:	68d2      	ldr	r2, [r2, #12]
 80084c8:	611a      	str	r2, [r3, #16]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	6919      	ldr	r1, [r3, #16]
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	689b      	ldr	r3, [r3, #8]
 80084d4:	041a      	lsls	r2, r3, #16
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	430a      	orrs	r2, r1
 80084dc:	611a      	str	r2, [r3, #16]

    /* Exit Initialization mode */
    hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	681b      	ldr	r3, [r3, #0]
 80084e2:	68da      	ldr	r2, [r3, #12]
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	2180      	movs	r1, #128	; 0x80
 80084ea:	438a      	bics	r2, r1
 80084ec:	60da      	str	r2, [r3, #12]

    hrtc->Instance->OR &= (uint32_t)~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	681b      	ldr	r3, [r3, #0]
 80084f2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80084f4:	687b      	ldr	r3, [r7, #4]
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	2103      	movs	r1, #3
 80084fa:	438a      	bics	r2, r1
 80084fc:	64da      	str	r2, [r3, #76]	; 0x4c
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	69da      	ldr	r2, [r3, #28]
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	695b      	ldr	r3, [r3, #20]
 800850c:	431a      	orrs	r2, r3
 800850e:	687b      	ldr	r3, [r7, #4]
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	430a      	orrs	r2, r1
 8008514:	64da      	str	r2, [r3, #76]	; 0x4c

    /* If CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
    if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	681b      	ldr	r3, [r3, #0]
 800851a:	689b      	ldr	r3, [r3, #8]
 800851c:	2220      	movs	r2, #32
 800851e:	4013      	ands	r3, r2
 8008520:	d113      	bne.n	800854a <HAL_RTC_Init+0x11e>
    {
      if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	0018      	movs	r0, r3
 8008526:	f000 fb33 	bl	8008b90 <HAL_RTC_WaitForSynchro>
 800852a:	1e03      	subs	r3, r0, #0
 800852c:	d00d      	beq.n	800854a <HAL_RTC_Init+0x11e>
      {
        /* Enable the write protection for RTC registers */
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	22ff      	movs	r2, #255	; 0xff
 8008534:	625a      	str	r2, [r3, #36]	; 0x24

        hrtc->State = HAL_RTC_STATE_ERROR;
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	2221      	movs	r2, #33	; 0x21
 800853a:	2104      	movs	r1, #4
 800853c:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hrtc);
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	2220      	movs	r2, #32
 8008542:	2100      	movs	r1, #0
 8008544:	5499      	strb	r1, [r3, r2]

        return HAL_ERROR;
 8008546:	2301      	movs	r3, #1
 8008548:	e008      	b.n	800855c <HAL_RTC_Init+0x130>
      }
    }

    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	22ff      	movs	r2, #255	; 0xff
 8008550:	625a      	str	r2, [r3, #36]	; 0x24

    /* Set RTC state */
    hrtc->State = HAL_RTC_STATE_READY;
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	2221      	movs	r2, #33	; 0x21
 8008556:	2101      	movs	r1, #1
 8008558:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 800855a:	2300      	movs	r3, #0
  }
}
 800855c:	0018      	movs	r0, r3
 800855e:	46bd      	mov	sp, r7
 8008560:	b002      	add	sp, #8
 8008562:	bd80      	pop	{r7, pc}
 8008564:	ff8fffbf 	.word	0xff8fffbf

08008568 <HAL_RTC_SetTime>:
  *            @arg RTC_FORMAT_BIN: Binary data format
  *            @arg RTC_FORMAT_BCD: BCD data format
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
{
 8008568:	b590      	push	{r4, r7, lr}
 800856a:	b087      	sub	sp, #28
 800856c:	af00      	add	r7, sp, #0
 800856e:	60f8      	str	r0, [r7, #12]
 8008570:	60b9      	str	r1, [r7, #8]
 8008572:	607a      	str	r2, [r7, #4]
  assert_param(IS_RTC_FORMAT(Format));
  assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
  assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));

  /* Process Locked */
  __HAL_LOCK(hrtc);
 8008574:	68fb      	ldr	r3, [r7, #12]
 8008576:	2220      	movs	r2, #32
 8008578:	5c9b      	ldrb	r3, [r3, r2]
 800857a:	2b01      	cmp	r3, #1
 800857c:	d101      	bne.n	8008582 <HAL_RTC_SetTime+0x1a>
 800857e:	2302      	movs	r3, #2
 8008580:	e0ad      	b.n	80086de <HAL_RTC_SetTime+0x176>
 8008582:	68fb      	ldr	r3, [r7, #12]
 8008584:	2220      	movs	r2, #32
 8008586:	2101      	movs	r1, #1
 8008588:	5499      	strb	r1, [r3, r2]

  hrtc->State = HAL_RTC_STATE_BUSY;
 800858a:	68fb      	ldr	r3, [r7, #12]
 800858c:	2221      	movs	r2, #33	; 0x21
 800858e:	2102      	movs	r1, #2
 8008590:	5499      	strb	r1, [r3, r2]

  if (Format == RTC_FORMAT_BIN)
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	2b00      	cmp	r3, #0
 8008596:	d125      	bne.n	80085e4 <HAL_RTC_SetTime+0x7c>
  {
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 8008598:	68fb      	ldr	r3, [r7, #12]
 800859a:	681b      	ldr	r3, [r3, #0]
 800859c:	689b      	ldr	r3, [r3, #8]
 800859e:	2240      	movs	r2, #64	; 0x40
 80085a0:	4013      	ands	r3, r2
 80085a2:	d102      	bne.n	80085aa <HAL_RTC_SetTime+0x42>
      assert_param(IS_RTC_HOUR12(sTime->Hours));
      assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
    }
    else
    {
      sTime->TimeFormat = 0x00U;
 80085a4:	68bb      	ldr	r3, [r7, #8]
 80085a6:	2200      	movs	r2, #0
 80085a8:	70da      	strb	r2, [r3, #3]
      assert_param(IS_RTC_HOUR24(sTime->Hours));
    }
    assert_param(IS_RTC_MINUTES(sTime->Minutes));
    assert_param(IS_RTC_SECONDS(sTime->Seconds));

    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 80085aa:	68bb      	ldr	r3, [r7, #8]
 80085ac:	781b      	ldrb	r3, [r3, #0]
 80085ae:	0018      	movs	r0, r3
 80085b0:	f000 fb3f 	bl	8008c32 <RTC_ByteToBcd2>
 80085b4:	0003      	movs	r3, r0
 80085b6:	041c      	lsls	r4, r3, #16
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 80085b8:	68bb      	ldr	r3, [r7, #8]
 80085ba:	785b      	ldrb	r3, [r3, #1]
 80085bc:	0018      	movs	r0, r3
 80085be:	f000 fb38 	bl	8008c32 <RTC_ByteToBcd2>
 80085c2:	0003      	movs	r3, r0
 80085c4:	021b      	lsls	r3, r3, #8
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 80085c6:	431c      	orrs	r4, r3
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 80085c8:	68bb      	ldr	r3, [r7, #8]
 80085ca:	789b      	ldrb	r3, [r3, #2]
 80085cc:	0018      	movs	r0, r3
 80085ce:	f000 fb30 	bl	8008c32 <RTC_ByteToBcd2>
 80085d2:	0003      	movs	r3, r0
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 80085d4:	0022      	movs	r2, r4
 80085d6:	431a      	orrs	r2, r3
                        (((uint32_t)sTime->TimeFormat) << 16U));
 80085d8:	68bb      	ldr	r3, [r7, #8]
 80085da:	78db      	ldrb	r3, [r3, #3]
 80085dc:	041b      	lsls	r3, r3, #16
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 80085de:	4313      	orrs	r3, r2
 80085e0:	617b      	str	r3, [r7, #20]
 80085e2:	e017      	b.n	8008614 <HAL_RTC_SetTime+0xac>
  }
  else
  {
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 80085e4:	68fb      	ldr	r3, [r7, #12]
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	689b      	ldr	r3, [r3, #8]
 80085ea:	2240      	movs	r2, #64	; 0x40
 80085ec:	4013      	ands	r3, r2
 80085ee:	d102      	bne.n	80085f6 <HAL_RTC_SetTime+0x8e>
      assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
      assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
    }
    else
    {
      sTime->TimeFormat = 0x00U;
 80085f0:	68bb      	ldr	r3, [r7, #8]
 80085f2:	2200      	movs	r2, #0
 80085f4:	70da      	strb	r2, [r3, #3]
      assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
    }
    assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
    assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
    tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 80085f6:	68bb      	ldr	r3, [r7, #8]
 80085f8:	781b      	ldrb	r3, [r3, #0]
 80085fa:	041a      	lsls	r2, r3, #16
              ((uint32_t)(sTime->Minutes) << 8U) | \
 80085fc:	68bb      	ldr	r3, [r7, #8]
 80085fe:	785b      	ldrb	r3, [r3, #1]
 8008600:	021b      	lsls	r3, r3, #8
    tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 8008602:	4313      	orrs	r3, r2
              ((uint32_t)sTime->Seconds) | \
 8008604:	68ba      	ldr	r2, [r7, #8]
 8008606:	7892      	ldrb	r2, [r2, #2]
              ((uint32_t)(sTime->Minutes) << 8U) | \
 8008608:	431a      	orrs	r2, r3
              ((uint32_t)(sTime->TimeFormat) << 16U));
 800860a:	68bb      	ldr	r3, [r7, #8]
 800860c:	78db      	ldrb	r3, [r3, #3]
 800860e:	041b      	lsls	r3, r3, #16
    tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 8008610:	4313      	orrs	r3, r2
 8008612:	617b      	str	r3, [r7, #20]
  }
  UNUSED(tmpreg);
  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8008614:	68fb      	ldr	r3, [r7, #12]
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	22ca      	movs	r2, #202	; 0xca
 800861a:	625a      	str	r2, [r3, #36]	; 0x24
 800861c:	68fb      	ldr	r3, [r7, #12]
 800861e:	681b      	ldr	r3, [r3, #0]
 8008620:	2253      	movs	r2, #83	; 0x53
 8008622:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set Initialization mode */
  if (RTC_EnterInitMode(hrtc) != HAL_OK)
 8008624:	68fb      	ldr	r3, [r7, #12]
 8008626:	0018      	movs	r0, r3
 8008628:	f000 fad9 	bl	8008bde <RTC_EnterInitMode>
 800862c:	1e03      	subs	r3, r0, #0
 800862e:	d00d      	beq.n	800864c <HAL_RTC_SetTime+0xe4>
  {
    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	681b      	ldr	r3, [r3, #0]
 8008634:	22ff      	movs	r2, #255	; 0xff
 8008636:	625a      	str	r2, [r3, #36]	; 0x24

    /* Set RTC state */
    hrtc->State = HAL_RTC_STATE_ERROR;
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	2221      	movs	r2, #33	; 0x21
 800863c:	2104      	movs	r1, #4
 800863e:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hrtc);
 8008640:	68fb      	ldr	r3, [r7, #12]
 8008642:	2220      	movs	r2, #32
 8008644:	2100      	movs	r1, #0
 8008646:	5499      	strb	r1, [r3, r2]

    return HAL_ERROR;
 8008648:	2301      	movs	r3, #1
 800864a:	e048      	b.n	80086de <HAL_RTC_SetTime+0x176>
  }
  else
  {
    /* Set the RTC_TR register */
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 800864c:	68fb      	ldr	r3, [r7, #12]
 800864e:	681b      	ldr	r3, [r3, #0]
 8008650:	697a      	ldr	r2, [r7, #20]
 8008652:	4925      	ldr	r1, [pc, #148]	; (80086e8 <HAL_RTC_SetTime+0x180>)
 8008654:	400a      	ands	r2, r1
 8008656:	601a      	str	r2, [r3, #0]

    /* Clear the bits to be configured */
    hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
 8008658:	68fb      	ldr	r3, [r7, #12]
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	689a      	ldr	r2, [r3, #8]
 800865e:	68fb      	ldr	r3, [r7, #12]
 8008660:	681b      	ldr	r3, [r3, #0]
 8008662:	4922      	ldr	r1, [pc, #136]	; (80086ec <HAL_RTC_SetTime+0x184>)
 8008664:	400a      	ands	r2, r1
 8008666:	609a      	str	r2, [r3, #8]

    /* Configure the RTC_CR register */
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8008668:	68fb      	ldr	r3, [r7, #12]
 800866a:	681b      	ldr	r3, [r3, #0]
 800866c:	6899      	ldr	r1, [r3, #8]
 800866e:	68bb      	ldr	r3, [r7, #8]
 8008670:	68da      	ldr	r2, [r3, #12]
 8008672:	68bb      	ldr	r3, [r7, #8]
 8008674:	691b      	ldr	r3, [r3, #16]
 8008676:	431a      	orrs	r2, r3
 8008678:	68fb      	ldr	r3, [r7, #12]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	430a      	orrs	r2, r1
 800867e:	609a      	str	r2, [r3, #8]

    /* Exit Initialization mode */
    hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 8008680:	68fb      	ldr	r3, [r7, #12]
 8008682:	681b      	ldr	r3, [r3, #0]
 8008684:	68da      	ldr	r2, [r3, #12]
 8008686:	68fb      	ldr	r3, [r7, #12]
 8008688:	681b      	ldr	r3, [r3, #0]
 800868a:	2180      	movs	r1, #128	; 0x80
 800868c:	438a      	bics	r2, r1
 800868e:	60da      	str	r2, [r3, #12]

    /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
    if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
 8008690:	68fb      	ldr	r3, [r7, #12]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	689b      	ldr	r3, [r3, #8]
 8008696:	2220      	movs	r2, #32
 8008698:	4013      	ands	r3, r2
 800869a:	d113      	bne.n	80086c4 <HAL_RTC_SetTime+0x15c>
    {
      if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800869c:	68fb      	ldr	r3, [r7, #12]
 800869e:	0018      	movs	r0, r3
 80086a0:	f000 fa76 	bl	8008b90 <HAL_RTC_WaitForSynchro>
 80086a4:	1e03      	subs	r3, r0, #0
 80086a6:	d00d      	beq.n	80086c4 <HAL_RTC_SetTime+0x15c>
      {
        /* Enable the write protection for RTC registers */
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80086a8:	68fb      	ldr	r3, [r7, #12]
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	22ff      	movs	r2, #255	; 0xff
 80086ae:	625a      	str	r2, [r3, #36]	; 0x24

        hrtc->State = HAL_RTC_STATE_ERROR;
 80086b0:	68fb      	ldr	r3, [r7, #12]
 80086b2:	2221      	movs	r2, #33	; 0x21
 80086b4:	2104      	movs	r1, #4
 80086b6:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hrtc);
 80086b8:	68fb      	ldr	r3, [r7, #12]
 80086ba:	2220      	movs	r2, #32
 80086bc:	2100      	movs	r1, #0
 80086be:	5499      	strb	r1, [r3, r2]

        return HAL_ERROR;
 80086c0:	2301      	movs	r3, #1
 80086c2:	e00c      	b.n	80086de <HAL_RTC_SetTime+0x176>
      }
    }

    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80086c4:	68fb      	ldr	r3, [r7, #12]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	22ff      	movs	r2, #255	; 0xff
 80086ca:	625a      	str	r2, [r3, #36]	; 0x24

    hrtc->State = HAL_RTC_STATE_READY;
 80086cc:	68fb      	ldr	r3, [r7, #12]
 80086ce:	2221      	movs	r2, #33	; 0x21
 80086d0:	2101      	movs	r1, #1
 80086d2:	5499      	strb	r1, [r3, r2]

    __HAL_UNLOCK(hrtc);
 80086d4:	68fb      	ldr	r3, [r7, #12]
 80086d6:	2220      	movs	r2, #32
 80086d8:	2100      	movs	r1, #0
 80086da:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 80086dc:	2300      	movs	r3, #0
  }
}
 80086de:	0018      	movs	r0, r3
 80086e0:	46bd      	mov	sp, r7
 80086e2:	b007      	add	sp, #28
 80086e4:	bd90      	pop	{r4, r7, pc}
 80086e6:	46c0      	nop			; (mov r8, r8)
 80086e8:	007f7f7f 	.word	0x007f7f7f
 80086ec:	fffbffff 	.word	0xfffbffff

080086f0 <HAL_RTC_SetDate>:
  *            @arg RTC_FORMAT_BIN: Binary data format
  *            @arg RTC_FORMAT_BCD: BCD data format
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
{
 80086f0:	b590      	push	{r4, r7, lr}
 80086f2:	b087      	sub	sp, #28
 80086f4:	af00      	add	r7, sp, #0
 80086f6:	60f8      	str	r0, [r7, #12]
 80086f8:	60b9      	str	r1, [r7, #8]
 80086fa:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_RTC_FORMAT(Format));

  /* Process Locked */
  __HAL_LOCK(hrtc);
 80086fc:	68fb      	ldr	r3, [r7, #12]
 80086fe:	2220      	movs	r2, #32
 8008700:	5c9b      	ldrb	r3, [r3, r2]
 8008702:	2b01      	cmp	r3, #1
 8008704:	d101      	bne.n	800870a <HAL_RTC_SetDate+0x1a>
 8008706:	2302      	movs	r3, #2
 8008708:	e099      	b.n	800883e <HAL_RTC_SetDate+0x14e>
 800870a:	68fb      	ldr	r3, [r7, #12]
 800870c:	2220      	movs	r2, #32
 800870e:	2101      	movs	r1, #1
 8008710:	5499      	strb	r1, [r3, r2]

  hrtc->State = HAL_RTC_STATE_BUSY;
 8008712:	68fb      	ldr	r3, [r7, #12]
 8008714:	2221      	movs	r2, #33	; 0x21
 8008716:	2102      	movs	r1, #2
 8008718:	5499      	strb	r1, [r3, r2]

  if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 800871a:	687b      	ldr	r3, [r7, #4]
 800871c:	2b00      	cmp	r3, #0
 800871e:	d10e      	bne.n	800873e <HAL_RTC_SetDate+0x4e>
 8008720:	68bb      	ldr	r3, [r7, #8]
 8008722:	785b      	ldrb	r3, [r3, #1]
 8008724:	001a      	movs	r2, r3
 8008726:	2310      	movs	r3, #16
 8008728:	4013      	ands	r3, r2
 800872a:	d008      	beq.n	800873e <HAL_RTC_SetDate+0x4e>
  {
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 800872c:	68bb      	ldr	r3, [r7, #8]
 800872e:	785b      	ldrb	r3, [r3, #1]
 8008730:	2210      	movs	r2, #16
 8008732:	4393      	bics	r3, r2
 8008734:	b2db      	uxtb	r3, r3
 8008736:	330a      	adds	r3, #10
 8008738:	b2da      	uxtb	r2, r3
 800873a:	68bb      	ldr	r3, [r7, #8]
 800873c:	705a      	strb	r2, [r3, #1]
  }

  assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));

  if (Format == RTC_FORMAT_BIN)
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	2b00      	cmp	r3, #0
 8008742:	d11c      	bne.n	800877e <HAL_RTC_SetDate+0x8e>
  {
    assert_param(IS_RTC_YEAR(sDate->Year));
    assert_param(IS_RTC_MONTH(sDate->Month));
    assert_param(IS_RTC_DATE(sDate->Date));

    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 8008744:	68bb      	ldr	r3, [r7, #8]
 8008746:	78db      	ldrb	r3, [r3, #3]
 8008748:	0018      	movs	r0, r3
 800874a:	f000 fa72 	bl	8008c32 <RTC_ByteToBcd2>
 800874e:	0003      	movs	r3, r0
 8008750:	041c      	lsls	r4, r3, #16
                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 8008752:	68bb      	ldr	r3, [r7, #8]
 8008754:	785b      	ldrb	r3, [r3, #1]
 8008756:	0018      	movs	r0, r3
 8008758:	f000 fa6b 	bl	8008c32 <RTC_ByteToBcd2>
 800875c:	0003      	movs	r3, r0
 800875e:	021b      	lsls	r3, r3, #8
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 8008760:	431c      	orrs	r4, r3
                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 8008762:	68bb      	ldr	r3, [r7, #8]
 8008764:	789b      	ldrb	r3, [r3, #2]
 8008766:	0018      	movs	r0, r3
 8008768:	f000 fa63 	bl	8008c32 <RTC_ByteToBcd2>
 800876c:	0003      	movs	r3, r0
                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 800876e:	0022      	movs	r2, r4
 8008770:	431a      	orrs	r2, r3
                  ((uint32_t)sDate->WeekDay << 13U));
 8008772:	68bb      	ldr	r3, [r7, #8]
 8008774:	781b      	ldrb	r3, [r3, #0]
 8008776:	035b      	lsls	r3, r3, #13
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 8008778:	4313      	orrs	r3, r2
 800877a:	617b      	str	r3, [r7, #20]
 800877c:	e00e      	b.n	800879c <HAL_RTC_SetDate+0xac>
  {
    assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
    assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
    assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));

    datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 800877e:	68bb      	ldr	r3, [r7, #8]
 8008780:	78db      	ldrb	r3, [r3, #3]
 8008782:	041a      	lsls	r2, r3, #16
                  (((uint32_t)sDate->Month) << 8U) | \
 8008784:	68bb      	ldr	r3, [r7, #8]
 8008786:	785b      	ldrb	r3, [r3, #1]
 8008788:	021b      	lsls	r3, r3, #8
    datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 800878a:	4313      	orrs	r3, r2
                  ((uint32_t)sDate->Date) | \
 800878c:	68ba      	ldr	r2, [r7, #8]
 800878e:	7892      	ldrb	r2, [r2, #2]
                  (((uint32_t)sDate->Month) << 8U) | \
 8008790:	431a      	orrs	r2, r3
                  (((uint32_t)sDate->WeekDay) << 13U));
 8008792:	68bb      	ldr	r3, [r7, #8]
 8008794:	781b      	ldrb	r3, [r3, #0]
 8008796:	035b      	lsls	r3, r3, #13
    datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 8008798:	4313      	orrs	r3, r2
 800879a:	617b      	str	r3, [r7, #20]
  }

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 800879c:	68fb      	ldr	r3, [r7, #12]
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	22ca      	movs	r2, #202	; 0xca
 80087a2:	625a      	str	r2, [r3, #36]	; 0x24
 80087a4:	68fb      	ldr	r3, [r7, #12]
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	2253      	movs	r2, #83	; 0x53
 80087aa:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set Initialization mode */
  if (RTC_EnterInitMode(hrtc) != HAL_OK)
 80087ac:	68fb      	ldr	r3, [r7, #12]
 80087ae:	0018      	movs	r0, r3
 80087b0:	f000 fa15 	bl	8008bde <RTC_EnterInitMode>
 80087b4:	1e03      	subs	r3, r0, #0
 80087b6:	d00d      	beq.n	80087d4 <HAL_RTC_SetDate+0xe4>
  {
    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80087b8:	68fb      	ldr	r3, [r7, #12]
 80087ba:	681b      	ldr	r3, [r3, #0]
 80087bc:	22ff      	movs	r2, #255	; 0xff
 80087be:	625a      	str	r2, [r3, #36]	; 0x24

    /* Set RTC state*/
    hrtc->State = HAL_RTC_STATE_ERROR;
 80087c0:	68fb      	ldr	r3, [r7, #12]
 80087c2:	2221      	movs	r2, #33	; 0x21
 80087c4:	2104      	movs	r1, #4
 80087c6:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hrtc);
 80087c8:	68fb      	ldr	r3, [r7, #12]
 80087ca:	2220      	movs	r2, #32
 80087cc:	2100      	movs	r1, #0
 80087ce:	5499      	strb	r1, [r3, r2]

    return HAL_ERROR;
 80087d0:	2301      	movs	r3, #1
 80087d2:	e034      	b.n	800883e <HAL_RTC_SetDate+0x14e>
  }
  else
  {
    /* Set the RTC_DR register */
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 80087d4:	68fb      	ldr	r3, [r7, #12]
 80087d6:	681b      	ldr	r3, [r3, #0]
 80087d8:	697a      	ldr	r2, [r7, #20]
 80087da:	491b      	ldr	r1, [pc, #108]	; (8008848 <HAL_RTC_SetDate+0x158>)
 80087dc:	400a      	ands	r2, r1
 80087de:	605a      	str	r2, [r3, #4]

    /* Exit Initialization mode */
    hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 80087e0:	68fb      	ldr	r3, [r7, #12]
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	68da      	ldr	r2, [r3, #12]
 80087e6:	68fb      	ldr	r3, [r7, #12]
 80087e8:	681b      	ldr	r3, [r3, #0]
 80087ea:	2180      	movs	r1, #128	; 0x80
 80087ec:	438a      	bics	r2, r1
 80087ee:	60da      	str	r2, [r3, #12]

    /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
    if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
 80087f0:	68fb      	ldr	r3, [r7, #12]
 80087f2:	681b      	ldr	r3, [r3, #0]
 80087f4:	689b      	ldr	r3, [r3, #8]
 80087f6:	2220      	movs	r2, #32
 80087f8:	4013      	ands	r3, r2
 80087fa:	d113      	bne.n	8008824 <HAL_RTC_SetDate+0x134>
    {
      if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 80087fc:	68fb      	ldr	r3, [r7, #12]
 80087fe:	0018      	movs	r0, r3
 8008800:	f000 f9c6 	bl	8008b90 <HAL_RTC_WaitForSynchro>
 8008804:	1e03      	subs	r3, r0, #0
 8008806:	d00d      	beq.n	8008824 <HAL_RTC_SetDate+0x134>
      {
        /* Enable the write protection for RTC registers */
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008808:	68fb      	ldr	r3, [r7, #12]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	22ff      	movs	r2, #255	; 0xff
 800880e:	625a      	str	r2, [r3, #36]	; 0x24

        hrtc->State = HAL_RTC_STATE_ERROR;
 8008810:	68fb      	ldr	r3, [r7, #12]
 8008812:	2221      	movs	r2, #33	; 0x21
 8008814:	2104      	movs	r1, #4
 8008816:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hrtc);
 8008818:	68fb      	ldr	r3, [r7, #12]
 800881a:	2220      	movs	r2, #32
 800881c:	2100      	movs	r1, #0
 800881e:	5499      	strb	r1, [r3, r2]

        return HAL_ERROR;
 8008820:	2301      	movs	r3, #1
 8008822:	e00c      	b.n	800883e <HAL_RTC_SetDate+0x14e>
      }
    }

    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008824:	68fb      	ldr	r3, [r7, #12]
 8008826:	681b      	ldr	r3, [r3, #0]
 8008828:	22ff      	movs	r2, #255	; 0xff
 800882a:	625a      	str	r2, [r3, #36]	; 0x24

    hrtc->State = HAL_RTC_STATE_READY ;
 800882c:	68fb      	ldr	r3, [r7, #12]
 800882e:	2221      	movs	r2, #33	; 0x21
 8008830:	2101      	movs	r1, #1
 8008832:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hrtc);
 8008834:	68fb      	ldr	r3, [r7, #12]
 8008836:	2220      	movs	r2, #32
 8008838:	2100      	movs	r1, #0
 800883a:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 800883c:	2300      	movs	r3, #0
  }
}
 800883e:	0018      	movs	r0, r3
 8008840:	46bd      	mov	sp, r7
 8008842:	b007      	add	sp, #28
 8008844:	bd90      	pop	{r4, r7, pc}
 8008846:	46c0      	nop			; (mov r8, r8)
 8008848:	00ffff3f 	.word	0x00ffff3f

0800884c <HAL_RTC_SetAlarm_IT>:
  *         is disabled (Use the HAL_RTC_DeactivateAlarm()).
  * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Format)
{
 800884c:	b590      	push	{r4, r7, lr}
 800884e:	b089      	sub	sp, #36	; 0x24
 8008850:	af00      	add	r7, sp, #0
 8008852:	60f8      	str	r0, [r7, #12]
 8008854:	60b9      	str	r1, [r7, #8]
 8008856:	607a      	str	r2, [r7, #4]
  assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
  assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
  assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));

  /* Process Locked */
  __HAL_LOCK(hrtc);
 8008858:	68fb      	ldr	r3, [r7, #12]
 800885a:	2220      	movs	r2, #32
 800885c:	5c9b      	ldrb	r3, [r3, r2]
 800885e:	2b01      	cmp	r3, #1
 8008860:	d101      	bne.n	8008866 <HAL_RTC_SetAlarm_IT+0x1a>
 8008862:	2302      	movs	r3, #2
 8008864:	e130      	b.n	8008ac8 <HAL_RTC_SetAlarm_IT+0x27c>
 8008866:	68fb      	ldr	r3, [r7, #12]
 8008868:	2220      	movs	r2, #32
 800886a:	2101      	movs	r1, #1
 800886c:	5499      	strb	r1, [r3, r2]

  hrtc->State = HAL_RTC_STATE_BUSY;
 800886e:	68fb      	ldr	r3, [r7, #12]
 8008870:	2221      	movs	r2, #33	; 0x21
 8008872:	2102      	movs	r1, #2
 8008874:	5499      	strb	r1, [r3, r2]

  if (Format == RTC_FORMAT_BIN)
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	2b00      	cmp	r3, #0
 800887a:	d136      	bne.n	80088ea <HAL_RTC_SetAlarm_IT+0x9e>
  {
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 800887c:	68fb      	ldr	r3, [r7, #12]
 800887e:	681b      	ldr	r3, [r3, #0]
 8008880:	689b      	ldr	r3, [r3, #8]
 8008882:	2240      	movs	r2, #64	; 0x40
 8008884:	4013      	ands	r3, r2
 8008886:	d102      	bne.n	800888e <HAL_RTC_SetAlarm_IT+0x42>
      assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
      assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
    }
    else
    {
      sAlarm->AlarmTime.TimeFormat = 0x00U;
 8008888:	68bb      	ldr	r3, [r7, #8]
 800888a:	2200      	movs	r2, #0
 800888c:	70da      	strb	r2, [r3, #3]
    }
    else
    {
      assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
    }
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 800888e:	68bb      	ldr	r3, [r7, #8]
 8008890:	781b      	ldrb	r3, [r3, #0]
 8008892:	0018      	movs	r0, r3
 8008894:	f000 f9cd 	bl	8008c32 <RTC_ByteToBcd2>
 8008898:	0003      	movs	r3, r0
 800889a:	041c      	lsls	r4, r3, #16
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 800889c:	68bb      	ldr	r3, [r7, #8]
 800889e:	785b      	ldrb	r3, [r3, #1]
 80088a0:	0018      	movs	r0, r3
 80088a2:	f000 f9c6 	bl	8008c32 <RTC_ByteToBcd2>
 80088a6:	0003      	movs	r3, r0
 80088a8:	021b      	lsls	r3, r3, #8
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 80088aa:	431c      	orrs	r4, r3
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 80088ac:	68bb      	ldr	r3, [r7, #8]
 80088ae:	789b      	ldrb	r3, [r3, #2]
 80088b0:	0018      	movs	r0, r3
 80088b2:	f000 f9be 	bl	8008c32 <RTC_ByteToBcd2>
 80088b6:	0003      	movs	r3, r0
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 80088b8:	0022      	movs	r2, r4
 80088ba:	431a      	orrs	r2, r3
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 80088bc:	68bb      	ldr	r3, [r7, #8]
 80088be:	78db      	ldrb	r3, [r3, #3]
 80088c0:	041b      	lsls	r3, r3, #16
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 80088c2:	431a      	orrs	r2, r3
 80088c4:	0014      	movs	r4, r2
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 80088c6:	68bb      	ldr	r3, [r7, #8]
 80088c8:	2220      	movs	r2, #32
 80088ca:	5c9b      	ldrb	r3, [r3, r2]
 80088cc:	0018      	movs	r0, r3
 80088ce:	f000 f9b0 	bl	8008c32 <RTC_ByteToBcd2>
 80088d2:	0003      	movs	r3, r0
 80088d4:	061b      	lsls	r3, r3, #24
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 80088d6:	0022      	movs	r2, r4
 80088d8:	431a      	orrs	r2, r3
              ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 80088da:	68bb      	ldr	r3, [r7, #8]
 80088dc:	69db      	ldr	r3, [r3, #28]
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 80088de:	431a      	orrs	r2, r3
              ((uint32_t)sAlarm->AlarmMask));
 80088e0:	68bb      	ldr	r3, [r7, #8]
 80088e2:	695b      	ldr	r3, [r3, #20]
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 80088e4:	4313      	orrs	r3, r2
 80088e6:	61fb      	str	r3, [r7, #28]
 80088e8:	e022      	b.n	8008930 <HAL_RTC_SetAlarm_IT+0xe4>
  }
  else
  {
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 80088ea:	68fb      	ldr	r3, [r7, #12]
 80088ec:	681b      	ldr	r3, [r3, #0]
 80088ee:	689b      	ldr	r3, [r3, #8]
 80088f0:	2240      	movs	r2, #64	; 0x40
 80088f2:	4013      	ands	r3, r2
 80088f4:	d102      	bne.n	80088fc <HAL_RTC_SetAlarm_IT+0xb0>
      assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
      assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
    }
    else
    {
      sAlarm->AlarmTime.TimeFormat = 0x00U;
 80088f6:	68bb      	ldr	r3, [r7, #8]
 80088f8:	2200      	movs	r2, #0
 80088fa:	70da      	strb	r2, [r3, #3]
    }
    else
    {
      assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
    }
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 80088fc:	68bb      	ldr	r3, [r7, #8]
 80088fe:	781b      	ldrb	r3, [r3, #0]
 8008900:	041a      	lsls	r2, r3, #16
              ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 8008902:	68bb      	ldr	r3, [r7, #8]
 8008904:	785b      	ldrb	r3, [r3, #1]
 8008906:	021b      	lsls	r3, r3, #8
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 8008908:	4313      	orrs	r3, r2
              ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 800890a:	68ba      	ldr	r2, [r7, #8]
 800890c:	7892      	ldrb	r2, [r2, #2]
              ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 800890e:	431a      	orrs	r2, r3
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 8008910:	68bb      	ldr	r3, [r7, #8]
 8008912:	78db      	ldrb	r3, [r3, #3]
 8008914:	041b      	lsls	r3, r3, #16
              ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 8008916:	431a      	orrs	r2, r3
              ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 8008918:	68bb      	ldr	r3, [r7, #8]
 800891a:	2120      	movs	r1, #32
 800891c:	5c5b      	ldrb	r3, [r3, r1]
 800891e:	061b      	lsls	r3, r3, #24
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 8008920:	431a      	orrs	r2, r3
              ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 8008922:	68bb      	ldr	r3, [r7, #8]
 8008924:	69db      	ldr	r3, [r3, #28]
              ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 8008926:	431a      	orrs	r2, r3
              ((uint32_t)sAlarm->AlarmMask));
 8008928:	68bb      	ldr	r3, [r7, #8]
 800892a:	695b      	ldr	r3, [r3, #20]
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 800892c:	4313      	orrs	r3, r2
 800892e:	61fb      	str	r3, [r7, #28]
  }
  /* Configure the Alarm A or Alarm B Sub Second registers */
  subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmSubSecondMask));
 8008930:	68bb      	ldr	r3, [r7, #8]
 8008932:	685a      	ldr	r2, [r3, #4]
 8008934:	68bb      	ldr	r3, [r7, #8]
 8008936:	699b      	ldr	r3, [r3, #24]
 8008938:	4313      	orrs	r3, r2
 800893a:	61bb      	str	r3, [r7, #24]

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 800893c:	68fb      	ldr	r3, [r7, #12]
 800893e:	681b      	ldr	r3, [r3, #0]
 8008940:	22ca      	movs	r2, #202	; 0xca
 8008942:	625a      	str	r2, [r3, #36]	; 0x24
 8008944:	68fb      	ldr	r3, [r7, #12]
 8008946:	681b      	ldr	r3, [r3, #0]
 8008948:	2253      	movs	r2, #83	; 0x53
 800894a:	625a      	str	r2, [r3, #36]	; 0x24

  /* Configure the Alarm register */
  if (sAlarm->Alarm == RTC_ALARM_A)
 800894c:	68bb      	ldr	r3, [r7, #8]
 800894e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008950:	2380      	movs	r3, #128	; 0x80
 8008952:	005b      	lsls	r3, r3, #1
 8008954:	429a      	cmp	r2, r3
 8008956:	d14e      	bne.n	80089f6 <HAL_RTC_SetAlarm_IT+0x1aa>
  {
    /* Disable the Alarm A interrupt */
    __HAL_RTC_ALARMA_DISABLE(hrtc);
 8008958:	68fb      	ldr	r3, [r7, #12]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	689a      	ldr	r2, [r3, #8]
 800895e:	68fb      	ldr	r3, [r7, #12]
 8008960:	681b      	ldr	r3, [r3, #0]
 8008962:	495b      	ldr	r1, [pc, #364]	; (8008ad0 <HAL_RTC_SetAlarm_IT+0x284>)
 8008964:	400a      	ands	r2, r1
 8008966:	609a      	str	r2, [r3, #8]

    /* Clear flag alarm A */
    __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 8008968:	68fb      	ldr	r3, [r7, #12]
 800896a:	681b      	ldr	r3, [r3, #0]
 800896c:	68db      	ldr	r3, [r3, #12]
 800896e:	22ff      	movs	r2, #255	; 0xff
 8008970:	401a      	ands	r2, r3
 8008972:	68fb      	ldr	r3, [r7, #12]
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	4957      	ldr	r1, [pc, #348]	; (8008ad4 <HAL_RTC_SetAlarm_IT+0x288>)
 8008978:	430a      	orrs	r2, r1
 800897a:	60da      	str	r2, [r3, #12]

    tickstart = HAL_GetTick();
 800897c:	f7fe f86c 	bl	8006a58 <HAL_GetTick>
 8008980:	0003      	movs	r3, r0
 8008982:	617b      	str	r3, [r7, #20]
    /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 8008984:	e016      	b.n	80089b4 <HAL_RTC_SetAlarm_IT+0x168>
    {
      if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8008986:	f7fe f867 	bl	8006a58 <HAL_GetTick>
 800898a:	0002      	movs	r2, r0
 800898c:	697b      	ldr	r3, [r7, #20]
 800898e:	1ad2      	subs	r2, r2, r3
 8008990:	23fa      	movs	r3, #250	; 0xfa
 8008992:	009b      	lsls	r3, r3, #2
 8008994:	429a      	cmp	r2, r3
 8008996:	d90d      	bls.n	80089b4 <HAL_RTC_SetAlarm_IT+0x168>
      {
        /* Enable the write protection for RTC registers */
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008998:	68fb      	ldr	r3, [r7, #12]
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	22ff      	movs	r2, #255	; 0xff
 800899e:	625a      	str	r2, [r3, #36]	; 0x24

        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 80089a0:	68fb      	ldr	r3, [r7, #12]
 80089a2:	2221      	movs	r2, #33	; 0x21
 80089a4:	2103      	movs	r1, #3
 80089a6:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hrtc);
 80089a8:	68fb      	ldr	r3, [r7, #12]
 80089aa:	2220      	movs	r2, #32
 80089ac:	2100      	movs	r1, #0
 80089ae:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 80089b0:	2303      	movs	r3, #3
 80089b2:	e089      	b.n	8008ac8 <HAL_RTC_SetAlarm_IT+0x27c>
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 80089b4:	68fb      	ldr	r3, [r7, #12]
 80089b6:	681b      	ldr	r3, [r3, #0]
 80089b8:	68db      	ldr	r3, [r3, #12]
 80089ba:	2201      	movs	r2, #1
 80089bc:	4013      	ands	r3, r2
 80089be:	d0e2      	beq.n	8008986 <HAL_RTC_SetAlarm_IT+0x13a>
      }
    }

    hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 80089c0:	68fb      	ldr	r3, [r7, #12]
 80089c2:	681b      	ldr	r3, [r3, #0]
 80089c4:	69fa      	ldr	r2, [r7, #28]
 80089c6:	61da      	str	r2, [r3, #28]
    /* Configure the Alarm A Sub Second register */
    hrtc->Instance->ALRMASSR = subsecondtmpreg;
 80089c8:	68fb      	ldr	r3, [r7, #12]
 80089ca:	681b      	ldr	r3, [r3, #0]
 80089cc:	69ba      	ldr	r2, [r7, #24]
 80089ce:	645a      	str	r2, [r3, #68]	; 0x44
    /* Configure the Alarm state: Enable Alarm */
    __HAL_RTC_ALARMA_ENABLE(hrtc);
 80089d0:	68fb      	ldr	r3, [r7, #12]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	689a      	ldr	r2, [r3, #8]
 80089d6:	68fb      	ldr	r3, [r7, #12]
 80089d8:	681b      	ldr	r3, [r3, #0]
 80089da:	2180      	movs	r1, #128	; 0x80
 80089dc:	0049      	lsls	r1, r1, #1
 80089de:	430a      	orrs	r2, r1
 80089e0:	609a      	str	r2, [r3, #8]
    /* Configure the Alarm interrupt */
    __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
 80089e2:	68fb      	ldr	r3, [r7, #12]
 80089e4:	681b      	ldr	r3, [r3, #0]
 80089e6:	689a      	ldr	r2, [r3, #8]
 80089e8:	68fb      	ldr	r3, [r7, #12]
 80089ea:	681b      	ldr	r3, [r3, #0]
 80089ec:	2180      	movs	r1, #128	; 0x80
 80089ee:	0149      	lsls	r1, r1, #5
 80089f0:	430a      	orrs	r2, r1
 80089f2:	609a      	str	r2, [r3, #8]
 80089f4:	e04d      	b.n	8008a92 <HAL_RTC_SetAlarm_IT+0x246>
  }
  else
  {
    /* Disable the Alarm B interrupt */
    __HAL_RTC_ALARMB_DISABLE(hrtc);
 80089f6:	68fb      	ldr	r3, [r7, #12]
 80089f8:	681b      	ldr	r3, [r3, #0]
 80089fa:	689a      	ldr	r2, [r3, #8]
 80089fc:	68fb      	ldr	r3, [r7, #12]
 80089fe:	681b      	ldr	r3, [r3, #0]
 8008a00:	4935      	ldr	r1, [pc, #212]	; (8008ad8 <HAL_RTC_SetAlarm_IT+0x28c>)
 8008a02:	400a      	ands	r2, r1
 8008a04:	609a      	str	r2, [r3, #8]

    /* Clear flag alarm B */
    __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 8008a06:	68fb      	ldr	r3, [r7, #12]
 8008a08:	681b      	ldr	r3, [r3, #0]
 8008a0a:	68db      	ldr	r3, [r3, #12]
 8008a0c:	22ff      	movs	r2, #255	; 0xff
 8008a0e:	401a      	ands	r2, r3
 8008a10:	68fb      	ldr	r3, [r7, #12]
 8008a12:	681b      	ldr	r3, [r3, #0]
 8008a14:	4931      	ldr	r1, [pc, #196]	; (8008adc <HAL_RTC_SetAlarm_IT+0x290>)
 8008a16:	430a      	orrs	r2, r1
 8008a18:	60da      	str	r2, [r3, #12]

    tickstart = HAL_GetTick();
 8008a1a:	f7fe f81d 	bl	8006a58 <HAL_GetTick>
 8008a1e:	0003      	movs	r3, r0
 8008a20:	617b      	str	r3, [r7, #20]
    /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 8008a22:	e016      	b.n	8008a52 <HAL_RTC_SetAlarm_IT+0x206>
    {
      if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8008a24:	f7fe f818 	bl	8006a58 <HAL_GetTick>
 8008a28:	0002      	movs	r2, r0
 8008a2a:	697b      	ldr	r3, [r7, #20]
 8008a2c:	1ad2      	subs	r2, r2, r3
 8008a2e:	23fa      	movs	r3, #250	; 0xfa
 8008a30:	009b      	lsls	r3, r3, #2
 8008a32:	429a      	cmp	r2, r3
 8008a34:	d90d      	bls.n	8008a52 <HAL_RTC_SetAlarm_IT+0x206>
      {
        /* Enable the write protection for RTC registers */
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008a36:	68fb      	ldr	r3, [r7, #12]
 8008a38:	681b      	ldr	r3, [r3, #0]
 8008a3a:	22ff      	movs	r2, #255	; 0xff
 8008a3c:	625a      	str	r2, [r3, #36]	; 0x24

        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8008a3e:	68fb      	ldr	r3, [r7, #12]
 8008a40:	2221      	movs	r2, #33	; 0x21
 8008a42:	2103      	movs	r1, #3
 8008a44:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hrtc);
 8008a46:	68fb      	ldr	r3, [r7, #12]
 8008a48:	2220      	movs	r2, #32
 8008a4a:	2100      	movs	r1, #0
 8008a4c:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8008a4e:	2303      	movs	r3, #3
 8008a50:	e03a      	b.n	8008ac8 <HAL_RTC_SetAlarm_IT+0x27c>
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 8008a52:	68fb      	ldr	r3, [r7, #12]
 8008a54:	681b      	ldr	r3, [r3, #0]
 8008a56:	68db      	ldr	r3, [r3, #12]
 8008a58:	2202      	movs	r2, #2
 8008a5a:	4013      	ands	r3, r2
 8008a5c:	d0e2      	beq.n	8008a24 <HAL_RTC_SetAlarm_IT+0x1d8>
      }
    }

    hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 8008a5e:	68fb      	ldr	r3, [r7, #12]
 8008a60:	681b      	ldr	r3, [r3, #0]
 8008a62:	69fa      	ldr	r2, [r7, #28]
 8008a64:	621a      	str	r2, [r3, #32]
    /* Configure the Alarm B Sub Second register */
    hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 8008a66:	68fb      	ldr	r3, [r7, #12]
 8008a68:	681b      	ldr	r3, [r3, #0]
 8008a6a:	69ba      	ldr	r2, [r7, #24]
 8008a6c:	649a      	str	r2, [r3, #72]	; 0x48
    /* Configure the Alarm state: Enable Alarm */
    __HAL_RTC_ALARMB_ENABLE(hrtc);
 8008a6e:	68fb      	ldr	r3, [r7, #12]
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	689a      	ldr	r2, [r3, #8]
 8008a74:	68fb      	ldr	r3, [r7, #12]
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	2180      	movs	r1, #128	; 0x80
 8008a7a:	0089      	lsls	r1, r1, #2
 8008a7c:	430a      	orrs	r2, r1
 8008a7e:	609a      	str	r2, [r3, #8]
    /* Configure the Alarm interrupt */
    __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
 8008a80:	68fb      	ldr	r3, [r7, #12]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	689a      	ldr	r2, [r3, #8]
 8008a86:	68fb      	ldr	r3, [r7, #12]
 8008a88:	681b      	ldr	r3, [r3, #0]
 8008a8a:	2180      	movs	r1, #128	; 0x80
 8008a8c:	0189      	lsls	r1, r1, #6
 8008a8e:	430a      	orrs	r2, r1
 8008a90:	609a      	str	r2, [r3, #8]
  }

  /* RTC Alarm Interrupt Configuration: EXTI configuration */
  __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 8008a92:	4b13      	ldr	r3, [pc, #76]	; (8008ae0 <HAL_RTC_SetAlarm_IT+0x294>)
 8008a94:	681a      	ldr	r2, [r3, #0]
 8008a96:	4b12      	ldr	r3, [pc, #72]	; (8008ae0 <HAL_RTC_SetAlarm_IT+0x294>)
 8008a98:	2180      	movs	r1, #128	; 0x80
 8008a9a:	0289      	lsls	r1, r1, #10
 8008a9c:	430a      	orrs	r2, r1
 8008a9e:	601a      	str	r2, [r3, #0]

  __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 8008aa0:	4b0f      	ldr	r3, [pc, #60]	; (8008ae0 <HAL_RTC_SetAlarm_IT+0x294>)
 8008aa2:	689a      	ldr	r2, [r3, #8]
 8008aa4:	4b0e      	ldr	r3, [pc, #56]	; (8008ae0 <HAL_RTC_SetAlarm_IT+0x294>)
 8008aa6:	2180      	movs	r1, #128	; 0x80
 8008aa8:	0289      	lsls	r1, r1, #10
 8008aaa:	430a      	orrs	r2, r1
 8008aac:	609a      	str	r2, [r3, #8]

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008aae:	68fb      	ldr	r3, [r7, #12]
 8008ab0:	681b      	ldr	r3, [r3, #0]
 8008ab2:	22ff      	movs	r2, #255	; 0xff
 8008ab4:	625a      	str	r2, [r3, #36]	; 0x24

  hrtc->State = HAL_RTC_STATE_READY;
 8008ab6:	68fb      	ldr	r3, [r7, #12]
 8008ab8:	2221      	movs	r2, #33	; 0x21
 8008aba:	2101      	movs	r1, #1
 8008abc:	5499      	strb	r1, [r3, r2]

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 8008abe:	68fb      	ldr	r3, [r7, #12]
 8008ac0:	2220      	movs	r2, #32
 8008ac2:	2100      	movs	r1, #0
 8008ac4:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8008ac6:	2300      	movs	r3, #0
}
 8008ac8:	0018      	movs	r0, r3
 8008aca:	46bd      	mov	sp, r7
 8008acc:	b009      	add	sp, #36	; 0x24
 8008ace:	bd90      	pop	{r4, r7, pc}
 8008ad0:	fffffeff 	.word	0xfffffeff
 8008ad4:	fffffe7f 	.word	0xfffffe7f
 8008ad8:	fffffdff 	.word	0xfffffdff
 8008adc:	fffffd7f 	.word	0xfffffd7f
 8008ae0:	40010400 	.word	0x40010400

08008ae4 <HAL_RTC_AlarmIRQHandler>:
  * @brief  Handle Alarm interrupt request.
  * @param  hrtc RTC handle
  * @retval None
  */
void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
{
 8008ae4:	b580      	push	{r7, lr}
 8008ae6:	b082      	sub	sp, #8
 8008ae8:	af00      	add	r7, sp, #0
 8008aea:	6078      	str	r0, [r7, #4]
  /* Get the AlarmA interrupt source enable status */
  if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != 0U)
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	689a      	ldr	r2, [r3, #8]
 8008af2:	2380      	movs	r3, #128	; 0x80
 8008af4:	015b      	lsls	r3, r3, #5
 8008af6:	4013      	ands	r3, r2
 8008af8:	d014      	beq.n	8008b24 <HAL_RTC_AlarmIRQHandler+0x40>
  {
    /* Get the pending status of the AlarmA Interrupt */
    if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != 0U)
 8008afa:	687b      	ldr	r3, [r7, #4]
 8008afc:	681b      	ldr	r3, [r3, #0]
 8008afe:	68da      	ldr	r2, [r3, #12]
 8008b00:	2380      	movs	r3, #128	; 0x80
 8008b02:	005b      	lsls	r3, r3, #1
 8008b04:	4013      	ands	r3, r2
 8008b06:	d00d      	beq.n	8008b24 <HAL_RTC_AlarmIRQHandler+0x40>
    {
      /* AlarmA callback */
#if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
      hrtc->AlarmAEventCallback(hrtc);
#else
      HAL_RTC_AlarmAEventCallback(hrtc);
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	0018      	movs	r0, r3
 8008b0c:	f000 f838 	bl	8008b80 <HAL_RTC_AlarmAEventCallback>
#endif /* USE_HAL_RTC_REGISTER_CALLBACKS */

      /* Clear the AlarmA interrupt pending bit */
      __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	681b      	ldr	r3, [r3, #0]
 8008b14:	68db      	ldr	r3, [r3, #12]
 8008b16:	22ff      	movs	r2, #255	; 0xff
 8008b18:	401a      	ands	r2, r3
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	681b      	ldr	r3, [r3, #0]
 8008b1e:	4915      	ldr	r1, [pc, #84]	; (8008b74 <HAL_RTC_AlarmIRQHandler+0x90>)
 8008b20:	430a      	orrs	r2, r1
 8008b22:	60da      	str	r2, [r3, #12]
    }
  }

  /* Get the AlarmB interrupt source enable status */
  if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != 0U)
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	689a      	ldr	r2, [r3, #8]
 8008b2a:	2380      	movs	r3, #128	; 0x80
 8008b2c:	019b      	lsls	r3, r3, #6
 8008b2e:	4013      	ands	r3, r2
 8008b30:	d014      	beq.n	8008b5c <HAL_RTC_AlarmIRQHandler+0x78>
  {
    /* Get the pending status of the AlarmB Interrupt */
    if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != 0U)
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	681b      	ldr	r3, [r3, #0]
 8008b36:	68da      	ldr	r2, [r3, #12]
 8008b38:	2380      	movs	r3, #128	; 0x80
 8008b3a:	009b      	lsls	r3, r3, #2
 8008b3c:	4013      	ands	r3, r2
 8008b3e:	d00d      	beq.n	8008b5c <HAL_RTC_AlarmIRQHandler+0x78>
    {
      /* AlarmB callback */
#if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
      hrtc->AlarmBEventCallback(hrtc);
#else
      HAL_RTCEx_AlarmBEventCallback(hrtc);
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	0018      	movs	r0, r3
 8008b44:	f000 f89e 	bl	8008c84 <HAL_RTCEx_AlarmBEventCallback>
#endif /* USE_HAL_RTC_REGISTER_CALLBACKS */

      /* Clear the AlarmB interrupt pending bit */
      __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	68db      	ldr	r3, [r3, #12]
 8008b4e:	22ff      	movs	r2, #255	; 0xff
 8008b50:	401a      	ands	r2, r3
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	681b      	ldr	r3, [r3, #0]
 8008b56:	4908      	ldr	r1, [pc, #32]	; (8008b78 <HAL_RTC_AlarmIRQHandler+0x94>)
 8008b58:	430a      	orrs	r2, r1
 8008b5a:	60da      	str	r2, [r3, #12]
    }
  }
  /* Clear the EXTI's line Flag for RTC Alarm */
  __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
 8008b5c:	4b07      	ldr	r3, [pc, #28]	; (8008b7c <HAL_RTC_AlarmIRQHandler+0x98>)
 8008b5e:	2280      	movs	r2, #128	; 0x80
 8008b60:	0292      	lsls	r2, r2, #10
 8008b62:	615a      	str	r2, [r3, #20]

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	2221      	movs	r2, #33	; 0x21
 8008b68:	2101      	movs	r1, #1
 8008b6a:	5499      	strb	r1, [r3, r2]
}
 8008b6c:	46c0      	nop			; (mov r8, r8)
 8008b6e:	46bd      	mov	sp, r7
 8008b70:	b002      	add	sp, #8
 8008b72:	bd80      	pop	{r7, pc}
 8008b74:	fffffe7f 	.word	0xfffffe7f
 8008b78:	fffffd7f 	.word	0xfffffd7f
 8008b7c:	40010400 	.word	0x40010400

08008b80 <HAL_RTC_AlarmAEventCallback>:
  * @brief  Alarm A callback.
  * @param  hrtc RTC handle
  * @retval None
  */
__weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
{
 8008b80:	b580      	push	{r7, lr}
 8008b82:	b082      	sub	sp, #8
 8008b84:	af00      	add	r7, sp, #0
 8008b86:	6078      	str	r0, [r7, #4]
  UNUSED(hrtc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_RTC_AlarmAEventCallback could be implemented in the user file
   */
}
 8008b88:	46c0      	nop			; (mov r8, r8)
 8008b8a:	46bd      	mov	sp, r7
 8008b8c:	b002      	add	sp, #8
 8008b8e:	bd80      	pop	{r7, pc}

08008b90 <HAL_RTC_WaitForSynchro>:
  *         correctly copied into the RTC_TR and RTC_DR shadow registers.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
{
 8008b90:	b580      	push	{r7, lr}
 8008b92:	b084      	sub	sp, #16
 8008b94:	af00      	add	r7, sp, #0
 8008b96:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Clear RSF flag */
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	681b      	ldr	r3, [r3, #0]
 8008b9c:	68da      	ldr	r2, [r3, #12]
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	681b      	ldr	r3, [r3, #0]
 8008ba2:	21a0      	movs	r1, #160	; 0xa0
 8008ba4:	438a      	bics	r2, r1
 8008ba6:	60da      	str	r2, [r3, #12]

  tickstart = HAL_GetTick();
 8008ba8:	f7fd ff56 	bl	8006a58 <HAL_GetTick>
 8008bac:	0003      	movs	r3, r0
 8008bae:	60fb      	str	r3, [r7, #12]

  /* Wait the registers to be synchronised */
  while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 8008bb0:	e00a      	b.n	8008bc8 <HAL_RTC_WaitForSynchro+0x38>
  {
    if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8008bb2:	f7fd ff51 	bl	8006a58 <HAL_GetTick>
 8008bb6:	0002      	movs	r2, r0
 8008bb8:	68fb      	ldr	r3, [r7, #12]
 8008bba:	1ad2      	subs	r2, r2, r3
 8008bbc:	23fa      	movs	r3, #250	; 0xfa
 8008bbe:	009b      	lsls	r3, r3, #2
 8008bc0:	429a      	cmp	r2, r3
 8008bc2:	d901      	bls.n	8008bc8 <HAL_RTC_WaitForSynchro+0x38>
    {
      return HAL_TIMEOUT;
 8008bc4:	2303      	movs	r3, #3
 8008bc6:	e006      	b.n	8008bd6 <HAL_RTC_WaitForSynchro+0x46>
  while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 8008bc8:	687b      	ldr	r3, [r7, #4]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	68db      	ldr	r3, [r3, #12]
 8008bce:	2220      	movs	r2, #32
 8008bd0:	4013      	ands	r3, r2
 8008bd2:	d0ee      	beq.n	8008bb2 <HAL_RTC_WaitForSynchro+0x22>
    }
  }

  return HAL_OK;
 8008bd4:	2300      	movs	r3, #0
}
 8008bd6:	0018      	movs	r0, r3
 8008bd8:	46bd      	mov	sp, r7
 8008bda:	b004      	add	sp, #16
 8008bdc:	bd80      	pop	{r7, pc}

08008bde <RTC_EnterInitMode>:
  *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
{
 8008bde:	b580      	push	{r7, lr}
 8008be0:	b084      	sub	sp, #16
 8008be2:	af00      	add	r7, sp, #0
 8008be4:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Check if the Initialization mode is set */
  if ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	681b      	ldr	r3, [r3, #0]
 8008bea:	68db      	ldr	r3, [r3, #12]
 8008bec:	2240      	movs	r2, #64	; 0x40
 8008bee:	4013      	ands	r3, r2
 8008bf0:	d11a      	bne.n	8008c28 <RTC_EnterInitMode+0x4a>
  {
    /* Set the Initialization mode */
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 8008bf2:	687b      	ldr	r3, [r7, #4]
 8008bf4:	681b      	ldr	r3, [r3, #0]
 8008bf6:	2201      	movs	r2, #1
 8008bf8:	4252      	negs	r2, r2
 8008bfa:	60da      	str	r2, [r3, #12]

    tickstart = HAL_GetTick();
 8008bfc:	f7fd ff2c 	bl	8006a58 <HAL_GetTick>
 8008c00:	0003      	movs	r3, r0
 8008c02:	60fb      	str	r3, [r7, #12]
    /* Wait till RTC is in INIT state and if Time out is reached exit */
    while ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 8008c04:	e00a      	b.n	8008c1c <RTC_EnterInitMode+0x3e>
    {
      if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 8008c06:	f7fd ff27 	bl	8006a58 <HAL_GetTick>
 8008c0a:	0002      	movs	r2, r0
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	1ad2      	subs	r2, r2, r3
 8008c10:	23fa      	movs	r3, #250	; 0xfa
 8008c12:	009b      	lsls	r3, r3, #2
 8008c14:	429a      	cmp	r2, r3
 8008c16:	d901      	bls.n	8008c1c <RTC_EnterInitMode+0x3e>
      {
        return HAL_TIMEOUT;
 8008c18:	2303      	movs	r3, #3
 8008c1a:	e006      	b.n	8008c2a <RTC_EnterInitMode+0x4c>
    while ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	681b      	ldr	r3, [r3, #0]
 8008c20:	68db      	ldr	r3, [r3, #12]
 8008c22:	2240      	movs	r2, #64	; 0x40
 8008c24:	4013      	ands	r3, r2
 8008c26:	d0ee      	beq.n	8008c06 <RTC_EnterInitMode+0x28>
      }
    }
  }

  return HAL_OK;
 8008c28:	2300      	movs	r3, #0
}
 8008c2a:	0018      	movs	r0, r3
 8008c2c:	46bd      	mov	sp, r7
 8008c2e:	b004      	add	sp, #16
 8008c30:	bd80      	pop	{r7, pc}

08008c32 <RTC_ByteToBcd2>:
  * @brief  Convert a 2 digit decimal to BCD format.
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
 8008c32:	b580      	push	{r7, lr}
 8008c34:	b084      	sub	sp, #16
 8008c36:	af00      	add	r7, sp, #0
 8008c38:	0002      	movs	r2, r0
 8008c3a:	1dfb      	adds	r3, r7, #7
 8008c3c:	701a      	strb	r2, [r3, #0]
  uint32_t bcdhigh = 0U;
 8008c3e:	2300      	movs	r3, #0
 8008c40:	60fb      	str	r3, [r7, #12]
  uint8_t Param = Value;
 8008c42:	230b      	movs	r3, #11
 8008c44:	18fb      	adds	r3, r7, r3
 8008c46:	1dfa      	adds	r2, r7, #7
 8008c48:	7812      	ldrb	r2, [r2, #0]
 8008c4a:	701a      	strb	r2, [r3, #0]

  while (Param >= 10U)
 8008c4c:	e008      	b.n	8008c60 <RTC_ByteToBcd2+0x2e>
  {
    bcdhigh++;
 8008c4e:	68fb      	ldr	r3, [r7, #12]
 8008c50:	3301      	adds	r3, #1
 8008c52:	60fb      	str	r3, [r7, #12]
    Param -= 10U;
 8008c54:	220b      	movs	r2, #11
 8008c56:	18bb      	adds	r3, r7, r2
 8008c58:	18ba      	adds	r2, r7, r2
 8008c5a:	7812      	ldrb	r2, [r2, #0]
 8008c5c:	3a0a      	subs	r2, #10
 8008c5e:	701a      	strb	r2, [r3, #0]
  while (Param >= 10U)
 8008c60:	230b      	movs	r3, #11
 8008c62:	18fb      	adds	r3, r7, r3
 8008c64:	781b      	ldrb	r3, [r3, #0]
 8008c66:	2b09      	cmp	r3, #9
 8008c68:	d8f1      	bhi.n	8008c4e <RTC_ByteToBcd2+0x1c>
  }

  return ((uint8_t)(bcdhigh << 4U) | Param);
 8008c6a:	68fb      	ldr	r3, [r7, #12]
 8008c6c:	b2db      	uxtb	r3, r3
 8008c6e:	011b      	lsls	r3, r3, #4
 8008c70:	b2da      	uxtb	r2, r3
 8008c72:	230b      	movs	r3, #11
 8008c74:	18fb      	adds	r3, r7, r3
 8008c76:	781b      	ldrb	r3, [r3, #0]
 8008c78:	4313      	orrs	r3, r2
 8008c7a:	b2db      	uxtb	r3, r3
}
 8008c7c:	0018      	movs	r0, r3
 8008c7e:	46bd      	mov	sp, r7
 8008c80:	b004      	add	sp, #16
 8008c82:	bd80      	pop	{r7, pc}

08008c84 <HAL_RTCEx_AlarmBEventCallback>:
  * @brief  Alarm B callback.
  * @param  hrtc RTC handle
  * @retval None
  */
__weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
{
 8008c84:	b580      	push	{r7, lr}
 8008c86:	b082      	sub	sp, #8
 8008c88:	af00      	add	r7, sp, #0
 8008c8a:	6078      	str	r0, [r7, #4]
  UNUSED(hrtc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
   */
}
 8008c8c:	46c0      	nop			; (mov r8, r8)
 8008c8e:	46bd      	mov	sp, r7
 8008c90:	b002      	add	sp, #8
 8008c92:	bd80      	pop	{r7, pc}

08008c94 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8008c94:	b580      	push	{r7, lr}
 8008c96:	b082      	sub	sp, #8
 8008c98:	af00      	add	r7, sp, #0
 8008c9a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	2b00      	cmp	r3, #0
 8008ca0:	d101      	bne.n	8008ca6 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8008ca2:	2301      	movs	r3, #1
 8008ca4:	e059      	b.n	8008d5a <HAL_SPI_Init+0xc6>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	2200      	movs	r2, #0
 8008caa:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8008cac:	687b      	ldr	r3, [r7, #4]
 8008cae:	2251      	movs	r2, #81	; 0x51
 8008cb0:	5c9b      	ldrb	r3, [r3, r2]
 8008cb2:	b2db      	uxtb	r3, r3
 8008cb4:	2b00      	cmp	r3, #0
 8008cb6:	d107      	bne.n	8008cc8 <HAL_SPI_Init+0x34>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	2250      	movs	r2, #80	; 0x50
 8008cbc:	2100      	movs	r1, #0
 8008cbe:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	0018      	movs	r0, r3
 8008cc4:	f7fb f962 	bl	8003f8c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8008cc8:	687b      	ldr	r3, [r7, #4]
 8008cca:	2251      	movs	r2, #81	; 0x51
 8008ccc:	2102      	movs	r1, #2
 8008cce:	5499      	strb	r1, [r3, r2]

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	681b      	ldr	r3, [r3, #0]
 8008cd4:	681a      	ldr	r2, [r3, #0]
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	681b      	ldr	r3, [r3, #0]
 8008cda:	2140      	movs	r1, #64	; 0x40
 8008cdc:	438a      	bics	r2, r1
 8008cde:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	685a      	ldr	r2, [r3, #4]
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	689b      	ldr	r3, [r3, #8]
 8008ce8:	431a      	orrs	r2, r3
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	68db      	ldr	r3, [r3, #12]
 8008cee:	431a      	orrs	r2, r3
 8008cf0:	687b      	ldr	r3, [r7, #4]
 8008cf2:	691b      	ldr	r3, [r3, #16]
 8008cf4:	431a      	orrs	r2, r3
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	695b      	ldr	r3, [r3, #20]
 8008cfa:	431a      	orrs	r2, r3
 8008cfc:	687b      	ldr	r3, [r7, #4]
 8008cfe:	6999      	ldr	r1, [r3, #24]
 8008d00:	2380      	movs	r3, #128	; 0x80
 8008d02:	009b      	lsls	r3, r3, #2
 8008d04:	400b      	ands	r3, r1
 8008d06:	431a      	orrs	r2, r3
 8008d08:	687b      	ldr	r3, [r7, #4]
 8008d0a:	69db      	ldr	r3, [r3, #28]
 8008d0c:	431a      	orrs	r2, r3
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	6a1b      	ldr	r3, [r3, #32]
 8008d12:	431a      	orrs	r2, r3
 8008d14:	0011      	movs	r1, r2
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008d1a:	687b      	ldr	r3, [r7, #4]
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	430a      	orrs	r2, r1
 8008d20:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8008d22:	687b      	ldr	r3, [r7, #4]
 8008d24:	699b      	ldr	r3, [r3, #24]
 8008d26:	0c1b      	lsrs	r3, r3, #16
 8008d28:	2204      	movs	r2, #4
 8008d2a:	4013      	ands	r3, r2
 8008d2c:	0019      	movs	r1, r3
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	681b      	ldr	r3, [r3, #0]
 8008d36:	430a      	orrs	r2, r1
 8008d38:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	69da      	ldr	r2, [r3, #28]
 8008d40:	687b      	ldr	r3, [r7, #4]
 8008d42:	681b      	ldr	r3, [r3, #0]
 8008d44:	4907      	ldr	r1, [pc, #28]	; (8008d64 <HAL_SPI_Init+0xd0>)
 8008d46:	400a      	ands	r2, r1
 8008d48:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	2200      	movs	r2, #0
 8008d4e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	2251      	movs	r2, #81	; 0x51
 8008d54:	2101      	movs	r1, #1
 8008d56:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8008d58:	2300      	movs	r3, #0
}
 8008d5a:	0018      	movs	r0, r3
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	b002      	add	sp, #8
 8008d60:	bd80      	pop	{r7, pc}
 8008d62:	46c0      	nop			; (mov r8, r8)
 8008d64:	fffff7ff 	.word	0xfffff7ff

08008d68 <findslot>:
 8008d68:	4b0a      	ldr	r3, [pc, #40]	; (8008d94 <findslot+0x2c>)
 8008d6a:	b510      	push	{r4, lr}
 8008d6c:	0004      	movs	r4, r0
 8008d6e:	6818      	ldr	r0, [r3, #0]
 8008d70:	2800      	cmp	r0, #0
 8008d72:	d004      	beq.n	8008d7e <findslot+0x16>
 8008d74:	6983      	ldr	r3, [r0, #24]
 8008d76:	2b00      	cmp	r3, #0
 8008d78:	d101      	bne.n	8008d7e <findslot+0x16>
 8008d7a:	f000 fadf 	bl	800933c <__sinit>
 8008d7e:	2000      	movs	r0, #0
 8008d80:	2c13      	cmp	r4, #19
 8008d82:	d805      	bhi.n	8008d90 <findslot+0x28>
 8008d84:	4b04      	ldr	r3, [pc, #16]	; (8008d98 <findslot+0x30>)
 8008d86:	00e4      	lsls	r4, r4, #3
 8008d88:	58e2      	ldr	r2, [r4, r3]
 8008d8a:	3201      	adds	r2, #1
 8008d8c:	d000      	beq.n	8008d90 <findslot+0x28>
 8008d8e:	18e0      	adds	r0, r4, r3
 8008d90:	bd10      	pop	{r4, pc}
 8008d92:	46c0      	nop			; (mov r8, r8)
 8008d94:	20000108 	.word	0x20000108
 8008d98:	2000030c 	.word	0x2000030c

08008d9c <checkerror>:
 8008d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d9e:	0005      	movs	r5, r0
 8008da0:	1c43      	adds	r3, r0, #1
 8008da2:	d109      	bne.n	8008db8 <checkerror+0x1c>
 8008da4:	f000 fa82 	bl	80092ac <__errno>
 8008da8:	2413      	movs	r4, #19
 8008daa:	0006      	movs	r6, r0
 8008dac:	2700      	movs	r7, #0
 8008dae:	1c20      	adds	r0, r4, #0
 8008db0:	1c39      	adds	r1, r7, #0
 8008db2:	beab      	bkpt	0x00ab
 8008db4:	1c04      	adds	r4, r0, #0
 8008db6:	6034      	str	r4, [r6, #0]
 8008db8:	0028      	movs	r0, r5
 8008dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008dbc <error>:
 8008dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dbe:	0005      	movs	r5, r0
 8008dc0:	f000 fa74 	bl	80092ac <__errno>
 8008dc4:	2413      	movs	r4, #19
 8008dc6:	0006      	movs	r6, r0
 8008dc8:	2700      	movs	r7, #0
 8008dca:	1c20      	adds	r0, r4, #0
 8008dcc:	1c39      	adds	r1, r7, #0
 8008dce:	beab      	bkpt	0x00ab
 8008dd0:	1c04      	adds	r4, r0, #0
 8008dd2:	0028      	movs	r0, r5
 8008dd4:	6034      	str	r4, [r6, #0]
 8008dd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008dd8 <_swiread>:
 8008dd8:	b530      	push	{r4, r5, lr}
 8008dda:	b085      	sub	sp, #20
 8008ddc:	ad01      	add	r5, sp, #4
 8008dde:	9001      	str	r0, [sp, #4]
 8008de0:	9102      	str	r1, [sp, #8]
 8008de2:	9203      	str	r2, [sp, #12]
 8008de4:	2406      	movs	r4, #6
 8008de6:	1c20      	adds	r0, r4, #0
 8008de8:	1c29      	adds	r1, r5, #0
 8008dea:	beab      	bkpt	0x00ab
 8008dec:	1c04      	adds	r4, r0, #0
 8008dee:	0020      	movs	r0, r4
 8008df0:	f7ff ffd4 	bl	8008d9c <checkerror>
 8008df4:	b005      	add	sp, #20
 8008df6:	bd30      	pop	{r4, r5, pc}

08008df8 <_read>:
 8008df8:	b570      	push	{r4, r5, r6, lr}
 8008dfa:	000e      	movs	r6, r1
 8008dfc:	0015      	movs	r5, r2
 8008dfe:	f7ff ffb3 	bl	8008d68 <findslot>
 8008e02:	1e04      	subs	r4, r0, #0
 8008e04:	d106      	bne.n	8008e14 <_read+0x1c>
 8008e06:	f000 fa51 	bl	80092ac <__errno>
 8008e0a:	2309      	movs	r3, #9
 8008e0c:	6003      	str	r3, [r0, #0]
 8008e0e:	2001      	movs	r0, #1
 8008e10:	4240      	negs	r0, r0
 8008e12:	bd70      	pop	{r4, r5, r6, pc}
 8008e14:	002a      	movs	r2, r5
 8008e16:	0031      	movs	r1, r6
 8008e18:	6800      	ldr	r0, [r0, #0]
 8008e1a:	f7ff ffdd 	bl	8008dd8 <_swiread>
 8008e1e:	1c43      	adds	r3, r0, #1
 8008e20:	d0f7      	beq.n	8008e12 <_read+0x1a>
 8008e22:	6863      	ldr	r3, [r4, #4]
 8008e24:	1a28      	subs	r0, r5, r0
 8008e26:	181b      	adds	r3, r3, r0
 8008e28:	6063      	str	r3, [r4, #4]
 8008e2a:	e7f2      	b.n	8008e12 <_read+0x1a>

08008e2c <_swilseek>:
 8008e2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008e2e:	000c      	movs	r4, r1
 8008e30:	0016      	movs	r6, r2
 8008e32:	f7ff ff99 	bl	8008d68 <findslot>
 8008e36:	1e05      	subs	r5, r0, #0
 8008e38:	d107      	bne.n	8008e4a <_swilseek+0x1e>
 8008e3a:	f000 fa37 	bl	80092ac <__errno>
 8008e3e:	2309      	movs	r3, #9
 8008e40:	6003      	str	r3, [r0, #0]
 8008e42:	2401      	movs	r4, #1
 8008e44:	4264      	negs	r4, r4
 8008e46:	0020      	movs	r0, r4
 8008e48:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008e4a:	2e02      	cmp	r6, #2
 8008e4c:	d903      	bls.n	8008e56 <_swilseek+0x2a>
 8008e4e:	f000 fa2d 	bl	80092ac <__errno>
 8008e52:	2316      	movs	r3, #22
 8008e54:	e7f4      	b.n	8008e40 <_swilseek+0x14>
 8008e56:	2e01      	cmp	r6, #1
 8008e58:	d112      	bne.n	8008e80 <_swilseek+0x54>
 8008e5a:	6843      	ldr	r3, [r0, #4]
 8008e5c:	18e4      	adds	r4, r4, r3
 8008e5e:	d4f6      	bmi.n	8008e4e <_swilseek+0x22>
 8008e60:	466f      	mov	r7, sp
 8008e62:	682b      	ldr	r3, [r5, #0]
 8008e64:	260a      	movs	r6, #10
 8008e66:	9300      	str	r3, [sp, #0]
 8008e68:	607c      	str	r4, [r7, #4]
 8008e6a:	1c30      	adds	r0, r6, #0
 8008e6c:	1c39      	adds	r1, r7, #0
 8008e6e:	beab      	bkpt	0x00ab
 8008e70:	1c06      	adds	r6, r0, #0
 8008e72:	0030      	movs	r0, r6
 8008e74:	f7ff ff92 	bl	8008d9c <checkerror>
 8008e78:	2800      	cmp	r0, #0
 8008e7a:	dbe2      	blt.n	8008e42 <_swilseek+0x16>
 8008e7c:	606c      	str	r4, [r5, #4]
 8008e7e:	e7e2      	b.n	8008e46 <_swilseek+0x1a>
 8008e80:	2e02      	cmp	r6, #2
 8008e82:	d1ed      	bne.n	8008e60 <_swilseek+0x34>
 8008e84:	6803      	ldr	r3, [r0, #0]
 8008e86:	466f      	mov	r7, sp
 8008e88:	9300      	str	r3, [sp, #0]
 8008e8a:	360a      	adds	r6, #10
 8008e8c:	1c30      	adds	r0, r6, #0
 8008e8e:	1c39      	adds	r1, r7, #0
 8008e90:	beab      	bkpt	0x00ab
 8008e92:	1c06      	adds	r6, r0, #0
 8008e94:	0030      	movs	r0, r6
 8008e96:	f7ff ff81 	bl	8008d9c <checkerror>
 8008e9a:	1824      	adds	r4, r4, r0
 8008e9c:	1c43      	adds	r3, r0, #1
 8008e9e:	d1df      	bne.n	8008e60 <_swilseek+0x34>
 8008ea0:	e7cf      	b.n	8008e42 <_swilseek+0x16>

08008ea2 <_lseek>:
 8008ea2:	b510      	push	{r4, lr}
 8008ea4:	f7ff ffc2 	bl	8008e2c <_swilseek>
 8008ea8:	bd10      	pop	{r4, pc}

08008eaa <_swiwrite>:
 8008eaa:	b530      	push	{r4, r5, lr}
 8008eac:	b085      	sub	sp, #20
 8008eae:	ad01      	add	r5, sp, #4
 8008eb0:	9001      	str	r0, [sp, #4]
 8008eb2:	9102      	str	r1, [sp, #8]
 8008eb4:	9203      	str	r2, [sp, #12]
 8008eb6:	2405      	movs	r4, #5
 8008eb8:	1c20      	adds	r0, r4, #0
 8008eba:	1c29      	adds	r1, r5, #0
 8008ebc:	beab      	bkpt	0x00ab
 8008ebe:	1c04      	adds	r4, r0, #0
 8008ec0:	0020      	movs	r0, r4
 8008ec2:	f7ff ff6b 	bl	8008d9c <checkerror>
 8008ec6:	b005      	add	sp, #20
 8008ec8:	bd30      	pop	{r4, r5, pc}

08008eca <_write>:
 8008eca:	b570      	push	{r4, r5, r6, lr}
 8008ecc:	000e      	movs	r6, r1
 8008ece:	0015      	movs	r5, r2
 8008ed0:	f7ff ff4a 	bl	8008d68 <findslot>
 8008ed4:	1e04      	subs	r4, r0, #0
 8008ed6:	d106      	bne.n	8008ee6 <_write+0x1c>
 8008ed8:	f000 f9e8 	bl	80092ac <__errno>
 8008edc:	2309      	movs	r3, #9
 8008ede:	6003      	str	r3, [r0, #0]
 8008ee0:	2001      	movs	r0, #1
 8008ee2:	4240      	negs	r0, r0
 8008ee4:	e00f      	b.n	8008f06 <_write+0x3c>
 8008ee6:	002a      	movs	r2, r5
 8008ee8:	0031      	movs	r1, r6
 8008eea:	6800      	ldr	r0, [r0, #0]
 8008eec:	f7ff ffdd 	bl	8008eaa <_swiwrite>
 8008ef0:	1e02      	subs	r2, r0, #0
 8008ef2:	dbf5      	blt.n	8008ee0 <_write+0x16>
 8008ef4:	6863      	ldr	r3, [r4, #4]
 8008ef6:	1a28      	subs	r0, r5, r0
 8008ef8:	1819      	adds	r1, r3, r0
 8008efa:	6061      	str	r1, [r4, #4]
 8008efc:	42aa      	cmp	r2, r5
 8008efe:	d102      	bne.n	8008f06 <_write+0x3c>
 8008f00:	2000      	movs	r0, #0
 8008f02:	f7ff ff5b 	bl	8008dbc <error>
 8008f06:	bd70      	pop	{r4, r5, r6, pc}

08008f08 <_swiclose>:
 8008f08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f0a:	2402      	movs	r4, #2
 8008f0c:	9001      	str	r0, [sp, #4]
 8008f0e:	ad01      	add	r5, sp, #4
 8008f10:	1c20      	adds	r0, r4, #0
 8008f12:	1c29      	adds	r1, r5, #0
 8008f14:	beab      	bkpt	0x00ab
 8008f16:	1c04      	adds	r4, r0, #0
 8008f18:	0020      	movs	r0, r4
 8008f1a:	f7ff ff3f 	bl	8008d9c <checkerror>
 8008f1e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08008f20 <_close>:
 8008f20:	b570      	push	{r4, r5, r6, lr}
 8008f22:	0005      	movs	r5, r0
 8008f24:	f7ff ff20 	bl	8008d68 <findslot>
 8008f28:	1e04      	subs	r4, r0, #0
 8008f2a:	d106      	bne.n	8008f3a <_close+0x1a>
 8008f2c:	f000 f9be 	bl	80092ac <__errno>
 8008f30:	2309      	movs	r3, #9
 8008f32:	6003      	str	r3, [r0, #0]
 8008f34:	2001      	movs	r0, #1
 8008f36:	4240      	negs	r0, r0
 8008f38:	bd70      	pop	{r4, r5, r6, pc}
 8008f3a:	3d01      	subs	r5, #1
 8008f3c:	2d01      	cmp	r5, #1
 8008f3e:	d809      	bhi.n	8008f54 <_close+0x34>
 8008f40:	4b09      	ldr	r3, [pc, #36]	; (8008f68 <_close+0x48>)
 8008f42:	689a      	ldr	r2, [r3, #8]
 8008f44:	691b      	ldr	r3, [r3, #16]
 8008f46:	429a      	cmp	r2, r3
 8008f48:	d104      	bne.n	8008f54 <_close+0x34>
 8008f4a:	2301      	movs	r3, #1
 8008f4c:	425b      	negs	r3, r3
 8008f4e:	6003      	str	r3, [r0, #0]
 8008f50:	2000      	movs	r0, #0
 8008f52:	e7f1      	b.n	8008f38 <_close+0x18>
 8008f54:	6820      	ldr	r0, [r4, #0]
 8008f56:	f7ff ffd7 	bl	8008f08 <_swiclose>
 8008f5a:	2800      	cmp	r0, #0
 8008f5c:	d1ec      	bne.n	8008f38 <_close+0x18>
 8008f5e:	2301      	movs	r3, #1
 8008f60:	425b      	negs	r3, r3
 8008f62:	6023      	str	r3, [r4, #0]
 8008f64:	e7e8      	b.n	8008f38 <_close+0x18>
 8008f66:	46c0      	nop			; (mov r8, r8)
 8008f68:	2000030c 	.word	0x2000030c

08008f6c <_swistat>:
 8008f6c:	b570      	push	{r4, r5, r6, lr}
 8008f6e:	000c      	movs	r4, r1
 8008f70:	f7ff fefa 	bl	8008d68 <findslot>
 8008f74:	1e06      	subs	r6, r0, #0
 8008f76:	d106      	bne.n	8008f86 <_swistat+0x1a>
 8008f78:	f000 f998 	bl	80092ac <__errno>
 8008f7c:	2309      	movs	r3, #9
 8008f7e:	6003      	str	r3, [r0, #0]
 8008f80:	2001      	movs	r0, #1
 8008f82:	4240      	negs	r0, r0
 8008f84:	bd70      	pop	{r4, r5, r6, pc}
 8008f86:	2380      	movs	r3, #128	; 0x80
 8008f88:	6862      	ldr	r2, [r4, #4]
 8008f8a:	019b      	lsls	r3, r3, #6
 8008f8c:	4313      	orrs	r3, r2
 8008f8e:	6063      	str	r3, [r4, #4]
 8008f90:	2380      	movs	r3, #128	; 0x80
 8008f92:	00db      	lsls	r3, r3, #3
 8008f94:	6463      	str	r3, [r4, #68]	; 0x44
 8008f96:	250c      	movs	r5, #12
 8008f98:	1c28      	adds	r0, r5, #0
 8008f9a:	1c31      	adds	r1, r6, #0
 8008f9c:	beab      	bkpt	0x00ab
 8008f9e:	1c05      	adds	r5, r0, #0
 8008fa0:	0028      	movs	r0, r5
 8008fa2:	f7ff fefb 	bl	8008d9c <checkerror>
 8008fa6:	1c43      	adds	r3, r0, #1
 8008fa8:	d0ec      	beq.n	8008f84 <_swistat+0x18>
 8008faa:	6120      	str	r0, [r4, #16]
 8008fac:	2000      	movs	r0, #0
 8008fae:	e7e9      	b.n	8008f84 <_swistat+0x18>

08008fb0 <_fstat>:
 8008fb0:	b570      	push	{r4, r5, r6, lr}
 8008fb2:	000c      	movs	r4, r1
 8008fb4:	0005      	movs	r5, r0
 8008fb6:	2258      	movs	r2, #88	; 0x58
 8008fb8:	2100      	movs	r1, #0
 8008fba:	0020      	movs	r0, r4
 8008fbc:	f000 fa76 	bl	80094ac <memset>
 8008fc0:	0028      	movs	r0, r5
 8008fc2:	0021      	movs	r1, r4
 8008fc4:	f7ff ffd2 	bl	8008f6c <_swistat>
 8008fc8:	bd70      	pop	{r4, r5, r6, pc}

08008fca <_stat>:
 8008fca:	b570      	push	{r4, r5, r6, lr}
 8008fcc:	000d      	movs	r5, r1
 8008fce:	0004      	movs	r4, r0
 8008fd0:	2258      	movs	r2, #88	; 0x58
 8008fd2:	2100      	movs	r1, #0
 8008fd4:	0028      	movs	r0, r5
 8008fd6:	f000 fa69 	bl	80094ac <memset>
 8008fda:	0020      	movs	r0, r4
 8008fdc:	2100      	movs	r1, #0
 8008fde:	f000 f813 	bl	8009008 <_swiopen>
 8008fe2:	0004      	movs	r4, r0
 8008fe4:	1c43      	adds	r3, r0, #1
 8008fe6:	d00c      	beq.n	8009002 <_stat+0x38>
 8008fe8:	2381      	movs	r3, #129	; 0x81
 8008fea:	686a      	ldr	r2, [r5, #4]
 8008fec:	021b      	lsls	r3, r3, #8
 8008fee:	4313      	orrs	r3, r2
 8008ff0:	606b      	str	r3, [r5, #4]
 8008ff2:	0029      	movs	r1, r5
 8008ff4:	f7ff ffba 	bl	8008f6c <_swistat>
 8008ff8:	0005      	movs	r5, r0
 8008ffa:	0020      	movs	r0, r4
 8008ffc:	f7ff ff90 	bl	8008f20 <_close>
 8009000:	002c      	movs	r4, r5
 8009002:	0020      	movs	r0, r4
 8009004:	bd70      	pop	{r4, r5, r6, pc}
	...

08009008 <_swiopen>:
 8009008:	b5f0      	push	{r4, r5, r6, r7, lr}
 800900a:	000d      	movs	r5, r1
 800900c:	2700      	movs	r7, #0
 800900e:	b099      	sub	sp, #100	; 0x64
 8009010:	9000      	str	r0, [sp, #0]
 8009012:	00fb      	lsls	r3, r7, #3
 8009014:	9301      	str	r3, [sp, #4]
 8009016:	4b29      	ldr	r3, [pc, #164]	; (80090bc <_swiopen+0xb4>)
 8009018:	00fa      	lsls	r2, r7, #3
 800901a:	589c      	ldr	r4, [r3, r2]
 800901c:	1c63      	adds	r3, r4, #1
 800901e:	d038      	beq.n	8009092 <_swiopen+0x8a>
 8009020:	3701      	adds	r7, #1
 8009022:	2f14      	cmp	r7, #20
 8009024:	d1f5      	bne.n	8009012 <_swiopen+0xa>
 8009026:	f000 f941 	bl	80092ac <__errno>
 800902a:	2401      	movs	r4, #1
 800902c:	2318      	movs	r3, #24
 800902e:	4264      	negs	r4, r4
 8009030:	6003      	str	r3, [r0, #0]
 8009032:	e03f      	b.n	80090b4 <_swiopen+0xac>
 8009034:	2302      	movs	r3, #2
 8009036:	03ec      	lsls	r4, r5, #15
 8009038:	0fe4      	lsrs	r4, r4, #31
 800903a:	421d      	tst	r5, r3
 800903c:	d000      	beq.n	8009040 <_swiopen+0x38>
 800903e:	431c      	orrs	r4, r3
 8009040:	4b1f      	ldr	r3, [pc, #124]	; (80090c0 <_swiopen+0xb8>)
 8009042:	421d      	tst	r5, r3
 8009044:	d001      	beq.n	800904a <_swiopen+0x42>
 8009046:	2304      	movs	r3, #4
 8009048:	431c      	orrs	r4, r3
 800904a:	2308      	movs	r3, #8
 800904c:	421d      	tst	r5, r3
 800904e:	d002      	beq.n	8009056 <_swiopen+0x4e>
 8009050:	2204      	movs	r2, #4
 8009052:	4394      	bics	r4, r2
 8009054:	431c      	orrs	r4, r3
 8009056:	9b00      	ldr	r3, [sp, #0]
 8009058:	0018      	movs	r0, r3
 800905a:	9302      	str	r3, [sp, #8]
 800905c:	f7f7 f854 	bl	8000108 <strlen>
 8009060:	6074      	str	r4, [r6, #4]
 8009062:	60b0      	str	r0, [r6, #8]
 8009064:	2401      	movs	r4, #1
 8009066:	1c20      	adds	r0, r4, #0
 8009068:	1c31      	adds	r1, r6, #0
 800906a:	beab      	bkpt	0x00ab
 800906c:	1c06      	adds	r6, r0, #0
 800906e:	2e00      	cmp	r6, #0
 8009070:	db0a      	blt.n	8009088 <_swiopen+0x80>
 8009072:	4b12      	ldr	r3, [pc, #72]	; (80090bc <_swiopen+0xb4>)
 8009074:	00fa      	lsls	r2, r7, #3
 8009076:	509e      	str	r6, [r3, r2]
 8009078:	0013      	movs	r3, r2
 800907a:	4a10      	ldr	r2, [pc, #64]	; (80090bc <_swiopen+0xb4>)
 800907c:	003c      	movs	r4, r7
 800907e:	4694      	mov	ip, r2
 8009080:	2200      	movs	r2, #0
 8009082:	4463      	add	r3, ip
 8009084:	605a      	str	r2, [r3, #4]
 8009086:	e015      	b.n	80090b4 <_swiopen+0xac>
 8009088:	0030      	movs	r0, r6
 800908a:	f7ff fe97 	bl	8008dbc <error>
 800908e:	0004      	movs	r4, r0
 8009090:	e010      	b.n	80090b4 <_swiopen+0xac>
 8009092:	23a0      	movs	r3, #160	; 0xa0
 8009094:	002a      	movs	r2, r5
 8009096:	011b      	lsls	r3, r3, #4
 8009098:	401a      	ands	r2, r3
 800909a:	ae02      	add	r6, sp, #8
 800909c:	429a      	cmp	r2, r3
 800909e:	d1c9      	bne.n	8009034 <_swiopen+0x2c>
 80090a0:	0031      	movs	r1, r6
 80090a2:	9800      	ldr	r0, [sp, #0]
 80090a4:	f7ff ff91 	bl	8008fca <_stat>
 80090a8:	1c43      	adds	r3, r0, #1
 80090aa:	d0c3      	beq.n	8009034 <_swiopen+0x2c>
 80090ac:	f000 f8fe 	bl	80092ac <__errno>
 80090b0:	2311      	movs	r3, #17
 80090b2:	6003      	str	r3, [r0, #0]
 80090b4:	0020      	movs	r0, r4
 80090b6:	b019      	add	sp, #100	; 0x64
 80090b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090ba:	46c0      	nop			; (mov r8, r8)
 80090bc:	2000030c 	.word	0x2000030c
 80090c0:	00000601 	.word	0x00000601

080090c4 <_get_semihosting_exts>:
 80090c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090c6:	b085      	sub	sp, #20
 80090c8:	9000      	str	r0, [sp, #0]
 80090ca:	9101      	str	r1, [sp, #4]
 80090cc:	4827      	ldr	r0, [pc, #156]	; (800916c <_get_semihosting_exts+0xa8>)
 80090ce:	2100      	movs	r1, #0
 80090d0:	0015      	movs	r5, r2
 80090d2:	f7ff ff99 	bl	8009008 <_swiopen>
 80090d6:	0004      	movs	r4, r0
 80090d8:	002a      	movs	r2, r5
 80090da:	2100      	movs	r1, #0
 80090dc:	9800      	ldr	r0, [sp, #0]
 80090de:	f000 f9e5 	bl	80094ac <memset>
 80090e2:	1c63      	adds	r3, r4, #1
 80090e4:	d015      	beq.n	8009112 <_get_semihosting_exts+0x4e>
 80090e6:	0020      	movs	r0, r4
 80090e8:	f7ff fe3e 	bl	8008d68 <findslot>
 80090ec:	260c      	movs	r6, #12
 80090ee:	0007      	movs	r7, r0
 80090f0:	1c30      	adds	r0, r6, #0
 80090f2:	1c39      	adds	r1, r7, #0
 80090f4:	beab      	bkpt	0x00ab
 80090f6:	1c06      	adds	r6, r0, #0
 80090f8:	0030      	movs	r0, r6
 80090fa:	f7ff fe4f 	bl	8008d9c <checkerror>
 80090fe:	2803      	cmp	r0, #3
 8009100:	dd02      	ble.n	8009108 <_get_semihosting_exts+0x44>
 8009102:	3803      	subs	r0, #3
 8009104:	42a8      	cmp	r0, r5
 8009106:	dc07      	bgt.n	8009118 <_get_semihosting_exts+0x54>
 8009108:	0020      	movs	r0, r4
 800910a:	2401      	movs	r4, #1
 800910c:	f7ff ff08 	bl	8008f20 <_close>
 8009110:	4264      	negs	r4, r4
 8009112:	0020      	movs	r0, r4
 8009114:	b005      	add	sp, #20
 8009116:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009118:	ae03      	add	r6, sp, #12
 800911a:	2204      	movs	r2, #4
 800911c:	0031      	movs	r1, r6
 800911e:	0020      	movs	r0, r4
 8009120:	f7ff fe6a 	bl	8008df8 <_read>
 8009124:	2803      	cmp	r0, #3
 8009126:	ddef      	ble.n	8009108 <_get_semihosting_exts+0x44>
 8009128:	7833      	ldrb	r3, [r6, #0]
 800912a:	2b53      	cmp	r3, #83	; 0x53
 800912c:	d1ec      	bne.n	8009108 <_get_semihosting_exts+0x44>
 800912e:	7873      	ldrb	r3, [r6, #1]
 8009130:	2b48      	cmp	r3, #72	; 0x48
 8009132:	d1e9      	bne.n	8009108 <_get_semihosting_exts+0x44>
 8009134:	78b3      	ldrb	r3, [r6, #2]
 8009136:	2b46      	cmp	r3, #70	; 0x46
 8009138:	d1e6      	bne.n	8009108 <_get_semihosting_exts+0x44>
 800913a:	78f3      	ldrb	r3, [r6, #3]
 800913c:	2b42      	cmp	r3, #66	; 0x42
 800913e:	d1e3      	bne.n	8009108 <_get_semihosting_exts+0x44>
 8009140:	2201      	movs	r2, #1
 8009142:	9901      	ldr	r1, [sp, #4]
 8009144:	0020      	movs	r0, r4
 8009146:	f7ff fe71 	bl	8008e2c <_swilseek>
 800914a:	2800      	cmp	r0, #0
 800914c:	dbdc      	blt.n	8009108 <_get_semihosting_exts+0x44>
 800914e:	002a      	movs	r2, r5
 8009150:	9900      	ldr	r1, [sp, #0]
 8009152:	0020      	movs	r0, r4
 8009154:	f7ff fe50 	bl	8008df8 <_read>
 8009158:	0005      	movs	r5, r0
 800915a:	0020      	movs	r0, r4
 800915c:	f7ff fee0 	bl	8008f20 <_close>
 8009160:	0028      	movs	r0, r5
 8009162:	f7ff fe1b 	bl	8008d9c <checkerror>
 8009166:	0004      	movs	r4, r0
 8009168:	e7d3      	b.n	8009112 <_get_semihosting_exts+0x4e>
 800916a:	46c0      	nop			; (mov r8, r8)
 800916c:	0800e2e4 	.word	0x0800e2e4

08009170 <initialise_semihosting_exts>:
 8009170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009172:	2401      	movs	r4, #1
 8009174:	2100      	movs	r1, #0
 8009176:	4e09      	ldr	r6, [pc, #36]	; (800919c <initialise_semihosting_exts+0x2c>)
 8009178:	4d09      	ldr	r5, [pc, #36]	; (80091a0 <initialise_semihosting_exts+0x30>)
 800917a:	af01      	add	r7, sp, #4
 800917c:	0022      	movs	r2, r4
 800917e:	0038      	movs	r0, r7
 8009180:	6031      	str	r1, [r6, #0]
 8009182:	602c      	str	r4, [r5, #0]
 8009184:	f7ff ff9e 	bl	80090c4 <_get_semihosting_exts>
 8009188:	2800      	cmp	r0, #0
 800918a:	dd05      	ble.n	8009198 <initialise_semihosting_exts+0x28>
 800918c:	2202      	movs	r2, #2
 800918e:	783b      	ldrb	r3, [r7, #0]
 8009190:	401c      	ands	r4, r3
 8009192:	4013      	ands	r3, r2
 8009194:	6034      	str	r4, [r6, #0]
 8009196:	602b      	str	r3, [r5, #0]
 8009198:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800919a:	46c0      	nop			; (mov r8, r8)
 800919c:	20000100 	.word	0x20000100
 80091a0:	20000104 	.word	0x20000104

080091a4 <_has_ext_stdout_stderr>:
 80091a4:	b510      	push	{r4, lr}
 80091a6:	4c04      	ldr	r4, [pc, #16]	; (80091b8 <_has_ext_stdout_stderr+0x14>)
 80091a8:	6823      	ldr	r3, [r4, #0]
 80091aa:	2b00      	cmp	r3, #0
 80091ac:	da01      	bge.n	80091b2 <_has_ext_stdout_stderr+0xe>
 80091ae:	f7ff ffdf 	bl	8009170 <initialise_semihosting_exts>
 80091b2:	6820      	ldr	r0, [r4, #0]
 80091b4:	bd10      	pop	{r4, pc}
 80091b6:	46c0      	nop			; (mov r8, r8)
 80091b8:	20000104 	.word	0x20000104

080091bc <initialise_monitor_handles>:
 80091bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091be:	4b27      	ldr	r3, [pc, #156]	; (800925c <initialise_monitor_handles+0xa0>)
 80091c0:	b085      	sub	sp, #20
 80091c2:	9301      	str	r3, [sp, #4]
 80091c4:	2500      	movs	r5, #0
 80091c6:	2303      	movs	r3, #3
 80091c8:	ac01      	add	r4, sp, #4
 80091ca:	60a3      	str	r3, [r4, #8]
 80091cc:	2701      	movs	r7, #1
 80091ce:	6065      	str	r5, [r4, #4]
 80091d0:	1c38      	adds	r0, r7, #0
 80091d2:	1c21      	adds	r1, r4, #0
 80091d4:	beab      	bkpt	0x00ab
 80091d6:	1c07      	adds	r7, r0, #0
 80091d8:	2101      	movs	r1, #1
 80091da:	4b21      	ldr	r3, [pc, #132]	; (8009260 <initialise_monitor_handles+0xa4>)
 80091dc:	4249      	negs	r1, r1
 80091de:	601f      	str	r7, [r3, #0]
 80091e0:	002b      	movs	r3, r5
 80091e2:	4d20      	ldr	r5, [pc, #128]	; (8009264 <initialise_monitor_handles+0xa8>)
 80091e4:	00da      	lsls	r2, r3, #3
 80091e6:	3301      	adds	r3, #1
 80091e8:	50a9      	str	r1, [r5, r2]
 80091ea:	2b14      	cmp	r3, #20
 80091ec:	d1fa      	bne.n	80091e4 <initialise_monitor_handles+0x28>
 80091ee:	f7ff ffd9 	bl	80091a4 <_has_ext_stdout_stderr>
 80091f2:	2800      	cmp	r0, #0
 80091f4:	d018      	beq.n	8009228 <initialise_monitor_handles+0x6c>
 80091f6:	4b19      	ldr	r3, [pc, #100]	; (800925c <initialise_monitor_handles+0xa0>)
 80091f8:	2701      	movs	r7, #1
 80091fa:	9301      	str	r3, [sp, #4]
 80091fc:	2303      	movs	r3, #3
 80091fe:	60a3      	str	r3, [r4, #8]
 8009200:	3301      	adds	r3, #1
 8009202:	6063      	str	r3, [r4, #4]
 8009204:	1c38      	adds	r0, r7, #0
 8009206:	1c21      	adds	r1, r4, #0
 8009208:	beab      	bkpt	0x00ab
 800920a:	1c06      	adds	r6, r0, #0
 800920c:	4b16      	ldr	r3, [pc, #88]	; (8009268 <initialise_monitor_handles+0xac>)
 800920e:	4a13      	ldr	r2, [pc, #76]	; (800925c <initialise_monitor_handles+0xa0>)
 8009210:	601e      	str	r6, [r3, #0]
 8009212:	2303      	movs	r3, #3
 8009214:	9201      	str	r2, [sp, #4]
 8009216:	60a3      	str	r3, [r4, #8]
 8009218:	3305      	adds	r3, #5
 800921a:	6063      	str	r3, [r4, #4]
 800921c:	1c38      	adds	r0, r7, #0
 800921e:	1c21      	adds	r1, r4, #0
 8009220:	beab      	bkpt	0x00ab
 8009222:	1c04      	adds	r4, r0, #0
 8009224:	4b11      	ldr	r3, [pc, #68]	; (800926c <initialise_monitor_handles+0xb0>)
 8009226:	601c      	str	r4, [r3, #0]
 8009228:	4f10      	ldr	r7, [pc, #64]	; (800926c <initialise_monitor_handles+0xb0>)
 800922a:	683b      	ldr	r3, [r7, #0]
 800922c:	3301      	adds	r3, #1
 800922e:	d102      	bne.n	8009236 <initialise_monitor_handles+0x7a>
 8009230:	4b0d      	ldr	r3, [pc, #52]	; (8009268 <initialise_monitor_handles+0xac>)
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	603b      	str	r3, [r7, #0]
 8009236:	2400      	movs	r4, #0
 8009238:	4b09      	ldr	r3, [pc, #36]	; (8009260 <initialise_monitor_handles+0xa4>)
 800923a:	606c      	str	r4, [r5, #4]
 800923c:	681b      	ldr	r3, [r3, #0]
 800923e:	602b      	str	r3, [r5, #0]
 8009240:	f7ff ffb0 	bl	80091a4 <_has_ext_stdout_stderr>
 8009244:	42a0      	cmp	r0, r4
 8009246:	d006      	beq.n	8009256 <initialise_monitor_handles+0x9a>
 8009248:	4b07      	ldr	r3, [pc, #28]	; (8009268 <initialise_monitor_handles+0xac>)
 800924a:	60ec      	str	r4, [r5, #12]
 800924c:	681b      	ldr	r3, [r3, #0]
 800924e:	616c      	str	r4, [r5, #20]
 8009250:	60ab      	str	r3, [r5, #8]
 8009252:	683b      	ldr	r3, [r7, #0]
 8009254:	612b      	str	r3, [r5, #16]
 8009256:	b005      	add	sp, #20
 8009258:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800925a:	46c0      	nop			; (mov r8, r8)
 800925c:	0800e2fa 	.word	0x0800e2fa
 8009260:	20000304 	.word	0x20000304
 8009264:	2000030c 	.word	0x2000030c
 8009268:	20000308 	.word	0x20000308
 800926c:	20000300 	.word	0x20000300

08009270 <_isatty>:
 8009270:	b570      	push	{r4, r5, r6, lr}
 8009272:	f7ff fd79 	bl	8008d68 <findslot>
 8009276:	2509      	movs	r5, #9
 8009278:	1e04      	subs	r4, r0, #0
 800927a:	d104      	bne.n	8009286 <_isatty+0x16>
 800927c:	f000 f816 	bl	80092ac <__errno>
 8009280:	6005      	str	r5, [r0, #0]
 8009282:	0020      	movs	r0, r4
 8009284:	bd70      	pop	{r4, r5, r6, pc}
 8009286:	1c28      	adds	r0, r5, #0
 8009288:	1c21      	adds	r1, r4, #0
 800928a:	beab      	bkpt	0x00ab
 800928c:	1c04      	adds	r4, r0, #0
 800928e:	0020      	movs	r0, r4
 8009290:	2c01      	cmp	r4, #1
 8009292:	d0f7      	beq.n	8009284 <_isatty+0x14>
 8009294:	f000 f80a 	bl	80092ac <__errno>
 8009298:	2400      	movs	r4, #0
 800929a:	0006      	movs	r6, r0
 800929c:	2513      	movs	r5, #19
 800929e:	1c28      	adds	r0, r5, #0
 80092a0:	1c21      	adds	r1, r4, #0
 80092a2:	beab      	bkpt	0x00ab
 80092a4:	1c05      	adds	r5, r0, #0
 80092a6:	6035      	str	r5, [r6, #0]
 80092a8:	e7eb      	b.n	8009282 <_isatty+0x12>
	...

080092ac <__errno>:
 80092ac:	4b01      	ldr	r3, [pc, #4]	; (80092b4 <__errno+0x8>)
 80092ae:	6818      	ldr	r0, [r3, #0]
 80092b0:	4770      	bx	lr
 80092b2:	46c0      	nop			; (mov r8, r8)
 80092b4:	20000108 	.word	0x20000108

080092b8 <std>:
 80092b8:	2300      	movs	r3, #0
 80092ba:	b510      	push	{r4, lr}
 80092bc:	0004      	movs	r4, r0
 80092be:	6003      	str	r3, [r0, #0]
 80092c0:	6043      	str	r3, [r0, #4]
 80092c2:	6083      	str	r3, [r0, #8]
 80092c4:	8181      	strh	r1, [r0, #12]
 80092c6:	6643      	str	r3, [r0, #100]	; 0x64
 80092c8:	81c2      	strh	r2, [r0, #14]
 80092ca:	6103      	str	r3, [r0, #16]
 80092cc:	6143      	str	r3, [r0, #20]
 80092ce:	6183      	str	r3, [r0, #24]
 80092d0:	0019      	movs	r1, r3
 80092d2:	2208      	movs	r2, #8
 80092d4:	305c      	adds	r0, #92	; 0x5c
 80092d6:	f000 f8e9 	bl	80094ac <memset>
 80092da:	4b05      	ldr	r3, [pc, #20]	; (80092f0 <std+0x38>)
 80092dc:	6224      	str	r4, [r4, #32]
 80092de:	6263      	str	r3, [r4, #36]	; 0x24
 80092e0:	4b04      	ldr	r3, [pc, #16]	; (80092f4 <std+0x3c>)
 80092e2:	62a3      	str	r3, [r4, #40]	; 0x28
 80092e4:	4b04      	ldr	r3, [pc, #16]	; (80092f8 <std+0x40>)
 80092e6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80092e8:	4b04      	ldr	r3, [pc, #16]	; (80092fc <std+0x44>)
 80092ea:	6323      	str	r3, [r4, #48]	; 0x30
 80092ec:	bd10      	pop	{r4, pc}
 80092ee:	46c0      	nop			; (mov r8, r8)
 80092f0:	0800a3a5 	.word	0x0800a3a5
 80092f4:	0800a3cd 	.word	0x0800a3cd
 80092f8:	0800a405 	.word	0x0800a405
 80092fc:	0800a431 	.word	0x0800a431

08009300 <_cleanup_r>:
 8009300:	b510      	push	{r4, lr}
 8009302:	4902      	ldr	r1, [pc, #8]	; (800930c <_cleanup_r+0xc>)
 8009304:	f000 f88c 	bl	8009420 <_fwalk_reent>
 8009308:	bd10      	pop	{r4, pc}
 800930a:	46c0      	nop			; (mov r8, r8)
 800930c:	0800c1c1 	.word	0x0800c1c1

08009310 <__sfmoreglue>:
 8009310:	b570      	push	{r4, r5, r6, lr}
 8009312:	2568      	movs	r5, #104	; 0x68
 8009314:	1e4a      	subs	r2, r1, #1
 8009316:	4355      	muls	r5, r2
 8009318:	000e      	movs	r6, r1
 800931a:	0029      	movs	r1, r5
 800931c:	3174      	adds	r1, #116	; 0x74
 800931e:	f000 f8cd 	bl	80094bc <_malloc_r>
 8009322:	1e04      	subs	r4, r0, #0
 8009324:	d008      	beq.n	8009338 <__sfmoreglue+0x28>
 8009326:	2100      	movs	r1, #0
 8009328:	002a      	movs	r2, r5
 800932a:	6001      	str	r1, [r0, #0]
 800932c:	6046      	str	r6, [r0, #4]
 800932e:	300c      	adds	r0, #12
 8009330:	60a0      	str	r0, [r4, #8]
 8009332:	3268      	adds	r2, #104	; 0x68
 8009334:	f000 f8ba 	bl	80094ac <memset>
 8009338:	0020      	movs	r0, r4
 800933a:	bd70      	pop	{r4, r5, r6, pc}

0800933c <__sinit>:
 800933c:	6983      	ldr	r3, [r0, #24]
 800933e:	b513      	push	{r0, r1, r4, lr}
 8009340:	0004      	movs	r4, r0
 8009342:	2b00      	cmp	r3, #0
 8009344:	d128      	bne.n	8009398 <__sinit+0x5c>
 8009346:	6483      	str	r3, [r0, #72]	; 0x48
 8009348:	64c3      	str	r3, [r0, #76]	; 0x4c
 800934a:	6503      	str	r3, [r0, #80]	; 0x50
 800934c:	4b13      	ldr	r3, [pc, #76]	; (800939c <__sinit+0x60>)
 800934e:	4a14      	ldr	r2, [pc, #80]	; (80093a0 <__sinit+0x64>)
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	6282      	str	r2, [r0, #40]	; 0x28
 8009354:	9301      	str	r3, [sp, #4]
 8009356:	4298      	cmp	r0, r3
 8009358:	d101      	bne.n	800935e <__sinit+0x22>
 800935a:	2301      	movs	r3, #1
 800935c:	6183      	str	r3, [r0, #24]
 800935e:	0020      	movs	r0, r4
 8009360:	f000 f820 	bl	80093a4 <__sfp>
 8009364:	6060      	str	r0, [r4, #4]
 8009366:	0020      	movs	r0, r4
 8009368:	f000 f81c 	bl	80093a4 <__sfp>
 800936c:	60a0      	str	r0, [r4, #8]
 800936e:	0020      	movs	r0, r4
 8009370:	f000 f818 	bl	80093a4 <__sfp>
 8009374:	2200      	movs	r2, #0
 8009376:	60e0      	str	r0, [r4, #12]
 8009378:	2104      	movs	r1, #4
 800937a:	6860      	ldr	r0, [r4, #4]
 800937c:	f7ff ff9c 	bl	80092b8 <std>
 8009380:	2201      	movs	r2, #1
 8009382:	2109      	movs	r1, #9
 8009384:	68a0      	ldr	r0, [r4, #8]
 8009386:	f7ff ff97 	bl	80092b8 <std>
 800938a:	2202      	movs	r2, #2
 800938c:	2112      	movs	r1, #18
 800938e:	68e0      	ldr	r0, [r4, #12]
 8009390:	f7ff ff92 	bl	80092b8 <std>
 8009394:	2301      	movs	r3, #1
 8009396:	61a3      	str	r3, [r4, #24]
 8009398:	bd13      	pop	{r0, r1, r4, pc}
 800939a:	46c0      	nop			; (mov r8, r8)
 800939c:	0800e360 	.word	0x0800e360
 80093a0:	08009301 	.word	0x08009301

080093a4 <__sfp>:
 80093a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093a6:	4b1c      	ldr	r3, [pc, #112]	; (8009418 <__sfp+0x74>)
 80093a8:	0007      	movs	r7, r0
 80093aa:	681e      	ldr	r6, [r3, #0]
 80093ac:	69b3      	ldr	r3, [r6, #24]
 80093ae:	2b00      	cmp	r3, #0
 80093b0:	d102      	bne.n	80093b8 <__sfp+0x14>
 80093b2:	0030      	movs	r0, r6
 80093b4:	f7ff ffc2 	bl	800933c <__sinit>
 80093b8:	3648      	adds	r6, #72	; 0x48
 80093ba:	68b4      	ldr	r4, [r6, #8]
 80093bc:	6873      	ldr	r3, [r6, #4]
 80093be:	3b01      	subs	r3, #1
 80093c0:	d504      	bpl.n	80093cc <__sfp+0x28>
 80093c2:	6833      	ldr	r3, [r6, #0]
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d007      	beq.n	80093d8 <__sfp+0x34>
 80093c8:	6836      	ldr	r6, [r6, #0]
 80093ca:	e7f6      	b.n	80093ba <__sfp+0x16>
 80093cc:	220c      	movs	r2, #12
 80093ce:	5ea5      	ldrsh	r5, [r4, r2]
 80093d0:	2d00      	cmp	r5, #0
 80093d2:	d00d      	beq.n	80093f0 <__sfp+0x4c>
 80093d4:	3468      	adds	r4, #104	; 0x68
 80093d6:	e7f2      	b.n	80093be <__sfp+0x1a>
 80093d8:	2104      	movs	r1, #4
 80093da:	0038      	movs	r0, r7
 80093dc:	f7ff ff98 	bl	8009310 <__sfmoreglue>
 80093e0:	6030      	str	r0, [r6, #0]
 80093e2:	2800      	cmp	r0, #0
 80093e4:	d1f0      	bne.n	80093c8 <__sfp+0x24>
 80093e6:	230c      	movs	r3, #12
 80093e8:	0004      	movs	r4, r0
 80093ea:	603b      	str	r3, [r7, #0]
 80093ec:	0020      	movs	r0, r4
 80093ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80093f0:	0020      	movs	r0, r4
 80093f2:	4b0a      	ldr	r3, [pc, #40]	; (800941c <__sfp+0x78>)
 80093f4:	6665      	str	r5, [r4, #100]	; 0x64
 80093f6:	6025      	str	r5, [r4, #0]
 80093f8:	6065      	str	r5, [r4, #4]
 80093fa:	60a5      	str	r5, [r4, #8]
 80093fc:	60e3      	str	r3, [r4, #12]
 80093fe:	6125      	str	r5, [r4, #16]
 8009400:	6165      	str	r5, [r4, #20]
 8009402:	61a5      	str	r5, [r4, #24]
 8009404:	2208      	movs	r2, #8
 8009406:	0029      	movs	r1, r5
 8009408:	305c      	adds	r0, #92	; 0x5c
 800940a:	f000 f84f 	bl	80094ac <memset>
 800940e:	6365      	str	r5, [r4, #52]	; 0x34
 8009410:	63a5      	str	r5, [r4, #56]	; 0x38
 8009412:	64a5      	str	r5, [r4, #72]	; 0x48
 8009414:	64e5      	str	r5, [r4, #76]	; 0x4c
 8009416:	e7e9      	b.n	80093ec <__sfp+0x48>
 8009418:	0800e360 	.word	0x0800e360
 800941c:	ffff0001 	.word	0xffff0001

08009420 <_fwalk_reent>:
 8009420:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009422:	0004      	movs	r4, r0
 8009424:	0007      	movs	r7, r0
 8009426:	2600      	movs	r6, #0
 8009428:	9101      	str	r1, [sp, #4]
 800942a:	3448      	adds	r4, #72	; 0x48
 800942c:	2c00      	cmp	r4, #0
 800942e:	d101      	bne.n	8009434 <_fwalk_reent+0x14>
 8009430:	0030      	movs	r0, r6
 8009432:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009434:	6863      	ldr	r3, [r4, #4]
 8009436:	68a5      	ldr	r5, [r4, #8]
 8009438:	9300      	str	r3, [sp, #0]
 800943a:	9b00      	ldr	r3, [sp, #0]
 800943c:	3b01      	subs	r3, #1
 800943e:	9300      	str	r3, [sp, #0]
 8009440:	d501      	bpl.n	8009446 <_fwalk_reent+0x26>
 8009442:	6824      	ldr	r4, [r4, #0]
 8009444:	e7f2      	b.n	800942c <_fwalk_reent+0xc>
 8009446:	89ab      	ldrh	r3, [r5, #12]
 8009448:	2b01      	cmp	r3, #1
 800944a:	d908      	bls.n	800945e <_fwalk_reent+0x3e>
 800944c:	220e      	movs	r2, #14
 800944e:	5eab      	ldrsh	r3, [r5, r2]
 8009450:	3301      	adds	r3, #1
 8009452:	d004      	beq.n	800945e <_fwalk_reent+0x3e>
 8009454:	0029      	movs	r1, r5
 8009456:	0038      	movs	r0, r7
 8009458:	9b01      	ldr	r3, [sp, #4]
 800945a:	4798      	blx	r3
 800945c:	4306      	orrs	r6, r0
 800945e:	3568      	adds	r5, #104	; 0x68
 8009460:	e7eb      	b.n	800943a <_fwalk_reent+0x1a>
	...

08009464 <__libc_init_array>:
 8009464:	b570      	push	{r4, r5, r6, lr}
 8009466:	2600      	movs	r6, #0
 8009468:	4d0c      	ldr	r5, [pc, #48]	; (800949c <__libc_init_array+0x38>)
 800946a:	4c0d      	ldr	r4, [pc, #52]	; (80094a0 <__libc_init_array+0x3c>)
 800946c:	1b64      	subs	r4, r4, r5
 800946e:	10a4      	asrs	r4, r4, #2
 8009470:	42a6      	cmp	r6, r4
 8009472:	d109      	bne.n	8009488 <__libc_init_array+0x24>
 8009474:	2600      	movs	r6, #0
 8009476:	f004 faf1 	bl	800da5c <_init>
 800947a:	4d0a      	ldr	r5, [pc, #40]	; (80094a4 <__libc_init_array+0x40>)
 800947c:	4c0a      	ldr	r4, [pc, #40]	; (80094a8 <__libc_init_array+0x44>)
 800947e:	1b64      	subs	r4, r4, r5
 8009480:	10a4      	asrs	r4, r4, #2
 8009482:	42a6      	cmp	r6, r4
 8009484:	d105      	bne.n	8009492 <__libc_init_array+0x2e>
 8009486:	bd70      	pop	{r4, r5, r6, pc}
 8009488:	00b3      	lsls	r3, r6, #2
 800948a:	58eb      	ldr	r3, [r5, r3]
 800948c:	4798      	blx	r3
 800948e:	3601      	adds	r6, #1
 8009490:	e7ee      	b.n	8009470 <__libc_init_array+0xc>
 8009492:	00b3      	lsls	r3, r6, #2
 8009494:	58eb      	ldr	r3, [r5, r3]
 8009496:	4798      	blx	r3
 8009498:	3601      	adds	r6, #1
 800949a:	e7f2      	b.n	8009482 <__libc_init_array+0x1e>
 800949c:	0800e61c 	.word	0x0800e61c
 80094a0:	0800e61c 	.word	0x0800e61c
 80094a4:	0800e61c 	.word	0x0800e61c
 80094a8:	0800e620 	.word	0x0800e620

080094ac <memset>:
 80094ac:	0003      	movs	r3, r0
 80094ae:	1812      	adds	r2, r2, r0
 80094b0:	4293      	cmp	r3, r2
 80094b2:	d100      	bne.n	80094b6 <memset+0xa>
 80094b4:	4770      	bx	lr
 80094b6:	7019      	strb	r1, [r3, #0]
 80094b8:	3301      	adds	r3, #1
 80094ba:	e7f9      	b.n	80094b0 <memset+0x4>

080094bc <_malloc_r>:
 80094bc:	2303      	movs	r3, #3
 80094be:	b570      	push	{r4, r5, r6, lr}
 80094c0:	1ccd      	adds	r5, r1, #3
 80094c2:	439d      	bics	r5, r3
 80094c4:	3508      	adds	r5, #8
 80094c6:	0006      	movs	r6, r0
 80094c8:	2d0c      	cmp	r5, #12
 80094ca:	d21e      	bcs.n	800950a <_malloc_r+0x4e>
 80094cc:	250c      	movs	r5, #12
 80094ce:	42a9      	cmp	r1, r5
 80094d0:	d81d      	bhi.n	800950e <_malloc_r+0x52>
 80094d2:	0030      	movs	r0, r6
 80094d4:	f003 fa92 	bl	800c9fc <__malloc_lock>
 80094d8:	4a25      	ldr	r2, [pc, #148]	; (8009570 <_malloc_r+0xb4>)
 80094da:	6814      	ldr	r4, [r2, #0]
 80094dc:	0021      	movs	r1, r4
 80094de:	2900      	cmp	r1, #0
 80094e0:	d119      	bne.n	8009516 <_malloc_r+0x5a>
 80094e2:	4c24      	ldr	r4, [pc, #144]	; (8009574 <_malloc_r+0xb8>)
 80094e4:	6823      	ldr	r3, [r4, #0]
 80094e6:	2b00      	cmp	r3, #0
 80094e8:	d103      	bne.n	80094f2 <_malloc_r+0x36>
 80094ea:	0030      	movs	r0, r6
 80094ec:	f000 ff24 	bl	800a338 <_sbrk_r>
 80094f0:	6020      	str	r0, [r4, #0]
 80094f2:	0029      	movs	r1, r5
 80094f4:	0030      	movs	r0, r6
 80094f6:	f000 ff1f 	bl	800a338 <_sbrk_r>
 80094fa:	1c43      	adds	r3, r0, #1
 80094fc:	d12b      	bne.n	8009556 <_malloc_r+0x9a>
 80094fe:	230c      	movs	r3, #12
 8009500:	0030      	movs	r0, r6
 8009502:	6033      	str	r3, [r6, #0]
 8009504:	f003 fa7b 	bl	800c9fe <__malloc_unlock>
 8009508:	e003      	b.n	8009512 <_malloc_r+0x56>
 800950a:	2d00      	cmp	r5, #0
 800950c:	dadf      	bge.n	80094ce <_malloc_r+0x12>
 800950e:	230c      	movs	r3, #12
 8009510:	6033      	str	r3, [r6, #0]
 8009512:	2000      	movs	r0, #0
 8009514:	bd70      	pop	{r4, r5, r6, pc}
 8009516:	680b      	ldr	r3, [r1, #0]
 8009518:	1b5b      	subs	r3, r3, r5
 800951a:	d419      	bmi.n	8009550 <_malloc_r+0x94>
 800951c:	2b0b      	cmp	r3, #11
 800951e:	d903      	bls.n	8009528 <_malloc_r+0x6c>
 8009520:	600b      	str	r3, [r1, #0]
 8009522:	18cc      	adds	r4, r1, r3
 8009524:	6025      	str	r5, [r4, #0]
 8009526:	e003      	b.n	8009530 <_malloc_r+0x74>
 8009528:	684b      	ldr	r3, [r1, #4]
 800952a:	428c      	cmp	r4, r1
 800952c:	d10d      	bne.n	800954a <_malloc_r+0x8e>
 800952e:	6013      	str	r3, [r2, #0]
 8009530:	0030      	movs	r0, r6
 8009532:	f003 fa64 	bl	800c9fe <__malloc_unlock>
 8009536:	0020      	movs	r0, r4
 8009538:	2207      	movs	r2, #7
 800953a:	300b      	adds	r0, #11
 800953c:	1d23      	adds	r3, r4, #4
 800953e:	4390      	bics	r0, r2
 8009540:	1ac3      	subs	r3, r0, r3
 8009542:	d0e7      	beq.n	8009514 <_malloc_r+0x58>
 8009544:	425a      	negs	r2, r3
 8009546:	50e2      	str	r2, [r4, r3]
 8009548:	e7e4      	b.n	8009514 <_malloc_r+0x58>
 800954a:	6063      	str	r3, [r4, #4]
 800954c:	000c      	movs	r4, r1
 800954e:	e7ef      	b.n	8009530 <_malloc_r+0x74>
 8009550:	000c      	movs	r4, r1
 8009552:	6849      	ldr	r1, [r1, #4]
 8009554:	e7c3      	b.n	80094de <_malloc_r+0x22>
 8009556:	2303      	movs	r3, #3
 8009558:	1cc4      	adds	r4, r0, #3
 800955a:	439c      	bics	r4, r3
 800955c:	42a0      	cmp	r0, r4
 800955e:	d0e1      	beq.n	8009524 <_malloc_r+0x68>
 8009560:	1a21      	subs	r1, r4, r0
 8009562:	0030      	movs	r0, r6
 8009564:	f000 fee8 	bl	800a338 <_sbrk_r>
 8009568:	1c43      	adds	r3, r0, #1
 800956a:	d1db      	bne.n	8009524 <_malloc_r+0x68>
 800956c:	e7c7      	b.n	80094fe <_malloc_r+0x42>
 800956e:	46c0      	nop			; (mov r8, r8)
 8009570:	200003ac 	.word	0x200003ac
 8009574:	200003b0 	.word	0x200003b0

08009578 <__cvt>:
 8009578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800957a:	b08b      	sub	sp, #44	; 0x2c
 800957c:	0014      	movs	r4, r2
 800957e:	1e1d      	subs	r5, r3, #0
 8009580:	9912      	ldr	r1, [sp, #72]	; 0x48
 8009582:	da53      	bge.n	800962c <__cvt+0xb4>
 8009584:	2480      	movs	r4, #128	; 0x80
 8009586:	0624      	lsls	r4, r4, #24
 8009588:	191b      	adds	r3, r3, r4
 800958a:	001d      	movs	r5, r3
 800958c:	0014      	movs	r4, r2
 800958e:	232d      	movs	r3, #45	; 0x2d
 8009590:	700b      	strb	r3, [r1, #0]
 8009592:	2320      	movs	r3, #32
 8009594:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8009596:	2203      	movs	r2, #3
 8009598:	439e      	bics	r6, r3
 800959a:	2e46      	cmp	r6, #70	; 0x46
 800959c:	d007      	beq.n	80095ae <__cvt+0x36>
 800959e:	0033      	movs	r3, r6
 80095a0:	3b45      	subs	r3, #69	; 0x45
 80095a2:	4259      	negs	r1, r3
 80095a4:	414b      	adcs	r3, r1
 80095a6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80095a8:	3a01      	subs	r2, #1
 80095aa:	18cb      	adds	r3, r1, r3
 80095ac:	9310      	str	r3, [sp, #64]	; 0x40
 80095ae:	ab09      	add	r3, sp, #36	; 0x24
 80095b0:	9304      	str	r3, [sp, #16]
 80095b2:	ab08      	add	r3, sp, #32
 80095b4:	9303      	str	r3, [sp, #12]
 80095b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80095b8:	9200      	str	r2, [sp, #0]
 80095ba:	9302      	str	r3, [sp, #8]
 80095bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80095be:	0022      	movs	r2, r4
 80095c0:	9301      	str	r3, [sp, #4]
 80095c2:	002b      	movs	r3, r5
 80095c4:	f001 ff92 	bl	800b4ec <_dtoa_r>
 80095c8:	0007      	movs	r7, r0
 80095ca:	2e47      	cmp	r6, #71	; 0x47
 80095cc:	d102      	bne.n	80095d4 <__cvt+0x5c>
 80095ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80095d0:	07db      	lsls	r3, r3, #31
 80095d2:	d524      	bpl.n	800961e <__cvt+0xa6>
 80095d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80095d6:	18fb      	adds	r3, r7, r3
 80095d8:	9307      	str	r3, [sp, #28]
 80095da:	2e46      	cmp	r6, #70	; 0x46
 80095dc:	d114      	bne.n	8009608 <__cvt+0x90>
 80095de:	783b      	ldrb	r3, [r7, #0]
 80095e0:	2b30      	cmp	r3, #48	; 0x30
 80095e2:	d10c      	bne.n	80095fe <__cvt+0x86>
 80095e4:	2200      	movs	r2, #0
 80095e6:	2300      	movs	r3, #0
 80095e8:	0020      	movs	r0, r4
 80095ea:	0029      	movs	r1, r5
 80095ec:	f7f6 ff24 	bl	8000438 <__aeabi_dcmpeq>
 80095f0:	2800      	cmp	r0, #0
 80095f2:	d104      	bne.n	80095fe <__cvt+0x86>
 80095f4:	2301      	movs	r3, #1
 80095f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80095f8:	1a9b      	subs	r3, r3, r2
 80095fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80095fc:	6013      	str	r3, [r2, #0]
 80095fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009600:	9a07      	ldr	r2, [sp, #28]
 8009602:	681b      	ldr	r3, [r3, #0]
 8009604:	18d3      	adds	r3, r2, r3
 8009606:	9307      	str	r3, [sp, #28]
 8009608:	2200      	movs	r2, #0
 800960a:	2300      	movs	r3, #0
 800960c:	0020      	movs	r0, r4
 800960e:	0029      	movs	r1, r5
 8009610:	f7f6 ff12 	bl	8000438 <__aeabi_dcmpeq>
 8009614:	2230      	movs	r2, #48	; 0x30
 8009616:	2800      	cmp	r0, #0
 8009618:	d00d      	beq.n	8009636 <__cvt+0xbe>
 800961a:	9b07      	ldr	r3, [sp, #28]
 800961c:	9309      	str	r3, [sp, #36]	; 0x24
 800961e:	0038      	movs	r0, r7
 8009620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009622:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8009624:	1bdb      	subs	r3, r3, r7
 8009626:	6013      	str	r3, [r2, #0]
 8009628:	b00b      	add	sp, #44	; 0x2c
 800962a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800962c:	2300      	movs	r3, #0
 800962e:	e7af      	b.n	8009590 <__cvt+0x18>
 8009630:	1c59      	adds	r1, r3, #1
 8009632:	9109      	str	r1, [sp, #36]	; 0x24
 8009634:	701a      	strb	r2, [r3, #0]
 8009636:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009638:	9907      	ldr	r1, [sp, #28]
 800963a:	428b      	cmp	r3, r1
 800963c:	d3f8      	bcc.n	8009630 <__cvt+0xb8>
 800963e:	e7ee      	b.n	800961e <__cvt+0xa6>

08009640 <__exponent>:
 8009640:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009642:	1c83      	adds	r3, r0, #2
 8009644:	b085      	sub	sp, #20
 8009646:	9301      	str	r3, [sp, #4]
 8009648:	0006      	movs	r6, r0
 800964a:	000c      	movs	r4, r1
 800964c:	7002      	strb	r2, [r0, #0]
 800964e:	232b      	movs	r3, #43	; 0x2b
 8009650:	2900      	cmp	r1, #0
 8009652:	da01      	bge.n	8009658 <__exponent+0x18>
 8009654:	232d      	movs	r3, #45	; 0x2d
 8009656:	424c      	negs	r4, r1
 8009658:	7073      	strb	r3, [r6, #1]
 800965a:	2c09      	cmp	r4, #9
 800965c:	dd22      	ble.n	80096a4 <__exponent+0x64>
 800965e:	ab02      	add	r3, sp, #8
 8009660:	1ddd      	adds	r5, r3, #7
 8009662:	0020      	movs	r0, r4
 8009664:	210a      	movs	r1, #10
 8009666:	f7f6 fed1 	bl	800040c <__aeabi_idivmod>
 800966a:	1e6f      	subs	r7, r5, #1
 800966c:	3130      	adds	r1, #48	; 0x30
 800966e:	7039      	strb	r1, [r7, #0]
 8009670:	0020      	movs	r0, r4
 8009672:	210a      	movs	r1, #10
 8009674:	f7f6 fde4 	bl	8000240 <__divsi3>
 8009678:	0004      	movs	r4, r0
 800967a:	2809      	cmp	r0, #9
 800967c:	dc0b      	bgt.n	8009696 <__exponent+0x56>
 800967e:	3d02      	subs	r5, #2
 8009680:	3430      	adds	r4, #48	; 0x30
 8009682:	9b01      	ldr	r3, [sp, #4]
 8009684:	702c      	strb	r4, [r5, #0]
 8009686:	aa02      	add	r2, sp, #8
 8009688:	3207      	adds	r2, #7
 800968a:	0018      	movs	r0, r3
 800968c:	42aa      	cmp	r2, r5
 800968e:	d804      	bhi.n	800969a <__exponent+0x5a>
 8009690:	1b80      	subs	r0, r0, r6
 8009692:	b005      	add	sp, #20
 8009694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009696:	003d      	movs	r5, r7
 8009698:	e7e3      	b.n	8009662 <__exponent+0x22>
 800969a:	782a      	ldrb	r2, [r5, #0]
 800969c:	3501      	adds	r5, #1
 800969e:	701a      	strb	r2, [r3, #0]
 80096a0:	3301      	adds	r3, #1
 80096a2:	e7f0      	b.n	8009686 <__exponent+0x46>
 80096a4:	2330      	movs	r3, #48	; 0x30
 80096a6:	18e4      	adds	r4, r4, r3
 80096a8:	70b3      	strb	r3, [r6, #2]
 80096aa:	1d30      	adds	r0, r6, #4
 80096ac:	70f4      	strb	r4, [r6, #3]
 80096ae:	e7ef      	b.n	8009690 <__exponent+0x50>

080096b0 <_printf_float>:
 80096b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096b2:	b095      	sub	sp, #84	; 0x54
 80096b4:	000c      	movs	r4, r1
 80096b6:	920a      	str	r2, [sp, #40]	; 0x28
 80096b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80096ba:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80096bc:	9009      	str	r0, [sp, #36]	; 0x24
 80096be:	f003 f8e1 	bl	800c884 <_localeconv_r>
 80096c2:	6803      	ldr	r3, [r0, #0]
 80096c4:	0018      	movs	r0, r3
 80096c6:	930c      	str	r3, [sp, #48]	; 0x30
 80096c8:	f7f6 fd1e 	bl	8000108 <strlen>
 80096cc:	2300      	movs	r3, #0
 80096ce:	9312      	str	r3, [sp, #72]	; 0x48
 80096d0:	6823      	ldr	r3, [r4, #0]
 80096d2:	900e      	str	r0, [sp, #56]	; 0x38
 80096d4:	930d      	str	r3, [sp, #52]	; 0x34
 80096d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80096d8:	7e27      	ldrb	r7, [r4, #24]
 80096da:	682b      	ldr	r3, [r5, #0]
 80096dc:	2207      	movs	r2, #7
 80096de:	05c9      	lsls	r1, r1, #23
 80096e0:	d545      	bpl.n	800976e <_printf_float+0xbe>
 80096e2:	189b      	adds	r3, r3, r2
 80096e4:	4393      	bics	r3, r2
 80096e6:	001a      	movs	r2, r3
 80096e8:	3208      	adds	r2, #8
 80096ea:	602a      	str	r2, [r5, #0]
 80096ec:	681a      	ldr	r2, [r3, #0]
 80096ee:	685b      	ldr	r3, [r3, #4]
 80096f0:	64a2      	str	r2, [r4, #72]	; 0x48
 80096f2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80096f4:	2201      	movs	r2, #1
 80096f6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80096f8:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 80096fa:	006b      	lsls	r3, r5, #1
 80096fc:	085b      	lsrs	r3, r3, #1
 80096fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8009700:	4252      	negs	r2, r2
 8009702:	4bac      	ldr	r3, [pc, #688]	; (80099b4 <_printf_float+0x304>)
 8009704:	0030      	movs	r0, r6
 8009706:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009708:	f7f9 fb10 	bl	8002d2c <__aeabi_dcmpun>
 800970c:	2800      	cmp	r0, #0
 800970e:	d130      	bne.n	8009772 <_printf_float+0xc2>
 8009710:	2201      	movs	r2, #1
 8009712:	4ba8      	ldr	r3, [pc, #672]	; (80099b4 <_printf_float+0x304>)
 8009714:	4252      	negs	r2, r2
 8009716:	0030      	movs	r0, r6
 8009718:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800971a:	f7f6 fe9d 	bl	8000458 <__aeabi_dcmple>
 800971e:	2800      	cmp	r0, #0
 8009720:	d127      	bne.n	8009772 <_printf_float+0xc2>
 8009722:	2200      	movs	r2, #0
 8009724:	2300      	movs	r3, #0
 8009726:	0030      	movs	r0, r6
 8009728:	0029      	movs	r1, r5
 800972a:	f7f6 fe8b 	bl	8000444 <__aeabi_dcmplt>
 800972e:	2800      	cmp	r0, #0
 8009730:	d003      	beq.n	800973a <_printf_float+0x8a>
 8009732:	0023      	movs	r3, r4
 8009734:	222d      	movs	r2, #45	; 0x2d
 8009736:	3343      	adds	r3, #67	; 0x43
 8009738:	701a      	strb	r2, [r3, #0]
 800973a:	4d9f      	ldr	r5, [pc, #636]	; (80099b8 <_printf_float+0x308>)
 800973c:	2f47      	cmp	r7, #71	; 0x47
 800973e:	d800      	bhi.n	8009742 <_printf_float+0x92>
 8009740:	4d9e      	ldr	r5, [pc, #632]	; (80099bc <_printf_float+0x30c>)
 8009742:	2303      	movs	r3, #3
 8009744:	2600      	movs	r6, #0
 8009746:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009748:	6123      	str	r3, [r4, #16]
 800974a:	3301      	adds	r3, #1
 800974c:	439a      	bics	r2, r3
 800974e:	6022      	str	r2, [r4, #0]
 8009750:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009752:	aa13      	add	r2, sp, #76	; 0x4c
 8009754:	9300      	str	r3, [sp, #0]
 8009756:	0021      	movs	r1, r4
 8009758:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800975a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800975c:	f000 f9f4 	bl	8009b48 <_printf_common>
 8009760:	1c43      	adds	r3, r0, #1
 8009762:	d000      	beq.n	8009766 <_printf_float+0xb6>
 8009764:	e093      	b.n	800988e <_printf_float+0x1de>
 8009766:	2001      	movs	r0, #1
 8009768:	4240      	negs	r0, r0
 800976a:	b015      	add	sp, #84	; 0x54
 800976c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800976e:	3307      	adds	r3, #7
 8009770:	e7b8      	b.n	80096e4 <_printf_float+0x34>
 8009772:	0032      	movs	r2, r6
 8009774:	002b      	movs	r3, r5
 8009776:	0030      	movs	r0, r6
 8009778:	0029      	movs	r1, r5
 800977a:	f7f9 fad7 	bl	8002d2c <__aeabi_dcmpun>
 800977e:	2800      	cmp	r0, #0
 8009780:	d004      	beq.n	800978c <_printf_float+0xdc>
 8009782:	4d8f      	ldr	r5, [pc, #572]	; (80099c0 <_printf_float+0x310>)
 8009784:	2f47      	cmp	r7, #71	; 0x47
 8009786:	d8dc      	bhi.n	8009742 <_printf_float+0x92>
 8009788:	4d8e      	ldr	r5, [pc, #568]	; (80099c4 <_printf_float+0x314>)
 800978a:	e7da      	b.n	8009742 <_printf_float+0x92>
 800978c:	2380      	movs	r3, #128	; 0x80
 800978e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009790:	6862      	ldr	r2, [r4, #4]
 8009792:	00db      	lsls	r3, r3, #3
 8009794:	430b      	orrs	r3, r1
 8009796:	1c51      	adds	r1, r2, #1
 8009798:	d143      	bne.n	8009822 <_printf_float+0x172>
 800979a:	3207      	adds	r2, #7
 800979c:	6062      	str	r2, [r4, #4]
 800979e:	aa12      	add	r2, sp, #72	; 0x48
 80097a0:	2100      	movs	r1, #0
 80097a2:	9205      	str	r2, [sp, #20]
 80097a4:	aa11      	add	r2, sp, #68	; 0x44
 80097a6:	9203      	str	r2, [sp, #12]
 80097a8:	2223      	movs	r2, #35	; 0x23
 80097aa:	6023      	str	r3, [r4, #0]
 80097ac:	9106      	str	r1, [sp, #24]
 80097ae:	9301      	str	r3, [sp, #4]
 80097b0:	a908      	add	r1, sp, #32
 80097b2:	6863      	ldr	r3, [r4, #4]
 80097b4:	1852      	adds	r2, r2, r1
 80097b6:	9202      	str	r2, [sp, #8]
 80097b8:	9300      	str	r3, [sp, #0]
 80097ba:	0032      	movs	r2, r6
 80097bc:	002b      	movs	r3, r5
 80097be:	9704      	str	r7, [sp, #16]
 80097c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80097c2:	f7ff fed9 	bl	8009578 <__cvt>
 80097c6:	2320      	movs	r3, #32
 80097c8:	003a      	movs	r2, r7
 80097ca:	0005      	movs	r5, r0
 80097cc:	439a      	bics	r2, r3
 80097ce:	2a47      	cmp	r2, #71	; 0x47
 80097d0:	d107      	bne.n	80097e2 <_printf_float+0x132>
 80097d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80097d4:	1cda      	adds	r2, r3, #3
 80097d6:	db02      	blt.n	80097de <_printf_float+0x12e>
 80097d8:	6862      	ldr	r2, [r4, #4]
 80097da:	4293      	cmp	r3, r2
 80097dc:	dd45      	ble.n	800986a <_printf_float+0x1ba>
 80097de:	3f02      	subs	r7, #2
 80097e0:	b2ff      	uxtb	r7, r7
 80097e2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80097e4:	2f65      	cmp	r7, #101	; 0x65
 80097e6:	d825      	bhi.n	8009834 <_printf_float+0x184>
 80097e8:	0020      	movs	r0, r4
 80097ea:	3901      	subs	r1, #1
 80097ec:	003a      	movs	r2, r7
 80097ee:	3050      	adds	r0, #80	; 0x50
 80097f0:	9111      	str	r1, [sp, #68]	; 0x44
 80097f2:	f7ff ff25 	bl	8009640 <__exponent>
 80097f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80097f8:	0006      	movs	r6, r0
 80097fa:	1813      	adds	r3, r2, r0
 80097fc:	6123      	str	r3, [r4, #16]
 80097fe:	2a01      	cmp	r2, #1
 8009800:	dc02      	bgt.n	8009808 <_printf_float+0x158>
 8009802:	6822      	ldr	r2, [r4, #0]
 8009804:	07d2      	lsls	r2, r2, #31
 8009806:	d501      	bpl.n	800980c <_printf_float+0x15c>
 8009808:	3301      	adds	r3, #1
 800980a:	6123      	str	r3, [r4, #16]
 800980c:	2323      	movs	r3, #35	; 0x23
 800980e:	aa08      	add	r2, sp, #32
 8009810:	189b      	adds	r3, r3, r2
 8009812:	781b      	ldrb	r3, [r3, #0]
 8009814:	2b00      	cmp	r3, #0
 8009816:	d09b      	beq.n	8009750 <_printf_float+0xa0>
 8009818:	0023      	movs	r3, r4
 800981a:	222d      	movs	r2, #45	; 0x2d
 800981c:	3343      	adds	r3, #67	; 0x43
 800981e:	701a      	strb	r2, [r3, #0]
 8009820:	e796      	b.n	8009750 <_printf_float+0xa0>
 8009822:	2f67      	cmp	r7, #103	; 0x67
 8009824:	d100      	bne.n	8009828 <_printf_float+0x178>
 8009826:	e176      	b.n	8009b16 <_printf_float+0x466>
 8009828:	2f47      	cmp	r7, #71	; 0x47
 800982a:	d1b8      	bne.n	800979e <_printf_float+0xee>
 800982c:	2a00      	cmp	r2, #0
 800982e:	d1b6      	bne.n	800979e <_printf_float+0xee>
 8009830:	2201      	movs	r2, #1
 8009832:	e7b3      	b.n	800979c <_printf_float+0xec>
 8009834:	2f66      	cmp	r7, #102	; 0x66
 8009836:	d119      	bne.n	800986c <_printf_float+0x1bc>
 8009838:	6863      	ldr	r3, [r4, #4]
 800983a:	2900      	cmp	r1, #0
 800983c:	dd0c      	ble.n	8009858 <_printf_float+0x1a8>
 800983e:	6121      	str	r1, [r4, #16]
 8009840:	2b00      	cmp	r3, #0
 8009842:	d102      	bne.n	800984a <_printf_float+0x19a>
 8009844:	6822      	ldr	r2, [r4, #0]
 8009846:	07d2      	lsls	r2, r2, #31
 8009848:	d502      	bpl.n	8009850 <_printf_float+0x1a0>
 800984a:	3301      	adds	r3, #1
 800984c:	185b      	adds	r3, r3, r1
 800984e:	6123      	str	r3, [r4, #16]
 8009850:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009852:	2600      	movs	r6, #0
 8009854:	65a3      	str	r3, [r4, #88]	; 0x58
 8009856:	e7d9      	b.n	800980c <_printf_float+0x15c>
 8009858:	2b00      	cmp	r3, #0
 800985a:	d103      	bne.n	8009864 <_printf_float+0x1b4>
 800985c:	2201      	movs	r2, #1
 800985e:	6821      	ldr	r1, [r4, #0]
 8009860:	4211      	tst	r1, r2
 8009862:	d000      	beq.n	8009866 <_printf_float+0x1b6>
 8009864:	1c9a      	adds	r2, r3, #2
 8009866:	6122      	str	r2, [r4, #16]
 8009868:	e7f2      	b.n	8009850 <_printf_float+0x1a0>
 800986a:	2767      	movs	r7, #103	; 0x67
 800986c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800986e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8009870:	4293      	cmp	r3, r2
 8009872:	db05      	blt.n	8009880 <_printf_float+0x1d0>
 8009874:	6822      	ldr	r2, [r4, #0]
 8009876:	6123      	str	r3, [r4, #16]
 8009878:	07d2      	lsls	r2, r2, #31
 800987a:	d5e9      	bpl.n	8009850 <_printf_float+0x1a0>
 800987c:	3301      	adds	r3, #1
 800987e:	e7e6      	b.n	800984e <_printf_float+0x19e>
 8009880:	2101      	movs	r1, #1
 8009882:	2b00      	cmp	r3, #0
 8009884:	dc01      	bgt.n	800988a <_printf_float+0x1da>
 8009886:	1849      	adds	r1, r1, r1
 8009888:	1ac9      	subs	r1, r1, r3
 800988a:	1852      	adds	r2, r2, r1
 800988c:	e7eb      	b.n	8009866 <_printf_float+0x1b6>
 800988e:	6822      	ldr	r2, [r4, #0]
 8009890:	0553      	lsls	r3, r2, #21
 8009892:	d408      	bmi.n	80098a6 <_printf_float+0x1f6>
 8009894:	6923      	ldr	r3, [r4, #16]
 8009896:	002a      	movs	r2, r5
 8009898:	990a      	ldr	r1, [sp, #40]	; 0x28
 800989a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800989c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800989e:	47a8      	blx	r5
 80098a0:	1c43      	adds	r3, r0, #1
 80098a2:	d129      	bne.n	80098f8 <_printf_float+0x248>
 80098a4:	e75f      	b.n	8009766 <_printf_float+0xb6>
 80098a6:	2f65      	cmp	r7, #101	; 0x65
 80098a8:	d800      	bhi.n	80098ac <_printf_float+0x1fc>
 80098aa:	e0e0      	b.n	8009a6e <_printf_float+0x3be>
 80098ac:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80098ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80098b0:	2200      	movs	r2, #0
 80098b2:	2300      	movs	r3, #0
 80098b4:	f7f6 fdc0 	bl	8000438 <__aeabi_dcmpeq>
 80098b8:	2800      	cmp	r0, #0
 80098ba:	d034      	beq.n	8009926 <_printf_float+0x276>
 80098bc:	2301      	movs	r3, #1
 80098be:	4a42      	ldr	r2, [pc, #264]	; (80099c8 <_printf_float+0x318>)
 80098c0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80098c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80098c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80098c6:	47a8      	blx	r5
 80098c8:	1c43      	adds	r3, r0, #1
 80098ca:	d100      	bne.n	80098ce <_printf_float+0x21e>
 80098cc:	e74b      	b.n	8009766 <_printf_float+0xb6>
 80098ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80098d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80098d2:	4293      	cmp	r3, r2
 80098d4:	db02      	blt.n	80098dc <_printf_float+0x22c>
 80098d6:	6823      	ldr	r3, [r4, #0]
 80098d8:	07db      	lsls	r3, r3, #31
 80098da:	d50d      	bpl.n	80098f8 <_printf_float+0x248>
 80098dc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80098de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80098e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80098e2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80098e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80098e6:	47a8      	blx	r5
 80098e8:	2500      	movs	r5, #0
 80098ea:	1c43      	adds	r3, r0, #1
 80098ec:	d100      	bne.n	80098f0 <_printf_float+0x240>
 80098ee:	e73a      	b.n	8009766 <_printf_float+0xb6>
 80098f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80098f2:	3b01      	subs	r3, #1
 80098f4:	42ab      	cmp	r3, r5
 80098f6:	dc0a      	bgt.n	800990e <_printf_float+0x25e>
 80098f8:	6823      	ldr	r3, [r4, #0]
 80098fa:	079b      	lsls	r3, r3, #30
 80098fc:	d500      	bpl.n	8009900 <_printf_float+0x250>
 80098fe:	e108      	b.n	8009b12 <_printf_float+0x462>
 8009900:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009902:	68e0      	ldr	r0, [r4, #12]
 8009904:	4298      	cmp	r0, r3
 8009906:	db00      	blt.n	800990a <_printf_float+0x25a>
 8009908:	e72f      	b.n	800976a <_printf_float+0xba>
 800990a:	0018      	movs	r0, r3
 800990c:	e72d      	b.n	800976a <_printf_float+0xba>
 800990e:	0022      	movs	r2, r4
 8009910:	2301      	movs	r3, #1
 8009912:	321a      	adds	r2, #26
 8009914:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009916:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009918:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800991a:	47b0      	blx	r6
 800991c:	1c43      	adds	r3, r0, #1
 800991e:	d100      	bne.n	8009922 <_printf_float+0x272>
 8009920:	e721      	b.n	8009766 <_printf_float+0xb6>
 8009922:	3501      	adds	r5, #1
 8009924:	e7e4      	b.n	80098f0 <_printf_float+0x240>
 8009926:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009928:	2b00      	cmp	r3, #0
 800992a:	dc2d      	bgt.n	8009988 <_printf_float+0x2d8>
 800992c:	2301      	movs	r3, #1
 800992e:	4a26      	ldr	r2, [pc, #152]	; (80099c8 <_printf_float+0x318>)
 8009930:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009932:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009934:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8009936:	47b0      	blx	r6
 8009938:	1c43      	adds	r3, r0, #1
 800993a:	d100      	bne.n	800993e <_printf_float+0x28e>
 800993c:	e713      	b.n	8009766 <_printf_float+0xb6>
 800993e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009940:	2b00      	cmp	r3, #0
 8009942:	d105      	bne.n	8009950 <_printf_float+0x2a0>
 8009944:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009946:	2b00      	cmp	r3, #0
 8009948:	d102      	bne.n	8009950 <_printf_float+0x2a0>
 800994a:	6823      	ldr	r3, [r4, #0]
 800994c:	07db      	lsls	r3, r3, #31
 800994e:	d5d3      	bpl.n	80098f8 <_printf_float+0x248>
 8009950:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8009952:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009954:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009956:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009958:	9809      	ldr	r0, [sp, #36]	; 0x24
 800995a:	47b0      	blx	r6
 800995c:	2600      	movs	r6, #0
 800995e:	1c43      	adds	r3, r0, #1
 8009960:	d100      	bne.n	8009964 <_printf_float+0x2b4>
 8009962:	e700      	b.n	8009766 <_printf_float+0xb6>
 8009964:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009966:	425b      	negs	r3, r3
 8009968:	42b3      	cmp	r3, r6
 800996a:	dc01      	bgt.n	8009970 <_printf_float+0x2c0>
 800996c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800996e:	e792      	b.n	8009896 <_printf_float+0x1e6>
 8009970:	0022      	movs	r2, r4
 8009972:	2301      	movs	r3, #1
 8009974:	321a      	adds	r2, #26
 8009976:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009978:	9809      	ldr	r0, [sp, #36]	; 0x24
 800997a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800997c:	47b8      	blx	r7
 800997e:	1c43      	adds	r3, r0, #1
 8009980:	d100      	bne.n	8009984 <_printf_float+0x2d4>
 8009982:	e6f0      	b.n	8009766 <_printf_float+0xb6>
 8009984:	3601      	adds	r6, #1
 8009986:	e7ed      	b.n	8009964 <_printf_float+0x2b4>
 8009988:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800998a:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800998c:	429f      	cmp	r7, r3
 800998e:	dd00      	ble.n	8009992 <_printf_float+0x2e2>
 8009990:	001f      	movs	r7, r3
 8009992:	2f00      	cmp	r7, #0
 8009994:	dd08      	ble.n	80099a8 <_printf_float+0x2f8>
 8009996:	003b      	movs	r3, r7
 8009998:	002a      	movs	r2, r5
 800999a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800999c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800999e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80099a0:	47b0      	blx	r6
 80099a2:	1c43      	adds	r3, r0, #1
 80099a4:	d100      	bne.n	80099a8 <_printf_float+0x2f8>
 80099a6:	e6de      	b.n	8009766 <_printf_float+0xb6>
 80099a8:	2300      	movs	r3, #0
 80099aa:	930d      	str	r3, [sp, #52]	; 0x34
 80099ac:	43fb      	mvns	r3, r7
 80099ae:	17db      	asrs	r3, r3, #31
 80099b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80099b2:	e018      	b.n	80099e6 <_printf_float+0x336>
 80099b4:	7fefffff 	.word	0x7fefffff
 80099b8:	0800e368 	.word	0x0800e368
 80099bc:	0800e364 	.word	0x0800e364
 80099c0:	0800e370 	.word	0x0800e370
 80099c4:	0800e36c 	.word	0x0800e36c
 80099c8:	0800e374 	.word	0x0800e374
 80099cc:	0022      	movs	r2, r4
 80099ce:	2301      	movs	r3, #1
 80099d0:	321a      	adds	r2, #26
 80099d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80099d4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80099d6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80099d8:	47b0      	blx	r6
 80099da:	1c43      	adds	r3, r0, #1
 80099dc:	d100      	bne.n	80099e0 <_printf_float+0x330>
 80099de:	e6c2      	b.n	8009766 <_printf_float+0xb6>
 80099e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80099e2:	3301      	adds	r3, #1
 80099e4:	930d      	str	r3, [sp, #52]	; 0x34
 80099e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80099e8:	6da6      	ldr	r6, [r4, #88]	; 0x58
 80099ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80099ec:	403b      	ands	r3, r7
 80099ee:	1af3      	subs	r3, r6, r3
 80099f0:	4293      	cmp	r3, r2
 80099f2:	dceb      	bgt.n	80099cc <_printf_float+0x31c>
 80099f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80099f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80099f8:	19ad      	adds	r5, r5, r6
 80099fa:	4293      	cmp	r3, r2
 80099fc:	db10      	blt.n	8009a20 <_printf_float+0x370>
 80099fe:	6823      	ldr	r3, [r4, #0]
 8009a00:	07db      	lsls	r3, r3, #31
 8009a02:	d40d      	bmi.n	8009a20 <_printf_float+0x370>
 8009a04:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8009a06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009a08:	1bbe      	subs	r6, r7, r6
 8009a0a:	1aff      	subs	r7, r7, r3
 8009a0c:	42b7      	cmp	r7, r6
 8009a0e:	dd00      	ble.n	8009a12 <_printf_float+0x362>
 8009a10:	0037      	movs	r7, r6
 8009a12:	2f00      	cmp	r7, #0
 8009a14:	dc0d      	bgt.n	8009a32 <_printf_float+0x382>
 8009a16:	43fe      	mvns	r6, r7
 8009a18:	17f3      	asrs	r3, r6, #31
 8009a1a:	2500      	movs	r5, #0
 8009a1c:	930c      	str	r3, [sp, #48]	; 0x30
 8009a1e:	e01c      	b.n	8009a5a <_printf_float+0x3aa>
 8009a20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009a22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009a24:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009a26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a28:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8009a2a:	47b8      	blx	r7
 8009a2c:	1c43      	adds	r3, r0, #1
 8009a2e:	d1e9      	bne.n	8009a04 <_printf_float+0x354>
 8009a30:	e699      	b.n	8009766 <_printf_float+0xb6>
 8009a32:	003b      	movs	r3, r7
 8009a34:	002a      	movs	r2, r5
 8009a36:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009a38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a3a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8009a3c:	47a8      	blx	r5
 8009a3e:	1c43      	adds	r3, r0, #1
 8009a40:	d1e9      	bne.n	8009a16 <_printf_float+0x366>
 8009a42:	e690      	b.n	8009766 <_printf_float+0xb6>
 8009a44:	0022      	movs	r2, r4
 8009a46:	2301      	movs	r3, #1
 8009a48:	321a      	adds	r2, #26
 8009a4a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009a4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a4e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8009a50:	47b0      	blx	r6
 8009a52:	1c43      	adds	r3, r0, #1
 8009a54:	d100      	bne.n	8009a58 <_printf_float+0x3a8>
 8009a56:	e686      	b.n	8009766 <_printf_float+0xb6>
 8009a58:	3501      	adds	r5, #1
 8009a5a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8009a5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009a5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009a60:	1a9b      	subs	r3, r3, r2
 8009a62:	003a      	movs	r2, r7
 8009a64:	400a      	ands	r2, r1
 8009a66:	1a9b      	subs	r3, r3, r2
 8009a68:	42ab      	cmp	r3, r5
 8009a6a:	dceb      	bgt.n	8009a44 <_printf_float+0x394>
 8009a6c:	e744      	b.n	80098f8 <_printf_float+0x248>
 8009a6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009a70:	2b01      	cmp	r3, #1
 8009a72:	dc02      	bgt.n	8009a7a <_printf_float+0x3ca>
 8009a74:	2301      	movs	r3, #1
 8009a76:	421a      	tst	r2, r3
 8009a78:	d032      	beq.n	8009ae0 <_printf_float+0x430>
 8009a7a:	2301      	movs	r3, #1
 8009a7c:	002a      	movs	r2, r5
 8009a7e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009a80:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a82:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8009a84:	47b8      	blx	r7
 8009a86:	1c43      	adds	r3, r0, #1
 8009a88:	d100      	bne.n	8009a8c <_printf_float+0x3dc>
 8009a8a:	e66c      	b.n	8009766 <_printf_float+0xb6>
 8009a8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009a8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009a90:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009a92:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a94:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8009a96:	3501      	adds	r5, #1
 8009a98:	47b8      	blx	r7
 8009a9a:	1c43      	adds	r3, r0, #1
 8009a9c:	d100      	bne.n	8009aa0 <_printf_float+0x3f0>
 8009a9e:	e662      	b.n	8009766 <_printf_float+0xb6>
 8009aa0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8009aa2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8009aa4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009aa6:	2200      	movs	r2, #0
 8009aa8:	1e5f      	subs	r7, r3, #1
 8009aaa:	2300      	movs	r3, #0
 8009aac:	f7f6 fcc4 	bl	8000438 <__aeabi_dcmpeq>
 8009ab0:	003b      	movs	r3, r7
 8009ab2:	2800      	cmp	r0, #0
 8009ab4:	d014      	beq.n	8009ae0 <_printf_float+0x430>
 8009ab6:	2500      	movs	r5, #0
 8009ab8:	e00a      	b.n	8009ad0 <_printf_float+0x420>
 8009aba:	0022      	movs	r2, r4
 8009abc:	2301      	movs	r3, #1
 8009abe:	321a      	adds	r2, #26
 8009ac0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009ac2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009ac4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8009ac6:	47b8      	blx	r7
 8009ac8:	1c43      	adds	r3, r0, #1
 8009aca:	d100      	bne.n	8009ace <_printf_float+0x41e>
 8009acc:	e64b      	b.n	8009766 <_printf_float+0xb6>
 8009ace:	3501      	adds	r5, #1
 8009ad0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009ad2:	3b01      	subs	r3, #1
 8009ad4:	42ab      	cmp	r3, r5
 8009ad6:	dcf0      	bgt.n	8009aba <_printf_float+0x40a>
 8009ad8:	0022      	movs	r2, r4
 8009ada:	0033      	movs	r3, r6
 8009adc:	3250      	adds	r2, #80	; 0x50
 8009ade:	e6db      	b.n	8009898 <_printf_float+0x1e8>
 8009ae0:	002a      	movs	r2, r5
 8009ae2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009ae4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009ae6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8009ae8:	47a8      	blx	r5
 8009aea:	1c43      	adds	r3, r0, #1
 8009aec:	d1f4      	bne.n	8009ad8 <_printf_float+0x428>
 8009aee:	e63a      	b.n	8009766 <_printf_float+0xb6>
 8009af0:	0022      	movs	r2, r4
 8009af2:	2301      	movs	r3, #1
 8009af4:	3219      	adds	r2, #25
 8009af6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009af8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009afa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8009afc:	47b0      	blx	r6
 8009afe:	1c43      	adds	r3, r0, #1
 8009b00:	d100      	bne.n	8009b04 <_printf_float+0x454>
 8009b02:	e630      	b.n	8009766 <_printf_float+0xb6>
 8009b04:	3501      	adds	r5, #1
 8009b06:	68e3      	ldr	r3, [r4, #12]
 8009b08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8009b0a:	1a9b      	subs	r3, r3, r2
 8009b0c:	42ab      	cmp	r3, r5
 8009b0e:	dcef      	bgt.n	8009af0 <_printf_float+0x440>
 8009b10:	e6f6      	b.n	8009900 <_printf_float+0x250>
 8009b12:	2500      	movs	r5, #0
 8009b14:	e7f7      	b.n	8009b06 <_printf_float+0x456>
 8009b16:	2a00      	cmp	r2, #0
 8009b18:	d100      	bne.n	8009b1c <_printf_float+0x46c>
 8009b1a:	e689      	b.n	8009830 <_printf_float+0x180>
 8009b1c:	2100      	movs	r1, #0
 8009b1e:	9106      	str	r1, [sp, #24]
 8009b20:	a912      	add	r1, sp, #72	; 0x48
 8009b22:	9105      	str	r1, [sp, #20]
 8009b24:	a911      	add	r1, sp, #68	; 0x44
 8009b26:	9103      	str	r1, [sp, #12]
 8009b28:	2123      	movs	r1, #35	; 0x23
 8009b2a:	a808      	add	r0, sp, #32
 8009b2c:	1809      	adds	r1, r1, r0
 8009b2e:	6023      	str	r3, [r4, #0]
 8009b30:	9301      	str	r3, [sp, #4]
 8009b32:	9200      	str	r2, [sp, #0]
 8009b34:	002b      	movs	r3, r5
 8009b36:	9704      	str	r7, [sp, #16]
 8009b38:	9102      	str	r1, [sp, #8]
 8009b3a:	0032      	movs	r2, r6
 8009b3c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009b3e:	f7ff fd1b 	bl	8009578 <__cvt>
 8009b42:	0005      	movs	r5, r0
 8009b44:	e645      	b.n	80097d2 <_printf_float+0x122>
 8009b46:	46c0      	nop			; (mov r8, r8)

08009b48 <_printf_common>:
 8009b48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009b4a:	0015      	movs	r5, r2
 8009b4c:	9301      	str	r3, [sp, #4]
 8009b4e:	688a      	ldr	r2, [r1, #8]
 8009b50:	690b      	ldr	r3, [r1, #16]
 8009b52:	9000      	str	r0, [sp, #0]
 8009b54:	000c      	movs	r4, r1
 8009b56:	4293      	cmp	r3, r2
 8009b58:	da00      	bge.n	8009b5c <_printf_common+0x14>
 8009b5a:	0013      	movs	r3, r2
 8009b5c:	0022      	movs	r2, r4
 8009b5e:	602b      	str	r3, [r5, #0]
 8009b60:	3243      	adds	r2, #67	; 0x43
 8009b62:	7812      	ldrb	r2, [r2, #0]
 8009b64:	2a00      	cmp	r2, #0
 8009b66:	d001      	beq.n	8009b6c <_printf_common+0x24>
 8009b68:	3301      	adds	r3, #1
 8009b6a:	602b      	str	r3, [r5, #0]
 8009b6c:	6823      	ldr	r3, [r4, #0]
 8009b6e:	069b      	lsls	r3, r3, #26
 8009b70:	d502      	bpl.n	8009b78 <_printf_common+0x30>
 8009b72:	682b      	ldr	r3, [r5, #0]
 8009b74:	3302      	adds	r3, #2
 8009b76:	602b      	str	r3, [r5, #0]
 8009b78:	2706      	movs	r7, #6
 8009b7a:	6823      	ldr	r3, [r4, #0]
 8009b7c:	401f      	ands	r7, r3
 8009b7e:	d027      	beq.n	8009bd0 <_printf_common+0x88>
 8009b80:	0023      	movs	r3, r4
 8009b82:	3343      	adds	r3, #67	; 0x43
 8009b84:	781b      	ldrb	r3, [r3, #0]
 8009b86:	1e5a      	subs	r2, r3, #1
 8009b88:	4193      	sbcs	r3, r2
 8009b8a:	6822      	ldr	r2, [r4, #0]
 8009b8c:	0692      	lsls	r2, r2, #26
 8009b8e:	d430      	bmi.n	8009bf2 <_printf_common+0xaa>
 8009b90:	0022      	movs	r2, r4
 8009b92:	9901      	ldr	r1, [sp, #4]
 8009b94:	3243      	adds	r2, #67	; 0x43
 8009b96:	9800      	ldr	r0, [sp, #0]
 8009b98:	9e08      	ldr	r6, [sp, #32]
 8009b9a:	47b0      	blx	r6
 8009b9c:	1c43      	adds	r3, r0, #1
 8009b9e:	d025      	beq.n	8009bec <_printf_common+0xa4>
 8009ba0:	2306      	movs	r3, #6
 8009ba2:	6820      	ldr	r0, [r4, #0]
 8009ba4:	682a      	ldr	r2, [r5, #0]
 8009ba6:	68e1      	ldr	r1, [r4, #12]
 8009ba8:	4003      	ands	r3, r0
 8009baa:	2500      	movs	r5, #0
 8009bac:	2b04      	cmp	r3, #4
 8009bae:	d103      	bne.n	8009bb8 <_printf_common+0x70>
 8009bb0:	1a8d      	subs	r5, r1, r2
 8009bb2:	43eb      	mvns	r3, r5
 8009bb4:	17db      	asrs	r3, r3, #31
 8009bb6:	401d      	ands	r5, r3
 8009bb8:	68a3      	ldr	r3, [r4, #8]
 8009bba:	6922      	ldr	r2, [r4, #16]
 8009bbc:	4293      	cmp	r3, r2
 8009bbe:	dd01      	ble.n	8009bc4 <_printf_common+0x7c>
 8009bc0:	1a9b      	subs	r3, r3, r2
 8009bc2:	18ed      	adds	r5, r5, r3
 8009bc4:	2700      	movs	r7, #0
 8009bc6:	42bd      	cmp	r5, r7
 8009bc8:	d120      	bne.n	8009c0c <_printf_common+0xc4>
 8009bca:	2000      	movs	r0, #0
 8009bcc:	e010      	b.n	8009bf0 <_printf_common+0xa8>
 8009bce:	3701      	adds	r7, #1
 8009bd0:	68e3      	ldr	r3, [r4, #12]
 8009bd2:	682a      	ldr	r2, [r5, #0]
 8009bd4:	1a9b      	subs	r3, r3, r2
 8009bd6:	42bb      	cmp	r3, r7
 8009bd8:	ddd2      	ble.n	8009b80 <_printf_common+0x38>
 8009bda:	0022      	movs	r2, r4
 8009bdc:	2301      	movs	r3, #1
 8009bde:	3219      	adds	r2, #25
 8009be0:	9901      	ldr	r1, [sp, #4]
 8009be2:	9800      	ldr	r0, [sp, #0]
 8009be4:	9e08      	ldr	r6, [sp, #32]
 8009be6:	47b0      	blx	r6
 8009be8:	1c43      	adds	r3, r0, #1
 8009bea:	d1f0      	bne.n	8009bce <_printf_common+0x86>
 8009bec:	2001      	movs	r0, #1
 8009bee:	4240      	negs	r0, r0
 8009bf0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009bf2:	2030      	movs	r0, #48	; 0x30
 8009bf4:	18e1      	adds	r1, r4, r3
 8009bf6:	3143      	adds	r1, #67	; 0x43
 8009bf8:	7008      	strb	r0, [r1, #0]
 8009bfa:	0021      	movs	r1, r4
 8009bfc:	1c5a      	adds	r2, r3, #1
 8009bfe:	3145      	adds	r1, #69	; 0x45
 8009c00:	7809      	ldrb	r1, [r1, #0]
 8009c02:	18a2      	adds	r2, r4, r2
 8009c04:	3243      	adds	r2, #67	; 0x43
 8009c06:	3302      	adds	r3, #2
 8009c08:	7011      	strb	r1, [r2, #0]
 8009c0a:	e7c1      	b.n	8009b90 <_printf_common+0x48>
 8009c0c:	0022      	movs	r2, r4
 8009c0e:	2301      	movs	r3, #1
 8009c10:	321a      	adds	r2, #26
 8009c12:	9901      	ldr	r1, [sp, #4]
 8009c14:	9800      	ldr	r0, [sp, #0]
 8009c16:	9e08      	ldr	r6, [sp, #32]
 8009c18:	47b0      	blx	r6
 8009c1a:	1c43      	adds	r3, r0, #1
 8009c1c:	d0e6      	beq.n	8009bec <_printf_common+0xa4>
 8009c1e:	3701      	adds	r7, #1
 8009c20:	e7d1      	b.n	8009bc6 <_printf_common+0x7e>
	...

08009c24 <_printf_i>:
 8009c24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c26:	b089      	sub	sp, #36	; 0x24
 8009c28:	9204      	str	r2, [sp, #16]
 8009c2a:	000a      	movs	r2, r1
 8009c2c:	3243      	adds	r2, #67	; 0x43
 8009c2e:	9305      	str	r3, [sp, #20]
 8009c30:	9003      	str	r0, [sp, #12]
 8009c32:	9202      	str	r2, [sp, #8]
 8009c34:	7e0a      	ldrb	r2, [r1, #24]
 8009c36:	000c      	movs	r4, r1
 8009c38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009c3a:	2a6e      	cmp	r2, #110	; 0x6e
 8009c3c:	d100      	bne.n	8009c40 <_printf_i+0x1c>
 8009c3e:	e086      	b.n	8009d4e <_printf_i+0x12a>
 8009c40:	d81f      	bhi.n	8009c82 <_printf_i+0x5e>
 8009c42:	2a63      	cmp	r2, #99	; 0x63
 8009c44:	d033      	beq.n	8009cae <_printf_i+0x8a>
 8009c46:	d808      	bhi.n	8009c5a <_printf_i+0x36>
 8009c48:	2a00      	cmp	r2, #0
 8009c4a:	d100      	bne.n	8009c4e <_printf_i+0x2a>
 8009c4c:	e08c      	b.n	8009d68 <_printf_i+0x144>
 8009c4e:	2a58      	cmp	r2, #88	; 0x58
 8009c50:	d04d      	beq.n	8009cee <_printf_i+0xca>
 8009c52:	0025      	movs	r5, r4
 8009c54:	3542      	adds	r5, #66	; 0x42
 8009c56:	702a      	strb	r2, [r5, #0]
 8009c58:	e030      	b.n	8009cbc <_printf_i+0x98>
 8009c5a:	2a64      	cmp	r2, #100	; 0x64
 8009c5c:	d001      	beq.n	8009c62 <_printf_i+0x3e>
 8009c5e:	2a69      	cmp	r2, #105	; 0x69
 8009c60:	d1f7      	bne.n	8009c52 <_printf_i+0x2e>
 8009c62:	6819      	ldr	r1, [r3, #0]
 8009c64:	6825      	ldr	r5, [r4, #0]
 8009c66:	1d0a      	adds	r2, r1, #4
 8009c68:	0628      	lsls	r0, r5, #24
 8009c6a:	d529      	bpl.n	8009cc0 <_printf_i+0x9c>
 8009c6c:	6808      	ldr	r0, [r1, #0]
 8009c6e:	601a      	str	r2, [r3, #0]
 8009c70:	2800      	cmp	r0, #0
 8009c72:	da03      	bge.n	8009c7c <_printf_i+0x58>
 8009c74:	232d      	movs	r3, #45	; 0x2d
 8009c76:	9a02      	ldr	r2, [sp, #8]
 8009c78:	4240      	negs	r0, r0
 8009c7a:	7013      	strb	r3, [r2, #0]
 8009c7c:	4e6b      	ldr	r6, [pc, #428]	; (8009e2c <_printf_i+0x208>)
 8009c7e:	270a      	movs	r7, #10
 8009c80:	e04f      	b.n	8009d22 <_printf_i+0xfe>
 8009c82:	2a73      	cmp	r2, #115	; 0x73
 8009c84:	d074      	beq.n	8009d70 <_printf_i+0x14c>
 8009c86:	d808      	bhi.n	8009c9a <_printf_i+0x76>
 8009c88:	2a6f      	cmp	r2, #111	; 0x6f
 8009c8a:	d01f      	beq.n	8009ccc <_printf_i+0xa8>
 8009c8c:	2a70      	cmp	r2, #112	; 0x70
 8009c8e:	d1e0      	bne.n	8009c52 <_printf_i+0x2e>
 8009c90:	2220      	movs	r2, #32
 8009c92:	6809      	ldr	r1, [r1, #0]
 8009c94:	430a      	orrs	r2, r1
 8009c96:	6022      	str	r2, [r4, #0]
 8009c98:	e003      	b.n	8009ca2 <_printf_i+0x7e>
 8009c9a:	2a75      	cmp	r2, #117	; 0x75
 8009c9c:	d016      	beq.n	8009ccc <_printf_i+0xa8>
 8009c9e:	2a78      	cmp	r2, #120	; 0x78
 8009ca0:	d1d7      	bne.n	8009c52 <_printf_i+0x2e>
 8009ca2:	0022      	movs	r2, r4
 8009ca4:	2178      	movs	r1, #120	; 0x78
 8009ca6:	3245      	adds	r2, #69	; 0x45
 8009ca8:	7011      	strb	r1, [r2, #0]
 8009caa:	4e61      	ldr	r6, [pc, #388]	; (8009e30 <_printf_i+0x20c>)
 8009cac:	e022      	b.n	8009cf4 <_printf_i+0xd0>
 8009cae:	0025      	movs	r5, r4
 8009cb0:	681a      	ldr	r2, [r3, #0]
 8009cb2:	3542      	adds	r5, #66	; 0x42
 8009cb4:	1d11      	adds	r1, r2, #4
 8009cb6:	6019      	str	r1, [r3, #0]
 8009cb8:	6813      	ldr	r3, [r2, #0]
 8009cba:	702b      	strb	r3, [r5, #0]
 8009cbc:	2301      	movs	r3, #1
 8009cbe:	e065      	b.n	8009d8c <_printf_i+0x168>
 8009cc0:	6808      	ldr	r0, [r1, #0]
 8009cc2:	601a      	str	r2, [r3, #0]
 8009cc4:	0669      	lsls	r1, r5, #25
 8009cc6:	d5d3      	bpl.n	8009c70 <_printf_i+0x4c>
 8009cc8:	b200      	sxth	r0, r0
 8009cca:	e7d1      	b.n	8009c70 <_printf_i+0x4c>
 8009ccc:	6819      	ldr	r1, [r3, #0]
 8009cce:	6825      	ldr	r5, [r4, #0]
 8009cd0:	1d08      	adds	r0, r1, #4
 8009cd2:	6018      	str	r0, [r3, #0]
 8009cd4:	6808      	ldr	r0, [r1, #0]
 8009cd6:	062e      	lsls	r6, r5, #24
 8009cd8:	d505      	bpl.n	8009ce6 <_printf_i+0xc2>
 8009cda:	4e54      	ldr	r6, [pc, #336]	; (8009e2c <_printf_i+0x208>)
 8009cdc:	2708      	movs	r7, #8
 8009cde:	2a6f      	cmp	r2, #111	; 0x6f
 8009ce0:	d01b      	beq.n	8009d1a <_printf_i+0xf6>
 8009ce2:	270a      	movs	r7, #10
 8009ce4:	e019      	b.n	8009d1a <_printf_i+0xf6>
 8009ce6:	066d      	lsls	r5, r5, #25
 8009ce8:	d5f7      	bpl.n	8009cda <_printf_i+0xb6>
 8009cea:	b280      	uxth	r0, r0
 8009cec:	e7f5      	b.n	8009cda <_printf_i+0xb6>
 8009cee:	3145      	adds	r1, #69	; 0x45
 8009cf0:	4e4e      	ldr	r6, [pc, #312]	; (8009e2c <_printf_i+0x208>)
 8009cf2:	700a      	strb	r2, [r1, #0]
 8009cf4:	6818      	ldr	r0, [r3, #0]
 8009cf6:	6822      	ldr	r2, [r4, #0]
 8009cf8:	1d01      	adds	r1, r0, #4
 8009cfa:	6800      	ldr	r0, [r0, #0]
 8009cfc:	6019      	str	r1, [r3, #0]
 8009cfe:	0615      	lsls	r5, r2, #24
 8009d00:	d521      	bpl.n	8009d46 <_printf_i+0x122>
 8009d02:	07d3      	lsls	r3, r2, #31
 8009d04:	d502      	bpl.n	8009d0c <_printf_i+0xe8>
 8009d06:	2320      	movs	r3, #32
 8009d08:	431a      	orrs	r2, r3
 8009d0a:	6022      	str	r2, [r4, #0]
 8009d0c:	2710      	movs	r7, #16
 8009d0e:	2800      	cmp	r0, #0
 8009d10:	d103      	bne.n	8009d1a <_printf_i+0xf6>
 8009d12:	2320      	movs	r3, #32
 8009d14:	6822      	ldr	r2, [r4, #0]
 8009d16:	439a      	bics	r2, r3
 8009d18:	6022      	str	r2, [r4, #0]
 8009d1a:	0023      	movs	r3, r4
 8009d1c:	2200      	movs	r2, #0
 8009d1e:	3343      	adds	r3, #67	; 0x43
 8009d20:	701a      	strb	r2, [r3, #0]
 8009d22:	6863      	ldr	r3, [r4, #4]
 8009d24:	60a3      	str	r3, [r4, #8]
 8009d26:	2b00      	cmp	r3, #0
 8009d28:	db58      	blt.n	8009ddc <_printf_i+0x1b8>
 8009d2a:	2204      	movs	r2, #4
 8009d2c:	6821      	ldr	r1, [r4, #0]
 8009d2e:	4391      	bics	r1, r2
 8009d30:	6021      	str	r1, [r4, #0]
 8009d32:	2800      	cmp	r0, #0
 8009d34:	d154      	bne.n	8009de0 <_printf_i+0x1bc>
 8009d36:	9d02      	ldr	r5, [sp, #8]
 8009d38:	2b00      	cmp	r3, #0
 8009d3a:	d05a      	beq.n	8009df2 <_printf_i+0x1ce>
 8009d3c:	0025      	movs	r5, r4
 8009d3e:	7833      	ldrb	r3, [r6, #0]
 8009d40:	3542      	adds	r5, #66	; 0x42
 8009d42:	702b      	strb	r3, [r5, #0]
 8009d44:	e055      	b.n	8009df2 <_printf_i+0x1ce>
 8009d46:	0655      	lsls	r5, r2, #25
 8009d48:	d5db      	bpl.n	8009d02 <_printf_i+0xde>
 8009d4a:	b280      	uxth	r0, r0
 8009d4c:	e7d9      	b.n	8009d02 <_printf_i+0xde>
 8009d4e:	681a      	ldr	r2, [r3, #0]
 8009d50:	680d      	ldr	r5, [r1, #0]
 8009d52:	1d10      	adds	r0, r2, #4
 8009d54:	6949      	ldr	r1, [r1, #20]
 8009d56:	6018      	str	r0, [r3, #0]
 8009d58:	6813      	ldr	r3, [r2, #0]
 8009d5a:	062e      	lsls	r6, r5, #24
 8009d5c:	d501      	bpl.n	8009d62 <_printf_i+0x13e>
 8009d5e:	6019      	str	r1, [r3, #0]
 8009d60:	e002      	b.n	8009d68 <_printf_i+0x144>
 8009d62:	066d      	lsls	r5, r5, #25
 8009d64:	d5fb      	bpl.n	8009d5e <_printf_i+0x13a>
 8009d66:	8019      	strh	r1, [r3, #0]
 8009d68:	2300      	movs	r3, #0
 8009d6a:	9d02      	ldr	r5, [sp, #8]
 8009d6c:	6123      	str	r3, [r4, #16]
 8009d6e:	e04f      	b.n	8009e10 <_printf_i+0x1ec>
 8009d70:	681a      	ldr	r2, [r3, #0]
 8009d72:	1d11      	adds	r1, r2, #4
 8009d74:	6019      	str	r1, [r3, #0]
 8009d76:	6815      	ldr	r5, [r2, #0]
 8009d78:	2100      	movs	r1, #0
 8009d7a:	6862      	ldr	r2, [r4, #4]
 8009d7c:	0028      	movs	r0, r5
 8009d7e:	f002 fe29 	bl	800c9d4 <memchr>
 8009d82:	2800      	cmp	r0, #0
 8009d84:	d001      	beq.n	8009d8a <_printf_i+0x166>
 8009d86:	1b40      	subs	r0, r0, r5
 8009d88:	6060      	str	r0, [r4, #4]
 8009d8a:	6863      	ldr	r3, [r4, #4]
 8009d8c:	6123      	str	r3, [r4, #16]
 8009d8e:	2300      	movs	r3, #0
 8009d90:	9a02      	ldr	r2, [sp, #8]
 8009d92:	7013      	strb	r3, [r2, #0]
 8009d94:	e03c      	b.n	8009e10 <_printf_i+0x1ec>
 8009d96:	6923      	ldr	r3, [r4, #16]
 8009d98:	002a      	movs	r2, r5
 8009d9a:	9904      	ldr	r1, [sp, #16]
 8009d9c:	9803      	ldr	r0, [sp, #12]
 8009d9e:	9d05      	ldr	r5, [sp, #20]
 8009da0:	47a8      	blx	r5
 8009da2:	1c43      	adds	r3, r0, #1
 8009da4:	d03e      	beq.n	8009e24 <_printf_i+0x200>
 8009da6:	6823      	ldr	r3, [r4, #0]
 8009da8:	079b      	lsls	r3, r3, #30
 8009daa:	d415      	bmi.n	8009dd8 <_printf_i+0x1b4>
 8009dac:	9b07      	ldr	r3, [sp, #28]
 8009dae:	68e0      	ldr	r0, [r4, #12]
 8009db0:	4298      	cmp	r0, r3
 8009db2:	da39      	bge.n	8009e28 <_printf_i+0x204>
 8009db4:	0018      	movs	r0, r3
 8009db6:	e037      	b.n	8009e28 <_printf_i+0x204>
 8009db8:	0022      	movs	r2, r4
 8009dba:	2301      	movs	r3, #1
 8009dbc:	3219      	adds	r2, #25
 8009dbe:	9904      	ldr	r1, [sp, #16]
 8009dc0:	9803      	ldr	r0, [sp, #12]
 8009dc2:	9e05      	ldr	r6, [sp, #20]
 8009dc4:	47b0      	blx	r6
 8009dc6:	1c43      	adds	r3, r0, #1
 8009dc8:	d02c      	beq.n	8009e24 <_printf_i+0x200>
 8009dca:	3501      	adds	r5, #1
 8009dcc:	68e3      	ldr	r3, [r4, #12]
 8009dce:	9a07      	ldr	r2, [sp, #28]
 8009dd0:	1a9b      	subs	r3, r3, r2
 8009dd2:	42ab      	cmp	r3, r5
 8009dd4:	dcf0      	bgt.n	8009db8 <_printf_i+0x194>
 8009dd6:	e7e9      	b.n	8009dac <_printf_i+0x188>
 8009dd8:	2500      	movs	r5, #0
 8009dda:	e7f7      	b.n	8009dcc <_printf_i+0x1a8>
 8009ddc:	2800      	cmp	r0, #0
 8009dde:	d0ad      	beq.n	8009d3c <_printf_i+0x118>
 8009de0:	9d02      	ldr	r5, [sp, #8]
 8009de2:	0039      	movs	r1, r7
 8009de4:	f7f6 fa28 	bl	8000238 <__aeabi_uidivmod>
 8009de8:	5c73      	ldrb	r3, [r6, r1]
 8009dea:	3d01      	subs	r5, #1
 8009dec:	702b      	strb	r3, [r5, #0]
 8009dee:	2800      	cmp	r0, #0
 8009df0:	d1f7      	bne.n	8009de2 <_printf_i+0x1be>
 8009df2:	2f08      	cmp	r7, #8
 8009df4:	d109      	bne.n	8009e0a <_printf_i+0x1e6>
 8009df6:	6823      	ldr	r3, [r4, #0]
 8009df8:	07db      	lsls	r3, r3, #31
 8009dfa:	d506      	bpl.n	8009e0a <_printf_i+0x1e6>
 8009dfc:	6863      	ldr	r3, [r4, #4]
 8009dfe:	6922      	ldr	r2, [r4, #16]
 8009e00:	4293      	cmp	r3, r2
 8009e02:	dc02      	bgt.n	8009e0a <_printf_i+0x1e6>
 8009e04:	2330      	movs	r3, #48	; 0x30
 8009e06:	3d01      	subs	r5, #1
 8009e08:	702b      	strb	r3, [r5, #0]
 8009e0a:	9b02      	ldr	r3, [sp, #8]
 8009e0c:	1b5b      	subs	r3, r3, r5
 8009e0e:	6123      	str	r3, [r4, #16]
 8009e10:	9b05      	ldr	r3, [sp, #20]
 8009e12:	aa07      	add	r2, sp, #28
 8009e14:	9300      	str	r3, [sp, #0]
 8009e16:	0021      	movs	r1, r4
 8009e18:	9b04      	ldr	r3, [sp, #16]
 8009e1a:	9803      	ldr	r0, [sp, #12]
 8009e1c:	f7ff fe94 	bl	8009b48 <_printf_common>
 8009e20:	1c43      	adds	r3, r0, #1
 8009e22:	d1b8      	bne.n	8009d96 <_printf_i+0x172>
 8009e24:	2001      	movs	r0, #1
 8009e26:	4240      	negs	r0, r0
 8009e28:	b009      	add	sp, #36	; 0x24
 8009e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e2c:	0800e376 	.word	0x0800e376
 8009e30:	0800e387 	.word	0x0800e387

08009e34 <_scanf_float>:
 8009e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e36:	b08b      	sub	sp, #44	; 0x2c
 8009e38:	9002      	str	r0, [sp, #8]
 8009e3a:	9200      	str	r2, [sp, #0]
 8009e3c:	2000      	movs	r0, #0
 8009e3e:	22ae      	movs	r2, #174	; 0xae
 8009e40:	9305      	str	r3, [sp, #20]
 8009e42:	688b      	ldr	r3, [r1, #8]
 8009e44:	000e      	movs	r6, r1
 8009e46:	1e59      	subs	r1, r3, #1
 8009e48:	0052      	lsls	r2, r2, #1
 8009e4a:	9004      	str	r0, [sp, #16]
 8009e4c:	4291      	cmp	r1, r2
 8009e4e:	d905      	bls.n	8009e5c <_scanf_float+0x28>
 8009e50:	3b5e      	subs	r3, #94	; 0x5e
 8009e52:	3bff      	subs	r3, #255	; 0xff
 8009e54:	9304      	str	r3, [sp, #16]
 8009e56:	235e      	movs	r3, #94	; 0x5e
 8009e58:	33ff      	adds	r3, #255	; 0xff
 8009e5a:	60b3      	str	r3, [r6, #8]
 8009e5c:	23f0      	movs	r3, #240	; 0xf0
 8009e5e:	6832      	ldr	r2, [r6, #0]
 8009e60:	00db      	lsls	r3, r3, #3
 8009e62:	4313      	orrs	r3, r2
 8009e64:	6033      	str	r3, [r6, #0]
 8009e66:	0033      	movs	r3, r6
 8009e68:	2700      	movs	r7, #0
 8009e6a:	331c      	adds	r3, #28
 8009e6c:	001d      	movs	r5, r3
 8009e6e:	003c      	movs	r4, r7
 8009e70:	9303      	str	r3, [sp, #12]
 8009e72:	9708      	str	r7, [sp, #32]
 8009e74:	9707      	str	r7, [sp, #28]
 8009e76:	9701      	str	r7, [sp, #4]
 8009e78:	9706      	str	r7, [sp, #24]
 8009e7a:	68b2      	ldr	r2, [r6, #8]
 8009e7c:	2a00      	cmp	r2, #0
 8009e7e:	d013      	beq.n	8009ea8 <_scanf_float+0x74>
 8009e80:	9b00      	ldr	r3, [sp, #0]
 8009e82:	681b      	ldr	r3, [r3, #0]
 8009e84:	9309      	str	r3, [sp, #36]	; 0x24
 8009e86:	781b      	ldrb	r3, [r3, #0]
 8009e88:	2b49      	cmp	r3, #73	; 0x49
 8009e8a:	d100      	bne.n	8009e8e <_scanf_float+0x5a>
 8009e8c:	e07c      	b.n	8009f88 <_scanf_float+0x154>
 8009e8e:	d854      	bhi.n	8009f3a <_scanf_float+0x106>
 8009e90:	2b39      	cmp	r3, #57	; 0x39
 8009e92:	d847      	bhi.n	8009f24 <_scanf_float+0xf0>
 8009e94:	2b31      	cmp	r3, #49	; 0x31
 8009e96:	d300      	bcc.n	8009e9a <_scanf_float+0x66>
 8009e98:	e094      	b.n	8009fc4 <_scanf_float+0x190>
 8009e9a:	2b2d      	cmp	r3, #45	; 0x2d
 8009e9c:	d100      	bne.n	8009ea0 <_scanf_float+0x6c>
 8009e9e:	e09c      	b.n	8009fda <_scanf_float+0x1a6>
 8009ea0:	d817      	bhi.n	8009ed2 <_scanf_float+0x9e>
 8009ea2:	2b2b      	cmp	r3, #43	; 0x2b
 8009ea4:	d100      	bne.n	8009ea8 <_scanf_float+0x74>
 8009ea6:	e098      	b.n	8009fda <_scanf_float+0x1a6>
 8009ea8:	9b01      	ldr	r3, [sp, #4]
 8009eaa:	2b00      	cmp	r3, #0
 8009eac:	d003      	beq.n	8009eb6 <_scanf_float+0x82>
 8009eae:	6832      	ldr	r2, [r6, #0]
 8009eb0:	4b9b      	ldr	r3, [pc, #620]	; (800a120 <_scanf_float+0x2ec>)
 8009eb2:	4013      	ands	r3, r2
 8009eb4:	6033      	str	r3, [r6, #0]
 8009eb6:	3c01      	subs	r4, #1
 8009eb8:	2c01      	cmp	r4, #1
 8009eba:	d900      	bls.n	8009ebe <_scanf_float+0x8a>
 8009ebc:	e0ee      	b.n	800a09c <_scanf_float+0x268>
 8009ebe:	24be      	movs	r4, #190	; 0xbe
 8009ec0:	0064      	lsls	r4, r4, #1
 8009ec2:	9b03      	ldr	r3, [sp, #12]
 8009ec4:	429d      	cmp	r5, r3
 8009ec6:	d900      	bls.n	8009eca <_scanf_float+0x96>
 8009ec8:	e0de      	b.n	800a088 <_scanf_float+0x254>
 8009eca:	2701      	movs	r7, #1
 8009ecc:	0038      	movs	r0, r7
 8009ece:	b00b      	add	sp, #44	; 0x2c
 8009ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ed2:	2b2e      	cmp	r3, #46	; 0x2e
 8009ed4:	d100      	bne.n	8009ed8 <_scanf_float+0xa4>
 8009ed6:	e0a2      	b.n	800a01e <_scanf_float+0x1ea>
 8009ed8:	2b30      	cmp	r3, #48	; 0x30
 8009eda:	d1e5      	bne.n	8009ea8 <_scanf_float+0x74>
 8009edc:	6831      	ldr	r1, [r6, #0]
 8009ede:	05c8      	lsls	r0, r1, #23
 8009ee0:	d570      	bpl.n	8009fc4 <_scanf_float+0x190>
 8009ee2:	2380      	movs	r3, #128	; 0x80
 8009ee4:	4399      	bics	r1, r3
 8009ee6:	9b01      	ldr	r3, [sp, #4]
 8009ee8:	6031      	str	r1, [r6, #0]
 8009eea:	3301      	adds	r3, #1
 8009eec:	9301      	str	r3, [sp, #4]
 8009eee:	9b04      	ldr	r3, [sp, #16]
 8009ef0:	2b00      	cmp	r3, #0
 8009ef2:	d003      	beq.n	8009efc <_scanf_float+0xc8>
 8009ef4:	3b01      	subs	r3, #1
 8009ef6:	3201      	adds	r2, #1
 8009ef8:	9304      	str	r3, [sp, #16]
 8009efa:	60b2      	str	r2, [r6, #8]
 8009efc:	68b3      	ldr	r3, [r6, #8]
 8009efe:	9a00      	ldr	r2, [sp, #0]
 8009f00:	3b01      	subs	r3, #1
 8009f02:	60b3      	str	r3, [r6, #8]
 8009f04:	6933      	ldr	r3, [r6, #16]
 8009f06:	3301      	adds	r3, #1
 8009f08:	6133      	str	r3, [r6, #16]
 8009f0a:	9b00      	ldr	r3, [sp, #0]
 8009f0c:	685b      	ldr	r3, [r3, #4]
 8009f0e:	9309      	str	r3, [sp, #36]	; 0x24
 8009f10:	3b01      	subs	r3, #1
 8009f12:	6053      	str	r3, [r2, #4]
 8009f14:	2b00      	cmp	r3, #0
 8009f16:	dc00      	bgt.n	8009f1a <_scanf_float+0xe6>
 8009f18:	e0ac      	b.n	800a074 <_scanf_float+0x240>
 8009f1a:	6813      	ldr	r3, [r2, #0]
 8009f1c:	9309      	str	r3, [sp, #36]	; 0x24
 8009f1e:	3301      	adds	r3, #1
 8009f20:	6013      	str	r3, [r2, #0]
 8009f22:	e7aa      	b.n	8009e7a <_scanf_float+0x46>
 8009f24:	2b45      	cmp	r3, #69	; 0x45
 8009f26:	d100      	bne.n	8009f2a <_scanf_float+0xf6>
 8009f28:	e083      	b.n	800a032 <_scanf_float+0x1fe>
 8009f2a:	2b46      	cmp	r3, #70	; 0x46
 8009f2c:	d06d      	beq.n	800a00a <_scanf_float+0x1d6>
 8009f2e:	2b41      	cmp	r3, #65	; 0x41
 8009f30:	d1ba      	bne.n	8009ea8 <_scanf_float+0x74>
 8009f32:	2c01      	cmp	r4, #1
 8009f34:	d1b8      	bne.n	8009ea8 <_scanf_float+0x74>
 8009f36:	2402      	movs	r4, #2
 8009f38:	e04c      	b.n	8009fd4 <_scanf_float+0x1a0>
 8009f3a:	2b65      	cmp	r3, #101	; 0x65
 8009f3c:	d079      	beq.n	800a032 <_scanf_float+0x1fe>
 8009f3e:	d81b      	bhi.n	8009f78 <_scanf_float+0x144>
 8009f40:	2b54      	cmp	r3, #84	; 0x54
 8009f42:	d067      	beq.n	800a014 <_scanf_float+0x1e0>
 8009f44:	d813      	bhi.n	8009f6e <_scanf_float+0x13a>
 8009f46:	2b4e      	cmp	r3, #78	; 0x4e
 8009f48:	d1ae      	bne.n	8009ea8 <_scanf_float+0x74>
 8009f4a:	2c00      	cmp	r4, #0
 8009f4c:	d14c      	bne.n	8009fe8 <_scanf_float+0x1b4>
 8009f4e:	9a01      	ldr	r2, [sp, #4]
 8009f50:	2a00      	cmp	r2, #0
 8009f52:	d14b      	bne.n	8009fec <_scanf_float+0x1b8>
 8009f54:	21e0      	movs	r1, #224	; 0xe0
 8009f56:	20e0      	movs	r0, #224	; 0xe0
 8009f58:	6832      	ldr	r2, [r6, #0]
 8009f5a:	00c9      	lsls	r1, r1, #3
 8009f5c:	4011      	ands	r1, r2
 8009f5e:	00c0      	lsls	r0, r0, #3
 8009f60:	4281      	cmp	r1, r0
 8009f62:	d143      	bne.n	8009fec <_scanf_float+0x1b8>
 8009f64:	496f      	ldr	r1, [pc, #444]	; (800a124 <_scanf_float+0x2f0>)
 8009f66:	3401      	adds	r4, #1
 8009f68:	400a      	ands	r2, r1
 8009f6a:	6032      	str	r2, [r6, #0]
 8009f6c:	e032      	b.n	8009fd4 <_scanf_float+0x1a0>
 8009f6e:	2b59      	cmp	r3, #89	; 0x59
 8009f70:	d023      	beq.n	8009fba <_scanf_float+0x186>
 8009f72:	2b61      	cmp	r3, #97	; 0x61
 8009f74:	d0dd      	beq.n	8009f32 <_scanf_float+0xfe>
 8009f76:	e797      	b.n	8009ea8 <_scanf_float+0x74>
 8009f78:	2b6e      	cmp	r3, #110	; 0x6e
 8009f7a:	d0e6      	beq.n	8009f4a <_scanf_float+0x116>
 8009f7c:	d818      	bhi.n	8009fb0 <_scanf_float+0x17c>
 8009f7e:	2b66      	cmp	r3, #102	; 0x66
 8009f80:	d043      	beq.n	800a00a <_scanf_float+0x1d6>
 8009f82:	2b69      	cmp	r3, #105	; 0x69
 8009f84:	d000      	beq.n	8009f88 <_scanf_float+0x154>
 8009f86:	e78f      	b.n	8009ea8 <_scanf_float+0x74>
 8009f88:	2f00      	cmp	r7, #0
 8009f8a:	d137      	bne.n	8009ffc <_scanf_float+0x1c8>
 8009f8c:	9a01      	ldr	r2, [sp, #4]
 8009f8e:	2a00      	cmp	r2, #0
 8009f90:	d000      	beq.n	8009f94 <_scanf_float+0x160>
 8009f92:	e78c      	b.n	8009eae <_scanf_float+0x7a>
 8009f94:	21e0      	movs	r1, #224	; 0xe0
 8009f96:	20e0      	movs	r0, #224	; 0xe0
 8009f98:	6832      	ldr	r2, [r6, #0]
 8009f9a:	00c9      	lsls	r1, r1, #3
 8009f9c:	4011      	ands	r1, r2
 8009f9e:	00c0      	lsls	r0, r0, #3
 8009fa0:	4281      	cmp	r1, r0
 8009fa2:	d000      	beq.n	8009fa6 <_scanf_float+0x172>
 8009fa4:	e787      	b.n	8009eb6 <_scanf_float+0x82>
 8009fa6:	495f      	ldr	r1, [pc, #380]	; (800a124 <_scanf_float+0x2f0>)
 8009fa8:	3701      	adds	r7, #1
 8009faa:	400a      	ands	r2, r1
 8009fac:	6032      	str	r2, [r6, #0]
 8009fae:	e011      	b.n	8009fd4 <_scanf_float+0x1a0>
 8009fb0:	2b74      	cmp	r3, #116	; 0x74
 8009fb2:	d02f      	beq.n	800a014 <_scanf_float+0x1e0>
 8009fb4:	2b79      	cmp	r3, #121	; 0x79
 8009fb6:	d000      	beq.n	8009fba <_scanf_float+0x186>
 8009fb8:	e776      	b.n	8009ea8 <_scanf_float+0x74>
 8009fba:	2f07      	cmp	r7, #7
 8009fbc:	d000      	beq.n	8009fc0 <_scanf_float+0x18c>
 8009fbe:	e773      	b.n	8009ea8 <_scanf_float+0x74>
 8009fc0:	2708      	movs	r7, #8
 8009fc2:	e007      	b.n	8009fd4 <_scanf_float+0x1a0>
 8009fc4:	19e2      	adds	r2, r4, r7
 8009fc6:	2a00      	cmp	r2, #0
 8009fc8:	d000      	beq.n	8009fcc <_scanf_float+0x198>
 8009fca:	e76d      	b.n	8009ea8 <_scanf_float+0x74>
 8009fcc:	4a56      	ldr	r2, [pc, #344]	; (800a128 <_scanf_float+0x2f4>)
 8009fce:	6831      	ldr	r1, [r6, #0]
 8009fd0:	400a      	ands	r2, r1
 8009fd2:	6032      	str	r2, [r6, #0]
 8009fd4:	702b      	strb	r3, [r5, #0]
 8009fd6:	3501      	adds	r5, #1
 8009fd8:	e790      	b.n	8009efc <_scanf_float+0xc8>
 8009fda:	2180      	movs	r1, #128	; 0x80
 8009fdc:	6832      	ldr	r2, [r6, #0]
 8009fde:	420a      	tst	r2, r1
 8009fe0:	d100      	bne.n	8009fe4 <_scanf_float+0x1b0>
 8009fe2:	e761      	b.n	8009ea8 <_scanf_float+0x74>
 8009fe4:	438a      	bics	r2, r1
 8009fe6:	e7f4      	b.n	8009fd2 <_scanf_float+0x19e>
 8009fe8:	2c02      	cmp	r4, #2
 8009fea:	d041      	beq.n	800a070 <_scanf_float+0x23c>
 8009fec:	2f01      	cmp	r7, #1
 8009fee:	d002      	beq.n	8009ff6 <_scanf_float+0x1c2>
 8009ff0:	2f04      	cmp	r7, #4
 8009ff2:	d000      	beq.n	8009ff6 <_scanf_float+0x1c2>
 8009ff4:	e758      	b.n	8009ea8 <_scanf_float+0x74>
 8009ff6:	3701      	adds	r7, #1
 8009ff8:	b2ff      	uxtb	r7, r7
 8009ffa:	e7eb      	b.n	8009fd4 <_scanf_float+0x1a0>
 8009ffc:	2102      	movs	r1, #2
 8009ffe:	1efa      	subs	r2, r7, #3
 800a000:	438a      	bics	r2, r1
 800a002:	b2d2      	uxtb	r2, r2
 800a004:	2a00      	cmp	r2, #0
 800a006:	d0f6      	beq.n	8009ff6 <_scanf_float+0x1c2>
 800a008:	e74e      	b.n	8009ea8 <_scanf_float+0x74>
 800a00a:	2f02      	cmp	r7, #2
 800a00c:	d000      	beq.n	800a010 <_scanf_float+0x1dc>
 800a00e:	e74b      	b.n	8009ea8 <_scanf_float+0x74>
 800a010:	2703      	movs	r7, #3
 800a012:	e7df      	b.n	8009fd4 <_scanf_float+0x1a0>
 800a014:	2f06      	cmp	r7, #6
 800a016:	d000      	beq.n	800a01a <_scanf_float+0x1e6>
 800a018:	e746      	b.n	8009ea8 <_scanf_float+0x74>
 800a01a:	2707      	movs	r7, #7
 800a01c:	e7da      	b.n	8009fd4 <_scanf_float+0x1a0>
 800a01e:	6832      	ldr	r2, [r6, #0]
 800a020:	0591      	lsls	r1, r2, #22
 800a022:	d400      	bmi.n	800a026 <_scanf_float+0x1f2>
 800a024:	e740      	b.n	8009ea8 <_scanf_float+0x74>
 800a026:	4941      	ldr	r1, [pc, #260]	; (800a12c <_scanf_float+0x2f8>)
 800a028:	400a      	ands	r2, r1
 800a02a:	6032      	str	r2, [r6, #0]
 800a02c:	9a01      	ldr	r2, [sp, #4]
 800a02e:	9206      	str	r2, [sp, #24]
 800a030:	e7d0      	b.n	8009fd4 <_scanf_float+0x1a0>
 800a032:	21a0      	movs	r1, #160	; 0xa0
 800a034:	2080      	movs	r0, #128	; 0x80
 800a036:	6832      	ldr	r2, [r6, #0]
 800a038:	00c9      	lsls	r1, r1, #3
 800a03a:	4011      	ands	r1, r2
 800a03c:	00c0      	lsls	r0, r0, #3
 800a03e:	4281      	cmp	r1, r0
 800a040:	d006      	beq.n	800a050 <_scanf_float+0x21c>
 800a042:	4202      	tst	r2, r0
 800a044:	d100      	bne.n	800a048 <_scanf_float+0x214>
 800a046:	e72f      	b.n	8009ea8 <_scanf_float+0x74>
 800a048:	9901      	ldr	r1, [sp, #4]
 800a04a:	2900      	cmp	r1, #0
 800a04c:	d100      	bne.n	800a050 <_scanf_float+0x21c>
 800a04e:	e732      	b.n	8009eb6 <_scanf_float+0x82>
 800a050:	0591      	lsls	r1, r2, #22
 800a052:	d404      	bmi.n	800a05e <_scanf_float+0x22a>
 800a054:	9901      	ldr	r1, [sp, #4]
 800a056:	9806      	ldr	r0, [sp, #24]
 800a058:	9508      	str	r5, [sp, #32]
 800a05a:	1a09      	subs	r1, r1, r0
 800a05c:	9107      	str	r1, [sp, #28]
 800a05e:	4931      	ldr	r1, [pc, #196]	; (800a124 <_scanf_float+0x2f0>)
 800a060:	400a      	ands	r2, r1
 800a062:	21c0      	movs	r1, #192	; 0xc0
 800a064:	0049      	lsls	r1, r1, #1
 800a066:	430a      	orrs	r2, r1
 800a068:	6032      	str	r2, [r6, #0]
 800a06a:	2200      	movs	r2, #0
 800a06c:	9201      	str	r2, [sp, #4]
 800a06e:	e7b1      	b.n	8009fd4 <_scanf_float+0x1a0>
 800a070:	2403      	movs	r4, #3
 800a072:	e7af      	b.n	8009fd4 <_scanf_float+0x1a0>
 800a074:	23c0      	movs	r3, #192	; 0xc0
 800a076:	005b      	lsls	r3, r3, #1
 800a078:	58f3      	ldr	r3, [r6, r3]
 800a07a:	9900      	ldr	r1, [sp, #0]
 800a07c:	9802      	ldr	r0, [sp, #8]
 800a07e:	4798      	blx	r3
 800a080:	2800      	cmp	r0, #0
 800a082:	d100      	bne.n	800a086 <_scanf_float+0x252>
 800a084:	e6f9      	b.n	8009e7a <_scanf_float+0x46>
 800a086:	e70f      	b.n	8009ea8 <_scanf_float+0x74>
 800a088:	3d01      	subs	r5, #1
 800a08a:	5933      	ldr	r3, [r6, r4]
 800a08c:	7829      	ldrb	r1, [r5, #0]
 800a08e:	9a00      	ldr	r2, [sp, #0]
 800a090:	9802      	ldr	r0, [sp, #8]
 800a092:	4798      	blx	r3
 800a094:	6933      	ldr	r3, [r6, #16]
 800a096:	3b01      	subs	r3, #1
 800a098:	6133      	str	r3, [r6, #16]
 800a09a:	e712      	b.n	8009ec2 <_scanf_float+0x8e>
 800a09c:	1e7b      	subs	r3, r7, #1
 800a09e:	2b06      	cmp	r3, #6
 800a0a0:	d826      	bhi.n	800a0f0 <_scanf_float+0x2bc>
 800a0a2:	2f02      	cmp	r7, #2
 800a0a4:	d839      	bhi.n	800a11a <_scanf_float+0x2e6>
 800a0a6:	24be      	movs	r4, #190	; 0xbe
 800a0a8:	0064      	lsls	r4, r4, #1
 800a0aa:	9b03      	ldr	r3, [sp, #12]
 800a0ac:	429d      	cmp	r5, r3
 800a0ae:	d800      	bhi.n	800a0b2 <_scanf_float+0x27e>
 800a0b0:	e70b      	b.n	8009eca <_scanf_float+0x96>
 800a0b2:	3d01      	subs	r5, #1
 800a0b4:	5933      	ldr	r3, [r6, r4]
 800a0b6:	7829      	ldrb	r1, [r5, #0]
 800a0b8:	9a00      	ldr	r2, [sp, #0]
 800a0ba:	9802      	ldr	r0, [sp, #8]
 800a0bc:	4798      	blx	r3
 800a0be:	6933      	ldr	r3, [r6, #16]
 800a0c0:	3b01      	subs	r3, #1
 800a0c2:	6133      	str	r3, [r6, #16]
 800a0c4:	e7f1      	b.n	800a0aa <_scanf_float+0x276>
 800a0c6:	9b04      	ldr	r3, [sp, #16]
 800a0c8:	9a00      	ldr	r2, [sp, #0]
 800a0ca:	3b01      	subs	r3, #1
 800a0cc:	9304      	str	r3, [sp, #16]
 800a0ce:	7819      	ldrb	r1, [r3, #0]
 800a0d0:	23be      	movs	r3, #190	; 0xbe
 800a0d2:	005b      	lsls	r3, r3, #1
 800a0d4:	58f3      	ldr	r3, [r6, r3]
 800a0d6:	9802      	ldr	r0, [sp, #8]
 800a0d8:	9309      	str	r3, [sp, #36]	; 0x24
 800a0da:	4798      	blx	r3
 800a0dc:	6933      	ldr	r3, [r6, #16]
 800a0de:	3b01      	subs	r3, #1
 800a0e0:	6133      	str	r3, [r6, #16]
 800a0e2:	3c01      	subs	r4, #1
 800a0e4:	b2e4      	uxtb	r4, r4
 800a0e6:	2c02      	cmp	r4, #2
 800a0e8:	d1ed      	bne.n	800a0c6 <_scanf_float+0x292>
 800a0ea:	3f03      	subs	r7, #3
 800a0ec:	b2ff      	uxtb	r7, r7
 800a0ee:	1bed      	subs	r5, r5, r7
 800a0f0:	6833      	ldr	r3, [r6, #0]
 800a0f2:	05da      	lsls	r2, r3, #23
 800a0f4:	d537      	bpl.n	800a166 <_scanf_float+0x332>
 800a0f6:	055b      	lsls	r3, r3, #21
 800a0f8:	d51a      	bpl.n	800a130 <_scanf_float+0x2fc>
 800a0fa:	24be      	movs	r4, #190	; 0xbe
 800a0fc:	0064      	lsls	r4, r4, #1
 800a0fe:	9b03      	ldr	r3, [sp, #12]
 800a100:	429d      	cmp	r5, r3
 800a102:	d800      	bhi.n	800a106 <_scanf_float+0x2d2>
 800a104:	e6e1      	b.n	8009eca <_scanf_float+0x96>
 800a106:	3d01      	subs	r5, #1
 800a108:	5933      	ldr	r3, [r6, r4]
 800a10a:	7829      	ldrb	r1, [r5, #0]
 800a10c:	9a00      	ldr	r2, [sp, #0]
 800a10e:	9802      	ldr	r0, [sp, #8]
 800a110:	4798      	blx	r3
 800a112:	6933      	ldr	r3, [r6, #16]
 800a114:	3b01      	subs	r3, #1
 800a116:	6133      	str	r3, [r6, #16]
 800a118:	e7f1      	b.n	800a0fe <_scanf_float+0x2ca>
 800a11a:	003c      	movs	r4, r7
 800a11c:	9504      	str	r5, [sp, #16]
 800a11e:	e7e0      	b.n	800a0e2 <_scanf_float+0x2ae>
 800a120:	fffffeff 	.word	0xfffffeff
 800a124:	fffff87f 	.word	0xfffff87f
 800a128:	fffffe7f 	.word	0xfffffe7f
 800a12c:	fffffd7f 	.word	0xfffffd7f
 800a130:	6933      	ldr	r3, [r6, #16]
 800a132:	1e6c      	subs	r4, r5, #1
 800a134:	7821      	ldrb	r1, [r4, #0]
 800a136:	3b01      	subs	r3, #1
 800a138:	6133      	str	r3, [r6, #16]
 800a13a:	2965      	cmp	r1, #101	; 0x65
 800a13c:	d00c      	beq.n	800a158 <_scanf_float+0x324>
 800a13e:	2945      	cmp	r1, #69	; 0x45
 800a140:	d00a      	beq.n	800a158 <_scanf_float+0x324>
 800a142:	23be      	movs	r3, #190	; 0xbe
 800a144:	005b      	lsls	r3, r3, #1
 800a146:	58f3      	ldr	r3, [r6, r3]
 800a148:	9a00      	ldr	r2, [sp, #0]
 800a14a:	9802      	ldr	r0, [sp, #8]
 800a14c:	4798      	blx	r3
 800a14e:	6933      	ldr	r3, [r6, #16]
 800a150:	1eac      	subs	r4, r5, #2
 800a152:	3b01      	subs	r3, #1
 800a154:	7821      	ldrb	r1, [r4, #0]
 800a156:	6133      	str	r3, [r6, #16]
 800a158:	23be      	movs	r3, #190	; 0xbe
 800a15a:	005b      	lsls	r3, r3, #1
 800a15c:	58f3      	ldr	r3, [r6, r3]
 800a15e:	9a00      	ldr	r2, [sp, #0]
 800a160:	9802      	ldr	r0, [sp, #8]
 800a162:	4798      	blx	r3
 800a164:	0025      	movs	r5, r4
 800a166:	2710      	movs	r7, #16
 800a168:	6833      	ldr	r3, [r6, #0]
 800a16a:	401f      	ands	r7, r3
 800a16c:	d15b      	bne.n	800a226 <_scanf_float+0x3f2>
 800a16e:	23c0      	movs	r3, #192	; 0xc0
 800a170:	702f      	strb	r7, [r5, #0]
 800a172:	6832      	ldr	r2, [r6, #0]
 800a174:	00db      	lsls	r3, r3, #3
 800a176:	4013      	ands	r3, r2
 800a178:	2280      	movs	r2, #128	; 0x80
 800a17a:	00d2      	lsls	r2, r2, #3
 800a17c:	4293      	cmp	r3, r2
 800a17e:	d11b      	bne.n	800a1b8 <_scanf_float+0x384>
 800a180:	9a06      	ldr	r2, [sp, #24]
 800a182:	9b01      	ldr	r3, [sp, #4]
 800a184:	1a9b      	subs	r3, r3, r2
 800a186:	425a      	negs	r2, r3
 800a188:	2b00      	cmp	r3, #0
 800a18a:	d122      	bne.n	800a1d2 <_scanf_float+0x39e>
 800a18c:	2200      	movs	r2, #0
 800a18e:	9903      	ldr	r1, [sp, #12]
 800a190:	9802      	ldr	r0, [sp, #8]
 800a192:	f000 ff93 	bl	800b0bc <_strtod_r>
 800a196:	9b05      	ldr	r3, [sp, #20]
 800a198:	0004      	movs	r4, r0
 800a19a:	6830      	ldr	r0, [r6, #0]
 800a19c:	000d      	movs	r5, r1
 800a19e:	681b      	ldr	r3, [r3, #0]
 800a1a0:	0782      	lsls	r2, r0, #30
 800a1a2:	d523      	bpl.n	800a1ec <_scanf_float+0x3b8>
 800a1a4:	1d1a      	adds	r2, r3, #4
 800a1a6:	9905      	ldr	r1, [sp, #20]
 800a1a8:	600a      	str	r2, [r1, #0]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	601c      	str	r4, [r3, #0]
 800a1ae:	605d      	str	r5, [r3, #4]
 800a1b0:	68f3      	ldr	r3, [r6, #12]
 800a1b2:	3301      	adds	r3, #1
 800a1b4:	60f3      	str	r3, [r6, #12]
 800a1b6:	e689      	b.n	8009ecc <_scanf_float+0x98>
 800a1b8:	9b07      	ldr	r3, [sp, #28]
 800a1ba:	2b00      	cmp	r3, #0
 800a1bc:	d0e6      	beq.n	800a18c <_scanf_float+0x358>
 800a1be:	9b08      	ldr	r3, [sp, #32]
 800a1c0:	003a      	movs	r2, r7
 800a1c2:	1c59      	adds	r1, r3, #1
 800a1c4:	9802      	ldr	r0, [sp, #8]
 800a1c6:	230a      	movs	r3, #10
 800a1c8:	f001 f808 	bl	800b1dc <_strtol_r>
 800a1cc:	9b07      	ldr	r3, [sp, #28]
 800a1ce:	9d08      	ldr	r5, [sp, #32]
 800a1d0:	1ac2      	subs	r2, r0, r3
 800a1d2:	0033      	movs	r3, r6
 800a1d4:	3370      	adds	r3, #112	; 0x70
 800a1d6:	33ff      	adds	r3, #255	; 0xff
 800a1d8:	429d      	cmp	r5, r3
 800a1da:	d302      	bcc.n	800a1e2 <_scanf_float+0x3ae>
 800a1dc:	0035      	movs	r5, r6
 800a1de:	356f      	adds	r5, #111	; 0x6f
 800a1e0:	35ff      	adds	r5, #255	; 0xff
 800a1e2:	4912      	ldr	r1, [pc, #72]	; (800a22c <_scanf_float+0x3f8>)
 800a1e4:	0028      	movs	r0, r5
 800a1e6:	f000 f8bd 	bl	800a364 <siprintf>
 800a1ea:	e7cf      	b.n	800a18c <_scanf_float+0x358>
 800a1ec:	2104      	movs	r1, #4
 800a1ee:	4008      	ands	r0, r1
 800a1f0:	1d1a      	adds	r2, r3, #4
 800a1f2:	9001      	str	r0, [sp, #4]
 800a1f4:	2800      	cmp	r0, #0
 800a1f6:	d1d6      	bne.n	800a1a6 <_scanf_float+0x372>
 800a1f8:	9905      	ldr	r1, [sp, #20]
 800a1fa:	0020      	movs	r0, r4
 800a1fc:	600a      	str	r2, [r1, #0]
 800a1fe:	681b      	ldr	r3, [r3, #0]
 800a200:	0022      	movs	r2, r4
 800a202:	9300      	str	r3, [sp, #0]
 800a204:	0029      	movs	r1, r5
 800a206:	002b      	movs	r3, r5
 800a208:	f7f8 fd90 	bl	8002d2c <__aeabi_dcmpun>
 800a20c:	2800      	cmp	r0, #0
 800a20e:	d005      	beq.n	800a21c <_scanf_float+0x3e8>
 800a210:	9801      	ldr	r0, [sp, #4]
 800a212:	f000 f8a3 	bl	800a35c <nanf>
 800a216:	9b00      	ldr	r3, [sp, #0]
 800a218:	6018      	str	r0, [r3, #0]
 800a21a:	e7c9      	b.n	800a1b0 <_scanf_float+0x37c>
 800a21c:	0020      	movs	r0, r4
 800a21e:	0029      	movs	r1, r5
 800a220:	f7f8 fe94 	bl	8002f4c <__aeabi_d2f>
 800a224:	e7f7      	b.n	800a216 <_scanf_float+0x3e2>
 800a226:	2700      	movs	r7, #0
 800a228:	e650      	b.n	8009ecc <_scanf_float+0x98>
 800a22a:	46c0      	nop			; (mov r8, r8)
 800a22c:	0800e398 	.word	0x0800e398

0800a230 <iprintf>:
 800a230:	b40f      	push	{r0, r1, r2, r3}
 800a232:	4b0b      	ldr	r3, [pc, #44]	; (800a260 <iprintf+0x30>)
 800a234:	b513      	push	{r0, r1, r4, lr}
 800a236:	681c      	ldr	r4, [r3, #0]
 800a238:	2c00      	cmp	r4, #0
 800a23a:	d005      	beq.n	800a248 <iprintf+0x18>
 800a23c:	69a3      	ldr	r3, [r4, #24]
 800a23e:	2b00      	cmp	r3, #0
 800a240:	d102      	bne.n	800a248 <iprintf+0x18>
 800a242:	0020      	movs	r0, r4
 800a244:	f7ff f87a 	bl	800933c <__sinit>
 800a248:	ab05      	add	r3, sp, #20
 800a24a:	9a04      	ldr	r2, [sp, #16]
 800a24c:	68a1      	ldr	r1, [r4, #8]
 800a24e:	0020      	movs	r0, r4
 800a250:	9301      	str	r3, [sp, #4]
 800a252:	f003 f9ab 	bl	800d5ac <_vfiprintf_r>
 800a256:	bc16      	pop	{r1, r2, r4}
 800a258:	bc08      	pop	{r3}
 800a25a:	b004      	add	sp, #16
 800a25c:	4718      	bx	r3
 800a25e:	46c0      	nop			; (mov r8, r8)
 800a260:	20000108 	.word	0x20000108

0800a264 <_puts_r>:
 800a264:	b570      	push	{r4, r5, r6, lr}
 800a266:	0005      	movs	r5, r0
 800a268:	000e      	movs	r6, r1
 800a26a:	2800      	cmp	r0, #0
 800a26c:	d004      	beq.n	800a278 <_puts_r+0x14>
 800a26e:	6983      	ldr	r3, [r0, #24]
 800a270:	2b00      	cmp	r3, #0
 800a272:	d101      	bne.n	800a278 <_puts_r+0x14>
 800a274:	f7ff f862 	bl	800933c <__sinit>
 800a278:	69ab      	ldr	r3, [r5, #24]
 800a27a:	68ac      	ldr	r4, [r5, #8]
 800a27c:	2b00      	cmp	r3, #0
 800a27e:	d102      	bne.n	800a286 <_puts_r+0x22>
 800a280:	0028      	movs	r0, r5
 800a282:	f7ff f85b 	bl	800933c <__sinit>
 800a286:	4b24      	ldr	r3, [pc, #144]	; (800a318 <_puts_r+0xb4>)
 800a288:	429c      	cmp	r4, r3
 800a28a:	d10f      	bne.n	800a2ac <_puts_r+0x48>
 800a28c:	686c      	ldr	r4, [r5, #4]
 800a28e:	89a3      	ldrh	r3, [r4, #12]
 800a290:	071b      	lsls	r3, r3, #28
 800a292:	d502      	bpl.n	800a29a <_puts_r+0x36>
 800a294:	6923      	ldr	r3, [r4, #16]
 800a296:	2b00      	cmp	r3, #0
 800a298:	d11f      	bne.n	800a2da <_puts_r+0x76>
 800a29a:	0021      	movs	r1, r4
 800a29c:	0028      	movs	r0, r5
 800a29e:	f001 f817 	bl	800b2d0 <__swsetup_r>
 800a2a2:	2800      	cmp	r0, #0
 800a2a4:	d019      	beq.n	800a2da <_puts_r+0x76>
 800a2a6:	2001      	movs	r0, #1
 800a2a8:	4240      	negs	r0, r0
 800a2aa:	bd70      	pop	{r4, r5, r6, pc}
 800a2ac:	4b1b      	ldr	r3, [pc, #108]	; (800a31c <_puts_r+0xb8>)
 800a2ae:	429c      	cmp	r4, r3
 800a2b0:	d101      	bne.n	800a2b6 <_puts_r+0x52>
 800a2b2:	68ac      	ldr	r4, [r5, #8]
 800a2b4:	e7eb      	b.n	800a28e <_puts_r+0x2a>
 800a2b6:	4b1a      	ldr	r3, [pc, #104]	; (800a320 <_puts_r+0xbc>)
 800a2b8:	429c      	cmp	r4, r3
 800a2ba:	d1e8      	bne.n	800a28e <_puts_r+0x2a>
 800a2bc:	68ec      	ldr	r4, [r5, #12]
 800a2be:	e7e6      	b.n	800a28e <_puts_r+0x2a>
 800a2c0:	3601      	adds	r6, #1
 800a2c2:	60a3      	str	r3, [r4, #8]
 800a2c4:	2b00      	cmp	r3, #0
 800a2c6:	da04      	bge.n	800a2d2 <_puts_r+0x6e>
 800a2c8:	69a2      	ldr	r2, [r4, #24]
 800a2ca:	429a      	cmp	r2, r3
 800a2cc:	dc16      	bgt.n	800a2fc <_puts_r+0x98>
 800a2ce:	290a      	cmp	r1, #10
 800a2d0:	d014      	beq.n	800a2fc <_puts_r+0x98>
 800a2d2:	6823      	ldr	r3, [r4, #0]
 800a2d4:	1c5a      	adds	r2, r3, #1
 800a2d6:	6022      	str	r2, [r4, #0]
 800a2d8:	7019      	strb	r1, [r3, #0]
 800a2da:	68a3      	ldr	r3, [r4, #8]
 800a2dc:	7831      	ldrb	r1, [r6, #0]
 800a2de:	3b01      	subs	r3, #1
 800a2e0:	2900      	cmp	r1, #0
 800a2e2:	d1ed      	bne.n	800a2c0 <_puts_r+0x5c>
 800a2e4:	60a3      	str	r3, [r4, #8]
 800a2e6:	2b00      	cmp	r3, #0
 800a2e8:	da0f      	bge.n	800a30a <_puts_r+0xa6>
 800a2ea:	0022      	movs	r2, r4
 800a2ec:	310a      	adds	r1, #10
 800a2ee:	0028      	movs	r0, r5
 800a2f0:	f000 ff84 	bl	800b1fc <__swbuf_r>
 800a2f4:	1c43      	adds	r3, r0, #1
 800a2f6:	d0d6      	beq.n	800a2a6 <_puts_r+0x42>
 800a2f8:	200a      	movs	r0, #10
 800a2fa:	e7d6      	b.n	800a2aa <_puts_r+0x46>
 800a2fc:	0022      	movs	r2, r4
 800a2fe:	0028      	movs	r0, r5
 800a300:	f000 ff7c 	bl	800b1fc <__swbuf_r>
 800a304:	1c43      	adds	r3, r0, #1
 800a306:	d1e8      	bne.n	800a2da <_puts_r+0x76>
 800a308:	e7cd      	b.n	800a2a6 <_puts_r+0x42>
 800a30a:	200a      	movs	r0, #10
 800a30c:	6823      	ldr	r3, [r4, #0]
 800a30e:	1c5a      	adds	r2, r3, #1
 800a310:	6022      	str	r2, [r4, #0]
 800a312:	7018      	strb	r0, [r3, #0]
 800a314:	e7c9      	b.n	800a2aa <_puts_r+0x46>
 800a316:	46c0      	nop			; (mov r8, r8)
 800a318:	0800e320 	.word	0x0800e320
 800a31c:	0800e340 	.word	0x0800e340
 800a320:	0800e300 	.word	0x0800e300

0800a324 <puts>:
 800a324:	b510      	push	{r4, lr}
 800a326:	4b03      	ldr	r3, [pc, #12]	; (800a334 <puts+0x10>)
 800a328:	0001      	movs	r1, r0
 800a32a:	6818      	ldr	r0, [r3, #0]
 800a32c:	f7ff ff9a 	bl	800a264 <_puts_r>
 800a330:	bd10      	pop	{r4, pc}
 800a332:	46c0      	nop			; (mov r8, r8)
 800a334:	20000108 	.word	0x20000108

0800a338 <_sbrk_r>:
 800a338:	2300      	movs	r3, #0
 800a33a:	b570      	push	{r4, r5, r6, lr}
 800a33c:	4c06      	ldr	r4, [pc, #24]	; (800a358 <_sbrk_r+0x20>)
 800a33e:	0005      	movs	r5, r0
 800a340:	0008      	movs	r0, r1
 800a342:	6023      	str	r3, [r4, #0]
 800a344:	f7f9 fec8 	bl	80040d8 <_sbrk>
 800a348:	1c43      	adds	r3, r0, #1
 800a34a:	d103      	bne.n	800a354 <_sbrk_r+0x1c>
 800a34c:	6823      	ldr	r3, [r4, #0]
 800a34e:	2b00      	cmp	r3, #0
 800a350:	d000      	beq.n	800a354 <_sbrk_r+0x1c>
 800a352:	602b      	str	r3, [r5, #0]
 800a354:	bd70      	pop	{r4, r5, r6, pc}
 800a356:	46c0      	nop			; (mov r8, r8)
 800a358:	2000446c 	.word	0x2000446c

0800a35c <nanf>:
 800a35c:	4800      	ldr	r0, [pc, #0]	; (800a360 <nanf+0x4>)
 800a35e:	4770      	bx	lr
 800a360:	7fc00000 	.word	0x7fc00000

0800a364 <siprintf>:
 800a364:	b40e      	push	{r1, r2, r3}
 800a366:	b500      	push	{lr}
 800a368:	490b      	ldr	r1, [pc, #44]	; (800a398 <siprintf+0x34>)
 800a36a:	b09c      	sub	sp, #112	; 0x70
 800a36c:	ab1d      	add	r3, sp, #116	; 0x74
 800a36e:	9002      	str	r0, [sp, #8]
 800a370:	9006      	str	r0, [sp, #24]
 800a372:	9107      	str	r1, [sp, #28]
 800a374:	9104      	str	r1, [sp, #16]
 800a376:	4809      	ldr	r0, [pc, #36]	; (800a39c <siprintf+0x38>)
 800a378:	4909      	ldr	r1, [pc, #36]	; (800a3a0 <siprintf+0x3c>)
 800a37a:	cb04      	ldmia	r3!, {r2}
 800a37c:	9105      	str	r1, [sp, #20]
 800a37e:	6800      	ldr	r0, [r0, #0]
 800a380:	a902      	add	r1, sp, #8
 800a382:	9301      	str	r3, [sp, #4]
 800a384:	f002 ffec 	bl	800d360 <_svfiprintf_r>
 800a388:	2300      	movs	r3, #0
 800a38a:	9a02      	ldr	r2, [sp, #8]
 800a38c:	7013      	strb	r3, [r2, #0]
 800a38e:	b01c      	add	sp, #112	; 0x70
 800a390:	bc08      	pop	{r3}
 800a392:	b003      	add	sp, #12
 800a394:	4718      	bx	r3
 800a396:	46c0      	nop			; (mov r8, r8)
 800a398:	7fffffff 	.word	0x7fffffff
 800a39c:	20000108 	.word	0x20000108
 800a3a0:	ffff0208 	.word	0xffff0208

0800a3a4 <__sread>:
 800a3a4:	b570      	push	{r4, r5, r6, lr}
 800a3a6:	000c      	movs	r4, r1
 800a3a8:	250e      	movs	r5, #14
 800a3aa:	5f49      	ldrsh	r1, [r1, r5]
 800a3ac:	f003 fa14 	bl	800d7d8 <_read_r>
 800a3b0:	2800      	cmp	r0, #0
 800a3b2:	db03      	blt.n	800a3bc <__sread+0x18>
 800a3b4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a3b6:	181b      	adds	r3, r3, r0
 800a3b8:	6563      	str	r3, [r4, #84]	; 0x54
 800a3ba:	bd70      	pop	{r4, r5, r6, pc}
 800a3bc:	89a3      	ldrh	r3, [r4, #12]
 800a3be:	4a02      	ldr	r2, [pc, #8]	; (800a3c8 <__sread+0x24>)
 800a3c0:	4013      	ands	r3, r2
 800a3c2:	81a3      	strh	r3, [r4, #12]
 800a3c4:	e7f9      	b.n	800a3ba <__sread+0x16>
 800a3c6:	46c0      	nop			; (mov r8, r8)
 800a3c8:	ffffefff 	.word	0xffffefff

0800a3cc <__swrite>:
 800a3cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3ce:	001f      	movs	r7, r3
 800a3d0:	898b      	ldrh	r3, [r1, #12]
 800a3d2:	0005      	movs	r5, r0
 800a3d4:	000c      	movs	r4, r1
 800a3d6:	0016      	movs	r6, r2
 800a3d8:	05db      	lsls	r3, r3, #23
 800a3da:	d505      	bpl.n	800a3e8 <__swrite+0x1c>
 800a3dc:	230e      	movs	r3, #14
 800a3de:	5ec9      	ldrsh	r1, [r1, r3]
 800a3e0:	2200      	movs	r2, #0
 800a3e2:	2302      	movs	r3, #2
 800a3e4:	f002 fa5a 	bl	800c89c <_lseek_r>
 800a3e8:	89a3      	ldrh	r3, [r4, #12]
 800a3ea:	4a05      	ldr	r2, [pc, #20]	; (800a400 <__swrite+0x34>)
 800a3ec:	0028      	movs	r0, r5
 800a3ee:	4013      	ands	r3, r2
 800a3f0:	81a3      	strh	r3, [r4, #12]
 800a3f2:	0032      	movs	r2, r6
 800a3f4:	230e      	movs	r3, #14
 800a3f6:	5ee1      	ldrsh	r1, [r4, r3]
 800a3f8:	003b      	movs	r3, r7
 800a3fa:	f000 ff55 	bl	800b2a8 <_write_r>
 800a3fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a400:	ffffefff 	.word	0xffffefff

0800a404 <__sseek>:
 800a404:	b570      	push	{r4, r5, r6, lr}
 800a406:	000c      	movs	r4, r1
 800a408:	250e      	movs	r5, #14
 800a40a:	5f49      	ldrsh	r1, [r1, r5]
 800a40c:	f002 fa46 	bl	800c89c <_lseek_r>
 800a410:	89a3      	ldrh	r3, [r4, #12]
 800a412:	1c42      	adds	r2, r0, #1
 800a414:	d103      	bne.n	800a41e <__sseek+0x1a>
 800a416:	4a05      	ldr	r2, [pc, #20]	; (800a42c <__sseek+0x28>)
 800a418:	4013      	ands	r3, r2
 800a41a:	81a3      	strh	r3, [r4, #12]
 800a41c:	bd70      	pop	{r4, r5, r6, pc}
 800a41e:	2280      	movs	r2, #128	; 0x80
 800a420:	0152      	lsls	r2, r2, #5
 800a422:	4313      	orrs	r3, r2
 800a424:	81a3      	strh	r3, [r4, #12]
 800a426:	6560      	str	r0, [r4, #84]	; 0x54
 800a428:	e7f8      	b.n	800a41c <__sseek+0x18>
 800a42a:	46c0      	nop			; (mov r8, r8)
 800a42c:	ffffefff 	.word	0xffffefff

0800a430 <__sclose>:
 800a430:	b510      	push	{r4, lr}
 800a432:	230e      	movs	r3, #14
 800a434:	5ec9      	ldrsh	r1, [r1, r3]
 800a436:	f000 ffc1 	bl	800b3bc <_close_r>
 800a43a:	bd10      	pop	{r4, pc}

0800a43c <sulp>:
 800a43c:	b570      	push	{r4, r5, r6, lr}
 800a43e:	0016      	movs	r6, r2
 800a440:	000d      	movs	r5, r1
 800a442:	f002 fdad 	bl	800cfa0 <__ulp>
 800a446:	2e00      	cmp	r6, #0
 800a448:	d00d      	beq.n	800a466 <sulp+0x2a>
 800a44a:	236b      	movs	r3, #107	; 0x6b
 800a44c:	006a      	lsls	r2, r5, #1
 800a44e:	0d52      	lsrs	r2, r2, #21
 800a450:	1a9b      	subs	r3, r3, r2
 800a452:	2b00      	cmp	r3, #0
 800a454:	dd07      	ble.n	800a466 <sulp+0x2a>
 800a456:	2400      	movs	r4, #0
 800a458:	4a03      	ldr	r2, [pc, #12]	; (800a468 <sulp+0x2c>)
 800a45a:	051b      	lsls	r3, r3, #20
 800a45c:	189d      	adds	r5, r3, r2
 800a45e:	002b      	movs	r3, r5
 800a460:	0022      	movs	r2, r4
 800a462:	f7f7 fea9 	bl	80021b8 <__aeabi_dmul>
 800a466:	bd70      	pop	{r4, r5, r6, pc}
 800a468:	3ff00000 	.word	0x3ff00000

0800a46c <_strtod_l>:
 800a46c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a46e:	b0a7      	sub	sp, #156	; 0x9c
 800a470:	9307      	str	r3, [sp, #28]
 800a472:	2300      	movs	r3, #0
 800a474:	9004      	str	r0, [sp, #16]
 800a476:	9807      	ldr	r0, [sp, #28]
 800a478:	9322      	str	r3, [sp, #136]	; 0x88
 800a47a:	9106      	str	r1, [sp, #24]
 800a47c:	921d      	str	r2, [sp, #116]	; 0x74
 800a47e:	f002 f9ff 	bl	800c880 <__localeconv_l>
 800a482:	0005      	movs	r5, r0
 800a484:	6800      	ldr	r0, [r0, #0]
 800a486:	f7f5 fe3f 	bl	8000108 <strlen>
 800a48a:	2600      	movs	r6, #0
 800a48c:	2700      	movs	r7, #0
 800a48e:	9b06      	ldr	r3, [sp, #24]
 800a490:	9005      	str	r0, [sp, #20]
 800a492:	9321      	str	r3, [sp, #132]	; 0x84
 800a494:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a496:	781a      	ldrb	r2, [r3, #0]
 800a498:	2a0d      	cmp	r2, #13
 800a49a:	d839      	bhi.n	800a510 <_strtod_l+0xa4>
 800a49c:	2a09      	cmp	r2, #9
 800a49e:	d23d      	bcs.n	800a51c <_strtod_l+0xb0>
 800a4a0:	2a00      	cmp	r2, #0
 800a4a2:	d044      	beq.n	800a52e <_strtod_l+0xc2>
 800a4a4:	2300      	movs	r3, #0
 800a4a6:	9313      	str	r3, [sp, #76]	; 0x4c
 800a4a8:	2200      	movs	r2, #0
 800a4aa:	9c21      	ldr	r4, [sp, #132]	; 0x84
 800a4ac:	920c      	str	r2, [sp, #48]	; 0x30
 800a4ae:	7823      	ldrb	r3, [r4, #0]
 800a4b0:	2b30      	cmp	r3, #48	; 0x30
 800a4b2:	d000      	beq.n	800a4b6 <_strtod_l+0x4a>
 800a4b4:	e07e      	b.n	800a5b4 <_strtod_l+0x148>
 800a4b6:	7863      	ldrb	r3, [r4, #1]
 800a4b8:	2b58      	cmp	r3, #88	; 0x58
 800a4ba:	d002      	beq.n	800a4c2 <_strtod_l+0x56>
 800a4bc:	2b78      	cmp	r3, #120	; 0x78
 800a4be:	d000      	beq.n	800a4c2 <_strtod_l+0x56>
 800a4c0:	e06e      	b.n	800a5a0 <_strtod_l+0x134>
 800a4c2:	9b07      	ldr	r3, [sp, #28]
 800a4c4:	4a96      	ldr	r2, [pc, #600]	; (800a720 <_strtod_l+0x2b4>)
 800a4c6:	9302      	str	r3, [sp, #8]
 800a4c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a4ca:	a921      	add	r1, sp, #132	; 0x84
 800a4cc:	9301      	str	r3, [sp, #4]
 800a4ce:	ab22      	add	r3, sp, #136	; 0x88
 800a4d0:	9300      	str	r3, [sp, #0]
 800a4d2:	9804      	ldr	r0, [sp, #16]
 800a4d4:	ab23      	add	r3, sp, #140	; 0x8c
 800a4d6:	f001 fee8 	bl	800c2aa <__gethex>
 800a4da:	2507      	movs	r5, #7
 800a4dc:	9005      	str	r0, [sp, #20]
 800a4de:	4005      	ands	r5, r0
 800a4e0:	d005      	beq.n	800a4ee <_strtod_l+0x82>
 800a4e2:	2d06      	cmp	r5, #6
 800a4e4:	d12f      	bne.n	800a546 <_strtod_l+0xda>
 800a4e6:	2300      	movs	r3, #0
 800a4e8:	3401      	adds	r4, #1
 800a4ea:	9421      	str	r4, [sp, #132]	; 0x84
 800a4ec:	9313      	str	r3, [sp, #76]	; 0x4c
 800a4ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a4f0:	2b00      	cmp	r3, #0
 800a4f2:	d002      	beq.n	800a4fa <_strtod_l+0x8e>
 800a4f4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a4f6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a4f8:	601a      	str	r2, [r3, #0]
 800a4fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a4fc:	2b00      	cmp	r3, #0
 800a4fe:	d01d      	beq.n	800a53c <_strtod_l+0xd0>
 800a500:	2380      	movs	r3, #128	; 0x80
 800a502:	0032      	movs	r2, r6
 800a504:	061b      	lsls	r3, r3, #24
 800a506:	18fb      	adds	r3, r7, r3
 800a508:	0010      	movs	r0, r2
 800a50a:	0019      	movs	r1, r3
 800a50c:	b027      	add	sp, #156	; 0x9c
 800a50e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a510:	2a2b      	cmp	r2, #43	; 0x2b
 800a512:	d016      	beq.n	800a542 <_strtod_l+0xd6>
 800a514:	2a2d      	cmp	r2, #45	; 0x2d
 800a516:	d003      	beq.n	800a520 <_strtod_l+0xb4>
 800a518:	2a20      	cmp	r2, #32
 800a51a:	d1c3      	bne.n	800a4a4 <_strtod_l+0x38>
 800a51c:	3301      	adds	r3, #1
 800a51e:	e7b8      	b.n	800a492 <_strtod_l+0x26>
 800a520:	2201      	movs	r2, #1
 800a522:	9213      	str	r2, [sp, #76]	; 0x4c
 800a524:	1c5a      	adds	r2, r3, #1
 800a526:	9221      	str	r2, [sp, #132]	; 0x84
 800a528:	785b      	ldrb	r3, [r3, #1]
 800a52a:	2b00      	cmp	r3, #0
 800a52c:	d1bc      	bne.n	800a4a8 <_strtod_l+0x3c>
 800a52e:	9b06      	ldr	r3, [sp, #24]
 800a530:	9321      	str	r3, [sp, #132]	; 0x84
 800a532:	2300      	movs	r3, #0
 800a534:	9313      	str	r3, [sp, #76]	; 0x4c
 800a536:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a538:	2b00      	cmp	r3, #0
 800a53a:	d1db      	bne.n	800a4f4 <_strtod_l+0x88>
 800a53c:	0032      	movs	r2, r6
 800a53e:	003b      	movs	r3, r7
 800a540:	e7e2      	b.n	800a508 <_strtod_l+0x9c>
 800a542:	2200      	movs	r2, #0
 800a544:	e7ed      	b.n	800a522 <_strtod_l+0xb6>
 800a546:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800a548:	2a00      	cmp	r2, #0
 800a54a:	d007      	beq.n	800a55c <_strtod_l+0xf0>
 800a54c:	2135      	movs	r1, #53	; 0x35
 800a54e:	a824      	add	r0, sp, #144	; 0x90
 800a550:	f002 fe13 	bl	800d17a <__copybits>
 800a554:	9922      	ldr	r1, [sp, #136]	; 0x88
 800a556:	9804      	ldr	r0, [sp, #16]
 800a558:	f002 fa8a 	bl	800ca70 <_Bfree>
 800a55c:	1e68      	subs	r0, r5, #1
 800a55e:	2804      	cmp	r0, #4
 800a560:	d806      	bhi.n	800a570 <_strtod_l+0x104>
 800a562:	f7f5 fdd9 	bl	8000118 <__gnu_thumb1_case_uqi>
 800a566:	030c      	.short	0x030c
 800a568:	1917      	.short	0x1917
 800a56a:	0c          	.byte	0x0c
 800a56b:	00          	.byte	0x00
 800a56c:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800a56e:	9f25      	ldr	r7, [sp, #148]	; 0x94
 800a570:	9b05      	ldr	r3, [sp, #20]
 800a572:	071b      	lsls	r3, r3, #28
 800a574:	d5bb      	bpl.n	800a4ee <_strtod_l+0x82>
 800a576:	2380      	movs	r3, #128	; 0x80
 800a578:	061b      	lsls	r3, r3, #24
 800a57a:	431f      	orrs	r7, r3
 800a57c:	e7b7      	b.n	800a4ee <_strtod_l+0x82>
 800a57e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800a580:	4a68      	ldr	r2, [pc, #416]	; (800a724 <_strtod_l+0x2b8>)
 800a582:	4969      	ldr	r1, [pc, #420]	; (800a728 <_strtod_l+0x2bc>)
 800a584:	401a      	ands	r2, r3
 800a586:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800a588:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800a58a:	185b      	adds	r3, r3, r1
 800a58c:	051b      	lsls	r3, r3, #20
 800a58e:	431a      	orrs	r2, r3
 800a590:	0017      	movs	r7, r2
 800a592:	e7ed      	b.n	800a570 <_strtod_l+0x104>
 800a594:	4f65      	ldr	r7, [pc, #404]	; (800a72c <_strtod_l+0x2c0>)
 800a596:	e7eb      	b.n	800a570 <_strtod_l+0x104>
 800a598:	2601      	movs	r6, #1
 800a59a:	4f65      	ldr	r7, [pc, #404]	; (800a730 <_strtod_l+0x2c4>)
 800a59c:	4276      	negs	r6, r6
 800a59e:	e7e7      	b.n	800a570 <_strtod_l+0x104>
 800a5a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a5a2:	1c5a      	adds	r2, r3, #1
 800a5a4:	9221      	str	r2, [sp, #132]	; 0x84
 800a5a6:	785b      	ldrb	r3, [r3, #1]
 800a5a8:	2b30      	cmp	r3, #48	; 0x30
 800a5aa:	d0f9      	beq.n	800a5a0 <_strtod_l+0x134>
 800a5ac:	2b00      	cmp	r3, #0
 800a5ae:	d09e      	beq.n	800a4ee <_strtod_l+0x82>
 800a5b0:	2301      	movs	r3, #1
 800a5b2:	930c      	str	r3, [sp, #48]	; 0x30
 800a5b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a5b6:	220a      	movs	r2, #10
 800a5b8:	9312      	str	r3, [sp, #72]	; 0x48
 800a5ba:	2300      	movs	r3, #0
 800a5bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800a5be:	9308      	str	r3, [sp, #32]
 800a5c0:	930a      	str	r3, [sp, #40]	; 0x28
 800a5c2:	9821      	ldr	r0, [sp, #132]	; 0x84
 800a5c4:	7804      	ldrb	r4, [r0, #0]
 800a5c6:	0023      	movs	r3, r4
 800a5c8:	3b30      	subs	r3, #48	; 0x30
 800a5ca:	b2d9      	uxtb	r1, r3
 800a5cc:	2909      	cmp	r1, #9
 800a5ce:	d934      	bls.n	800a63a <_strtod_l+0x1ce>
 800a5d0:	9a05      	ldr	r2, [sp, #20]
 800a5d2:	6829      	ldr	r1, [r5, #0]
 800a5d4:	f003 f914 	bl	800d800 <strncmp>
 800a5d8:	2800      	cmp	r0, #0
 800a5da:	d040      	beq.n	800a65e <_strtod_l+0x1f2>
 800a5dc:	2000      	movs	r0, #0
 800a5de:	0023      	movs	r3, r4
 800a5e0:	4684      	mov	ip, r0
 800a5e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a5e4:	9007      	str	r0, [sp, #28]
 800a5e6:	9205      	str	r2, [sp, #20]
 800a5e8:	2220      	movs	r2, #32
 800a5ea:	0019      	movs	r1, r3
 800a5ec:	4391      	bics	r1, r2
 800a5ee:	000a      	movs	r2, r1
 800a5f0:	2100      	movs	r1, #0
 800a5f2:	2a45      	cmp	r2, #69	; 0x45
 800a5f4:	d000      	beq.n	800a5f8 <_strtod_l+0x18c>
 800a5f6:	e0bf      	b.n	800a778 <_strtod_l+0x30c>
 800a5f8:	9b05      	ldr	r3, [sp, #20]
 800a5fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a5fc:	4303      	orrs	r3, r0
 800a5fe:	4313      	orrs	r3, r2
 800a600:	428b      	cmp	r3, r1
 800a602:	d094      	beq.n	800a52e <_strtod_l+0xc2>
 800a604:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a606:	9306      	str	r3, [sp, #24]
 800a608:	3301      	adds	r3, #1
 800a60a:	9321      	str	r3, [sp, #132]	; 0x84
 800a60c:	9b06      	ldr	r3, [sp, #24]
 800a60e:	785b      	ldrb	r3, [r3, #1]
 800a610:	2b2b      	cmp	r3, #43	; 0x2b
 800a612:	d100      	bne.n	800a616 <_strtod_l+0x1aa>
 800a614:	e082      	b.n	800a71c <_strtod_l+0x2b0>
 800a616:	000c      	movs	r4, r1
 800a618:	2b2d      	cmp	r3, #45	; 0x2d
 800a61a:	d105      	bne.n	800a628 <_strtod_l+0x1bc>
 800a61c:	2401      	movs	r4, #1
 800a61e:	9b06      	ldr	r3, [sp, #24]
 800a620:	3302      	adds	r3, #2
 800a622:	9321      	str	r3, [sp, #132]	; 0x84
 800a624:	9b06      	ldr	r3, [sp, #24]
 800a626:	789b      	ldrb	r3, [r3, #2]
 800a628:	001a      	movs	r2, r3
 800a62a:	3a30      	subs	r2, #48	; 0x30
 800a62c:	2a09      	cmp	r2, #9
 800a62e:	d800      	bhi.n	800a632 <_strtod_l+0x1c6>
 800a630:	e084      	b.n	800a73c <_strtod_l+0x2d0>
 800a632:	9a06      	ldr	r2, [sp, #24]
 800a634:	2100      	movs	r1, #0
 800a636:	9221      	str	r2, [sp, #132]	; 0x84
 800a638:	e09e      	b.n	800a778 <_strtod_l+0x30c>
 800a63a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800a63c:	2908      	cmp	r1, #8
 800a63e:	dc09      	bgt.n	800a654 <_strtod_l+0x1e8>
 800a640:	9908      	ldr	r1, [sp, #32]
 800a642:	4351      	muls	r1, r2
 800a644:	18cb      	adds	r3, r1, r3
 800a646:	9308      	str	r3, [sp, #32]
 800a648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a64a:	3001      	adds	r0, #1
 800a64c:	3301      	adds	r3, #1
 800a64e:	930a      	str	r3, [sp, #40]	; 0x28
 800a650:	9021      	str	r0, [sp, #132]	; 0x84
 800a652:	e7b6      	b.n	800a5c2 <_strtod_l+0x156>
 800a654:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a656:	4351      	muls	r1, r2
 800a658:	18cb      	adds	r3, r1, r3
 800a65a:	930b      	str	r3, [sp, #44]	; 0x2c
 800a65c:	e7f4      	b.n	800a648 <_strtod_l+0x1dc>
 800a65e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a660:	9b05      	ldr	r3, [sp, #20]
 800a662:	4694      	mov	ip, r2
 800a664:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a666:	4463      	add	r3, ip
 800a668:	9321      	str	r3, [sp, #132]	; 0x84
 800a66a:	781b      	ldrb	r3, [r3, #0]
 800a66c:	2a00      	cmp	r2, #0
 800a66e:	d036      	beq.n	800a6de <_strtod_l+0x272>
 800a670:	4684      	mov	ip, r0
 800a672:	9205      	str	r2, [sp, #20]
 800a674:	001a      	movs	r2, r3
 800a676:	3a30      	subs	r2, #48	; 0x30
 800a678:	2a09      	cmp	r2, #9
 800a67a:	d912      	bls.n	800a6a2 <_strtod_l+0x236>
 800a67c:	2201      	movs	r2, #1
 800a67e:	9207      	str	r2, [sp, #28]
 800a680:	e7b2      	b.n	800a5e8 <_strtod_l+0x17c>
 800a682:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a684:	3001      	adds	r0, #1
 800a686:	1c5a      	adds	r2, r3, #1
 800a688:	9221      	str	r2, [sp, #132]	; 0x84
 800a68a:	785b      	ldrb	r3, [r3, #1]
 800a68c:	2b30      	cmp	r3, #48	; 0x30
 800a68e:	d0f8      	beq.n	800a682 <_strtod_l+0x216>
 800a690:	001a      	movs	r2, r3
 800a692:	3a31      	subs	r2, #49	; 0x31
 800a694:	2a08      	cmp	r2, #8
 800a696:	d83c      	bhi.n	800a712 <_strtod_l+0x2a6>
 800a698:	4684      	mov	ip, r0
 800a69a:	2000      	movs	r0, #0
 800a69c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a69e:	9005      	str	r0, [sp, #20]
 800a6a0:	9212      	str	r2, [sp, #72]	; 0x48
 800a6a2:	3b30      	subs	r3, #48	; 0x30
 800a6a4:	1c42      	adds	r2, r0, #1
 800a6a6:	2b00      	cmp	r3, #0
 800a6a8:	d013      	beq.n	800a6d2 <_strtod_l+0x266>
 800a6aa:	210a      	movs	r1, #10
 800a6ac:	4494      	add	ip, r2
 800a6ae:	9a05      	ldr	r2, [sp, #20]
 800a6b0:	1885      	adds	r5, r0, r2
 800a6b2:	42aa      	cmp	r2, r5
 800a6b4:	d115      	bne.n	800a6e2 <_strtod_l+0x276>
 800a6b6:	9905      	ldr	r1, [sp, #20]
 800a6b8:	9a05      	ldr	r2, [sp, #20]
 800a6ba:	3101      	adds	r1, #1
 800a6bc:	1809      	adds	r1, r1, r0
 800a6be:	1812      	adds	r2, r2, r0
 800a6c0:	9105      	str	r1, [sp, #20]
 800a6c2:	2a08      	cmp	r2, #8
 800a6c4:	dc1b      	bgt.n	800a6fe <_strtod_l+0x292>
 800a6c6:	220a      	movs	r2, #10
 800a6c8:	9908      	ldr	r1, [sp, #32]
 800a6ca:	434a      	muls	r2, r1
 800a6cc:	189b      	adds	r3, r3, r2
 800a6ce:	2200      	movs	r2, #0
 800a6d0:	9308      	str	r3, [sp, #32]
 800a6d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a6d4:	0010      	movs	r0, r2
 800a6d6:	1c59      	adds	r1, r3, #1
 800a6d8:	9121      	str	r1, [sp, #132]	; 0x84
 800a6da:	785b      	ldrb	r3, [r3, #1]
 800a6dc:	e7ca      	b.n	800a674 <_strtod_l+0x208>
 800a6de:	980a      	ldr	r0, [sp, #40]	; 0x28
 800a6e0:	e7d4      	b.n	800a68c <_strtod_l+0x220>
 800a6e2:	1c54      	adds	r4, r2, #1
 800a6e4:	2a08      	cmp	r2, #8
 800a6e6:	dc04      	bgt.n	800a6f2 <_strtod_l+0x286>
 800a6e8:	9a08      	ldr	r2, [sp, #32]
 800a6ea:	434a      	muls	r2, r1
 800a6ec:	9208      	str	r2, [sp, #32]
 800a6ee:	0022      	movs	r2, r4
 800a6f0:	e7df      	b.n	800a6b2 <_strtod_l+0x246>
 800a6f2:	2c10      	cmp	r4, #16
 800a6f4:	dcfb      	bgt.n	800a6ee <_strtod_l+0x282>
 800a6f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a6f8:	434a      	muls	r2, r1
 800a6fa:	920b      	str	r2, [sp, #44]	; 0x2c
 800a6fc:	e7f7      	b.n	800a6ee <_strtod_l+0x282>
 800a6fe:	9905      	ldr	r1, [sp, #20]
 800a700:	2200      	movs	r2, #0
 800a702:	2910      	cmp	r1, #16
 800a704:	dce5      	bgt.n	800a6d2 <_strtod_l+0x266>
 800a706:	210a      	movs	r1, #10
 800a708:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a70a:	4341      	muls	r1, r0
 800a70c:	185b      	adds	r3, r3, r1
 800a70e:	930b      	str	r3, [sp, #44]	; 0x2c
 800a710:	e7df      	b.n	800a6d2 <_strtod_l+0x266>
 800a712:	2200      	movs	r2, #0
 800a714:	4694      	mov	ip, r2
 800a716:	9205      	str	r2, [sp, #20]
 800a718:	3201      	adds	r2, #1
 800a71a:	e7b0      	b.n	800a67e <_strtod_l+0x212>
 800a71c:	000c      	movs	r4, r1
 800a71e:	e77e      	b.n	800a61e <_strtod_l+0x1b2>
 800a720:	0800e3a0 	.word	0x0800e3a0
 800a724:	ffefffff 	.word	0xffefffff
 800a728:	00000433 	.word	0x00000433
 800a72c:	7ff00000 	.word	0x7ff00000
 800a730:	7fffffff 	.word	0x7fffffff
 800a734:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a736:	1c5a      	adds	r2, r3, #1
 800a738:	9221      	str	r2, [sp, #132]	; 0x84
 800a73a:	785b      	ldrb	r3, [r3, #1]
 800a73c:	2b30      	cmp	r3, #48	; 0x30
 800a73e:	d0f9      	beq.n	800a734 <_strtod_l+0x2c8>
 800a740:	001a      	movs	r2, r3
 800a742:	3a31      	subs	r2, #49	; 0x31
 800a744:	2100      	movs	r1, #0
 800a746:	2a08      	cmp	r2, #8
 800a748:	d816      	bhi.n	800a778 <_strtod_l+0x30c>
 800a74a:	3b30      	subs	r3, #48	; 0x30
 800a74c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 800a74e:	930e      	str	r3, [sp, #56]	; 0x38
 800a750:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a752:	1c59      	adds	r1, r3, #1
 800a754:	9121      	str	r1, [sp, #132]	; 0x84
 800a756:	785b      	ldrb	r3, [r3, #1]
 800a758:	001a      	movs	r2, r3
 800a75a:	3a30      	subs	r2, #48	; 0x30
 800a75c:	2a09      	cmp	r2, #9
 800a75e:	d932      	bls.n	800a7c6 <_strtod_l+0x35a>
 800a760:	1b4a      	subs	r2, r1, r5
 800a762:	4dad      	ldr	r5, [pc, #692]	; (800aa18 <_strtod_l+0x5ac>)
 800a764:	0029      	movs	r1, r5
 800a766:	2a08      	cmp	r2, #8
 800a768:	dc03      	bgt.n	800a772 <_strtod_l+0x306>
 800a76a:	990e      	ldr	r1, [sp, #56]	; 0x38
 800a76c:	42a9      	cmp	r1, r5
 800a76e:	dd00      	ble.n	800a772 <_strtod_l+0x306>
 800a770:	0029      	movs	r1, r5
 800a772:	2c00      	cmp	r4, #0
 800a774:	d000      	beq.n	800a778 <_strtod_l+0x30c>
 800a776:	4249      	negs	r1, r1
 800a778:	9a05      	ldr	r2, [sp, #20]
 800a77a:	2a00      	cmp	r2, #0
 800a77c:	d149      	bne.n	800a812 <_strtod_l+0x3a6>
 800a77e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a780:	4310      	orrs	r0, r2
 800a782:	d000      	beq.n	800a786 <_strtod_l+0x31a>
 800a784:	e6b3      	b.n	800a4ee <_strtod_l+0x82>
 800a786:	9a07      	ldr	r2, [sp, #28]
 800a788:	2a00      	cmp	r2, #0
 800a78a:	d000      	beq.n	800a78e <_strtod_l+0x322>
 800a78c:	e6cf      	b.n	800a52e <_strtod_l+0xc2>
 800a78e:	2b4e      	cmp	r3, #78	; 0x4e
 800a790:	d025      	beq.n	800a7de <_strtod_l+0x372>
 800a792:	dc1f      	bgt.n	800a7d4 <_strtod_l+0x368>
 800a794:	2b49      	cmp	r3, #73	; 0x49
 800a796:	d000      	beq.n	800a79a <_strtod_l+0x32e>
 800a798:	e6c9      	b.n	800a52e <_strtod_l+0xc2>
 800a79a:	49a0      	ldr	r1, [pc, #640]	; (800aa1c <_strtod_l+0x5b0>)
 800a79c:	a821      	add	r0, sp, #132	; 0x84
 800a79e:	f001 ffc1 	bl	800c724 <__match>
 800a7a2:	2800      	cmp	r0, #0
 800a7a4:	d100      	bne.n	800a7a8 <_strtod_l+0x33c>
 800a7a6:	e6c2      	b.n	800a52e <_strtod_l+0xc2>
 800a7a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a7aa:	499d      	ldr	r1, [pc, #628]	; (800aa20 <_strtod_l+0x5b4>)
 800a7ac:	3b01      	subs	r3, #1
 800a7ae:	a821      	add	r0, sp, #132	; 0x84
 800a7b0:	9321      	str	r3, [sp, #132]	; 0x84
 800a7b2:	f001 ffb7 	bl	800c724 <__match>
 800a7b6:	2800      	cmp	r0, #0
 800a7b8:	d102      	bne.n	800a7c0 <_strtod_l+0x354>
 800a7ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a7bc:	3301      	adds	r3, #1
 800a7be:	9321      	str	r3, [sp, #132]	; 0x84
 800a7c0:	4f98      	ldr	r7, [pc, #608]	; (800aa24 <_strtod_l+0x5b8>)
 800a7c2:	2600      	movs	r6, #0
 800a7c4:	e693      	b.n	800a4ee <_strtod_l+0x82>
 800a7c6:	220a      	movs	r2, #10
 800a7c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800a7ca:	434a      	muls	r2, r1
 800a7cc:	18d2      	adds	r2, r2, r3
 800a7ce:	3a30      	subs	r2, #48	; 0x30
 800a7d0:	920e      	str	r2, [sp, #56]	; 0x38
 800a7d2:	e7bd      	b.n	800a750 <_strtod_l+0x2e4>
 800a7d4:	2b69      	cmp	r3, #105	; 0x69
 800a7d6:	d0e0      	beq.n	800a79a <_strtod_l+0x32e>
 800a7d8:	2b6e      	cmp	r3, #110	; 0x6e
 800a7da:	d000      	beq.n	800a7de <_strtod_l+0x372>
 800a7dc:	e6a7      	b.n	800a52e <_strtod_l+0xc2>
 800a7de:	4992      	ldr	r1, [pc, #584]	; (800aa28 <_strtod_l+0x5bc>)
 800a7e0:	a821      	add	r0, sp, #132	; 0x84
 800a7e2:	f001 ff9f 	bl	800c724 <__match>
 800a7e6:	2800      	cmp	r0, #0
 800a7e8:	d100      	bne.n	800a7ec <_strtod_l+0x380>
 800a7ea:	e6a0      	b.n	800a52e <_strtod_l+0xc2>
 800a7ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a7ee:	781b      	ldrb	r3, [r3, #0]
 800a7f0:	2b28      	cmp	r3, #40	; 0x28
 800a7f2:	d10c      	bne.n	800a80e <_strtod_l+0x3a2>
 800a7f4:	aa24      	add	r2, sp, #144	; 0x90
 800a7f6:	498d      	ldr	r1, [pc, #564]	; (800aa2c <_strtod_l+0x5c0>)
 800a7f8:	a821      	add	r0, sp, #132	; 0x84
 800a7fa:	f001 ffa7 	bl	800c74c <__hexnan>
 800a7fe:	2805      	cmp	r0, #5
 800a800:	d105      	bne.n	800a80e <_strtod_l+0x3a2>
 800a802:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800a804:	4a87      	ldr	r2, [pc, #540]	; (800aa24 <_strtod_l+0x5b8>)
 800a806:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800a808:	431a      	orrs	r2, r3
 800a80a:	0017      	movs	r7, r2
 800a80c:	e66f      	b.n	800a4ee <_strtod_l+0x82>
 800a80e:	4f88      	ldr	r7, [pc, #544]	; (800aa30 <_strtod_l+0x5c4>)
 800a810:	e7d7      	b.n	800a7c2 <_strtod_l+0x356>
 800a812:	4663      	mov	r3, ip
 800a814:	1acb      	subs	r3, r1, r3
 800a816:	9307      	str	r3, [sp, #28]
 800a818:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a81a:	2b00      	cmp	r3, #0
 800a81c:	d101      	bne.n	800a822 <_strtod_l+0x3b6>
 800a81e:	9b05      	ldr	r3, [sp, #20]
 800a820:	930a      	str	r3, [sp, #40]	; 0x28
 800a822:	9c05      	ldr	r4, [sp, #20]
 800a824:	2c10      	cmp	r4, #16
 800a826:	dd00      	ble.n	800a82a <_strtod_l+0x3be>
 800a828:	2410      	movs	r4, #16
 800a82a:	9808      	ldr	r0, [sp, #32]
 800a82c:	f7f8 fb0a 	bl	8002e44 <__aeabi_ui2d>
 800a830:	9b05      	ldr	r3, [sp, #20]
 800a832:	0006      	movs	r6, r0
 800a834:	000f      	movs	r7, r1
 800a836:	2b09      	cmp	r3, #9
 800a838:	dc15      	bgt.n	800a866 <_strtod_l+0x3fa>
 800a83a:	9b07      	ldr	r3, [sp, #28]
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	d100      	bne.n	800a842 <_strtod_l+0x3d6>
 800a840:	e655      	b.n	800a4ee <_strtod_l+0x82>
 800a842:	9b07      	ldr	r3, [sp, #28]
 800a844:	2b00      	cmp	r3, #0
 800a846:	dc00      	bgt.n	800a84a <_strtod_l+0x3de>
 800a848:	e07d      	b.n	800a946 <_strtod_l+0x4da>
 800a84a:	2b16      	cmp	r3, #22
 800a84c:	dc62      	bgt.n	800a914 <_strtod_l+0x4a8>
 800a84e:	00dc      	lsls	r4, r3, #3
 800a850:	4b78      	ldr	r3, [pc, #480]	; (800aa34 <_strtod_l+0x5c8>)
 800a852:	0032      	movs	r2, r6
 800a854:	1919      	adds	r1, r3, r4
 800a856:	003b      	movs	r3, r7
 800a858:	6808      	ldr	r0, [r1, #0]
 800a85a:	6849      	ldr	r1, [r1, #4]
 800a85c:	f7f7 fcac 	bl	80021b8 <__aeabi_dmul>
 800a860:	0006      	movs	r6, r0
 800a862:	000f      	movs	r7, r1
 800a864:	e643      	b.n	800a4ee <_strtod_l+0x82>
 800a866:	0022      	movs	r2, r4
 800a868:	4b72      	ldr	r3, [pc, #456]	; (800aa34 <_strtod_l+0x5c8>)
 800a86a:	3a09      	subs	r2, #9
 800a86c:	00d2      	lsls	r2, r2, #3
 800a86e:	189b      	adds	r3, r3, r2
 800a870:	681a      	ldr	r2, [r3, #0]
 800a872:	685b      	ldr	r3, [r3, #4]
 800a874:	f7f7 fca0 	bl	80021b8 <__aeabi_dmul>
 800a878:	0006      	movs	r6, r0
 800a87a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a87c:	000f      	movs	r7, r1
 800a87e:	f7f8 fae1 	bl	8002e44 <__aeabi_ui2d>
 800a882:	000b      	movs	r3, r1
 800a884:	0002      	movs	r2, r0
 800a886:	0039      	movs	r1, r7
 800a888:	0030      	movs	r0, r6
 800a88a:	f7f6 fd6f 	bl	800136c <__aeabi_dadd>
 800a88e:	9b05      	ldr	r3, [sp, #20]
 800a890:	0006      	movs	r6, r0
 800a892:	000f      	movs	r7, r1
 800a894:	2b0f      	cmp	r3, #15
 800a896:	ddd0      	ble.n	800a83a <_strtod_l+0x3ce>
 800a898:	9b05      	ldr	r3, [sp, #20]
 800a89a:	1b1c      	subs	r4, r3, r4
 800a89c:	9b07      	ldr	r3, [sp, #28]
 800a89e:	18e4      	adds	r4, r4, r3
 800a8a0:	2c00      	cmp	r4, #0
 800a8a2:	dc00      	bgt.n	800a8a6 <_strtod_l+0x43a>
 800a8a4:	e094      	b.n	800a9d0 <_strtod_l+0x564>
 800a8a6:	230f      	movs	r3, #15
 800a8a8:	4023      	ands	r3, r4
 800a8aa:	d00a      	beq.n	800a8c2 <_strtod_l+0x456>
 800a8ac:	4961      	ldr	r1, [pc, #388]	; (800aa34 <_strtod_l+0x5c8>)
 800a8ae:	00db      	lsls	r3, r3, #3
 800a8b0:	18c9      	adds	r1, r1, r3
 800a8b2:	0032      	movs	r2, r6
 800a8b4:	6808      	ldr	r0, [r1, #0]
 800a8b6:	6849      	ldr	r1, [r1, #4]
 800a8b8:	003b      	movs	r3, r7
 800a8ba:	f7f7 fc7d 	bl	80021b8 <__aeabi_dmul>
 800a8be:	0006      	movs	r6, r0
 800a8c0:	000f      	movs	r7, r1
 800a8c2:	230f      	movs	r3, #15
 800a8c4:	439c      	bics	r4, r3
 800a8c6:	d06e      	beq.n	800a9a6 <_strtod_l+0x53a>
 800a8c8:	3326      	adds	r3, #38	; 0x26
 800a8ca:	33ff      	adds	r3, #255	; 0xff
 800a8cc:	429c      	cmp	r4, r3
 800a8ce:	dd48      	ble.n	800a962 <_strtod_l+0x4f6>
 800a8d0:	2400      	movs	r4, #0
 800a8d2:	9405      	str	r4, [sp, #20]
 800a8d4:	940b      	str	r4, [sp, #44]	; 0x2c
 800a8d6:	940a      	str	r4, [sp, #40]	; 0x28
 800a8d8:	2322      	movs	r3, #34	; 0x22
 800a8da:	2600      	movs	r6, #0
 800a8dc:	9a04      	ldr	r2, [sp, #16]
 800a8de:	4f51      	ldr	r7, [pc, #324]	; (800aa24 <_strtod_l+0x5b8>)
 800a8e0:	6013      	str	r3, [r2, #0]
 800a8e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a8e4:	42b3      	cmp	r3, r6
 800a8e6:	d100      	bne.n	800a8ea <_strtod_l+0x47e>
 800a8e8:	e601      	b.n	800a4ee <_strtod_l+0x82>
 800a8ea:	9922      	ldr	r1, [sp, #136]	; 0x88
 800a8ec:	9804      	ldr	r0, [sp, #16]
 800a8ee:	f002 f8bf 	bl	800ca70 <_Bfree>
 800a8f2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800a8f4:	9804      	ldr	r0, [sp, #16]
 800a8f6:	f002 f8bb 	bl	800ca70 <_Bfree>
 800a8fa:	9905      	ldr	r1, [sp, #20]
 800a8fc:	9804      	ldr	r0, [sp, #16]
 800a8fe:	f002 f8b7 	bl	800ca70 <_Bfree>
 800a902:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a904:	9804      	ldr	r0, [sp, #16]
 800a906:	f002 f8b3 	bl	800ca70 <_Bfree>
 800a90a:	0021      	movs	r1, r4
 800a90c:	9804      	ldr	r0, [sp, #16]
 800a90e:	f002 f8af 	bl	800ca70 <_Bfree>
 800a912:	e5ec      	b.n	800a4ee <_strtod_l+0x82>
 800a914:	2325      	movs	r3, #37	; 0x25
 800a916:	9a05      	ldr	r2, [sp, #20]
 800a918:	1a9b      	subs	r3, r3, r2
 800a91a:	9a07      	ldr	r2, [sp, #28]
 800a91c:	4293      	cmp	r3, r2
 800a91e:	dbbb      	blt.n	800a898 <_strtod_l+0x42c>
 800a920:	230f      	movs	r3, #15
 800a922:	9a05      	ldr	r2, [sp, #20]
 800a924:	4c43      	ldr	r4, [pc, #268]	; (800aa34 <_strtod_l+0x5c8>)
 800a926:	1a9d      	subs	r5, r3, r2
 800a928:	00e9      	lsls	r1, r5, #3
 800a92a:	1861      	adds	r1, r4, r1
 800a92c:	0032      	movs	r2, r6
 800a92e:	6808      	ldr	r0, [r1, #0]
 800a930:	6849      	ldr	r1, [r1, #4]
 800a932:	003b      	movs	r3, r7
 800a934:	f7f7 fc40 	bl	80021b8 <__aeabi_dmul>
 800a938:	9b07      	ldr	r3, [sp, #28]
 800a93a:	1b5e      	subs	r6, r3, r5
 800a93c:	00f6      	lsls	r6, r6, #3
 800a93e:	19a6      	adds	r6, r4, r6
 800a940:	6832      	ldr	r2, [r6, #0]
 800a942:	6873      	ldr	r3, [r6, #4]
 800a944:	e78a      	b.n	800a85c <_strtod_l+0x3f0>
 800a946:	9b07      	ldr	r3, [sp, #28]
 800a948:	3316      	adds	r3, #22
 800a94a:	dba5      	blt.n	800a898 <_strtod_l+0x42c>
 800a94c:	9b07      	ldr	r3, [sp, #28]
 800a94e:	0030      	movs	r0, r6
 800a950:	00da      	lsls	r2, r3, #3
 800a952:	4b38      	ldr	r3, [pc, #224]	; (800aa34 <_strtod_l+0x5c8>)
 800a954:	0039      	movs	r1, r7
 800a956:	1a9b      	subs	r3, r3, r2
 800a958:	681a      	ldr	r2, [r3, #0]
 800a95a:	685b      	ldr	r3, [r3, #4]
 800a95c:	f7f7 f822 	bl	80019a4 <__aeabi_ddiv>
 800a960:	e77e      	b.n	800a860 <_strtod_l+0x3f4>
 800a962:	2300      	movs	r3, #0
 800a964:	0030      	movs	r0, r6
 800a966:	0039      	movs	r1, r7
 800a968:	001d      	movs	r5, r3
 800a96a:	1124      	asrs	r4, r4, #4
 800a96c:	2c01      	cmp	r4, #1
 800a96e:	dc1d      	bgt.n	800a9ac <_strtod_l+0x540>
 800a970:	2b00      	cmp	r3, #0
 800a972:	d001      	beq.n	800a978 <_strtod_l+0x50c>
 800a974:	0006      	movs	r6, r0
 800a976:	000f      	movs	r7, r1
 800a978:	4b2f      	ldr	r3, [pc, #188]	; (800aa38 <_strtod_l+0x5cc>)
 800a97a:	00ed      	lsls	r5, r5, #3
 800a97c:	18ff      	adds	r7, r7, r3
 800a97e:	4b2f      	ldr	r3, [pc, #188]	; (800aa3c <_strtod_l+0x5d0>)
 800a980:	0032      	movs	r2, r6
 800a982:	195d      	adds	r5, r3, r5
 800a984:	6828      	ldr	r0, [r5, #0]
 800a986:	6869      	ldr	r1, [r5, #4]
 800a988:	003b      	movs	r3, r7
 800a98a:	f7f7 fc15 	bl	80021b8 <__aeabi_dmul>
 800a98e:	4b25      	ldr	r3, [pc, #148]	; (800aa24 <_strtod_l+0x5b8>)
 800a990:	4a2b      	ldr	r2, [pc, #172]	; (800aa40 <_strtod_l+0x5d4>)
 800a992:	0006      	movs	r6, r0
 800a994:	400b      	ands	r3, r1
 800a996:	4293      	cmp	r3, r2
 800a998:	d89a      	bhi.n	800a8d0 <_strtod_l+0x464>
 800a99a:	4a2a      	ldr	r2, [pc, #168]	; (800aa44 <_strtod_l+0x5d8>)
 800a99c:	4293      	cmp	r3, r2
 800a99e:	d913      	bls.n	800a9c8 <_strtod_l+0x55c>
 800a9a0:	2601      	movs	r6, #1
 800a9a2:	4f29      	ldr	r7, [pc, #164]	; (800aa48 <_strtod_l+0x5dc>)
 800a9a4:	4276      	negs	r6, r6
 800a9a6:	2300      	movs	r3, #0
 800a9a8:	9306      	str	r3, [sp, #24]
 800a9aa:	e07b      	b.n	800aaa4 <_strtod_l+0x638>
 800a9ac:	2201      	movs	r2, #1
 800a9ae:	4214      	tst	r4, r2
 800a9b0:	d007      	beq.n	800a9c2 <_strtod_l+0x556>
 800a9b2:	4a22      	ldr	r2, [pc, #136]	; (800aa3c <_strtod_l+0x5d0>)
 800a9b4:	00eb      	lsls	r3, r5, #3
 800a9b6:	189b      	adds	r3, r3, r2
 800a9b8:	681a      	ldr	r2, [r3, #0]
 800a9ba:	685b      	ldr	r3, [r3, #4]
 800a9bc:	f7f7 fbfc 	bl	80021b8 <__aeabi_dmul>
 800a9c0:	2301      	movs	r3, #1
 800a9c2:	3501      	adds	r5, #1
 800a9c4:	1064      	asrs	r4, r4, #1
 800a9c6:	e7d1      	b.n	800a96c <_strtod_l+0x500>
 800a9c8:	23d4      	movs	r3, #212	; 0xd4
 800a9ca:	049b      	lsls	r3, r3, #18
 800a9cc:	18cf      	adds	r7, r1, r3
 800a9ce:	e7ea      	b.n	800a9a6 <_strtod_l+0x53a>
 800a9d0:	2c00      	cmp	r4, #0
 800a9d2:	d0e8      	beq.n	800a9a6 <_strtod_l+0x53a>
 800a9d4:	230f      	movs	r3, #15
 800a9d6:	4264      	negs	r4, r4
 800a9d8:	4023      	ands	r3, r4
 800a9da:	d00a      	beq.n	800a9f2 <_strtod_l+0x586>
 800a9dc:	4a15      	ldr	r2, [pc, #84]	; (800aa34 <_strtod_l+0x5c8>)
 800a9de:	00db      	lsls	r3, r3, #3
 800a9e0:	18d3      	adds	r3, r2, r3
 800a9e2:	0030      	movs	r0, r6
 800a9e4:	681a      	ldr	r2, [r3, #0]
 800a9e6:	685b      	ldr	r3, [r3, #4]
 800a9e8:	0039      	movs	r1, r7
 800a9ea:	f7f6 ffdb 	bl	80019a4 <__aeabi_ddiv>
 800a9ee:	0006      	movs	r6, r0
 800a9f0:	000f      	movs	r7, r1
 800a9f2:	1124      	asrs	r4, r4, #4
 800a9f4:	d0d7      	beq.n	800a9a6 <_strtod_l+0x53a>
 800a9f6:	2c1f      	cmp	r4, #31
 800a9f8:	dd28      	ble.n	800aa4c <_strtod_l+0x5e0>
 800a9fa:	2400      	movs	r4, #0
 800a9fc:	9405      	str	r4, [sp, #20]
 800a9fe:	940b      	str	r4, [sp, #44]	; 0x2c
 800aa00:	940a      	str	r4, [sp, #40]	; 0x28
 800aa02:	2322      	movs	r3, #34	; 0x22
 800aa04:	9a04      	ldr	r2, [sp, #16]
 800aa06:	2600      	movs	r6, #0
 800aa08:	6013      	str	r3, [r2, #0]
 800aa0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800aa0c:	2700      	movs	r7, #0
 800aa0e:	2b00      	cmp	r3, #0
 800aa10:	d000      	beq.n	800aa14 <_strtod_l+0x5a8>
 800aa12:	e76a      	b.n	800a8ea <_strtod_l+0x47e>
 800aa14:	e56b      	b.n	800a4ee <_strtod_l+0x82>
 800aa16:	46c0      	nop			; (mov r8, r8)
 800aa18:	00004e1f 	.word	0x00004e1f
 800aa1c:	0800e369 	.word	0x0800e369
 800aa20:	0800e3f3 	.word	0x0800e3f3
 800aa24:	7ff00000 	.word	0x7ff00000
 800aa28:	0800e371 	.word	0x0800e371
 800aa2c:	0800e3b4 	.word	0x0800e3b4
 800aa30:	fff80000 	.word	0xfff80000
 800aa34:	0800e430 	.word	0x0800e430
 800aa38:	fcb00000 	.word	0xfcb00000
 800aa3c:	0800e408 	.word	0x0800e408
 800aa40:	7ca00000 	.word	0x7ca00000
 800aa44:	7c900000 	.word	0x7c900000
 800aa48:	7fefffff 	.word	0x7fefffff
 800aa4c:	2310      	movs	r3, #16
 800aa4e:	4023      	ands	r3, r4
 800aa50:	9306      	str	r3, [sp, #24]
 800aa52:	d001      	beq.n	800aa58 <_strtod_l+0x5ec>
 800aa54:	236a      	movs	r3, #106	; 0x6a
 800aa56:	9306      	str	r3, [sp, #24]
 800aa58:	2300      	movs	r3, #0
 800aa5a:	0030      	movs	r0, r6
 800aa5c:	0039      	movs	r1, r7
 800aa5e:	001d      	movs	r5, r3
 800aa60:	2c00      	cmp	r4, #0
 800aa62:	dd00      	ble.n	800aa66 <_strtod_l+0x5fa>
 800aa64:	e10e      	b.n	800ac84 <_strtod_l+0x818>
 800aa66:	2b00      	cmp	r3, #0
 800aa68:	d001      	beq.n	800aa6e <_strtod_l+0x602>
 800aa6a:	0006      	movs	r6, r0
 800aa6c:	000f      	movs	r7, r1
 800aa6e:	9b06      	ldr	r3, [sp, #24]
 800aa70:	2b00      	cmp	r3, #0
 800aa72:	d00f      	beq.n	800aa94 <_strtod_l+0x628>
 800aa74:	236b      	movs	r3, #107	; 0x6b
 800aa76:	0079      	lsls	r1, r7, #1
 800aa78:	0d49      	lsrs	r1, r1, #21
 800aa7a:	003a      	movs	r2, r7
 800aa7c:	1a5b      	subs	r3, r3, r1
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	dd08      	ble.n	800aa94 <_strtod_l+0x628>
 800aa82:	2b1f      	cmp	r3, #31
 800aa84:	dc00      	bgt.n	800aa88 <_strtod_l+0x61c>
 800aa86:	e112      	b.n	800acae <_strtod_l+0x842>
 800aa88:	2600      	movs	r6, #0
 800aa8a:	2b34      	cmp	r3, #52	; 0x34
 800aa8c:	dc00      	bgt.n	800aa90 <_strtod_l+0x624>
 800aa8e:	e107      	b.n	800aca0 <_strtod_l+0x834>
 800aa90:	27dc      	movs	r7, #220	; 0xdc
 800aa92:	04bf      	lsls	r7, r7, #18
 800aa94:	2200      	movs	r2, #0
 800aa96:	2300      	movs	r3, #0
 800aa98:	0030      	movs	r0, r6
 800aa9a:	0039      	movs	r1, r7
 800aa9c:	f7f5 fccc 	bl	8000438 <__aeabi_dcmpeq>
 800aaa0:	2800      	cmp	r0, #0
 800aaa2:	d1aa      	bne.n	800a9fa <_strtod_l+0x58e>
 800aaa4:	9b08      	ldr	r3, [sp, #32]
 800aaa6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800aaa8:	9300      	str	r3, [sp, #0]
 800aaaa:	9912      	ldr	r1, [sp, #72]	; 0x48
 800aaac:	9b05      	ldr	r3, [sp, #20]
 800aaae:	9804      	ldr	r0, [sp, #16]
 800aab0:	f002 f835 	bl	800cb1e <__s2b>
 800aab4:	900b      	str	r0, [sp, #44]	; 0x2c
 800aab6:	2800      	cmp	r0, #0
 800aab8:	d100      	bne.n	800aabc <_strtod_l+0x650>
 800aaba:	e709      	b.n	800a8d0 <_strtod_l+0x464>
 800aabc:	9b07      	ldr	r3, [sp, #28]
 800aabe:	9a07      	ldr	r2, [sp, #28]
 800aac0:	17db      	asrs	r3, r3, #31
 800aac2:	4252      	negs	r2, r2
 800aac4:	4013      	ands	r3, r2
 800aac6:	9315      	str	r3, [sp, #84]	; 0x54
 800aac8:	9b07      	ldr	r3, [sp, #28]
 800aaca:	2400      	movs	r4, #0
 800aacc:	43db      	mvns	r3, r3
 800aace:	9a07      	ldr	r2, [sp, #28]
 800aad0:	17db      	asrs	r3, r3, #31
 800aad2:	401a      	ands	r2, r3
 800aad4:	921c      	str	r2, [sp, #112]	; 0x70
 800aad6:	9405      	str	r4, [sp, #20]
 800aad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800aada:	9804      	ldr	r0, [sp, #16]
 800aadc:	6859      	ldr	r1, [r3, #4]
 800aade:	f001 ff8f 	bl	800ca00 <_Balloc>
 800aae2:	900a      	str	r0, [sp, #40]	; 0x28
 800aae4:	2800      	cmp	r0, #0
 800aae6:	d100      	bne.n	800aaea <_strtod_l+0x67e>
 800aae8:	e6f6      	b.n	800a8d8 <_strtod_l+0x46c>
 800aaea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800aaec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aaee:	691b      	ldr	r3, [r3, #16]
 800aaf0:	310c      	adds	r1, #12
 800aaf2:	1c9a      	adds	r2, r3, #2
 800aaf4:	0092      	lsls	r2, r2, #2
 800aaf6:	300c      	adds	r0, #12
 800aaf8:	9308      	str	r3, [sp, #32]
 800aafa:	f001 ff76 	bl	800c9ea <memcpy>
 800aafe:	ab24      	add	r3, sp, #144	; 0x90
 800ab00:	9301      	str	r3, [sp, #4]
 800ab02:	ab23      	add	r3, sp, #140	; 0x8c
 800ab04:	9300      	str	r3, [sp, #0]
 800ab06:	0032      	movs	r2, r6
 800ab08:	003b      	movs	r3, r7
 800ab0a:	9804      	ldr	r0, [sp, #16]
 800ab0c:	960e      	str	r6, [sp, #56]	; 0x38
 800ab0e:	970f      	str	r7, [sp, #60]	; 0x3c
 800ab10:	f002 fab8 	bl	800d084 <__d2b>
 800ab14:	9022      	str	r0, [sp, #136]	; 0x88
 800ab16:	2800      	cmp	r0, #0
 800ab18:	d100      	bne.n	800ab1c <_strtod_l+0x6b0>
 800ab1a:	e6dd      	b.n	800a8d8 <_strtod_l+0x46c>
 800ab1c:	2101      	movs	r1, #1
 800ab1e:	9804      	ldr	r0, [sp, #16]
 800ab20:	f002 f884 	bl	800cc2c <__i2b>
 800ab24:	9005      	str	r0, [sp, #20]
 800ab26:	2800      	cmp	r0, #0
 800ab28:	d100      	bne.n	800ab2c <_strtod_l+0x6c0>
 800ab2a:	e6d5      	b.n	800a8d8 <_strtod_l+0x46c>
 800ab2c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ab2e:	2b00      	cmp	r3, #0
 800ab30:	da00      	bge.n	800ab34 <_strtod_l+0x6c8>
 800ab32:	e0c1      	b.n	800acb8 <_strtod_l+0x84c>
 800ab34:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ab36:	189d      	adds	r5, r3, r2
 800ab38:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ab3a:	4694      	mov	ip, r2
 800ab3c:	9906      	ldr	r1, [sp, #24]
 800ab3e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800ab40:	1a5b      	subs	r3, r3, r1
 800ab42:	2136      	movs	r1, #54	; 0x36
 800ab44:	189b      	adds	r3, r3, r2
 800ab46:	1a8a      	subs	r2, r1, r2
 800ab48:	49b2      	ldr	r1, [pc, #712]	; (800ae14 <_strtod_l+0x9a8>)
 800ab4a:	3b01      	subs	r3, #1
 800ab4c:	2001      	movs	r0, #1
 800ab4e:	428b      	cmp	r3, r1
 800ab50:	db00      	blt.n	800ab54 <_strtod_l+0x6e8>
 800ab52:	e0bd      	b.n	800acd0 <_strtod_l+0x864>
 800ab54:	1ac9      	subs	r1, r1, r3
 800ab56:	1a52      	subs	r2, r2, r1
 800ab58:	291f      	cmp	r1, #31
 800ab5a:	dd00      	ble.n	800ab5e <_strtod_l+0x6f2>
 800ab5c:	e0b1      	b.n	800acc2 <_strtod_l+0x856>
 800ab5e:	4088      	lsls	r0, r1
 800ab60:	2300      	movs	r3, #0
 800ab62:	9014      	str	r0, [sp, #80]	; 0x50
 800ab64:	9310      	str	r3, [sp, #64]	; 0x40
 800ab66:	18ab      	adds	r3, r5, r2
 800ab68:	9308      	str	r3, [sp, #32]
 800ab6a:	0013      	movs	r3, r2
 800ab6c:	9a06      	ldr	r2, [sp, #24]
 800ab6e:	4463      	add	r3, ip
 800ab70:	18d3      	adds	r3, r2, r3
 800ab72:	9a08      	ldr	r2, [sp, #32]
 800ab74:	930c      	str	r3, [sp, #48]	; 0x30
 800ab76:	002b      	movs	r3, r5
 800ab78:	4295      	cmp	r5, r2
 800ab7a:	dd00      	ble.n	800ab7e <_strtod_l+0x712>
 800ab7c:	0013      	movs	r3, r2
 800ab7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ab80:	4293      	cmp	r3, r2
 800ab82:	dd00      	ble.n	800ab86 <_strtod_l+0x71a>
 800ab84:	0013      	movs	r3, r2
 800ab86:	2b00      	cmp	r3, #0
 800ab88:	dd06      	ble.n	800ab98 <_strtod_l+0x72c>
 800ab8a:	9a08      	ldr	r2, [sp, #32]
 800ab8c:	1aed      	subs	r5, r5, r3
 800ab8e:	1ad2      	subs	r2, r2, r3
 800ab90:	9208      	str	r2, [sp, #32]
 800ab92:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ab94:	1ad2      	subs	r2, r2, r3
 800ab96:	920c      	str	r2, [sp, #48]	; 0x30
 800ab98:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ab9a:	2b00      	cmp	r3, #0
 800ab9c:	d017      	beq.n	800abce <_strtod_l+0x762>
 800ab9e:	001a      	movs	r2, r3
 800aba0:	9905      	ldr	r1, [sp, #20]
 800aba2:	9804      	ldr	r0, [sp, #16]
 800aba4:	f002 f8da 	bl	800cd5c <__pow5mult>
 800aba8:	9005      	str	r0, [sp, #20]
 800abaa:	2800      	cmp	r0, #0
 800abac:	d100      	bne.n	800abb0 <_strtod_l+0x744>
 800abae:	e693      	b.n	800a8d8 <_strtod_l+0x46c>
 800abb0:	0001      	movs	r1, r0
 800abb2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800abb4:	9804      	ldr	r0, [sp, #16]
 800abb6:	f002 f842 	bl	800cc3e <__multiply>
 800abba:	9012      	str	r0, [sp, #72]	; 0x48
 800abbc:	2800      	cmp	r0, #0
 800abbe:	d100      	bne.n	800abc2 <_strtod_l+0x756>
 800abc0:	e68a      	b.n	800a8d8 <_strtod_l+0x46c>
 800abc2:	9922      	ldr	r1, [sp, #136]	; 0x88
 800abc4:	9804      	ldr	r0, [sp, #16]
 800abc6:	f001 ff53 	bl	800ca70 <_Bfree>
 800abca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800abcc:	9322      	str	r3, [sp, #136]	; 0x88
 800abce:	9b08      	ldr	r3, [sp, #32]
 800abd0:	2b00      	cmp	r3, #0
 800abd2:	dd00      	ble.n	800abd6 <_strtod_l+0x76a>
 800abd4:	e07f      	b.n	800acd6 <_strtod_l+0x86a>
 800abd6:	9b07      	ldr	r3, [sp, #28]
 800abd8:	2b00      	cmp	r3, #0
 800abda:	dd08      	ble.n	800abee <_strtod_l+0x782>
 800abdc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800abde:	990a      	ldr	r1, [sp, #40]	; 0x28
 800abe0:	9804      	ldr	r0, [sp, #16]
 800abe2:	f002 f8bb 	bl	800cd5c <__pow5mult>
 800abe6:	900a      	str	r0, [sp, #40]	; 0x28
 800abe8:	2800      	cmp	r0, #0
 800abea:	d100      	bne.n	800abee <_strtod_l+0x782>
 800abec:	e674      	b.n	800a8d8 <_strtod_l+0x46c>
 800abee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800abf0:	2b00      	cmp	r3, #0
 800abf2:	dd08      	ble.n	800ac06 <_strtod_l+0x79a>
 800abf4:	001a      	movs	r2, r3
 800abf6:	990a      	ldr	r1, [sp, #40]	; 0x28
 800abf8:	9804      	ldr	r0, [sp, #16]
 800abfa:	f002 f901 	bl	800ce00 <__lshift>
 800abfe:	900a      	str	r0, [sp, #40]	; 0x28
 800ac00:	2800      	cmp	r0, #0
 800ac02:	d100      	bne.n	800ac06 <_strtod_l+0x79a>
 800ac04:	e668      	b.n	800a8d8 <_strtod_l+0x46c>
 800ac06:	2d00      	cmp	r5, #0
 800ac08:	dd08      	ble.n	800ac1c <_strtod_l+0x7b0>
 800ac0a:	002a      	movs	r2, r5
 800ac0c:	9905      	ldr	r1, [sp, #20]
 800ac0e:	9804      	ldr	r0, [sp, #16]
 800ac10:	f002 f8f6 	bl	800ce00 <__lshift>
 800ac14:	9005      	str	r0, [sp, #20]
 800ac16:	2800      	cmp	r0, #0
 800ac18:	d100      	bne.n	800ac1c <_strtod_l+0x7b0>
 800ac1a:	e65d      	b.n	800a8d8 <_strtod_l+0x46c>
 800ac1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ac1e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ac20:	9804      	ldr	r0, [sp, #16]
 800ac22:	f002 f959 	bl	800ced8 <__mdiff>
 800ac26:	1e04      	subs	r4, r0, #0
 800ac28:	d100      	bne.n	800ac2c <_strtod_l+0x7c0>
 800ac2a:	e655      	b.n	800a8d8 <_strtod_l+0x46c>
 800ac2c:	2500      	movs	r5, #0
 800ac2e:	68c3      	ldr	r3, [r0, #12]
 800ac30:	9905      	ldr	r1, [sp, #20]
 800ac32:	60c5      	str	r5, [r0, #12]
 800ac34:	9312      	str	r3, [sp, #72]	; 0x48
 800ac36:	f002 f935 	bl	800cea4 <__mcmp>
 800ac3a:	42a8      	cmp	r0, r5
 800ac3c:	da55      	bge.n	800acea <_strtod_l+0x87e>
 800ac3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ac40:	42ab      	cmp	r3, r5
 800ac42:	d11b      	bne.n	800ac7c <_strtod_l+0x810>
 800ac44:	42ae      	cmp	r6, r5
 800ac46:	d119      	bne.n	800ac7c <_strtod_l+0x810>
 800ac48:	033b      	lsls	r3, r7, #12
 800ac4a:	42ab      	cmp	r3, r5
 800ac4c:	d116      	bne.n	800ac7c <_strtod_l+0x810>
 800ac4e:	22d6      	movs	r2, #214	; 0xd6
 800ac50:	4b71      	ldr	r3, [pc, #452]	; (800ae18 <_strtod_l+0x9ac>)
 800ac52:	04d2      	lsls	r2, r2, #19
 800ac54:	403b      	ands	r3, r7
 800ac56:	4293      	cmp	r3, r2
 800ac58:	d910      	bls.n	800ac7c <_strtod_l+0x810>
 800ac5a:	6963      	ldr	r3, [r4, #20]
 800ac5c:	42ab      	cmp	r3, r5
 800ac5e:	d102      	bne.n	800ac66 <_strtod_l+0x7fa>
 800ac60:	6923      	ldr	r3, [r4, #16]
 800ac62:	2b01      	cmp	r3, #1
 800ac64:	dd0a      	ble.n	800ac7c <_strtod_l+0x810>
 800ac66:	0021      	movs	r1, r4
 800ac68:	2201      	movs	r2, #1
 800ac6a:	9804      	ldr	r0, [sp, #16]
 800ac6c:	f002 f8c8 	bl	800ce00 <__lshift>
 800ac70:	9905      	ldr	r1, [sp, #20]
 800ac72:	0004      	movs	r4, r0
 800ac74:	f002 f916 	bl	800cea4 <__mcmp>
 800ac78:	2800      	cmp	r0, #0
 800ac7a:	dc6b      	bgt.n	800ad54 <_strtod_l+0x8e8>
 800ac7c:	9b06      	ldr	r3, [sp, #24]
 800ac7e:	2b00      	cmp	r3, #0
 800ac80:	d178      	bne.n	800ad74 <_strtod_l+0x908>
 800ac82:	e632      	b.n	800a8ea <_strtod_l+0x47e>
 800ac84:	2201      	movs	r2, #1
 800ac86:	4214      	tst	r4, r2
 800ac88:	d007      	beq.n	800ac9a <_strtod_l+0x82e>
 800ac8a:	4a64      	ldr	r2, [pc, #400]	; (800ae1c <_strtod_l+0x9b0>)
 800ac8c:	00eb      	lsls	r3, r5, #3
 800ac8e:	18d3      	adds	r3, r2, r3
 800ac90:	681a      	ldr	r2, [r3, #0]
 800ac92:	685b      	ldr	r3, [r3, #4]
 800ac94:	f7f7 fa90 	bl	80021b8 <__aeabi_dmul>
 800ac98:	2301      	movs	r3, #1
 800ac9a:	3501      	adds	r5, #1
 800ac9c:	1064      	asrs	r4, r4, #1
 800ac9e:	e6df      	b.n	800aa60 <_strtod_l+0x5f4>
 800aca0:	2101      	movs	r1, #1
 800aca2:	3b20      	subs	r3, #32
 800aca4:	4249      	negs	r1, r1
 800aca6:	4099      	lsls	r1, r3
 800aca8:	400a      	ands	r2, r1
 800acaa:	0017      	movs	r7, r2
 800acac:	e6f2      	b.n	800aa94 <_strtod_l+0x628>
 800acae:	2201      	movs	r2, #1
 800acb0:	4252      	negs	r2, r2
 800acb2:	409a      	lsls	r2, r3
 800acb4:	4016      	ands	r6, r2
 800acb6:	e6ed      	b.n	800aa94 <_strtod_l+0x628>
 800acb8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800acba:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800acbc:	1ad2      	subs	r2, r2, r3
 800acbe:	4694      	mov	ip, r2
 800acc0:	e73c      	b.n	800ab3c <_strtod_l+0x6d0>
 800acc2:	4957      	ldr	r1, [pc, #348]	; (800ae20 <_strtod_l+0x9b4>)
 800acc4:	1acb      	subs	r3, r1, r3
 800acc6:	0001      	movs	r1, r0
 800acc8:	4099      	lsls	r1, r3
 800acca:	9110      	str	r1, [sp, #64]	; 0x40
 800accc:	9014      	str	r0, [sp, #80]	; 0x50
 800acce:	e74a      	b.n	800ab66 <_strtod_l+0x6fa>
 800acd0:	2300      	movs	r3, #0
 800acd2:	9310      	str	r3, [sp, #64]	; 0x40
 800acd4:	e7fa      	b.n	800accc <_strtod_l+0x860>
 800acd6:	9a08      	ldr	r2, [sp, #32]
 800acd8:	9922      	ldr	r1, [sp, #136]	; 0x88
 800acda:	9804      	ldr	r0, [sp, #16]
 800acdc:	f002 f890 	bl	800ce00 <__lshift>
 800ace0:	9022      	str	r0, [sp, #136]	; 0x88
 800ace2:	2800      	cmp	r0, #0
 800ace4:	d000      	beq.n	800ace8 <_strtod_l+0x87c>
 800ace6:	e776      	b.n	800abd6 <_strtod_l+0x76a>
 800ace8:	e5f6      	b.n	800a8d8 <_strtod_l+0x46c>
 800acea:	970c      	str	r7, [sp, #48]	; 0x30
 800acec:	2800      	cmp	r0, #0
 800acee:	d000      	beq.n	800acf2 <_strtod_l+0x886>
 800acf0:	e0a0      	b.n	800ae34 <_strtod_l+0x9c8>
 800acf2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800acf4:	033b      	lsls	r3, r7, #12
 800acf6:	0b1b      	lsrs	r3, r3, #12
 800acf8:	2a00      	cmp	r2, #0
 800acfa:	d027      	beq.n	800ad4c <_strtod_l+0x8e0>
 800acfc:	4a49      	ldr	r2, [pc, #292]	; (800ae24 <_strtod_l+0x9b8>)
 800acfe:	4293      	cmp	r3, r2
 800ad00:	d157      	bne.n	800adb2 <_strtod_l+0x946>
 800ad02:	2201      	movs	r2, #1
 800ad04:	9b06      	ldr	r3, [sp, #24]
 800ad06:	4252      	negs	r2, r2
 800ad08:	0031      	movs	r1, r6
 800ad0a:	0010      	movs	r0, r2
 800ad0c:	2b00      	cmp	r3, #0
 800ad0e:	d00b      	beq.n	800ad28 <_strtod_l+0x8bc>
 800ad10:	25d4      	movs	r5, #212	; 0xd4
 800ad12:	4b41      	ldr	r3, [pc, #260]	; (800ae18 <_strtod_l+0x9ac>)
 800ad14:	04ed      	lsls	r5, r5, #19
 800ad16:	403b      	ands	r3, r7
 800ad18:	0010      	movs	r0, r2
 800ad1a:	42ab      	cmp	r3, r5
 800ad1c:	d804      	bhi.n	800ad28 <_strtod_l+0x8bc>
 800ad1e:	306c      	adds	r0, #108	; 0x6c
 800ad20:	0d1b      	lsrs	r3, r3, #20
 800ad22:	1ac3      	subs	r3, r0, r3
 800ad24:	409a      	lsls	r2, r3
 800ad26:	0010      	movs	r0, r2
 800ad28:	4281      	cmp	r1, r0
 800ad2a:	d142      	bne.n	800adb2 <_strtod_l+0x946>
 800ad2c:	4b3e      	ldr	r3, [pc, #248]	; (800ae28 <_strtod_l+0x9bc>)
 800ad2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ad30:	429a      	cmp	r2, r3
 800ad32:	d102      	bne.n	800ad3a <_strtod_l+0x8ce>
 800ad34:	1c4b      	adds	r3, r1, #1
 800ad36:	d100      	bne.n	800ad3a <_strtod_l+0x8ce>
 800ad38:	e5ce      	b.n	800a8d8 <_strtod_l+0x46c>
 800ad3a:	4b37      	ldr	r3, [pc, #220]	; (800ae18 <_strtod_l+0x9ac>)
 800ad3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ad3e:	2600      	movs	r6, #0
 800ad40:	401a      	ands	r2, r3
 800ad42:	0013      	movs	r3, r2
 800ad44:	2280      	movs	r2, #128	; 0x80
 800ad46:	0352      	lsls	r2, r2, #13
 800ad48:	189f      	adds	r7, r3, r2
 800ad4a:	e797      	b.n	800ac7c <_strtod_l+0x810>
 800ad4c:	2b00      	cmp	r3, #0
 800ad4e:	d130      	bne.n	800adb2 <_strtod_l+0x946>
 800ad50:	2e00      	cmp	r6, #0
 800ad52:	d12e      	bne.n	800adb2 <_strtod_l+0x946>
 800ad54:	9906      	ldr	r1, [sp, #24]
 800ad56:	003b      	movs	r3, r7
 800ad58:	4a2f      	ldr	r2, [pc, #188]	; (800ae18 <_strtod_l+0x9ac>)
 800ad5a:	2900      	cmp	r1, #0
 800ad5c:	d020      	beq.n	800ada0 <_strtod_l+0x934>
 800ad5e:	0011      	movs	r1, r2
 800ad60:	20d6      	movs	r0, #214	; 0xd6
 800ad62:	4039      	ands	r1, r7
 800ad64:	04c0      	lsls	r0, r0, #19
 800ad66:	4281      	cmp	r1, r0
 800ad68:	dc1a      	bgt.n	800ada0 <_strtod_l+0x934>
 800ad6a:	23dc      	movs	r3, #220	; 0xdc
 800ad6c:	049b      	lsls	r3, r3, #18
 800ad6e:	4299      	cmp	r1, r3
 800ad70:	dc00      	bgt.n	800ad74 <_strtod_l+0x908>
 800ad72:	e646      	b.n	800aa02 <_strtod_l+0x596>
 800ad74:	4b2d      	ldr	r3, [pc, #180]	; (800ae2c <_strtod_l+0x9c0>)
 800ad76:	0030      	movs	r0, r6
 800ad78:	931b      	str	r3, [sp, #108]	; 0x6c
 800ad7a:	2300      	movs	r3, #0
 800ad7c:	931a      	str	r3, [sp, #104]	; 0x68
 800ad7e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800ad80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800ad82:	0039      	movs	r1, r7
 800ad84:	f7f7 fa18 	bl	80021b8 <__aeabi_dmul>
 800ad88:	0006      	movs	r6, r0
 800ad8a:	000f      	movs	r7, r1
 800ad8c:	1e0b      	subs	r3, r1, #0
 800ad8e:	d000      	beq.n	800ad92 <_strtod_l+0x926>
 800ad90:	e5ab      	b.n	800a8ea <_strtod_l+0x47e>
 800ad92:	2800      	cmp	r0, #0
 800ad94:	d000      	beq.n	800ad98 <_strtod_l+0x92c>
 800ad96:	e5a8      	b.n	800a8ea <_strtod_l+0x47e>
 800ad98:	9a04      	ldr	r2, [sp, #16]
 800ad9a:	3322      	adds	r3, #34	; 0x22
 800ad9c:	6013      	str	r3, [r2, #0]
 800ad9e:	e5a4      	b.n	800a8ea <_strtod_l+0x47e>
 800ada0:	2601      	movs	r6, #1
 800ada2:	4013      	ands	r3, r2
 800ada4:	4a22      	ldr	r2, [pc, #136]	; (800ae30 <_strtod_l+0x9c4>)
 800ada6:	4276      	negs	r6, r6
 800ada8:	189b      	adds	r3, r3, r2
 800adaa:	4a1e      	ldr	r2, [pc, #120]	; (800ae24 <_strtod_l+0x9b8>)
 800adac:	431a      	orrs	r2, r3
 800adae:	0017      	movs	r7, r2
 800adb0:	e764      	b.n	800ac7c <_strtod_l+0x810>
 800adb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800adb4:	2b00      	cmp	r3, #0
 800adb6:	d015      	beq.n	800ade4 <_strtod_l+0x978>
 800adb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800adba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800adbc:	4213      	tst	r3, r2
 800adbe:	d100      	bne.n	800adc2 <_strtod_l+0x956>
 800adc0:	e75c      	b.n	800ac7c <_strtod_l+0x810>
 800adc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800adc4:	9a06      	ldr	r2, [sp, #24]
 800adc6:	0030      	movs	r0, r6
 800adc8:	0039      	movs	r1, r7
 800adca:	2b00      	cmp	r3, #0
 800adcc:	d00f      	beq.n	800adee <_strtod_l+0x982>
 800adce:	f7ff fb35 	bl	800a43c <sulp>
 800add2:	0002      	movs	r2, r0
 800add4:	000b      	movs	r3, r1
 800add6:	980e      	ldr	r0, [sp, #56]	; 0x38
 800add8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800adda:	f7f6 fac7 	bl	800136c <__aeabi_dadd>
 800adde:	0006      	movs	r6, r0
 800ade0:	000f      	movs	r7, r1
 800ade2:	e74b      	b.n	800ac7c <_strtod_l+0x810>
 800ade4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800ade6:	4233      	tst	r3, r6
 800ade8:	d100      	bne.n	800adec <_strtod_l+0x980>
 800adea:	e747      	b.n	800ac7c <_strtod_l+0x810>
 800adec:	e7e9      	b.n	800adc2 <_strtod_l+0x956>
 800adee:	f7ff fb25 	bl	800a43c <sulp>
 800adf2:	0002      	movs	r2, r0
 800adf4:	000b      	movs	r3, r1
 800adf6:	980e      	ldr	r0, [sp, #56]	; 0x38
 800adf8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800adfa:	f7f7 fc4f 	bl	800269c <__aeabi_dsub>
 800adfe:	2200      	movs	r2, #0
 800ae00:	2300      	movs	r3, #0
 800ae02:	0006      	movs	r6, r0
 800ae04:	000f      	movs	r7, r1
 800ae06:	f7f5 fb17 	bl	8000438 <__aeabi_dcmpeq>
 800ae0a:	2800      	cmp	r0, #0
 800ae0c:	d000      	beq.n	800ae10 <_strtod_l+0x9a4>
 800ae0e:	e5f8      	b.n	800aa02 <_strtod_l+0x596>
 800ae10:	e734      	b.n	800ac7c <_strtod_l+0x810>
 800ae12:	46c0      	nop			; (mov r8, r8)
 800ae14:	fffffc02 	.word	0xfffffc02
 800ae18:	7ff00000 	.word	0x7ff00000
 800ae1c:	0800e3c8 	.word	0x0800e3c8
 800ae20:	fffffbe2 	.word	0xfffffbe2
 800ae24:	000fffff 	.word	0x000fffff
 800ae28:	7fefffff 	.word	0x7fefffff
 800ae2c:	39500000 	.word	0x39500000
 800ae30:	fff00000 	.word	0xfff00000
 800ae34:	9905      	ldr	r1, [sp, #20]
 800ae36:	0020      	movs	r0, r4
 800ae38:	f002 f978 	bl	800d12c <__ratio>
 800ae3c:	2380      	movs	r3, #128	; 0x80
 800ae3e:	2200      	movs	r2, #0
 800ae40:	05db      	lsls	r3, r3, #23
 800ae42:	9008      	str	r0, [sp, #32]
 800ae44:	9109      	str	r1, [sp, #36]	; 0x24
 800ae46:	f7f5 fb07 	bl	8000458 <__aeabi_dcmple>
 800ae4a:	2800      	cmp	r0, #0
 800ae4c:	d100      	bne.n	800ae50 <_strtod_l+0x9e4>
 800ae4e:	e07f      	b.n	800af50 <_strtod_l+0xae4>
 800ae50:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ae52:	2b00      	cmp	r3, #0
 800ae54:	d04b      	beq.n	800aeee <_strtod_l+0xa82>
 800ae56:	2200      	movs	r2, #0
 800ae58:	4b8a      	ldr	r3, [pc, #552]	; (800b084 <_strtod_l+0xc18>)
 800ae5a:	9210      	str	r2, [sp, #64]	; 0x40
 800ae5c:	9311      	str	r3, [sp, #68]	; 0x44
 800ae5e:	4b89      	ldr	r3, [pc, #548]	; (800b084 <_strtod_l+0xc18>)
 800ae60:	9308      	str	r3, [sp, #32]
 800ae62:	4a89      	ldr	r2, [pc, #548]	; (800b088 <_strtod_l+0xc1c>)
 800ae64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae66:	4013      	ands	r3, r2
 800ae68:	9314      	str	r3, [sp, #80]	; 0x50
 800ae6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ae6c:	4b87      	ldr	r3, [pc, #540]	; (800b08c <_strtod_l+0xc20>)
 800ae6e:	429a      	cmp	r2, r3
 800ae70:	d000      	beq.n	800ae74 <_strtod_l+0xa08>
 800ae72:	e0ba      	b.n	800afea <_strtod_l+0xb7e>
 800ae74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ae76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ae78:	921a      	str	r2, [sp, #104]	; 0x68
 800ae7a:	931b      	str	r3, [sp, #108]	; 0x6c
 800ae7c:	4a84      	ldr	r2, [pc, #528]	; (800b090 <_strtod_l+0xc24>)
 800ae7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae80:	4694      	mov	ip, r2
 800ae82:	4463      	add	r3, ip
 800ae84:	001f      	movs	r7, r3
 800ae86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ae88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ae8a:	0030      	movs	r0, r6
 800ae8c:	0039      	movs	r1, r7
 800ae8e:	920c      	str	r2, [sp, #48]	; 0x30
 800ae90:	930d      	str	r3, [sp, #52]	; 0x34
 800ae92:	f002 f885 	bl	800cfa0 <__ulp>
 800ae96:	0002      	movs	r2, r0
 800ae98:	000b      	movs	r3, r1
 800ae9a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ae9c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ae9e:	f7f7 f98b 	bl	80021b8 <__aeabi_dmul>
 800aea2:	0032      	movs	r2, r6
 800aea4:	003b      	movs	r3, r7
 800aea6:	f7f6 fa61 	bl	800136c <__aeabi_dadd>
 800aeaa:	4a77      	ldr	r2, [pc, #476]	; (800b088 <_strtod_l+0xc1c>)
 800aeac:	4b79      	ldr	r3, [pc, #484]	; (800b094 <_strtod_l+0xc28>)
 800aeae:	0006      	movs	r6, r0
 800aeb0:	400a      	ands	r2, r1
 800aeb2:	429a      	cmp	r2, r3
 800aeb4:	d964      	bls.n	800af80 <_strtod_l+0xb14>
 800aeb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800aeb8:	4a77      	ldr	r2, [pc, #476]	; (800b098 <_strtod_l+0xc2c>)
 800aeba:	4293      	cmp	r3, r2
 800aebc:	d103      	bne.n	800aec6 <_strtod_l+0xa5a>
 800aebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aec0:	3301      	adds	r3, #1
 800aec2:	d100      	bne.n	800aec6 <_strtod_l+0xa5a>
 800aec4:	e508      	b.n	800a8d8 <_strtod_l+0x46c>
 800aec6:	2601      	movs	r6, #1
 800aec8:	4f73      	ldr	r7, [pc, #460]	; (800b098 <_strtod_l+0xc2c>)
 800aeca:	4276      	negs	r6, r6
 800aecc:	9922      	ldr	r1, [sp, #136]	; 0x88
 800aece:	9804      	ldr	r0, [sp, #16]
 800aed0:	f001 fdce 	bl	800ca70 <_Bfree>
 800aed4:	990a      	ldr	r1, [sp, #40]	; 0x28
 800aed6:	9804      	ldr	r0, [sp, #16]
 800aed8:	f001 fdca 	bl	800ca70 <_Bfree>
 800aedc:	9905      	ldr	r1, [sp, #20]
 800aede:	9804      	ldr	r0, [sp, #16]
 800aee0:	f001 fdc6 	bl	800ca70 <_Bfree>
 800aee4:	0021      	movs	r1, r4
 800aee6:	9804      	ldr	r0, [sp, #16]
 800aee8:	f001 fdc2 	bl	800ca70 <_Bfree>
 800aeec:	e5f4      	b.n	800aad8 <_strtod_l+0x66c>
 800aeee:	2e00      	cmp	r6, #0
 800aef0:	d11e      	bne.n	800af30 <_strtod_l+0xac4>
 800aef2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800aef4:	031b      	lsls	r3, r3, #12
 800aef6:	d121      	bne.n	800af3c <_strtod_l+0xad0>
 800aef8:	9808      	ldr	r0, [sp, #32]
 800aefa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800aefc:	2200      	movs	r2, #0
 800aefe:	4b61      	ldr	r3, [pc, #388]	; (800b084 <_strtod_l+0xc18>)
 800af00:	f7f5 faa0 	bl	8000444 <__aeabi_dcmplt>
 800af04:	2800      	cmp	r0, #0
 800af06:	d11f      	bne.n	800af48 <_strtod_l+0xadc>
 800af08:	9808      	ldr	r0, [sp, #32]
 800af0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800af0c:	2200      	movs	r2, #0
 800af0e:	4b63      	ldr	r3, [pc, #396]	; (800b09c <_strtod_l+0xc30>)
 800af10:	f7f7 f952 	bl	80021b8 <__aeabi_dmul>
 800af14:	0005      	movs	r5, r0
 800af16:	9108      	str	r1, [sp, #32]
 800af18:	2280      	movs	r2, #128	; 0x80
 800af1a:	0612      	lsls	r2, r2, #24
 800af1c:	4694      	mov	ip, r2
 800af1e:	9b08      	ldr	r3, [sp, #32]
 800af20:	951e      	str	r5, [sp, #120]	; 0x78
 800af22:	4463      	add	r3, ip
 800af24:	931f      	str	r3, [sp, #124]	; 0x7c
 800af26:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800af28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800af2a:	9210      	str	r2, [sp, #64]	; 0x40
 800af2c:	9311      	str	r3, [sp, #68]	; 0x44
 800af2e:	e798      	b.n	800ae62 <_strtod_l+0x9f6>
 800af30:	2e01      	cmp	r6, #1
 800af32:	d103      	bne.n	800af3c <_strtod_l+0xad0>
 800af34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800af36:	2b00      	cmp	r3, #0
 800af38:	d100      	bne.n	800af3c <_strtod_l+0xad0>
 800af3a:	e562      	b.n	800aa02 <_strtod_l+0x596>
 800af3c:	2200      	movs	r2, #0
 800af3e:	4b58      	ldr	r3, [pc, #352]	; (800b0a0 <_strtod_l+0xc34>)
 800af40:	2500      	movs	r5, #0
 800af42:	9210      	str	r2, [sp, #64]	; 0x40
 800af44:	9311      	str	r3, [sp, #68]	; 0x44
 800af46:	e78a      	b.n	800ae5e <_strtod_l+0x9f2>
 800af48:	4b54      	ldr	r3, [pc, #336]	; (800b09c <_strtod_l+0xc30>)
 800af4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800af4c:	9308      	str	r3, [sp, #32]
 800af4e:	e7e3      	b.n	800af18 <_strtod_l+0xaac>
 800af50:	4b52      	ldr	r3, [pc, #328]	; (800b09c <_strtod_l+0xc30>)
 800af52:	9808      	ldr	r0, [sp, #32]
 800af54:	9909      	ldr	r1, [sp, #36]	; 0x24
 800af56:	2200      	movs	r2, #0
 800af58:	f7f7 f92e 	bl	80021b8 <__aeabi_dmul>
 800af5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800af5e:	0005      	movs	r5, r0
 800af60:	9108      	str	r1, [sp, #32]
 800af62:	2b00      	cmp	r3, #0
 800af64:	d107      	bne.n	800af76 <_strtod_l+0xb0a>
 800af66:	2380      	movs	r3, #128	; 0x80
 800af68:	061b      	lsls	r3, r3, #24
 800af6a:	18cb      	adds	r3, r1, r3
 800af6c:	9016      	str	r0, [sp, #88]	; 0x58
 800af6e:	9317      	str	r3, [sp, #92]	; 0x5c
 800af70:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800af72:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800af74:	e7d9      	b.n	800af2a <_strtod_l+0xabe>
 800af76:	0002      	movs	r2, r0
 800af78:	9b08      	ldr	r3, [sp, #32]
 800af7a:	9216      	str	r2, [sp, #88]	; 0x58
 800af7c:	9317      	str	r3, [sp, #92]	; 0x5c
 800af7e:	e7f7      	b.n	800af70 <_strtod_l+0xb04>
 800af80:	23d4      	movs	r3, #212	; 0xd4
 800af82:	049b      	lsls	r3, r3, #18
 800af84:	18cf      	adds	r7, r1, r3
 800af86:	9b06      	ldr	r3, [sp, #24]
 800af88:	2b00      	cmp	r3, #0
 800af8a:	d19f      	bne.n	800aecc <_strtod_l+0xa60>
 800af8c:	4b3e      	ldr	r3, [pc, #248]	; (800b088 <_strtod_l+0xc1c>)
 800af8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800af90:	970c      	str	r7, [sp, #48]	; 0x30
 800af92:	403b      	ands	r3, r7
 800af94:	429a      	cmp	r2, r3
 800af96:	d199      	bne.n	800aecc <_strtod_l+0xa60>
 800af98:	9908      	ldr	r1, [sp, #32]
 800af9a:	0028      	movs	r0, r5
 800af9c:	f7f7 fee2 	bl	8002d64 <__aeabi_d2iz>
 800afa0:	f7f7 ff16 	bl	8002dd0 <__aeabi_i2d>
 800afa4:	000b      	movs	r3, r1
 800afa6:	0002      	movs	r2, r0
 800afa8:	9908      	ldr	r1, [sp, #32]
 800afaa:	0028      	movs	r0, r5
 800afac:	f7f7 fb76 	bl	800269c <__aeabi_dsub>
 800afb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800afb2:	9008      	str	r0, [sp, #32]
 800afb4:	9109      	str	r1, [sp, #36]	; 0x24
 800afb6:	2b00      	cmp	r3, #0
 800afb8:	d104      	bne.n	800afc4 <_strtod_l+0xb58>
 800afba:	2e00      	cmp	r6, #0
 800afbc:	d102      	bne.n	800afc4 <_strtod_l+0xb58>
 800afbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800afc0:	031b      	lsls	r3, r3, #12
 800afc2:	d058      	beq.n	800b076 <_strtod_l+0xc0a>
 800afc4:	9808      	ldr	r0, [sp, #32]
 800afc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800afc8:	4a36      	ldr	r2, [pc, #216]	; (800b0a4 <_strtod_l+0xc38>)
 800afca:	4b37      	ldr	r3, [pc, #220]	; (800b0a8 <_strtod_l+0xc3c>)
 800afcc:	f7f5 fa3a 	bl	8000444 <__aeabi_dcmplt>
 800afd0:	2800      	cmp	r0, #0
 800afd2:	d000      	beq.n	800afd6 <_strtod_l+0xb6a>
 800afd4:	e489      	b.n	800a8ea <_strtod_l+0x47e>
 800afd6:	9808      	ldr	r0, [sp, #32]
 800afd8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800afda:	4a34      	ldr	r2, [pc, #208]	; (800b0ac <_strtod_l+0xc40>)
 800afdc:	4b2f      	ldr	r3, [pc, #188]	; (800b09c <_strtod_l+0xc30>)
 800afde:	f7f5 fa45 	bl	800046c <__aeabi_dcmpgt>
 800afe2:	2800      	cmp	r0, #0
 800afe4:	d100      	bne.n	800afe8 <_strtod_l+0xb7c>
 800afe6:	e771      	b.n	800aecc <_strtod_l+0xa60>
 800afe8:	e47f      	b.n	800a8ea <_strtod_l+0x47e>
 800afea:	9b06      	ldr	r3, [sp, #24]
 800afec:	2b00      	cmp	r3, #0
 800afee:	d02a      	beq.n	800b046 <_strtod_l+0xbda>
 800aff0:	23d4      	movs	r3, #212	; 0xd4
 800aff2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800aff4:	04db      	lsls	r3, r3, #19
 800aff6:	429a      	cmp	r2, r3
 800aff8:	d825      	bhi.n	800b046 <_strtod_l+0xbda>
 800affa:	4a2d      	ldr	r2, [pc, #180]	; (800b0b0 <_strtod_l+0xc44>)
 800affc:	4b2d      	ldr	r3, [pc, #180]	; (800b0b4 <_strtod_l+0xc48>)
 800affe:	0028      	movs	r0, r5
 800b000:	9908      	ldr	r1, [sp, #32]
 800b002:	f7f5 fa29 	bl	8000458 <__aeabi_dcmple>
 800b006:	2800      	cmp	r0, #0
 800b008:	d016      	beq.n	800b038 <_strtod_l+0xbcc>
 800b00a:	0028      	movs	r0, r5
 800b00c:	9908      	ldr	r1, [sp, #32]
 800b00e:	f7f5 fab1 	bl	8000574 <__aeabi_d2uiz>
 800b012:	2800      	cmp	r0, #0
 800b014:	d100      	bne.n	800b018 <_strtod_l+0xbac>
 800b016:	3001      	adds	r0, #1
 800b018:	f7f7 ff14 	bl	8002e44 <__aeabi_ui2d>
 800b01c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b01e:	0005      	movs	r5, r0
 800b020:	9108      	str	r1, [sp, #32]
 800b022:	2b00      	cmp	r3, #0
 800b024:	d122      	bne.n	800b06c <_strtod_l+0xc00>
 800b026:	2380      	movs	r3, #128	; 0x80
 800b028:	061b      	lsls	r3, r3, #24
 800b02a:	18cb      	adds	r3, r1, r3
 800b02c:	9018      	str	r0, [sp, #96]	; 0x60
 800b02e:	9319      	str	r3, [sp, #100]	; 0x64
 800b030:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b032:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b034:	9210      	str	r2, [sp, #64]	; 0x40
 800b036:	9311      	str	r3, [sp, #68]	; 0x44
 800b038:	22d6      	movs	r2, #214	; 0xd6
 800b03a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b03c:	04d2      	lsls	r2, r2, #19
 800b03e:	189b      	adds	r3, r3, r2
 800b040:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b042:	1a9b      	subs	r3, r3, r2
 800b044:	9311      	str	r3, [sp, #68]	; 0x44
 800b046:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b048:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b04a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800b04c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800b04e:	f001 ffa7 	bl	800cfa0 <__ulp>
 800b052:	0002      	movs	r2, r0
 800b054:	000b      	movs	r3, r1
 800b056:	0030      	movs	r0, r6
 800b058:	0039      	movs	r1, r7
 800b05a:	f7f7 f8ad 	bl	80021b8 <__aeabi_dmul>
 800b05e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b060:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b062:	f7f6 f983 	bl	800136c <__aeabi_dadd>
 800b066:	0006      	movs	r6, r0
 800b068:	000f      	movs	r7, r1
 800b06a:	e78c      	b.n	800af86 <_strtod_l+0xb1a>
 800b06c:	0002      	movs	r2, r0
 800b06e:	9b08      	ldr	r3, [sp, #32]
 800b070:	9218      	str	r2, [sp, #96]	; 0x60
 800b072:	9319      	str	r3, [sp, #100]	; 0x64
 800b074:	e7dc      	b.n	800b030 <_strtod_l+0xbc4>
 800b076:	4a0b      	ldr	r2, [pc, #44]	; (800b0a4 <_strtod_l+0xc38>)
 800b078:	4b0f      	ldr	r3, [pc, #60]	; (800b0b8 <_strtod_l+0xc4c>)
 800b07a:	9808      	ldr	r0, [sp, #32]
 800b07c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b07e:	f7f5 f9e1 	bl	8000444 <__aeabi_dcmplt>
 800b082:	e7ae      	b.n	800afe2 <_strtod_l+0xb76>
 800b084:	3ff00000 	.word	0x3ff00000
 800b088:	7ff00000 	.word	0x7ff00000
 800b08c:	7fe00000 	.word	0x7fe00000
 800b090:	fcb00000 	.word	0xfcb00000
 800b094:	7c9fffff 	.word	0x7c9fffff
 800b098:	7fefffff 	.word	0x7fefffff
 800b09c:	3fe00000 	.word	0x3fe00000
 800b0a0:	bff00000 	.word	0xbff00000
 800b0a4:	94a03595 	.word	0x94a03595
 800b0a8:	3fdfffff 	.word	0x3fdfffff
 800b0ac:	35afe535 	.word	0x35afe535
 800b0b0:	ffc00000 	.word	0xffc00000
 800b0b4:	41dfffff 	.word	0x41dfffff
 800b0b8:	3fcfffff 	.word	0x3fcfffff

0800b0bc <_strtod_r>:
 800b0bc:	4b04      	ldr	r3, [pc, #16]	; (800b0d0 <_strtod_r+0x14>)
 800b0be:	b510      	push	{r4, lr}
 800b0c0:	681b      	ldr	r3, [r3, #0]
 800b0c2:	6a1b      	ldr	r3, [r3, #32]
 800b0c4:	2b00      	cmp	r3, #0
 800b0c6:	d100      	bne.n	800b0ca <_strtod_r+0xe>
 800b0c8:	4b02      	ldr	r3, [pc, #8]	; (800b0d4 <_strtod_r+0x18>)
 800b0ca:	f7ff f9cf 	bl	800a46c <_strtod_l>
 800b0ce:	bd10      	pop	{r4, pc}
 800b0d0:	20000108 	.word	0x20000108
 800b0d4:	2000016c 	.word	0x2000016c

0800b0d8 <_strtol_l.isra.0>:
 800b0d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0da:	001f      	movs	r7, r3
 800b0dc:	000e      	movs	r6, r1
 800b0de:	b087      	sub	sp, #28
 800b0e0:	9005      	str	r0, [sp, #20]
 800b0e2:	9101      	str	r1, [sp, #4]
 800b0e4:	9202      	str	r2, [sp, #8]
 800b0e6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800b0e8:	7834      	ldrb	r4, [r6, #0]
 800b0ea:	f001 fbc6 	bl	800c87a <__locale_ctype_ptr_l>
 800b0ee:	2208      	movs	r2, #8
 800b0f0:	1900      	adds	r0, r0, r4
 800b0f2:	7843      	ldrb	r3, [r0, #1]
 800b0f4:	1c75      	adds	r5, r6, #1
 800b0f6:	4013      	ands	r3, r2
 800b0f8:	d136      	bne.n	800b168 <_strtol_l.isra.0+0x90>
 800b0fa:	2c2d      	cmp	r4, #45	; 0x2d
 800b0fc:	d136      	bne.n	800b16c <_strtol_l.isra.0+0x94>
 800b0fe:	1cb5      	adds	r5, r6, #2
 800b100:	7874      	ldrb	r4, [r6, #1]
 800b102:	2601      	movs	r6, #1
 800b104:	2f00      	cmp	r7, #0
 800b106:	d062      	beq.n	800b1ce <_strtol_l.isra.0+0xf6>
 800b108:	2f10      	cmp	r7, #16
 800b10a:	d109      	bne.n	800b120 <_strtol_l.isra.0+0x48>
 800b10c:	2c30      	cmp	r4, #48	; 0x30
 800b10e:	d107      	bne.n	800b120 <_strtol_l.isra.0+0x48>
 800b110:	2220      	movs	r2, #32
 800b112:	782b      	ldrb	r3, [r5, #0]
 800b114:	4393      	bics	r3, r2
 800b116:	2b58      	cmp	r3, #88	; 0x58
 800b118:	d154      	bne.n	800b1c4 <_strtol_l.isra.0+0xec>
 800b11a:	2710      	movs	r7, #16
 800b11c:	786c      	ldrb	r4, [r5, #1]
 800b11e:	3502      	adds	r5, #2
 800b120:	4b2d      	ldr	r3, [pc, #180]	; (800b1d8 <_strtol_l.isra.0+0x100>)
 800b122:	0039      	movs	r1, r7
 800b124:	18f3      	adds	r3, r6, r3
 800b126:	0018      	movs	r0, r3
 800b128:	9303      	str	r3, [sp, #12]
 800b12a:	f7f5 f885 	bl	8000238 <__aeabi_uidivmod>
 800b12e:	9104      	str	r1, [sp, #16]
 800b130:	2101      	movs	r1, #1
 800b132:	2300      	movs	r3, #0
 800b134:	4249      	negs	r1, r1
 800b136:	0002      	movs	r2, r0
 800b138:	468c      	mov	ip, r1
 800b13a:	0018      	movs	r0, r3
 800b13c:	0021      	movs	r1, r4
 800b13e:	3930      	subs	r1, #48	; 0x30
 800b140:	2909      	cmp	r1, #9
 800b142:	d81a      	bhi.n	800b17a <_strtol_l.isra.0+0xa2>
 800b144:	000c      	movs	r4, r1
 800b146:	42a7      	cmp	r7, r4
 800b148:	dd23      	ble.n	800b192 <_strtol_l.isra.0+0xba>
 800b14a:	1c59      	adds	r1, r3, #1
 800b14c:	d009      	beq.n	800b162 <_strtol_l.isra.0+0x8a>
 800b14e:	4663      	mov	r3, ip
 800b150:	4282      	cmp	r2, r0
 800b152:	d306      	bcc.n	800b162 <_strtol_l.isra.0+0x8a>
 800b154:	d102      	bne.n	800b15c <_strtol_l.isra.0+0x84>
 800b156:	9904      	ldr	r1, [sp, #16]
 800b158:	42a1      	cmp	r1, r4
 800b15a:	db02      	blt.n	800b162 <_strtol_l.isra.0+0x8a>
 800b15c:	2301      	movs	r3, #1
 800b15e:	4378      	muls	r0, r7
 800b160:	1820      	adds	r0, r4, r0
 800b162:	782c      	ldrb	r4, [r5, #0]
 800b164:	3501      	adds	r5, #1
 800b166:	e7e9      	b.n	800b13c <_strtol_l.isra.0+0x64>
 800b168:	002e      	movs	r6, r5
 800b16a:	e7bc      	b.n	800b0e6 <_strtol_l.isra.0+0xe>
 800b16c:	2c2b      	cmp	r4, #43	; 0x2b
 800b16e:	d001      	beq.n	800b174 <_strtol_l.isra.0+0x9c>
 800b170:	001e      	movs	r6, r3
 800b172:	e7c7      	b.n	800b104 <_strtol_l.isra.0+0x2c>
 800b174:	1cb5      	adds	r5, r6, #2
 800b176:	7874      	ldrb	r4, [r6, #1]
 800b178:	e7fa      	b.n	800b170 <_strtol_l.isra.0+0x98>
 800b17a:	0021      	movs	r1, r4
 800b17c:	3941      	subs	r1, #65	; 0x41
 800b17e:	2919      	cmp	r1, #25
 800b180:	d801      	bhi.n	800b186 <_strtol_l.isra.0+0xae>
 800b182:	3c37      	subs	r4, #55	; 0x37
 800b184:	e7df      	b.n	800b146 <_strtol_l.isra.0+0x6e>
 800b186:	0021      	movs	r1, r4
 800b188:	3961      	subs	r1, #97	; 0x61
 800b18a:	2919      	cmp	r1, #25
 800b18c:	d801      	bhi.n	800b192 <_strtol_l.isra.0+0xba>
 800b18e:	3c57      	subs	r4, #87	; 0x57
 800b190:	e7d9      	b.n	800b146 <_strtol_l.isra.0+0x6e>
 800b192:	1c5a      	adds	r2, r3, #1
 800b194:	d108      	bne.n	800b1a8 <_strtol_l.isra.0+0xd0>
 800b196:	9a05      	ldr	r2, [sp, #20]
 800b198:	3323      	adds	r3, #35	; 0x23
 800b19a:	6013      	str	r3, [r2, #0]
 800b19c:	9b02      	ldr	r3, [sp, #8]
 800b19e:	9803      	ldr	r0, [sp, #12]
 800b1a0:	2b00      	cmp	r3, #0
 800b1a2:	d109      	bne.n	800b1b8 <_strtol_l.isra.0+0xe0>
 800b1a4:	b007      	add	sp, #28
 800b1a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1a8:	2e00      	cmp	r6, #0
 800b1aa:	d000      	beq.n	800b1ae <_strtol_l.isra.0+0xd6>
 800b1ac:	4240      	negs	r0, r0
 800b1ae:	9a02      	ldr	r2, [sp, #8]
 800b1b0:	2a00      	cmp	r2, #0
 800b1b2:	d0f7      	beq.n	800b1a4 <_strtol_l.isra.0+0xcc>
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	d001      	beq.n	800b1bc <_strtol_l.isra.0+0xe4>
 800b1b8:	1e6b      	subs	r3, r5, #1
 800b1ba:	9301      	str	r3, [sp, #4]
 800b1bc:	9b02      	ldr	r3, [sp, #8]
 800b1be:	9a01      	ldr	r2, [sp, #4]
 800b1c0:	601a      	str	r2, [r3, #0]
 800b1c2:	e7ef      	b.n	800b1a4 <_strtol_l.isra.0+0xcc>
 800b1c4:	2430      	movs	r4, #48	; 0x30
 800b1c6:	2f00      	cmp	r7, #0
 800b1c8:	d1aa      	bne.n	800b120 <_strtol_l.isra.0+0x48>
 800b1ca:	2708      	movs	r7, #8
 800b1cc:	e7a8      	b.n	800b120 <_strtol_l.isra.0+0x48>
 800b1ce:	2c30      	cmp	r4, #48	; 0x30
 800b1d0:	d09e      	beq.n	800b110 <_strtol_l.isra.0+0x38>
 800b1d2:	270a      	movs	r7, #10
 800b1d4:	e7a4      	b.n	800b120 <_strtol_l.isra.0+0x48>
 800b1d6:	46c0      	nop			; (mov r8, r8)
 800b1d8:	7fffffff 	.word	0x7fffffff

0800b1dc <_strtol_r>:
 800b1dc:	b513      	push	{r0, r1, r4, lr}
 800b1de:	4c05      	ldr	r4, [pc, #20]	; (800b1f4 <_strtol_r+0x18>)
 800b1e0:	6824      	ldr	r4, [r4, #0]
 800b1e2:	6a24      	ldr	r4, [r4, #32]
 800b1e4:	2c00      	cmp	r4, #0
 800b1e6:	d100      	bne.n	800b1ea <_strtol_r+0xe>
 800b1e8:	4c03      	ldr	r4, [pc, #12]	; (800b1f8 <_strtol_r+0x1c>)
 800b1ea:	9400      	str	r4, [sp, #0]
 800b1ec:	f7ff ff74 	bl	800b0d8 <_strtol_l.isra.0>
 800b1f0:	bd16      	pop	{r1, r2, r4, pc}
 800b1f2:	46c0      	nop			; (mov r8, r8)
 800b1f4:	20000108 	.word	0x20000108
 800b1f8:	2000016c 	.word	0x2000016c

0800b1fc <__swbuf_r>:
 800b1fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b1fe:	0005      	movs	r5, r0
 800b200:	000e      	movs	r6, r1
 800b202:	0014      	movs	r4, r2
 800b204:	2800      	cmp	r0, #0
 800b206:	d004      	beq.n	800b212 <__swbuf_r+0x16>
 800b208:	6983      	ldr	r3, [r0, #24]
 800b20a:	2b00      	cmp	r3, #0
 800b20c:	d101      	bne.n	800b212 <__swbuf_r+0x16>
 800b20e:	f7fe f895 	bl	800933c <__sinit>
 800b212:	4b22      	ldr	r3, [pc, #136]	; (800b29c <__swbuf_r+0xa0>)
 800b214:	429c      	cmp	r4, r3
 800b216:	d12d      	bne.n	800b274 <__swbuf_r+0x78>
 800b218:	686c      	ldr	r4, [r5, #4]
 800b21a:	69a3      	ldr	r3, [r4, #24]
 800b21c:	60a3      	str	r3, [r4, #8]
 800b21e:	89a3      	ldrh	r3, [r4, #12]
 800b220:	071b      	lsls	r3, r3, #28
 800b222:	d531      	bpl.n	800b288 <__swbuf_r+0x8c>
 800b224:	6923      	ldr	r3, [r4, #16]
 800b226:	2b00      	cmp	r3, #0
 800b228:	d02e      	beq.n	800b288 <__swbuf_r+0x8c>
 800b22a:	6823      	ldr	r3, [r4, #0]
 800b22c:	6922      	ldr	r2, [r4, #16]
 800b22e:	b2f7      	uxtb	r7, r6
 800b230:	1a98      	subs	r0, r3, r2
 800b232:	6963      	ldr	r3, [r4, #20]
 800b234:	b2f6      	uxtb	r6, r6
 800b236:	4283      	cmp	r3, r0
 800b238:	dc05      	bgt.n	800b246 <__swbuf_r+0x4a>
 800b23a:	0021      	movs	r1, r4
 800b23c:	0028      	movs	r0, r5
 800b23e:	f000 ffbf 	bl	800c1c0 <_fflush_r>
 800b242:	2800      	cmp	r0, #0
 800b244:	d126      	bne.n	800b294 <__swbuf_r+0x98>
 800b246:	68a3      	ldr	r3, [r4, #8]
 800b248:	3001      	adds	r0, #1
 800b24a:	3b01      	subs	r3, #1
 800b24c:	60a3      	str	r3, [r4, #8]
 800b24e:	6823      	ldr	r3, [r4, #0]
 800b250:	1c5a      	adds	r2, r3, #1
 800b252:	6022      	str	r2, [r4, #0]
 800b254:	701f      	strb	r7, [r3, #0]
 800b256:	6963      	ldr	r3, [r4, #20]
 800b258:	4283      	cmp	r3, r0
 800b25a:	d004      	beq.n	800b266 <__swbuf_r+0x6a>
 800b25c:	89a3      	ldrh	r3, [r4, #12]
 800b25e:	07db      	lsls	r3, r3, #31
 800b260:	d51a      	bpl.n	800b298 <__swbuf_r+0x9c>
 800b262:	2e0a      	cmp	r6, #10
 800b264:	d118      	bne.n	800b298 <__swbuf_r+0x9c>
 800b266:	0021      	movs	r1, r4
 800b268:	0028      	movs	r0, r5
 800b26a:	f000 ffa9 	bl	800c1c0 <_fflush_r>
 800b26e:	2800      	cmp	r0, #0
 800b270:	d012      	beq.n	800b298 <__swbuf_r+0x9c>
 800b272:	e00f      	b.n	800b294 <__swbuf_r+0x98>
 800b274:	4b0a      	ldr	r3, [pc, #40]	; (800b2a0 <__swbuf_r+0xa4>)
 800b276:	429c      	cmp	r4, r3
 800b278:	d101      	bne.n	800b27e <__swbuf_r+0x82>
 800b27a:	68ac      	ldr	r4, [r5, #8]
 800b27c:	e7cd      	b.n	800b21a <__swbuf_r+0x1e>
 800b27e:	4b09      	ldr	r3, [pc, #36]	; (800b2a4 <__swbuf_r+0xa8>)
 800b280:	429c      	cmp	r4, r3
 800b282:	d1ca      	bne.n	800b21a <__swbuf_r+0x1e>
 800b284:	68ec      	ldr	r4, [r5, #12]
 800b286:	e7c8      	b.n	800b21a <__swbuf_r+0x1e>
 800b288:	0021      	movs	r1, r4
 800b28a:	0028      	movs	r0, r5
 800b28c:	f000 f820 	bl	800b2d0 <__swsetup_r>
 800b290:	2800      	cmp	r0, #0
 800b292:	d0ca      	beq.n	800b22a <__swbuf_r+0x2e>
 800b294:	2601      	movs	r6, #1
 800b296:	4276      	negs	r6, r6
 800b298:	0030      	movs	r0, r6
 800b29a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b29c:	0800e320 	.word	0x0800e320
 800b2a0:	0800e340 	.word	0x0800e340
 800b2a4:	0800e300 	.word	0x0800e300

0800b2a8 <_write_r>:
 800b2a8:	b570      	push	{r4, r5, r6, lr}
 800b2aa:	0005      	movs	r5, r0
 800b2ac:	0008      	movs	r0, r1
 800b2ae:	0011      	movs	r1, r2
 800b2b0:	2200      	movs	r2, #0
 800b2b2:	4c06      	ldr	r4, [pc, #24]	; (800b2cc <_write_r+0x24>)
 800b2b4:	6022      	str	r2, [r4, #0]
 800b2b6:	001a      	movs	r2, r3
 800b2b8:	f7fd fe07 	bl	8008eca <_write>
 800b2bc:	1c43      	adds	r3, r0, #1
 800b2be:	d103      	bne.n	800b2c8 <_write_r+0x20>
 800b2c0:	6823      	ldr	r3, [r4, #0]
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	d000      	beq.n	800b2c8 <_write_r+0x20>
 800b2c6:	602b      	str	r3, [r5, #0]
 800b2c8:	bd70      	pop	{r4, r5, r6, pc}
 800b2ca:	46c0      	nop			; (mov r8, r8)
 800b2cc:	2000446c 	.word	0x2000446c

0800b2d0 <__swsetup_r>:
 800b2d0:	4b36      	ldr	r3, [pc, #216]	; (800b3ac <__swsetup_r+0xdc>)
 800b2d2:	b570      	push	{r4, r5, r6, lr}
 800b2d4:	681d      	ldr	r5, [r3, #0]
 800b2d6:	0006      	movs	r6, r0
 800b2d8:	000c      	movs	r4, r1
 800b2da:	2d00      	cmp	r5, #0
 800b2dc:	d005      	beq.n	800b2ea <__swsetup_r+0x1a>
 800b2de:	69ab      	ldr	r3, [r5, #24]
 800b2e0:	2b00      	cmp	r3, #0
 800b2e2:	d102      	bne.n	800b2ea <__swsetup_r+0x1a>
 800b2e4:	0028      	movs	r0, r5
 800b2e6:	f7fe f829 	bl	800933c <__sinit>
 800b2ea:	4b31      	ldr	r3, [pc, #196]	; (800b3b0 <__swsetup_r+0xe0>)
 800b2ec:	429c      	cmp	r4, r3
 800b2ee:	d10f      	bne.n	800b310 <__swsetup_r+0x40>
 800b2f0:	686c      	ldr	r4, [r5, #4]
 800b2f2:	230c      	movs	r3, #12
 800b2f4:	5ee2      	ldrsh	r2, [r4, r3]
 800b2f6:	b293      	uxth	r3, r2
 800b2f8:	0719      	lsls	r1, r3, #28
 800b2fa:	d42d      	bmi.n	800b358 <__swsetup_r+0x88>
 800b2fc:	06d9      	lsls	r1, r3, #27
 800b2fe:	d411      	bmi.n	800b324 <__swsetup_r+0x54>
 800b300:	2309      	movs	r3, #9
 800b302:	2001      	movs	r0, #1
 800b304:	6033      	str	r3, [r6, #0]
 800b306:	3337      	adds	r3, #55	; 0x37
 800b308:	4313      	orrs	r3, r2
 800b30a:	81a3      	strh	r3, [r4, #12]
 800b30c:	4240      	negs	r0, r0
 800b30e:	bd70      	pop	{r4, r5, r6, pc}
 800b310:	4b28      	ldr	r3, [pc, #160]	; (800b3b4 <__swsetup_r+0xe4>)
 800b312:	429c      	cmp	r4, r3
 800b314:	d101      	bne.n	800b31a <__swsetup_r+0x4a>
 800b316:	68ac      	ldr	r4, [r5, #8]
 800b318:	e7eb      	b.n	800b2f2 <__swsetup_r+0x22>
 800b31a:	4b27      	ldr	r3, [pc, #156]	; (800b3b8 <__swsetup_r+0xe8>)
 800b31c:	429c      	cmp	r4, r3
 800b31e:	d1e8      	bne.n	800b2f2 <__swsetup_r+0x22>
 800b320:	68ec      	ldr	r4, [r5, #12]
 800b322:	e7e6      	b.n	800b2f2 <__swsetup_r+0x22>
 800b324:	075b      	lsls	r3, r3, #29
 800b326:	d513      	bpl.n	800b350 <__swsetup_r+0x80>
 800b328:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b32a:	2900      	cmp	r1, #0
 800b32c:	d008      	beq.n	800b340 <__swsetup_r+0x70>
 800b32e:	0023      	movs	r3, r4
 800b330:	3344      	adds	r3, #68	; 0x44
 800b332:	4299      	cmp	r1, r3
 800b334:	d002      	beq.n	800b33c <__swsetup_r+0x6c>
 800b336:	0030      	movs	r0, r6
 800b338:	f001 ff66 	bl	800d208 <_free_r>
 800b33c:	2300      	movs	r3, #0
 800b33e:	6363      	str	r3, [r4, #52]	; 0x34
 800b340:	2224      	movs	r2, #36	; 0x24
 800b342:	89a3      	ldrh	r3, [r4, #12]
 800b344:	4393      	bics	r3, r2
 800b346:	81a3      	strh	r3, [r4, #12]
 800b348:	2300      	movs	r3, #0
 800b34a:	6063      	str	r3, [r4, #4]
 800b34c:	6923      	ldr	r3, [r4, #16]
 800b34e:	6023      	str	r3, [r4, #0]
 800b350:	2308      	movs	r3, #8
 800b352:	89a2      	ldrh	r2, [r4, #12]
 800b354:	4313      	orrs	r3, r2
 800b356:	81a3      	strh	r3, [r4, #12]
 800b358:	6923      	ldr	r3, [r4, #16]
 800b35a:	2b00      	cmp	r3, #0
 800b35c:	d10b      	bne.n	800b376 <__swsetup_r+0xa6>
 800b35e:	21a0      	movs	r1, #160	; 0xa0
 800b360:	2280      	movs	r2, #128	; 0x80
 800b362:	89a3      	ldrh	r3, [r4, #12]
 800b364:	0089      	lsls	r1, r1, #2
 800b366:	0092      	lsls	r2, r2, #2
 800b368:	400b      	ands	r3, r1
 800b36a:	4293      	cmp	r3, r2
 800b36c:	d003      	beq.n	800b376 <__swsetup_r+0xa6>
 800b36e:	0021      	movs	r1, r4
 800b370:	0030      	movs	r0, r6
 800b372:	f001 facf 	bl	800c914 <__smakebuf_r>
 800b376:	2301      	movs	r3, #1
 800b378:	89a2      	ldrh	r2, [r4, #12]
 800b37a:	4013      	ands	r3, r2
 800b37c:	d011      	beq.n	800b3a2 <__swsetup_r+0xd2>
 800b37e:	2300      	movs	r3, #0
 800b380:	60a3      	str	r3, [r4, #8]
 800b382:	6963      	ldr	r3, [r4, #20]
 800b384:	425b      	negs	r3, r3
 800b386:	61a3      	str	r3, [r4, #24]
 800b388:	2000      	movs	r0, #0
 800b38a:	6923      	ldr	r3, [r4, #16]
 800b38c:	4283      	cmp	r3, r0
 800b38e:	d1be      	bne.n	800b30e <__swsetup_r+0x3e>
 800b390:	230c      	movs	r3, #12
 800b392:	5ee2      	ldrsh	r2, [r4, r3]
 800b394:	0613      	lsls	r3, r2, #24
 800b396:	d5ba      	bpl.n	800b30e <__swsetup_r+0x3e>
 800b398:	2340      	movs	r3, #64	; 0x40
 800b39a:	4313      	orrs	r3, r2
 800b39c:	81a3      	strh	r3, [r4, #12]
 800b39e:	3801      	subs	r0, #1
 800b3a0:	e7b5      	b.n	800b30e <__swsetup_r+0x3e>
 800b3a2:	0792      	lsls	r2, r2, #30
 800b3a4:	d400      	bmi.n	800b3a8 <__swsetup_r+0xd8>
 800b3a6:	6963      	ldr	r3, [r4, #20]
 800b3a8:	60a3      	str	r3, [r4, #8]
 800b3aa:	e7ed      	b.n	800b388 <__swsetup_r+0xb8>
 800b3ac:	20000108 	.word	0x20000108
 800b3b0:	0800e320 	.word	0x0800e320
 800b3b4:	0800e340 	.word	0x0800e340
 800b3b8:	0800e300 	.word	0x0800e300

0800b3bc <_close_r>:
 800b3bc:	2300      	movs	r3, #0
 800b3be:	b570      	push	{r4, r5, r6, lr}
 800b3c0:	4c06      	ldr	r4, [pc, #24]	; (800b3dc <_close_r+0x20>)
 800b3c2:	0005      	movs	r5, r0
 800b3c4:	0008      	movs	r0, r1
 800b3c6:	6023      	str	r3, [r4, #0]
 800b3c8:	f7fd fdaa 	bl	8008f20 <_close>
 800b3cc:	1c43      	adds	r3, r0, #1
 800b3ce:	d103      	bne.n	800b3d8 <_close_r+0x1c>
 800b3d0:	6823      	ldr	r3, [r4, #0]
 800b3d2:	2b00      	cmp	r3, #0
 800b3d4:	d000      	beq.n	800b3d8 <_close_r+0x1c>
 800b3d6:	602b      	str	r3, [r5, #0]
 800b3d8:	bd70      	pop	{r4, r5, r6, pc}
 800b3da:	46c0      	nop			; (mov r8, r8)
 800b3dc:	2000446c 	.word	0x2000446c

0800b3e0 <quorem>:
 800b3e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3e2:	6903      	ldr	r3, [r0, #16]
 800b3e4:	690c      	ldr	r4, [r1, #16]
 800b3e6:	b089      	sub	sp, #36	; 0x24
 800b3e8:	0007      	movs	r7, r0
 800b3ea:	9105      	str	r1, [sp, #20]
 800b3ec:	2600      	movs	r6, #0
 800b3ee:	42a3      	cmp	r3, r4
 800b3f0:	db65      	blt.n	800b4be <quorem+0xde>
 800b3f2:	000b      	movs	r3, r1
 800b3f4:	3c01      	subs	r4, #1
 800b3f6:	3314      	adds	r3, #20
 800b3f8:	00a5      	lsls	r5, r4, #2
 800b3fa:	9303      	str	r3, [sp, #12]
 800b3fc:	195b      	adds	r3, r3, r5
 800b3fe:	9304      	str	r3, [sp, #16]
 800b400:	0003      	movs	r3, r0
 800b402:	3314      	adds	r3, #20
 800b404:	9302      	str	r3, [sp, #8]
 800b406:	195d      	adds	r5, r3, r5
 800b408:	9b04      	ldr	r3, [sp, #16]
 800b40a:	6828      	ldr	r0, [r5, #0]
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	1c59      	adds	r1, r3, #1
 800b410:	9301      	str	r3, [sp, #4]
 800b412:	f7f4 fe8b 	bl	800012c <__udivsi3>
 800b416:	9001      	str	r0, [sp, #4]
 800b418:	42b0      	cmp	r0, r6
 800b41a:	d029      	beq.n	800b470 <quorem+0x90>
 800b41c:	9b03      	ldr	r3, [sp, #12]
 800b41e:	9802      	ldr	r0, [sp, #8]
 800b420:	469c      	mov	ip, r3
 800b422:	9606      	str	r6, [sp, #24]
 800b424:	4662      	mov	r2, ip
 800b426:	ca08      	ldmia	r2!, {r3}
 800b428:	4694      	mov	ip, r2
 800b42a:	9a01      	ldr	r2, [sp, #4]
 800b42c:	b299      	uxth	r1, r3
 800b42e:	4351      	muls	r1, r2
 800b430:	0c1b      	lsrs	r3, r3, #16
 800b432:	4353      	muls	r3, r2
 800b434:	1989      	adds	r1, r1, r6
 800b436:	0c0a      	lsrs	r2, r1, #16
 800b438:	189b      	adds	r3, r3, r2
 800b43a:	9307      	str	r3, [sp, #28]
 800b43c:	0c1e      	lsrs	r6, r3, #16
 800b43e:	6803      	ldr	r3, [r0, #0]
 800b440:	b289      	uxth	r1, r1
 800b442:	b29a      	uxth	r2, r3
 800b444:	9b06      	ldr	r3, [sp, #24]
 800b446:	18d2      	adds	r2, r2, r3
 800b448:	6803      	ldr	r3, [r0, #0]
 800b44a:	1a52      	subs	r2, r2, r1
 800b44c:	0c19      	lsrs	r1, r3, #16
 800b44e:	466b      	mov	r3, sp
 800b450:	8b9b      	ldrh	r3, [r3, #28]
 800b452:	1acb      	subs	r3, r1, r3
 800b454:	1411      	asrs	r1, r2, #16
 800b456:	185b      	adds	r3, r3, r1
 800b458:	1419      	asrs	r1, r3, #16
 800b45a:	b292      	uxth	r2, r2
 800b45c:	041b      	lsls	r3, r3, #16
 800b45e:	431a      	orrs	r2, r3
 800b460:	9b04      	ldr	r3, [sp, #16]
 800b462:	9106      	str	r1, [sp, #24]
 800b464:	c004      	stmia	r0!, {r2}
 800b466:	4563      	cmp	r3, ip
 800b468:	d2dc      	bcs.n	800b424 <quorem+0x44>
 800b46a:	682b      	ldr	r3, [r5, #0]
 800b46c:	2b00      	cmp	r3, #0
 800b46e:	d02d      	beq.n	800b4cc <quorem+0xec>
 800b470:	9905      	ldr	r1, [sp, #20]
 800b472:	0038      	movs	r0, r7
 800b474:	f001 fd16 	bl	800cea4 <__mcmp>
 800b478:	2800      	cmp	r0, #0
 800b47a:	db1f      	blt.n	800b4bc <quorem+0xdc>
 800b47c:	2500      	movs	r5, #0
 800b47e:	9b01      	ldr	r3, [sp, #4]
 800b480:	9802      	ldr	r0, [sp, #8]
 800b482:	3301      	adds	r3, #1
 800b484:	9903      	ldr	r1, [sp, #12]
 800b486:	9301      	str	r3, [sp, #4]
 800b488:	6802      	ldr	r2, [r0, #0]
 800b48a:	c908      	ldmia	r1!, {r3}
 800b48c:	b292      	uxth	r2, r2
 800b48e:	1955      	adds	r5, r2, r5
 800b490:	b29a      	uxth	r2, r3
 800b492:	1aaa      	subs	r2, r5, r2
 800b494:	6805      	ldr	r5, [r0, #0]
 800b496:	0c1b      	lsrs	r3, r3, #16
 800b498:	0c2d      	lsrs	r5, r5, #16
 800b49a:	1aeb      	subs	r3, r5, r3
 800b49c:	1415      	asrs	r5, r2, #16
 800b49e:	195b      	adds	r3, r3, r5
 800b4a0:	141d      	asrs	r5, r3, #16
 800b4a2:	b292      	uxth	r2, r2
 800b4a4:	041b      	lsls	r3, r3, #16
 800b4a6:	4313      	orrs	r3, r2
 800b4a8:	c008      	stmia	r0!, {r3}
 800b4aa:	9b04      	ldr	r3, [sp, #16]
 800b4ac:	428b      	cmp	r3, r1
 800b4ae:	d2eb      	bcs.n	800b488 <quorem+0xa8>
 800b4b0:	9a02      	ldr	r2, [sp, #8]
 800b4b2:	00a3      	lsls	r3, r4, #2
 800b4b4:	18d3      	adds	r3, r2, r3
 800b4b6:	681a      	ldr	r2, [r3, #0]
 800b4b8:	2a00      	cmp	r2, #0
 800b4ba:	d011      	beq.n	800b4e0 <quorem+0x100>
 800b4bc:	9e01      	ldr	r6, [sp, #4]
 800b4be:	0030      	movs	r0, r6
 800b4c0:	b009      	add	sp, #36	; 0x24
 800b4c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4c4:	682b      	ldr	r3, [r5, #0]
 800b4c6:	2b00      	cmp	r3, #0
 800b4c8:	d104      	bne.n	800b4d4 <quorem+0xf4>
 800b4ca:	3c01      	subs	r4, #1
 800b4cc:	9b02      	ldr	r3, [sp, #8]
 800b4ce:	3d04      	subs	r5, #4
 800b4d0:	42ab      	cmp	r3, r5
 800b4d2:	d3f7      	bcc.n	800b4c4 <quorem+0xe4>
 800b4d4:	613c      	str	r4, [r7, #16]
 800b4d6:	e7cb      	b.n	800b470 <quorem+0x90>
 800b4d8:	681a      	ldr	r2, [r3, #0]
 800b4da:	2a00      	cmp	r2, #0
 800b4dc:	d104      	bne.n	800b4e8 <quorem+0x108>
 800b4de:	3c01      	subs	r4, #1
 800b4e0:	9a02      	ldr	r2, [sp, #8]
 800b4e2:	3b04      	subs	r3, #4
 800b4e4:	429a      	cmp	r2, r3
 800b4e6:	d3f7      	bcc.n	800b4d8 <quorem+0xf8>
 800b4e8:	613c      	str	r4, [r7, #16]
 800b4ea:	e7e7      	b.n	800b4bc <quorem+0xdc>

0800b4ec <_dtoa_r>:
 800b4ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4ee:	0016      	movs	r6, r2
 800b4f0:	001f      	movs	r7, r3
 800b4f2:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800b4f4:	b09b      	sub	sp, #108	; 0x6c
 800b4f6:	9002      	str	r0, [sp, #8]
 800b4f8:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 800b4fa:	9606      	str	r6, [sp, #24]
 800b4fc:	9707      	str	r7, [sp, #28]
 800b4fe:	2c00      	cmp	r4, #0
 800b500:	d108      	bne.n	800b514 <_dtoa_r+0x28>
 800b502:	2010      	movs	r0, #16
 800b504:	f001 fa4a 	bl	800c99c <malloc>
 800b508:	9b02      	ldr	r3, [sp, #8]
 800b50a:	6258      	str	r0, [r3, #36]	; 0x24
 800b50c:	6044      	str	r4, [r0, #4]
 800b50e:	6084      	str	r4, [r0, #8]
 800b510:	6004      	str	r4, [r0, #0]
 800b512:	60c4      	str	r4, [r0, #12]
 800b514:	9b02      	ldr	r3, [sp, #8]
 800b516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b518:	6819      	ldr	r1, [r3, #0]
 800b51a:	2900      	cmp	r1, #0
 800b51c:	d00b      	beq.n	800b536 <_dtoa_r+0x4a>
 800b51e:	685a      	ldr	r2, [r3, #4]
 800b520:	2301      	movs	r3, #1
 800b522:	4093      	lsls	r3, r2
 800b524:	604a      	str	r2, [r1, #4]
 800b526:	608b      	str	r3, [r1, #8]
 800b528:	9802      	ldr	r0, [sp, #8]
 800b52a:	f001 faa1 	bl	800ca70 <_Bfree>
 800b52e:	2200      	movs	r2, #0
 800b530:	9b02      	ldr	r3, [sp, #8]
 800b532:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b534:	601a      	str	r2, [r3, #0]
 800b536:	2f00      	cmp	r7, #0
 800b538:	da20      	bge.n	800b57c <_dtoa_r+0x90>
 800b53a:	2301      	movs	r3, #1
 800b53c:	602b      	str	r3, [r5, #0]
 800b53e:	007b      	lsls	r3, r7, #1
 800b540:	085b      	lsrs	r3, r3, #1
 800b542:	9307      	str	r3, [sp, #28]
 800b544:	9c07      	ldr	r4, [sp, #28]
 800b546:	4bb2      	ldr	r3, [pc, #712]	; (800b810 <_dtoa_r+0x324>)
 800b548:	0022      	movs	r2, r4
 800b54a:	9317      	str	r3, [sp, #92]	; 0x5c
 800b54c:	401a      	ands	r2, r3
 800b54e:	429a      	cmp	r2, r3
 800b550:	d117      	bne.n	800b582 <_dtoa_r+0x96>
 800b552:	4bb0      	ldr	r3, [pc, #704]	; (800b814 <_dtoa_r+0x328>)
 800b554:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800b556:	6013      	str	r3, [r2, #0]
 800b558:	9b06      	ldr	r3, [sp, #24]
 800b55a:	2b00      	cmp	r3, #0
 800b55c:	d103      	bne.n	800b566 <_dtoa_r+0x7a>
 800b55e:	0324      	lsls	r4, r4, #12
 800b560:	d101      	bne.n	800b566 <_dtoa_r+0x7a>
 800b562:	f000 fd87 	bl	800c074 <_dtoa_r+0xb88>
 800b566:	4bac      	ldr	r3, [pc, #688]	; (800b818 <_dtoa_r+0x32c>)
 800b568:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800b56a:	9308      	str	r3, [sp, #32]
 800b56c:	2a00      	cmp	r2, #0
 800b56e:	d002      	beq.n	800b576 <_dtoa_r+0x8a>
 800b570:	4baa      	ldr	r3, [pc, #680]	; (800b81c <_dtoa_r+0x330>)
 800b572:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800b574:	6013      	str	r3, [r2, #0]
 800b576:	9808      	ldr	r0, [sp, #32]
 800b578:	b01b      	add	sp, #108	; 0x6c
 800b57a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b57c:	2300      	movs	r3, #0
 800b57e:	602b      	str	r3, [r5, #0]
 800b580:	e7e0      	b.n	800b544 <_dtoa_r+0x58>
 800b582:	9e06      	ldr	r6, [sp, #24]
 800b584:	9f07      	ldr	r7, [sp, #28]
 800b586:	2200      	movs	r2, #0
 800b588:	2300      	movs	r3, #0
 800b58a:	0030      	movs	r0, r6
 800b58c:	0039      	movs	r1, r7
 800b58e:	f7f4 ff53 	bl	8000438 <__aeabi_dcmpeq>
 800b592:	1e05      	subs	r5, r0, #0
 800b594:	d00b      	beq.n	800b5ae <_dtoa_r+0xc2>
 800b596:	2301      	movs	r3, #1
 800b598:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800b59a:	6013      	str	r3, [r2, #0]
 800b59c:	4ba0      	ldr	r3, [pc, #640]	; (800b820 <_dtoa_r+0x334>)
 800b59e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800b5a0:	9308      	str	r3, [sp, #32]
 800b5a2:	2a00      	cmp	r2, #0
 800b5a4:	d0e7      	beq.n	800b576 <_dtoa_r+0x8a>
 800b5a6:	4a9f      	ldr	r2, [pc, #636]	; (800b824 <_dtoa_r+0x338>)
 800b5a8:	9924      	ldr	r1, [sp, #144]	; 0x90
 800b5aa:	600a      	str	r2, [r1, #0]
 800b5ac:	e7e3      	b.n	800b576 <_dtoa_r+0x8a>
 800b5ae:	ab18      	add	r3, sp, #96	; 0x60
 800b5b0:	9301      	str	r3, [sp, #4]
 800b5b2:	ab19      	add	r3, sp, #100	; 0x64
 800b5b4:	9300      	str	r3, [sp, #0]
 800b5b6:	0032      	movs	r2, r6
 800b5b8:	003b      	movs	r3, r7
 800b5ba:	9802      	ldr	r0, [sp, #8]
 800b5bc:	f001 fd62 	bl	800d084 <__d2b>
 800b5c0:	0063      	lsls	r3, r4, #1
 800b5c2:	9003      	str	r0, [sp, #12]
 800b5c4:	0d5b      	lsrs	r3, r3, #21
 800b5c6:	d074      	beq.n	800b6b2 <_dtoa_r+0x1c6>
 800b5c8:	033a      	lsls	r2, r7, #12
 800b5ca:	4c97      	ldr	r4, [pc, #604]	; (800b828 <_dtoa_r+0x33c>)
 800b5cc:	0b12      	lsrs	r2, r2, #12
 800b5ce:	4314      	orrs	r4, r2
 800b5d0:	0021      	movs	r1, r4
 800b5d2:	4a96      	ldr	r2, [pc, #600]	; (800b82c <_dtoa_r+0x340>)
 800b5d4:	0030      	movs	r0, r6
 800b5d6:	9516      	str	r5, [sp, #88]	; 0x58
 800b5d8:	189e      	adds	r6, r3, r2
 800b5da:	2200      	movs	r2, #0
 800b5dc:	4b94      	ldr	r3, [pc, #592]	; (800b830 <_dtoa_r+0x344>)
 800b5de:	f7f7 f85d 	bl	800269c <__aeabi_dsub>
 800b5e2:	4a94      	ldr	r2, [pc, #592]	; (800b834 <_dtoa_r+0x348>)
 800b5e4:	4b94      	ldr	r3, [pc, #592]	; (800b838 <_dtoa_r+0x34c>)
 800b5e6:	f7f6 fde7 	bl	80021b8 <__aeabi_dmul>
 800b5ea:	4a94      	ldr	r2, [pc, #592]	; (800b83c <_dtoa_r+0x350>)
 800b5ec:	4b94      	ldr	r3, [pc, #592]	; (800b840 <_dtoa_r+0x354>)
 800b5ee:	f7f5 febd 	bl	800136c <__aeabi_dadd>
 800b5f2:	0004      	movs	r4, r0
 800b5f4:	0030      	movs	r0, r6
 800b5f6:	000d      	movs	r5, r1
 800b5f8:	f7f7 fbea 	bl	8002dd0 <__aeabi_i2d>
 800b5fc:	4a91      	ldr	r2, [pc, #580]	; (800b844 <_dtoa_r+0x358>)
 800b5fe:	4b92      	ldr	r3, [pc, #584]	; (800b848 <_dtoa_r+0x35c>)
 800b600:	f7f6 fdda 	bl	80021b8 <__aeabi_dmul>
 800b604:	0002      	movs	r2, r0
 800b606:	000b      	movs	r3, r1
 800b608:	0020      	movs	r0, r4
 800b60a:	0029      	movs	r1, r5
 800b60c:	f7f5 feae 	bl	800136c <__aeabi_dadd>
 800b610:	0004      	movs	r4, r0
 800b612:	000d      	movs	r5, r1
 800b614:	f7f7 fba6 	bl	8002d64 <__aeabi_d2iz>
 800b618:	2200      	movs	r2, #0
 800b61a:	0007      	movs	r7, r0
 800b61c:	2300      	movs	r3, #0
 800b61e:	0020      	movs	r0, r4
 800b620:	0029      	movs	r1, r5
 800b622:	f7f4 ff0f 	bl	8000444 <__aeabi_dcmplt>
 800b626:	2800      	cmp	r0, #0
 800b628:	d009      	beq.n	800b63e <_dtoa_r+0x152>
 800b62a:	0038      	movs	r0, r7
 800b62c:	f7f7 fbd0 	bl	8002dd0 <__aeabi_i2d>
 800b630:	002b      	movs	r3, r5
 800b632:	0022      	movs	r2, r4
 800b634:	f7f4 ff00 	bl	8000438 <__aeabi_dcmpeq>
 800b638:	4243      	negs	r3, r0
 800b63a:	4158      	adcs	r0, r3
 800b63c:	1a3f      	subs	r7, r7, r0
 800b63e:	2301      	movs	r3, #1
 800b640:	9314      	str	r3, [sp, #80]	; 0x50
 800b642:	2f16      	cmp	r7, #22
 800b644:	d80d      	bhi.n	800b662 <_dtoa_r+0x176>
 800b646:	4981      	ldr	r1, [pc, #516]	; (800b84c <_dtoa_r+0x360>)
 800b648:	00fb      	lsls	r3, r7, #3
 800b64a:	18c9      	adds	r1, r1, r3
 800b64c:	6808      	ldr	r0, [r1, #0]
 800b64e:	6849      	ldr	r1, [r1, #4]
 800b650:	9a06      	ldr	r2, [sp, #24]
 800b652:	9b07      	ldr	r3, [sp, #28]
 800b654:	f7f4 ff0a 	bl	800046c <__aeabi_dcmpgt>
 800b658:	2800      	cmp	r0, #0
 800b65a:	d046      	beq.n	800b6ea <_dtoa_r+0x1fe>
 800b65c:	2300      	movs	r3, #0
 800b65e:	3f01      	subs	r7, #1
 800b660:	9314      	str	r3, [sp, #80]	; 0x50
 800b662:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800b664:	1b9e      	subs	r6, r3, r6
 800b666:	2300      	movs	r3, #0
 800b668:	930a      	str	r3, [sp, #40]	; 0x28
 800b66a:	0033      	movs	r3, r6
 800b66c:	3b01      	subs	r3, #1
 800b66e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b670:	d504      	bpl.n	800b67c <_dtoa_r+0x190>
 800b672:	2301      	movs	r3, #1
 800b674:	1b9b      	subs	r3, r3, r6
 800b676:	930a      	str	r3, [sp, #40]	; 0x28
 800b678:	2300      	movs	r3, #0
 800b67a:	930b      	str	r3, [sp, #44]	; 0x2c
 800b67c:	2f00      	cmp	r7, #0
 800b67e:	db36      	blt.n	800b6ee <_dtoa_r+0x202>
 800b680:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b682:	9711      	str	r7, [sp, #68]	; 0x44
 800b684:	19db      	adds	r3, r3, r7
 800b686:	930b      	str	r3, [sp, #44]	; 0x2c
 800b688:	2300      	movs	r3, #0
 800b68a:	9304      	str	r3, [sp, #16]
 800b68c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800b68e:	2401      	movs	r4, #1
 800b690:	2b09      	cmp	r3, #9
 800b692:	d900      	bls.n	800b696 <_dtoa_r+0x1aa>
 800b694:	e084      	b.n	800b7a0 <_dtoa_r+0x2b4>
 800b696:	2b05      	cmp	r3, #5
 800b698:	dd02      	ble.n	800b6a0 <_dtoa_r+0x1b4>
 800b69a:	2400      	movs	r4, #0
 800b69c:	3b04      	subs	r3, #4
 800b69e:	9320      	str	r3, [sp, #128]	; 0x80
 800b6a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800b6a2:	1e98      	subs	r0, r3, #2
 800b6a4:	2803      	cmp	r0, #3
 800b6a6:	d900      	bls.n	800b6aa <_dtoa_r+0x1be>
 800b6a8:	e084      	b.n	800b7b4 <_dtoa_r+0x2c8>
 800b6aa:	f7f4 fd35 	bl	8000118 <__gnu_thumb1_case_uqi>
 800b6ae:	7775      	.short	0x7775
 800b6b0:	6a28      	.short	0x6a28
 800b6b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800b6b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800b6b6:	189e      	adds	r6, r3, r2
 800b6b8:	4b65      	ldr	r3, [pc, #404]	; (800b850 <_dtoa_r+0x364>)
 800b6ba:	18f2      	adds	r2, r6, r3
 800b6bc:	2a20      	cmp	r2, #32
 800b6be:	dd0f      	ble.n	800b6e0 <_dtoa_r+0x1f4>
 800b6c0:	2340      	movs	r3, #64	; 0x40
 800b6c2:	1a9b      	subs	r3, r3, r2
 800b6c4:	409c      	lsls	r4, r3
 800b6c6:	4b63      	ldr	r3, [pc, #396]	; (800b854 <_dtoa_r+0x368>)
 800b6c8:	9806      	ldr	r0, [sp, #24]
 800b6ca:	18f3      	adds	r3, r6, r3
 800b6cc:	40d8      	lsrs	r0, r3
 800b6ce:	4320      	orrs	r0, r4
 800b6d0:	f7f7 fbb8 	bl	8002e44 <__aeabi_ui2d>
 800b6d4:	2301      	movs	r3, #1
 800b6d6:	4c60      	ldr	r4, [pc, #384]	; (800b858 <_dtoa_r+0x36c>)
 800b6d8:	3e01      	subs	r6, #1
 800b6da:	1909      	adds	r1, r1, r4
 800b6dc:	9316      	str	r3, [sp, #88]	; 0x58
 800b6de:	e77c      	b.n	800b5da <_dtoa_r+0xee>
 800b6e0:	2320      	movs	r3, #32
 800b6e2:	9806      	ldr	r0, [sp, #24]
 800b6e4:	1a9b      	subs	r3, r3, r2
 800b6e6:	4098      	lsls	r0, r3
 800b6e8:	e7f2      	b.n	800b6d0 <_dtoa_r+0x1e4>
 800b6ea:	9014      	str	r0, [sp, #80]	; 0x50
 800b6ec:	e7b9      	b.n	800b662 <_dtoa_r+0x176>
 800b6ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b6f0:	1bdb      	subs	r3, r3, r7
 800b6f2:	930a      	str	r3, [sp, #40]	; 0x28
 800b6f4:	427b      	negs	r3, r7
 800b6f6:	9304      	str	r3, [sp, #16]
 800b6f8:	2300      	movs	r3, #0
 800b6fa:	9311      	str	r3, [sp, #68]	; 0x44
 800b6fc:	e7c6      	b.n	800b68c <_dtoa_r+0x1a0>
 800b6fe:	2301      	movs	r3, #1
 800b700:	930d      	str	r3, [sp, #52]	; 0x34
 800b702:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b704:	2b00      	cmp	r3, #0
 800b706:	dd59      	ble.n	800b7bc <_dtoa_r+0x2d0>
 800b708:	930c      	str	r3, [sp, #48]	; 0x30
 800b70a:	9309      	str	r3, [sp, #36]	; 0x24
 800b70c:	9a02      	ldr	r2, [sp, #8]
 800b70e:	6a55      	ldr	r5, [r2, #36]	; 0x24
 800b710:	2200      	movs	r2, #0
 800b712:	606a      	str	r2, [r5, #4]
 800b714:	3204      	adds	r2, #4
 800b716:	0010      	movs	r0, r2
 800b718:	3014      	adds	r0, #20
 800b71a:	6869      	ldr	r1, [r5, #4]
 800b71c:	4298      	cmp	r0, r3
 800b71e:	d952      	bls.n	800b7c6 <_dtoa_r+0x2da>
 800b720:	9802      	ldr	r0, [sp, #8]
 800b722:	f001 f96d 	bl	800ca00 <_Balloc>
 800b726:	9b02      	ldr	r3, [sp, #8]
 800b728:	6028      	str	r0, [r5, #0]
 800b72a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b72c:	681b      	ldr	r3, [r3, #0]
 800b72e:	9308      	str	r3, [sp, #32]
 800b730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b732:	2b0e      	cmp	r3, #14
 800b734:	d900      	bls.n	800b738 <_dtoa_r+0x24c>
 800b736:	e10a      	b.n	800b94e <_dtoa_r+0x462>
 800b738:	2c00      	cmp	r4, #0
 800b73a:	d100      	bne.n	800b73e <_dtoa_r+0x252>
 800b73c:	e107      	b.n	800b94e <_dtoa_r+0x462>
 800b73e:	9b06      	ldr	r3, [sp, #24]
 800b740:	9c07      	ldr	r4, [sp, #28]
 800b742:	9312      	str	r3, [sp, #72]	; 0x48
 800b744:	9413      	str	r4, [sp, #76]	; 0x4c
 800b746:	2f00      	cmp	r7, #0
 800b748:	dc00      	bgt.n	800b74c <_dtoa_r+0x260>
 800b74a:	e089      	b.n	800b860 <_dtoa_r+0x374>
 800b74c:	210f      	movs	r1, #15
 800b74e:	003a      	movs	r2, r7
 800b750:	4b3e      	ldr	r3, [pc, #248]	; (800b84c <_dtoa_r+0x360>)
 800b752:	400a      	ands	r2, r1
 800b754:	00d2      	lsls	r2, r2, #3
 800b756:	189b      	adds	r3, r3, r2
 800b758:	681d      	ldr	r5, [r3, #0]
 800b75a:	685e      	ldr	r6, [r3, #4]
 800b75c:	2302      	movs	r3, #2
 800b75e:	113c      	asrs	r4, r7, #4
 800b760:	930e      	str	r3, [sp, #56]	; 0x38
 800b762:	06e3      	lsls	r3, r4, #27
 800b764:	d50b      	bpl.n	800b77e <_dtoa_r+0x292>
 800b766:	4b3d      	ldr	r3, [pc, #244]	; (800b85c <_dtoa_r+0x370>)
 800b768:	400c      	ands	r4, r1
 800b76a:	6a1a      	ldr	r2, [r3, #32]
 800b76c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b76e:	9812      	ldr	r0, [sp, #72]	; 0x48
 800b770:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800b772:	f7f6 f917 	bl	80019a4 <__aeabi_ddiv>
 800b776:	2303      	movs	r3, #3
 800b778:	9006      	str	r0, [sp, #24]
 800b77a:	9107      	str	r1, [sp, #28]
 800b77c:	930e      	str	r3, [sp, #56]	; 0x38
 800b77e:	2300      	movs	r3, #0
 800b780:	e03a      	b.n	800b7f8 <_dtoa_r+0x30c>
 800b782:	2301      	movs	r3, #1
 800b784:	930d      	str	r3, [sp, #52]	; 0x34
 800b786:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b788:	18fb      	adds	r3, r7, r3
 800b78a:	930c      	str	r3, [sp, #48]	; 0x30
 800b78c:	3301      	adds	r3, #1
 800b78e:	9309      	str	r3, [sp, #36]	; 0x24
 800b790:	2b00      	cmp	r3, #0
 800b792:	dcbb      	bgt.n	800b70c <_dtoa_r+0x220>
 800b794:	2301      	movs	r3, #1
 800b796:	e7b9      	b.n	800b70c <_dtoa_r+0x220>
 800b798:	2300      	movs	r3, #0
 800b79a:	e7b1      	b.n	800b700 <_dtoa_r+0x214>
 800b79c:	2300      	movs	r3, #0
 800b79e:	e7f1      	b.n	800b784 <_dtoa_r+0x298>
 800b7a0:	2300      	movs	r3, #0
 800b7a2:	940d      	str	r4, [sp, #52]	; 0x34
 800b7a4:	9320      	str	r3, [sp, #128]	; 0x80
 800b7a6:	3b01      	subs	r3, #1
 800b7a8:	2200      	movs	r2, #0
 800b7aa:	930c      	str	r3, [sp, #48]	; 0x30
 800b7ac:	9309      	str	r3, [sp, #36]	; 0x24
 800b7ae:	3313      	adds	r3, #19
 800b7b0:	9221      	str	r2, [sp, #132]	; 0x84
 800b7b2:	e7ab      	b.n	800b70c <_dtoa_r+0x220>
 800b7b4:	2301      	movs	r3, #1
 800b7b6:	930d      	str	r3, [sp, #52]	; 0x34
 800b7b8:	3b02      	subs	r3, #2
 800b7ba:	e7f5      	b.n	800b7a8 <_dtoa_r+0x2bc>
 800b7bc:	2301      	movs	r3, #1
 800b7be:	930c      	str	r3, [sp, #48]	; 0x30
 800b7c0:	9309      	str	r3, [sp, #36]	; 0x24
 800b7c2:	001a      	movs	r2, r3
 800b7c4:	e7f4      	b.n	800b7b0 <_dtoa_r+0x2c4>
 800b7c6:	3101      	adds	r1, #1
 800b7c8:	6069      	str	r1, [r5, #4]
 800b7ca:	0052      	lsls	r2, r2, #1
 800b7cc:	e7a3      	b.n	800b716 <_dtoa_r+0x22a>
 800b7ce:	2301      	movs	r3, #1
 800b7d0:	421c      	tst	r4, r3
 800b7d2:	d00e      	beq.n	800b7f2 <_dtoa_r+0x306>
 800b7d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b7d6:	4a21      	ldr	r2, [pc, #132]	; (800b85c <_dtoa_r+0x370>)
 800b7d8:	3301      	adds	r3, #1
 800b7da:	930e      	str	r3, [sp, #56]	; 0x38
 800b7dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b7de:	0028      	movs	r0, r5
 800b7e0:	00db      	lsls	r3, r3, #3
 800b7e2:	189b      	adds	r3, r3, r2
 800b7e4:	0031      	movs	r1, r6
 800b7e6:	681a      	ldr	r2, [r3, #0]
 800b7e8:	685b      	ldr	r3, [r3, #4]
 800b7ea:	f7f6 fce5 	bl	80021b8 <__aeabi_dmul>
 800b7ee:	0005      	movs	r5, r0
 800b7f0:	000e      	movs	r6, r1
 800b7f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b7f4:	1064      	asrs	r4, r4, #1
 800b7f6:	3301      	adds	r3, #1
 800b7f8:	9310      	str	r3, [sp, #64]	; 0x40
 800b7fa:	2c00      	cmp	r4, #0
 800b7fc:	d1e7      	bne.n	800b7ce <_dtoa_r+0x2e2>
 800b7fe:	9806      	ldr	r0, [sp, #24]
 800b800:	9907      	ldr	r1, [sp, #28]
 800b802:	002a      	movs	r2, r5
 800b804:	0033      	movs	r3, r6
 800b806:	f7f6 f8cd 	bl	80019a4 <__aeabi_ddiv>
 800b80a:	9006      	str	r0, [sp, #24]
 800b80c:	9107      	str	r1, [sp, #28]
 800b80e:	e042      	b.n	800b896 <_dtoa_r+0x3aa>
 800b810:	7ff00000 	.word	0x7ff00000
 800b814:	0000270f 	.word	0x0000270f
 800b818:	0800e3f9 	.word	0x0800e3f9
 800b81c:	0800e3fc 	.word	0x0800e3fc
 800b820:	0800e374 	.word	0x0800e374
 800b824:	0800e375 	.word	0x0800e375
 800b828:	3ff00000 	.word	0x3ff00000
 800b82c:	fffffc01 	.word	0xfffffc01
 800b830:	3ff80000 	.word	0x3ff80000
 800b834:	636f4361 	.word	0x636f4361
 800b838:	3fd287a7 	.word	0x3fd287a7
 800b83c:	8b60c8b3 	.word	0x8b60c8b3
 800b840:	3fc68a28 	.word	0x3fc68a28
 800b844:	509f79fb 	.word	0x509f79fb
 800b848:	3fd34413 	.word	0x3fd34413
 800b84c:	0800e430 	.word	0x0800e430
 800b850:	00000432 	.word	0x00000432
 800b854:	00000412 	.word	0x00000412
 800b858:	fe100000 	.word	0xfe100000
 800b85c:	0800e408 	.word	0x0800e408
 800b860:	2302      	movs	r3, #2
 800b862:	930e      	str	r3, [sp, #56]	; 0x38
 800b864:	2f00      	cmp	r7, #0
 800b866:	d016      	beq.n	800b896 <_dtoa_r+0x3aa>
 800b868:	9812      	ldr	r0, [sp, #72]	; 0x48
 800b86a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800b86c:	427c      	negs	r4, r7
 800b86e:	330d      	adds	r3, #13
 800b870:	4023      	ands	r3, r4
 800b872:	4ace      	ldr	r2, [pc, #824]	; (800bbac <_dtoa_r+0x6c0>)
 800b874:	00db      	lsls	r3, r3, #3
 800b876:	18d3      	adds	r3, r2, r3
 800b878:	681a      	ldr	r2, [r3, #0]
 800b87a:	685b      	ldr	r3, [r3, #4]
 800b87c:	f7f6 fc9c 	bl	80021b8 <__aeabi_dmul>
 800b880:	2300      	movs	r3, #0
 800b882:	2601      	movs	r6, #1
 800b884:	001d      	movs	r5, r3
 800b886:	9006      	str	r0, [sp, #24]
 800b888:	9107      	str	r1, [sp, #28]
 800b88a:	1124      	asrs	r4, r4, #4
 800b88c:	2c00      	cmp	r4, #0
 800b88e:	d000      	beq.n	800b892 <_dtoa_r+0x3a6>
 800b890:	e08c      	b.n	800b9ac <_dtoa_r+0x4c0>
 800b892:	2b00      	cmp	r3, #0
 800b894:	d1b9      	bne.n	800b80a <_dtoa_r+0x31e>
 800b896:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800b898:	2b00      	cmp	r3, #0
 800b89a:	d100      	bne.n	800b89e <_dtoa_r+0x3b2>
 800b89c:	e096      	b.n	800b9cc <_dtoa_r+0x4e0>
 800b89e:	9c06      	ldr	r4, [sp, #24]
 800b8a0:	9d07      	ldr	r5, [sp, #28]
 800b8a2:	2200      	movs	r2, #0
 800b8a4:	4bc2      	ldr	r3, [pc, #776]	; (800bbb0 <_dtoa_r+0x6c4>)
 800b8a6:	0020      	movs	r0, r4
 800b8a8:	0029      	movs	r1, r5
 800b8aa:	f7f4 fdcb 	bl	8000444 <__aeabi_dcmplt>
 800b8ae:	2800      	cmp	r0, #0
 800b8b0:	d100      	bne.n	800b8b4 <_dtoa_r+0x3c8>
 800b8b2:	e08b      	b.n	800b9cc <_dtoa_r+0x4e0>
 800b8b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b8b6:	2b00      	cmp	r3, #0
 800b8b8:	d100      	bne.n	800b8bc <_dtoa_r+0x3d0>
 800b8ba:	e087      	b.n	800b9cc <_dtoa_r+0x4e0>
 800b8bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b8be:	2b00      	cmp	r3, #0
 800b8c0:	dd41      	ble.n	800b946 <_dtoa_r+0x45a>
 800b8c2:	4bbc      	ldr	r3, [pc, #752]	; (800bbb4 <_dtoa_r+0x6c8>)
 800b8c4:	2200      	movs	r2, #0
 800b8c6:	0020      	movs	r0, r4
 800b8c8:	0029      	movs	r1, r5
 800b8ca:	f7f6 fc75 	bl	80021b8 <__aeabi_dmul>
 800b8ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b8d0:	9006      	str	r0, [sp, #24]
 800b8d2:	9107      	str	r1, [sp, #28]
 800b8d4:	3301      	adds	r3, #1
 800b8d6:	930e      	str	r3, [sp, #56]	; 0x38
 800b8d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b8da:	1e7e      	subs	r6, r7, #1
 800b8dc:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b8de:	9310      	str	r3, [sp, #64]	; 0x40
 800b8e0:	f7f7 fa76 	bl	8002dd0 <__aeabi_i2d>
 800b8e4:	9a06      	ldr	r2, [sp, #24]
 800b8e6:	9b07      	ldr	r3, [sp, #28]
 800b8e8:	f7f6 fc66 	bl	80021b8 <__aeabi_dmul>
 800b8ec:	2200      	movs	r2, #0
 800b8ee:	4bb2      	ldr	r3, [pc, #712]	; (800bbb8 <_dtoa_r+0x6cc>)
 800b8f0:	f7f5 fd3c 	bl	800136c <__aeabi_dadd>
 800b8f4:	4ab1      	ldr	r2, [pc, #708]	; (800bbbc <_dtoa_r+0x6d0>)
 800b8f6:	900e      	str	r0, [sp, #56]	; 0x38
 800b8f8:	910f      	str	r1, [sp, #60]	; 0x3c
 800b8fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800b8fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800b8fe:	4694      	mov	ip, r2
 800b900:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b902:	4463      	add	r3, ip
 800b904:	9315      	str	r3, [sp, #84]	; 0x54
 800b906:	001d      	movs	r5, r3
 800b908:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b90a:	2b00      	cmp	r3, #0
 800b90c:	d161      	bne.n	800b9d2 <_dtoa_r+0x4e6>
 800b90e:	9806      	ldr	r0, [sp, #24]
 800b910:	9907      	ldr	r1, [sp, #28]
 800b912:	2200      	movs	r2, #0
 800b914:	4baa      	ldr	r3, [pc, #680]	; (800bbc0 <_dtoa_r+0x6d4>)
 800b916:	f7f6 fec1 	bl	800269c <__aeabi_dsub>
 800b91a:	0022      	movs	r2, r4
 800b91c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b91e:	9006      	str	r0, [sp, #24]
 800b920:	9107      	str	r1, [sp, #28]
 800b922:	f7f4 fda3 	bl	800046c <__aeabi_dcmpgt>
 800b926:	2800      	cmp	r0, #0
 800b928:	d000      	beq.n	800b92c <_dtoa_r+0x440>
 800b92a:	e2a8      	b.n	800be7e <_dtoa_r+0x992>
 800b92c:	48a5      	ldr	r0, [pc, #660]	; (800bbc4 <_dtoa_r+0x6d8>)
 800b92e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b930:	4684      	mov	ip, r0
 800b932:	4461      	add	r1, ip
 800b934:	000b      	movs	r3, r1
 800b936:	9806      	ldr	r0, [sp, #24]
 800b938:	9907      	ldr	r1, [sp, #28]
 800b93a:	0022      	movs	r2, r4
 800b93c:	f7f4 fd82 	bl	8000444 <__aeabi_dcmplt>
 800b940:	2800      	cmp	r0, #0
 800b942:	d000      	beq.n	800b946 <_dtoa_r+0x45a>
 800b944:	e295      	b.n	800be72 <_dtoa_r+0x986>
 800b946:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b948:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800b94a:	9306      	str	r3, [sp, #24]
 800b94c:	9407      	str	r4, [sp, #28]
 800b94e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b950:	2b00      	cmp	r3, #0
 800b952:	da00      	bge.n	800b956 <_dtoa_r+0x46a>
 800b954:	e15c      	b.n	800bc10 <_dtoa_r+0x724>
 800b956:	2f0e      	cmp	r7, #14
 800b958:	dd00      	ble.n	800b95c <_dtoa_r+0x470>
 800b95a:	e159      	b.n	800bc10 <_dtoa_r+0x724>
 800b95c:	4b93      	ldr	r3, [pc, #588]	; (800bbac <_dtoa_r+0x6c0>)
 800b95e:	00fa      	lsls	r2, r7, #3
 800b960:	189b      	adds	r3, r3, r2
 800b962:	685c      	ldr	r4, [r3, #4]
 800b964:	681b      	ldr	r3, [r3, #0]
 800b966:	9304      	str	r3, [sp, #16]
 800b968:	9405      	str	r4, [sp, #20]
 800b96a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b96c:	2b00      	cmp	r3, #0
 800b96e:	db00      	blt.n	800b972 <_dtoa_r+0x486>
 800b970:	e0d8      	b.n	800bb24 <_dtoa_r+0x638>
 800b972:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b974:	2b00      	cmp	r3, #0
 800b976:	dd00      	ble.n	800b97a <_dtoa_r+0x48e>
 800b978:	e0d4      	b.n	800bb24 <_dtoa_r+0x638>
 800b97a:	d000      	beq.n	800b97e <_dtoa_r+0x492>
 800b97c:	e27d      	b.n	800be7a <_dtoa_r+0x98e>
 800b97e:	9804      	ldr	r0, [sp, #16]
 800b980:	9905      	ldr	r1, [sp, #20]
 800b982:	2200      	movs	r2, #0
 800b984:	4b8e      	ldr	r3, [pc, #568]	; (800bbc0 <_dtoa_r+0x6d4>)
 800b986:	f7f6 fc17 	bl	80021b8 <__aeabi_dmul>
 800b98a:	9a06      	ldr	r2, [sp, #24]
 800b98c:	9b07      	ldr	r3, [sp, #28]
 800b98e:	f7f4 fd77 	bl	8000480 <__aeabi_dcmpge>
 800b992:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b994:	9304      	str	r3, [sp, #16]
 800b996:	001e      	movs	r6, r3
 800b998:	2800      	cmp	r0, #0
 800b99a:	d000      	beq.n	800b99e <_dtoa_r+0x4b2>
 800b99c:	e24f      	b.n	800be3e <_dtoa_r+0x952>
 800b99e:	9b08      	ldr	r3, [sp, #32]
 800b9a0:	9a08      	ldr	r2, [sp, #32]
 800b9a2:	1c5d      	adds	r5, r3, #1
 800b9a4:	2331      	movs	r3, #49	; 0x31
 800b9a6:	3701      	adds	r7, #1
 800b9a8:	7013      	strb	r3, [r2, #0]
 800b9aa:	e24b      	b.n	800be44 <_dtoa_r+0x958>
 800b9ac:	4234      	tst	r4, r6
 800b9ae:	d00a      	beq.n	800b9c6 <_dtoa_r+0x4da>
 800b9b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b9b2:	4a85      	ldr	r2, [pc, #532]	; (800bbc8 <_dtoa_r+0x6dc>)
 800b9b4:	3301      	adds	r3, #1
 800b9b6:	930e      	str	r3, [sp, #56]	; 0x38
 800b9b8:	00eb      	lsls	r3, r5, #3
 800b9ba:	189b      	adds	r3, r3, r2
 800b9bc:	681a      	ldr	r2, [r3, #0]
 800b9be:	685b      	ldr	r3, [r3, #4]
 800b9c0:	f7f6 fbfa 	bl	80021b8 <__aeabi_dmul>
 800b9c4:	0033      	movs	r3, r6
 800b9c6:	1064      	asrs	r4, r4, #1
 800b9c8:	3501      	adds	r5, #1
 800b9ca:	e75f      	b.n	800b88c <_dtoa_r+0x3a0>
 800b9cc:	003e      	movs	r6, r7
 800b9ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b9d0:	e784      	b.n	800b8dc <_dtoa_r+0x3f0>
 800b9d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b9d4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b9d6:	1e5a      	subs	r2, r3, #1
 800b9d8:	4b74      	ldr	r3, [pc, #464]	; (800bbac <_dtoa_r+0x6c0>)
 800b9da:	00d2      	lsls	r2, r2, #3
 800b9dc:	189b      	adds	r3, r3, r2
 800b9de:	681a      	ldr	r2, [r3, #0]
 800b9e0:	685b      	ldr	r3, [r3, #4]
 800b9e2:	2900      	cmp	r1, #0
 800b9e4:	d049      	beq.n	800ba7a <_dtoa_r+0x58e>
 800b9e6:	2000      	movs	r0, #0
 800b9e8:	4978      	ldr	r1, [pc, #480]	; (800bbcc <_dtoa_r+0x6e0>)
 800b9ea:	f7f5 ffdb 	bl	80019a4 <__aeabi_ddiv>
 800b9ee:	002b      	movs	r3, r5
 800b9f0:	0022      	movs	r2, r4
 800b9f2:	f7f6 fe53 	bl	800269c <__aeabi_dsub>
 800b9f6:	9b08      	ldr	r3, [sp, #32]
 800b9f8:	900e      	str	r0, [sp, #56]	; 0x38
 800b9fa:	910f      	str	r1, [sp, #60]	; 0x3c
 800b9fc:	9315      	str	r3, [sp, #84]	; 0x54
 800b9fe:	9806      	ldr	r0, [sp, #24]
 800ba00:	9907      	ldr	r1, [sp, #28]
 800ba02:	f7f7 f9af 	bl	8002d64 <__aeabi_d2iz>
 800ba06:	0004      	movs	r4, r0
 800ba08:	f7f7 f9e2 	bl	8002dd0 <__aeabi_i2d>
 800ba0c:	0002      	movs	r2, r0
 800ba0e:	000b      	movs	r3, r1
 800ba10:	9806      	ldr	r0, [sp, #24]
 800ba12:	9907      	ldr	r1, [sp, #28]
 800ba14:	f7f6 fe42 	bl	800269c <__aeabi_dsub>
 800ba18:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ba1a:	3430      	adds	r4, #48	; 0x30
 800ba1c:	1c5d      	adds	r5, r3, #1
 800ba1e:	701c      	strb	r4, [r3, #0]
 800ba20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ba22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ba24:	9006      	str	r0, [sp, #24]
 800ba26:	9107      	str	r1, [sp, #28]
 800ba28:	f7f4 fd0c 	bl	8000444 <__aeabi_dcmplt>
 800ba2c:	2800      	cmp	r0, #0
 800ba2e:	d16c      	bne.n	800bb0a <_dtoa_r+0x61e>
 800ba30:	9a06      	ldr	r2, [sp, #24]
 800ba32:	9b07      	ldr	r3, [sp, #28]
 800ba34:	2000      	movs	r0, #0
 800ba36:	495e      	ldr	r1, [pc, #376]	; (800bbb0 <_dtoa_r+0x6c4>)
 800ba38:	f7f6 fe30 	bl	800269c <__aeabi_dsub>
 800ba3c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ba3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ba40:	f7f4 fd00 	bl	8000444 <__aeabi_dcmplt>
 800ba44:	2800      	cmp	r0, #0
 800ba46:	d000      	beq.n	800ba4a <_dtoa_r+0x55e>
 800ba48:	e0c3      	b.n	800bbd2 <_dtoa_r+0x6e6>
 800ba4a:	9b08      	ldr	r3, [sp, #32]
 800ba4c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ba4e:	1aeb      	subs	r3, r5, r3
 800ba50:	429a      	cmp	r2, r3
 800ba52:	dc00      	bgt.n	800ba56 <_dtoa_r+0x56a>
 800ba54:	e777      	b.n	800b946 <_dtoa_r+0x45a>
 800ba56:	980e      	ldr	r0, [sp, #56]	; 0x38
 800ba58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800ba5a:	2200      	movs	r2, #0
 800ba5c:	4b55      	ldr	r3, [pc, #340]	; (800bbb4 <_dtoa_r+0x6c8>)
 800ba5e:	f7f6 fbab 	bl	80021b8 <__aeabi_dmul>
 800ba62:	2200      	movs	r2, #0
 800ba64:	900e      	str	r0, [sp, #56]	; 0x38
 800ba66:	910f      	str	r1, [sp, #60]	; 0x3c
 800ba68:	9806      	ldr	r0, [sp, #24]
 800ba6a:	9907      	ldr	r1, [sp, #28]
 800ba6c:	4b51      	ldr	r3, [pc, #324]	; (800bbb4 <_dtoa_r+0x6c8>)
 800ba6e:	f7f6 fba3 	bl	80021b8 <__aeabi_dmul>
 800ba72:	9515      	str	r5, [sp, #84]	; 0x54
 800ba74:	9006      	str	r0, [sp, #24]
 800ba76:	9107      	str	r1, [sp, #28]
 800ba78:	e7c1      	b.n	800b9fe <_dtoa_r+0x512>
 800ba7a:	0020      	movs	r0, r4
 800ba7c:	0029      	movs	r1, r5
 800ba7e:	f7f6 fb9b 	bl	80021b8 <__aeabi_dmul>
 800ba82:	9c08      	ldr	r4, [sp, #32]
 800ba84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ba86:	0023      	movs	r3, r4
 800ba88:	4694      	mov	ip, r2
 800ba8a:	900e      	str	r0, [sp, #56]	; 0x38
 800ba8c:	910f      	str	r1, [sp, #60]	; 0x3c
 800ba8e:	4463      	add	r3, ip
 800ba90:	9315      	str	r3, [sp, #84]	; 0x54
 800ba92:	9806      	ldr	r0, [sp, #24]
 800ba94:	9907      	ldr	r1, [sp, #28]
 800ba96:	f7f7 f965 	bl	8002d64 <__aeabi_d2iz>
 800ba9a:	0005      	movs	r5, r0
 800ba9c:	f7f7 f998 	bl	8002dd0 <__aeabi_i2d>
 800baa0:	000b      	movs	r3, r1
 800baa2:	0002      	movs	r2, r0
 800baa4:	9806      	ldr	r0, [sp, #24]
 800baa6:	9907      	ldr	r1, [sp, #28]
 800baa8:	f7f6 fdf8 	bl	800269c <__aeabi_dsub>
 800baac:	3530      	adds	r5, #48	; 0x30
 800baae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bab0:	7025      	strb	r5, [r4, #0]
 800bab2:	3401      	adds	r4, #1
 800bab4:	9006      	str	r0, [sp, #24]
 800bab6:	9107      	str	r1, [sp, #28]
 800bab8:	42a3      	cmp	r3, r4
 800baba:	d12a      	bne.n	800bb12 <_dtoa_r+0x626>
 800babc:	980e      	ldr	r0, [sp, #56]	; 0x38
 800babe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800bac0:	9a08      	ldr	r2, [sp, #32]
 800bac2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bac4:	4694      	mov	ip, r2
 800bac6:	4463      	add	r3, ip
 800bac8:	2200      	movs	r2, #0
 800baca:	001d      	movs	r5, r3
 800bacc:	4b3f      	ldr	r3, [pc, #252]	; (800bbcc <_dtoa_r+0x6e0>)
 800bace:	f7f5 fc4d 	bl	800136c <__aeabi_dadd>
 800bad2:	0002      	movs	r2, r0
 800bad4:	000b      	movs	r3, r1
 800bad6:	9806      	ldr	r0, [sp, #24]
 800bad8:	9907      	ldr	r1, [sp, #28]
 800bada:	f7f4 fcc7 	bl	800046c <__aeabi_dcmpgt>
 800bade:	2800      	cmp	r0, #0
 800bae0:	d000      	beq.n	800bae4 <_dtoa_r+0x5f8>
 800bae2:	e076      	b.n	800bbd2 <_dtoa_r+0x6e6>
 800bae4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800bae6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bae8:	2000      	movs	r0, #0
 800baea:	4938      	ldr	r1, [pc, #224]	; (800bbcc <_dtoa_r+0x6e0>)
 800baec:	f7f6 fdd6 	bl	800269c <__aeabi_dsub>
 800baf0:	0002      	movs	r2, r0
 800baf2:	000b      	movs	r3, r1
 800baf4:	9806      	ldr	r0, [sp, #24]
 800baf6:	9907      	ldr	r1, [sp, #28]
 800baf8:	f7f4 fca4 	bl	8000444 <__aeabi_dcmplt>
 800bafc:	2800      	cmp	r0, #0
 800bafe:	d100      	bne.n	800bb02 <_dtoa_r+0x616>
 800bb00:	e721      	b.n	800b946 <_dtoa_r+0x45a>
 800bb02:	1e6b      	subs	r3, r5, #1
 800bb04:	781a      	ldrb	r2, [r3, #0]
 800bb06:	2a30      	cmp	r2, #48	; 0x30
 800bb08:	d001      	beq.n	800bb0e <_dtoa_r+0x622>
 800bb0a:	0037      	movs	r7, r6
 800bb0c:	e03f      	b.n	800bb8e <_dtoa_r+0x6a2>
 800bb0e:	001d      	movs	r5, r3
 800bb10:	e7f7      	b.n	800bb02 <_dtoa_r+0x616>
 800bb12:	9806      	ldr	r0, [sp, #24]
 800bb14:	9907      	ldr	r1, [sp, #28]
 800bb16:	2200      	movs	r2, #0
 800bb18:	4b26      	ldr	r3, [pc, #152]	; (800bbb4 <_dtoa_r+0x6c8>)
 800bb1a:	f7f6 fb4d 	bl	80021b8 <__aeabi_dmul>
 800bb1e:	9006      	str	r0, [sp, #24]
 800bb20:	9107      	str	r1, [sp, #28]
 800bb22:	e7b6      	b.n	800ba92 <_dtoa_r+0x5a6>
 800bb24:	9e08      	ldr	r6, [sp, #32]
 800bb26:	9a04      	ldr	r2, [sp, #16]
 800bb28:	9b05      	ldr	r3, [sp, #20]
 800bb2a:	9806      	ldr	r0, [sp, #24]
 800bb2c:	9907      	ldr	r1, [sp, #28]
 800bb2e:	f7f5 ff39 	bl	80019a4 <__aeabi_ddiv>
 800bb32:	f7f7 f917 	bl	8002d64 <__aeabi_d2iz>
 800bb36:	0004      	movs	r4, r0
 800bb38:	f7f7 f94a 	bl	8002dd0 <__aeabi_i2d>
 800bb3c:	9a04      	ldr	r2, [sp, #16]
 800bb3e:	9b05      	ldr	r3, [sp, #20]
 800bb40:	f7f6 fb3a 	bl	80021b8 <__aeabi_dmul>
 800bb44:	0002      	movs	r2, r0
 800bb46:	000b      	movs	r3, r1
 800bb48:	9806      	ldr	r0, [sp, #24]
 800bb4a:	9907      	ldr	r1, [sp, #28]
 800bb4c:	f7f6 fda6 	bl	800269c <__aeabi_dsub>
 800bb50:	0023      	movs	r3, r4
 800bb52:	3330      	adds	r3, #48	; 0x30
 800bb54:	7033      	strb	r3, [r6, #0]
 800bb56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bb58:	9b08      	ldr	r3, [sp, #32]
 800bb5a:	1c75      	adds	r5, r6, #1
 800bb5c:	1aeb      	subs	r3, r5, r3
 800bb5e:	429a      	cmp	r2, r3
 800bb60:	d148      	bne.n	800bbf4 <_dtoa_r+0x708>
 800bb62:	0002      	movs	r2, r0
 800bb64:	000b      	movs	r3, r1
 800bb66:	f7f5 fc01 	bl	800136c <__aeabi_dadd>
 800bb6a:	9a04      	ldr	r2, [sp, #16]
 800bb6c:	9b05      	ldr	r3, [sp, #20]
 800bb6e:	9006      	str	r0, [sp, #24]
 800bb70:	9107      	str	r1, [sp, #28]
 800bb72:	f7f4 fc7b 	bl	800046c <__aeabi_dcmpgt>
 800bb76:	2800      	cmp	r0, #0
 800bb78:	d12a      	bne.n	800bbd0 <_dtoa_r+0x6e4>
 800bb7a:	9a04      	ldr	r2, [sp, #16]
 800bb7c:	9b05      	ldr	r3, [sp, #20]
 800bb7e:	9806      	ldr	r0, [sp, #24]
 800bb80:	9907      	ldr	r1, [sp, #28]
 800bb82:	f7f4 fc59 	bl	8000438 <__aeabi_dcmpeq>
 800bb86:	2800      	cmp	r0, #0
 800bb88:	d001      	beq.n	800bb8e <_dtoa_r+0x6a2>
 800bb8a:	07e3      	lsls	r3, r4, #31
 800bb8c:	d420      	bmi.n	800bbd0 <_dtoa_r+0x6e4>
 800bb8e:	9903      	ldr	r1, [sp, #12]
 800bb90:	9802      	ldr	r0, [sp, #8]
 800bb92:	f000 ff6d 	bl	800ca70 <_Bfree>
 800bb96:	2300      	movs	r3, #0
 800bb98:	702b      	strb	r3, [r5, #0]
 800bb9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800bb9c:	3701      	adds	r7, #1
 800bb9e:	601f      	str	r7, [r3, #0]
 800bba0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800bba2:	2b00      	cmp	r3, #0
 800bba4:	d100      	bne.n	800bba8 <_dtoa_r+0x6bc>
 800bba6:	e4e6      	b.n	800b576 <_dtoa_r+0x8a>
 800bba8:	601d      	str	r5, [r3, #0]
 800bbaa:	e4e4      	b.n	800b576 <_dtoa_r+0x8a>
 800bbac:	0800e430 	.word	0x0800e430
 800bbb0:	3ff00000 	.word	0x3ff00000
 800bbb4:	40240000 	.word	0x40240000
 800bbb8:	401c0000 	.word	0x401c0000
 800bbbc:	fcc00000 	.word	0xfcc00000
 800bbc0:	40140000 	.word	0x40140000
 800bbc4:	7cc00000 	.word	0x7cc00000
 800bbc8:	0800e408 	.word	0x0800e408
 800bbcc:	3fe00000 	.word	0x3fe00000
 800bbd0:	003e      	movs	r6, r7
 800bbd2:	1e6b      	subs	r3, r5, #1
 800bbd4:	781a      	ldrb	r2, [r3, #0]
 800bbd6:	2a39      	cmp	r2, #57	; 0x39
 800bbd8:	d106      	bne.n	800bbe8 <_dtoa_r+0x6fc>
 800bbda:	9a08      	ldr	r2, [sp, #32]
 800bbdc:	429a      	cmp	r2, r3
 800bbde:	d107      	bne.n	800bbf0 <_dtoa_r+0x704>
 800bbe0:	2330      	movs	r3, #48	; 0x30
 800bbe2:	7013      	strb	r3, [r2, #0]
 800bbe4:	0013      	movs	r3, r2
 800bbe6:	3601      	adds	r6, #1
 800bbe8:	781a      	ldrb	r2, [r3, #0]
 800bbea:	3201      	adds	r2, #1
 800bbec:	701a      	strb	r2, [r3, #0]
 800bbee:	e78c      	b.n	800bb0a <_dtoa_r+0x61e>
 800bbf0:	001d      	movs	r5, r3
 800bbf2:	e7ee      	b.n	800bbd2 <_dtoa_r+0x6e6>
 800bbf4:	2200      	movs	r2, #0
 800bbf6:	4ba4      	ldr	r3, [pc, #656]	; (800be88 <_dtoa_r+0x99c>)
 800bbf8:	f7f6 fade 	bl	80021b8 <__aeabi_dmul>
 800bbfc:	2200      	movs	r2, #0
 800bbfe:	2300      	movs	r3, #0
 800bc00:	9006      	str	r0, [sp, #24]
 800bc02:	9107      	str	r1, [sp, #28]
 800bc04:	002e      	movs	r6, r5
 800bc06:	f7f4 fc17 	bl	8000438 <__aeabi_dcmpeq>
 800bc0a:	2800      	cmp	r0, #0
 800bc0c:	d08b      	beq.n	800bb26 <_dtoa_r+0x63a>
 800bc0e:	e7be      	b.n	800bb8e <_dtoa_r+0x6a2>
 800bc10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800bc12:	2a00      	cmp	r2, #0
 800bc14:	d100      	bne.n	800bc18 <_dtoa_r+0x72c>
 800bc16:	e0da      	b.n	800bdce <_dtoa_r+0x8e2>
 800bc18:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800bc1a:	2a01      	cmp	r2, #1
 800bc1c:	dd00      	ble.n	800bc20 <_dtoa_r+0x734>
 800bc1e:	e0bd      	b.n	800bd9c <_dtoa_r+0x8b0>
 800bc20:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800bc22:	2a00      	cmp	r2, #0
 800bc24:	d100      	bne.n	800bc28 <_dtoa_r+0x73c>
 800bc26:	e0b5      	b.n	800bd94 <_dtoa_r+0x8a8>
 800bc28:	4a98      	ldr	r2, [pc, #608]	; (800be8c <_dtoa_r+0x9a0>)
 800bc2a:	189b      	adds	r3, r3, r2
 800bc2c:	9d04      	ldr	r5, [sp, #16]
 800bc2e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bc30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bc32:	2101      	movs	r1, #1
 800bc34:	18d2      	adds	r2, r2, r3
 800bc36:	920a      	str	r2, [sp, #40]	; 0x28
 800bc38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc3a:	9802      	ldr	r0, [sp, #8]
 800bc3c:	18d3      	adds	r3, r2, r3
 800bc3e:	930b      	str	r3, [sp, #44]	; 0x2c
 800bc40:	f000 fff4 	bl	800cc2c <__i2b>
 800bc44:	0006      	movs	r6, r0
 800bc46:	2c00      	cmp	r4, #0
 800bc48:	dd0e      	ble.n	800bc68 <_dtoa_r+0x77c>
 800bc4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bc4c:	2b00      	cmp	r3, #0
 800bc4e:	dd0b      	ble.n	800bc68 <_dtoa_r+0x77c>
 800bc50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc52:	0023      	movs	r3, r4
 800bc54:	4294      	cmp	r4, r2
 800bc56:	dd00      	ble.n	800bc5a <_dtoa_r+0x76e>
 800bc58:	0013      	movs	r3, r2
 800bc5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bc5c:	1ae4      	subs	r4, r4, r3
 800bc5e:	1ad2      	subs	r2, r2, r3
 800bc60:	920a      	str	r2, [sp, #40]	; 0x28
 800bc62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc64:	1ad3      	subs	r3, r2, r3
 800bc66:	930b      	str	r3, [sp, #44]	; 0x2c
 800bc68:	9b04      	ldr	r3, [sp, #16]
 800bc6a:	2b00      	cmp	r3, #0
 800bc6c:	d01f      	beq.n	800bcae <_dtoa_r+0x7c2>
 800bc6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc70:	2b00      	cmp	r3, #0
 800bc72:	d100      	bne.n	800bc76 <_dtoa_r+0x78a>
 800bc74:	e0af      	b.n	800bdd6 <_dtoa_r+0x8ea>
 800bc76:	2d00      	cmp	r5, #0
 800bc78:	d011      	beq.n	800bc9e <_dtoa_r+0x7b2>
 800bc7a:	0031      	movs	r1, r6
 800bc7c:	002a      	movs	r2, r5
 800bc7e:	9802      	ldr	r0, [sp, #8]
 800bc80:	f001 f86c 	bl	800cd5c <__pow5mult>
 800bc84:	9a03      	ldr	r2, [sp, #12]
 800bc86:	0001      	movs	r1, r0
 800bc88:	0006      	movs	r6, r0
 800bc8a:	9802      	ldr	r0, [sp, #8]
 800bc8c:	f000 ffd7 	bl	800cc3e <__multiply>
 800bc90:	9903      	ldr	r1, [sp, #12]
 800bc92:	9010      	str	r0, [sp, #64]	; 0x40
 800bc94:	9802      	ldr	r0, [sp, #8]
 800bc96:	f000 feeb 	bl	800ca70 <_Bfree>
 800bc9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bc9c:	9303      	str	r3, [sp, #12]
 800bc9e:	9b04      	ldr	r3, [sp, #16]
 800bca0:	1b5a      	subs	r2, r3, r5
 800bca2:	d004      	beq.n	800bcae <_dtoa_r+0x7c2>
 800bca4:	9903      	ldr	r1, [sp, #12]
 800bca6:	9802      	ldr	r0, [sp, #8]
 800bca8:	f001 f858 	bl	800cd5c <__pow5mult>
 800bcac:	9003      	str	r0, [sp, #12]
 800bcae:	2101      	movs	r1, #1
 800bcb0:	9802      	ldr	r0, [sp, #8]
 800bcb2:	f000 ffbb 	bl	800cc2c <__i2b>
 800bcb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bcb8:	9004      	str	r0, [sp, #16]
 800bcba:	2b00      	cmp	r3, #0
 800bcbc:	d100      	bne.n	800bcc0 <_dtoa_r+0x7d4>
 800bcbe:	e1e3      	b.n	800c088 <_dtoa_r+0xb9c>
 800bcc0:	001a      	movs	r2, r3
 800bcc2:	0001      	movs	r1, r0
 800bcc4:	9802      	ldr	r0, [sp, #8]
 800bcc6:	f001 f849 	bl	800cd5c <__pow5mult>
 800bcca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800bccc:	9004      	str	r0, [sp, #16]
 800bcce:	2b01      	cmp	r3, #1
 800bcd0:	dd00      	ble.n	800bcd4 <_dtoa_r+0x7e8>
 800bcd2:	e082      	b.n	800bdda <_dtoa_r+0x8ee>
 800bcd4:	2500      	movs	r5, #0
 800bcd6:	9b06      	ldr	r3, [sp, #24]
 800bcd8:	42ab      	cmp	r3, r5
 800bcda:	d10e      	bne.n	800bcfa <_dtoa_r+0x80e>
 800bcdc:	9b07      	ldr	r3, [sp, #28]
 800bcde:	031b      	lsls	r3, r3, #12
 800bce0:	42ab      	cmp	r3, r5
 800bce2:	d10a      	bne.n	800bcfa <_dtoa_r+0x80e>
 800bce4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800bce6:	9a07      	ldr	r2, [sp, #28]
 800bce8:	4213      	tst	r3, r2
 800bcea:	d006      	beq.n	800bcfa <_dtoa_r+0x80e>
 800bcec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bcee:	3501      	adds	r5, #1
 800bcf0:	3301      	adds	r3, #1
 800bcf2:	930a      	str	r3, [sp, #40]	; 0x28
 800bcf4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bcf6:	3301      	adds	r3, #1
 800bcf8:	930b      	str	r3, [sp, #44]	; 0x2c
 800bcfa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bcfc:	2001      	movs	r0, #1
 800bcfe:	2b00      	cmp	r3, #0
 800bd00:	d16c      	bne.n	800bddc <_dtoa_r+0x8f0>
 800bd02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd04:	1818      	adds	r0, r3, r0
 800bd06:	231f      	movs	r3, #31
 800bd08:	4018      	ands	r0, r3
 800bd0a:	d07e      	beq.n	800be0a <_dtoa_r+0x91e>
 800bd0c:	3301      	adds	r3, #1
 800bd0e:	1a1b      	subs	r3, r3, r0
 800bd10:	2b04      	cmp	r3, #4
 800bd12:	dd70      	ble.n	800bdf6 <_dtoa_r+0x90a>
 800bd14:	231c      	movs	r3, #28
 800bd16:	1a18      	subs	r0, r3, r0
 800bd18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd1a:	1824      	adds	r4, r4, r0
 800bd1c:	181b      	adds	r3, r3, r0
 800bd1e:	930a      	str	r3, [sp, #40]	; 0x28
 800bd20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd22:	181b      	adds	r3, r3, r0
 800bd24:	930b      	str	r3, [sp, #44]	; 0x2c
 800bd26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd28:	2b00      	cmp	r3, #0
 800bd2a:	dd05      	ble.n	800bd38 <_dtoa_r+0x84c>
 800bd2c:	001a      	movs	r2, r3
 800bd2e:	9903      	ldr	r1, [sp, #12]
 800bd30:	9802      	ldr	r0, [sp, #8]
 800bd32:	f001 f865 	bl	800ce00 <__lshift>
 800bd36:	9003      	str	r0, [sp, #12]
 800bd38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd3a:	2b00      	cmp	r3, #0
 800bd3c:	dd05      	ble.n	800bd4a <_dtoa_r+0x85e>
 800bd3e:	001a      	movs	r2, r3
 800bd40:	9904      	ldr	r1, [sp, #16]
 800bd42:	9802      	ldr	r0, [sp, #8]
 800bd44:	f001 f85c 	bl	800ce00 <__lshift>
 800bd48:	9004      	str	r0, [sp, #16]
 800bd4a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800bd4c:	2b00      	cmp	r3, #0
 800bd4e:	d05e      	beq.n	800be0e <_dtoa_r+0x922>
 800bd50:	9904      	ldr	r1, [sp, #16]
 800bd52:	9803      	ldr	r0, [sp, #12]
 800bd54:	f001 f8a6 	bl	800cea4 <__mcmp>
 800bd58:	2800      	cmp	r0, #0
 800bd5a:	da58      	bge.n	800be0e <_dtoa_r+0x922>
 800bd5c:	2300      	movs	r3, #0
 800bd5e:	220a      	movs	r2, #10
 800bd60:	9903      	ldr	r1, [sp, #12]
 800bd62:	9802      	ldr	r0, [sp, #8]
 800bd64:	f000 fe9d 	bl	800caa2 <__multadd>
 800bd68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd6a:	3f01      	subs	r7, #1
 800bd6c:	9003      	str	r0, [sp, #12]
 800bd6e:	2b00      	cmp	r3, #0
 800bd70:	d100      	bne.n	800bd74 <_dtoa_r+0x888>
 800bd72:	e190      	b.n	800c096 <_dtoa_r+0xbaa>
 800bd74:	2300      	movs	r3, #0
 800bd76:	0031      	movs	r1, r6
 800bd78:	220a      	movs	r2, #10
 800bd7a:	9802      	ldr	r0, [sp, #8]
 800bd7c:	f000 fe91 	bl	800caa2 <__multadd>
 800bd80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bd82:	0006      	movs	r6, r0
 800bd84:	2b00      	cmp	r3, #0
 800bd86:	dd00      	ble.n	800bd8a <_dtoa_r+0x89e>
 800bd88:	e088      	b.n	800be9c <_dtoa_r+0x9b0>
 800bd8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800bd8c:	2b02      	cmp	r3, #2
 800bd8e:	dc00      	bgt.n	800bd92 <_dtoa_r+0x8a6>
 800bd90:	e084      	b.n	800be9c <_dtoa_r+0x9b0>
 800bd92:	e044      	b.n	800be1e <_dtoa_r+0x932>
 800bd94:	2336      	movs	r3, #54	; 0x36
 800bd96:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800bd98:	1a9b      	subs	r3, r3, r2
 800bd9a:	e747      	b.n	800bc2c <_dtoa_r+0x740>
 800bd9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bd9e:	1e5d      	subs	r5, r3, #1
 800bda0:	9b04      	ldr	r3, [sp, #16]
 800bda2:	42ab      	cmp	r3, r5
 800bda4:	db08      	blt.n	800bdb8 <_dtoa_r+0x8cc>
 800bda6:	1b5d      	subs	r5, r3, r5
 800bda8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bdaa:	2b00      	cmp	r3, #0
 800bdac:	da0c      	bge.n	800bdc8 <_dtoa_r+0x8dc>
 800bdae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bdb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bdb2:	1a9c      	subs	r4, r3, r2
 800bdb4:	2300      	movs	r3, #0
 800bdb6:	e73b      	b.n	800bc30 <_dtoa_r+0x744>
 800bdb8:	9b04      	ldr	r3, [sp, #16]
 800bdba:	9504      	str	r5, [sp, #16]
 800bdbc:	1aea      	subs	r2, r5, r3
 800bdbe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bdc0:	2500      	movs	r5, #0
 800bdc2:	189b      	adds	r3, r3, r2
 800bdc4:	9311      	str	r3, [sp, #68]	; 0x44
 800bdc6:	e7ef      	b.n	800bda8 <_dtoa_r+0x8bc>
 800bdc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bdca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bdcc:	e730      	b.n	800bc30 <_dtoa_r+0x744>
 800bdce:	9d04      	ldr	r5, [sp, #16]
 800bdd0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bdd2:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800bdd4:	e737      	b.n	800bc46 <_dtoa_r+0x75a>
 800bdd6:	9a04      	ldr	r2, [sp, #16]
 800bdd8:	e764      	b.n	800bca4 <_dtoa_r+0x7b8>
 800bdda:	2500      	movs	r5, #0
 800bddc:	9b04      	ldr	r3, [sp, #16]
 800bdde:	9a04      	ldr	r2, [sp, #16]
 800bde0:	691b      	ldr	r3, [r3, #16]
 800bde2:	9310      	str	r3, [sp, #64]	; 0x40
 800bde4:	3303      	adds	r3, #3
 800bde6:	009b      	lsls	r3, r3, #2
 800bde8:	18d3      	adds	r3, r2, r3
 800bdea:	6858      	ldr	r0, [r3, #4]
 800bdec:	f000 fed5 	bl	800cb9a <__hi0bits>
 800bdf0:	2320      	movs	r3, #32
 800bdf2:	1a18      	subs	r0, r3, r0
 800bdf4:	e785      	b.n	800bd02 <_dtoa_r+0x816>
 800bdf6:	2b04      	cmp	r3, #4
 800bdf8:	d095      	beq.n	800bd26 <_dtoa_r+0x83a>
 800bdfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bdfc:	331c      	adds	r3, #28
 800bdfe:	18d2      	adds	r2, r2, r3
 800be00:	920a      	str	r2, [sp, #40]	; 0x28
 800be02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800be04:	18e4      	adds	r4, r4, r3
 800be06:	18d3      	adds	r3, r2, r3
 800be08:	e78c      	b.n	800bd24 <_dtoa_r+0x838>
 800be0a:	0003      	movs	r3, r0
 800be0c:	e7f5      	b.n	800bdfa <_dtoa_r+0x90e>
 800be0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be10:	2b00      	cmp	r3, #0
 800be12:	dc3d      	bgt.n	800be90 <_dtoa_r+0x9a4>
 800be14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800be16:	2b02      	cmp	r3, #2
 800be18:	dd3a      	ble.n	800be90 <_dtoa_r+0x9a4>
 800be1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be1c:	930c      	str	r3, [sp, #48]	; 0x30
 800be1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800be20:	2b00      	cmp	r3, #0
 800be22:	d10c      	bne.n	800be3e <_dtoa_r+0x952>
 800be24:	9904      	ldr	r1, [sp, #16]
 800be26:	2205      	movs	r2, #5
 800be28:	9802      	ldr	r0, [sp, #8]
 800be2a:	f000 fe3a 	bl	800caa2 <__multadd>
 800be2e:	9004      	str	r0, [sp, #16]
 800be30:	0001      	movs	r1, r0
 800be32:	9803      	ldr	r0, [sp, #12]
 800be34:	f001 f836 	bl	800cea4 <__mcmp>
 800be38:	2800      	cmp	r0, #0
 800be3a:	dd00      	ble.n	800be3e <_dtoa_r+0x952>
 800be3c:	e5af      	b.n	800b99e <_dtoa_r+0x4b2>
 800be3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800be40:	9d08      	ldr	r5, [sp, #32]
 800be42:	43df      	mvns	r7, r3
 800be44:	2300      	movs	r3, #0
 800be46:	9309      	str	r3, [sp, #36]	; 0x24
 800be48:	9904      	ldr	r1, [sp, #16]
 800be4a:	9802      	ldr	r0, [sp, #8]
 800be4c:	f000 fe10 	bl	800ca70 <_Bfree>
 800be50:	2e00      	cmp	r6, #0
 800be52:	d100      	bne.n	800be56 <_dtoa_r+0x96a>
 800be54:	e69b      	b.n	800bb8e <_dtoa_r+0x6a2>
 800be56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be58:	2b00      	cmp	r3, #0
 800be5a:	d005      	beq.n	800be68 <_dtoa_r+0x97c>
 800be5c:	42b3      	cmp	r3, r6
 800be5e:	d003      	beq.n	800be68 <_dtoa_r+0x97c>
 800be60:	0019      	movs	r1, r3
 800be62:	9802      	ldr	r0, [sp, #8]
 800be64:	f000 fe04 	bl	800ca70 <_Bfree>
 800be68:	0031      	movs	r1, r6
 800be6a:	9802      	ldr	r0, [sp, #8]
 800be6c:	f000 fe00 	bl	800ca70 <_Bfree>
 800be70:	e68d      	b.n	800bb8e <_dtoa_r+0x6a2>
 800be72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be74:	9304      	str	r3, [sp, #16]
 800be76:	001e      	movs	r6, r3
 800be78:	e7e1      	b.n	800be3e <_dtoa_r+0x952>
 800be7a:	2300      	movs	r3, #0
 800be7c:	e7fa      	b.n	800be74 <_dtoa_r+0x988>
 800be7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be80:	0037      	movs	r7, r6
 800be82:	9304      	str	r3, [sp, #16]
 800be84:	001e      	movs	r6, r3
 800be86:	e58a      	b.n	800b99e <_dtoa_r+0x4b2>
 800be88:	40240000 	.word	0x40240000
 800be8c:	00000433 	.word	0x00000433
 800be90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800be92:	2b00      	cmp	r3, #0
 800be94:	d100      	bne.n	800be98 <_dtoa_r+0x9ac>
 800be96:	e0b2      	b.n	800bffe <_dtoa_r+0xb12>
 800be98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be9a:	930c      	str	r3, [sp, #48]	; 0x30
 800be9c:	2c00      	cmp	r4, #0
 800be9e:	dd05      	ble.n	800beac <_dtoa_r+0x9c0>
 800bea0:	0031      	movs	r1, r6
 800bea2:	0022      	movs	r2, r4
 800bea4:	9802      	ldr	r0, [sp, #8]
 800bea6:	f000 ffab 	bl	800ce00 <__lshift>
 800beaa:	0006      	movs	r6, r0
 800beac:	0030      	movs	r0, r6
 800beae:	2d00      	cmp	r5, #0
 800beb0:	d011      	beq.n	800bed6 <_dtoa_r+0x9ea>
 800beb2:	6871      	ldr	r1, [r6, #4]
 800beb4:	9802      	ldr	r0, [sp, #8]
 800beb6:	f000 fda3 	bl	800ca00 <_Balloc>
 800beba:	0031      	movs	r1, r6
 800bebc:	0004      	movs	r4, r0
 800bebe:	6933      	ldr	r3, [r6, #16]
 800bec0:	310c      	adds	r1, #12
 800bec2:	1c9a      	adds	r2, r3, #2
 800bec4:	0092      	lsls	r2, r2, #2
 800bec6:	300c      	adds	r0, #12
 800bec8:	f000 fd8f 	bl	800c9ea <memcpy>
 800becc:	2201      	movs	r2, #1
 800bece:	0021      	movs	r1, r4
 800bed0:	9802      	ldr	r0, [sp, #8]
 800bed2:	f000 ff95 	bl	800ce00 <__lshift>
 800bed6:	9609      	str	r6, [sp, #36]	; 0x24
 800bed8:	0006      	movs	r6, r0
 800beda:	9b08      	ldr	r3, [sp, #32]
 800bedc:	930a      	str	r3, [sp, #40]	; 0x28
 800bede:	9904      	ldr	r1, [sp, #16]
 800bee0:	9803      	ldr	r0, [sp, #12]
 800bee2:	f7ff fa7d 	bl	800b3e0 <quorem>
 800bee6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bee8:	900d      	str	r0, [sp, #52]	; 0x34
 800beea:	0004      	movs	r4, r0
 800beec:	9803      	ldr	r0, [sp, #12]
 800beee:	f000 ffd9 	bl	800cea4 <__mcmp>
 800bef2:	0032      	movs	r2, r6
 800bef4:	9010      	str	r0, [sp, #64]	; 0x40
 800bef6:	9904      	ldr	r1, [sp, #16]
 800bef8:	9802      	ldr	r0, [sp, #8]
 800befa:	f000 ffed 	bl	800ced8 <__mdiff>
 800befe:	2301      	movs	r3, #1
 800bf00:	930b      	str	r3, [sp, #44]	; 0x2c
 800bf02:	68c3      	ldr	r3, [r0, #12]
 800bf04:	3430      	adds	r4, #48	; 0x30
 800bf06:	0005      	movs	r5, r0
 800bf08:	2b00      	cmp	r3, #0
 800bf0a:	d104      	bne.n	800bf16 <_dtoa_r+0xa2a>
 800bf0c:	0001      	movs	r1, r0
 800bf0e:	9803      	ldr	r0, [sp, #12]
 800bf10:	f000 ffc8 	bl	800cea4 <__mcmp>
 800bf14:	900b      	str	r0, [sp, #44]	; 0x2c
 800bf16:	0029      	movs	r1, r5
 800bf18:	9802      	ldr	r0, [sp, #8]
 800bf1a:	f000 fda9 	bl	800ca70 <_Bfree>
 800bf1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bf20:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800bf22:	4313      	orrs	r3, r2
 800bf24:	d10e      	bne.n	800bf44 <_dtoa_r+0xa58>
 800bf26:	9a06      	ldr	r2, [sp, #24]
 800bf28:	3301      	adds	r3, #1
 800bf2a:	4213      	tst	r3, r2
 800bf2c:	d10a      	bne.n	800bf44 <_dtoa_r+0xa58>
 800bf2e:	2c39      	cmp	r4, #57	; 0x39
 800bf30:	d026      	beq.n	800bf80 <_dtoa_r+0xa94>
 800bf32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bf34:	2b00      	cmp	r3, #0
 800bf36:	dd01      	ble.n	800bf3c <_dtoa_r+0xa50>
 800bf38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800bf3a:	3431      	adds	r4, #49	; 0x31
 800bf3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bf3e:	1c5d      	adds	r5, r3, #1
 800bf40:	701c      	strb	r4, [r3, #0]
 800bf42:	e781      	b.n	800be48 <_dtoa_r+0x95c>
 800bf44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	db07      	blt.n	800bf5a <_dtoa_r+0xa6e>
 800bf4a:	001d      	movs	r5, r3
 800bf4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800bf4e:	431d      	orrs	r5, r3
 800bf50:	d122      	bne.n	800bf98 <_dtoa_r+0xaac>
 800bf52:	2301      	movs	r3, #1
 800bf54:	9a06      	ldr	r2, [sp, #24]
 800bf56:	4213      	tst	r3, r2
 800bf58:	d11e      	bne.n	800bf98 <_dtoa_r+0xaac>
 800bf5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bf5c:	2b00      	cmp	r3, #0
 800bf5e:	dded      	ble.n	800bf3c <_dtoa_r+0xa50>
 800bf60:	9903      	ldr	r1, [sp, #12]
 800bf62:	2201      	movs	r2, #1
 800bf64:	9802      	ldr	r0, [sp, #8]
 800bf66:	f000 ff4b 	bl	800ce00 <__lshift>
 800bf6a:	9904      	ldr	r1, [sp, #16]
 800bf6c:	9003      	str	r0, [sp, #12]
 800bf6e:	f000 ff99 	bl	800cea4 <__mcmp>
 800bf72:	2800      	cmp	r0, #0
 800bf74:	dc02      	bgt.n	800bf7c <_dtoa_r+0xa90>
 800bf76:	d1e1      	bne.n	800bf3c <_dtoa_r+0xa50>
 800bf78:	07e3      	lsls	r3, r4, #31
 800bf7a:	d5df      	bpl.n	800bf3c <_dtoa_r+0xa50>
 800bf7c:	2c39      	cmp	r4, #57	; 0x39
 800bf7e:	d1db      	bne.n	800bf38 <_dtoa_r+0xa4c>
 800bf80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bf82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bf84:	1c5d      	adds	r5, r3, #1
 800bf86:	2339      	movs	r3, #57	; 0x39
 800bf88:	7013      	strb	r3, [r2, #0]
 800bf8a:	1e6b      	subs	r3, r5, #1
 800bf8c:	781a      	ldrb	r2, [r3, #0]
 800bf8e:	2a39      	cmp	r2, #57	; 0x39
 800bf90:	d067      	beq.n	800c062 <_dtoa_r+0xb76>
 800bf92:	3201      	adds	r2, #1
 800bf94:	701a      	strb	r2, [r3, #0]
 800bf96:	e757      	b.n	800be48 <_dtoa_r+0x95c>
 800bf98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bf9a:	1c5d      	adds	r5, r3, #1
 800bf9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bf9e:	2b00      	cmp	r3, #0
 800bfa0:	dd04      	ble.n	800bfac <_dtoa_r+0xac0>
 800bfa2:	2c39      	cmp	r4, #57	; 0x39
 800bfa4:	d0ec      	beq.n	800bf80 <_dtoa_r+0xa94>
 800bfa6:	3401      	adds	r4, #1
 800bfa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bfaa:	e7c9      	b.n	800bf40 <_dtoa_r+0xa54>
 800bfac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bfae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800bfb0:	701c      	strb	r4, [r3, #0]
 800bfb2:	9b08      	ldr	r3, [sp, #32]
 800bfb4:	1aeb      	subs	r3, r5, r3
 800bfb6:	4293      	cmp	r3, r2
 800bfb8:	d03e      	beq.n	800c038 <_dtoa_r+0xb4c>
 800bfba:	2300      	movs	r3, #0
 800bfbc:	220a      	movs	r2, #10
 800bfbe:	9903      	ldr	r1, [sp, #12]
 800bfc0:	9802      	ldr	r0, [sp, #8]
 800bfc2:	f000 fd6e 	bl	800caa2 <__multadd>
 800bfc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bfc8:	9003      	str	r0, [sp, #12]
 800bfca:	42b3      	cmp	r3, r6
 800bfcc:	d109      	bne.n	800bfe2 <_dtoa_r+0xaf6>
 800bfce:	2300      	movs	r3, #0
 800bfd0:	220a      	movs	r2, #10
 800bfd2:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bfd4:	9802      	ldr	r0, [sp, #8]
 800bfd6:	f000 fd64 	bl	800caa2 <__multadd>
 800bfda:	9009      	str	r0, [sp, #36]	; 0x24
 800bfdc:	0006      	movs	r6, r0
 800bfde:	950a      	str	r5, [sp, #40]	; 0x28
 800bfe0:	e77d      	b.n	800bede <_dtoa_r+0x9f2>
 800bfe2:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bfe4:	2300      	movs	r3, #0
 800bfe6:	220a      	movs	r2, #10
 800bfe8:	9802      	ldr	r0, [sp, #8]
 800bfea:	f000 fd5a 	bl	800caa2 <__multadd>
 800bfee:	2300      	movs	r3, #0
 800bff0:	9009      	str	r0, [sp, #36]	; 0x24
 800bff2:	220a      	movs	r2, #10
 800bff4:	0031      	movs	r1, r6
 800bff6:	9802      	ldr	r0, [sp, #8]
 800bff8:	f000 fd53 	bl	800caa2 <__multadd>
 800bffc:	e7ee      	b.n	800bfdc <_dtoa_r+0xaf0>
 800bffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c000:	930c      	str	r3, [sp, #48]	; 0x30
 800c002:	9b08      	ldr	r3, [sp, #32]
 800c004:	9306      	str	r3, [sp, #24]
 800c006:	9904      	ldr	r1, [sp, #16]
 800c008:	9803      	ldr	r0, [sp, #12]
 800c00a:	f7ff f9e9 	bl	800b3e0 <quorem>
 800c00e:	9b06      	ldr	r3, [sp, #24]
 800c010:	3030      	adds	r0, #48	; 0x30
 800c012:	1c5d      	adds	r5, r3, #1
 800c014:	7018      	strb	r0, [r3, #0]
 800c016:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c018:	9b08      	ldr	r3, [sp, #32]
 800c01a:	0004      	movs	r4, r0
 800c01c:	1aeb      	subs	r3, r5, r3
 800c01e:	429a      	cmp	r2, r3
 800c020:	dd08      	ble.n	800c034 <_dtoa_r+0xb48>
 800c022:	2300      	movs	r3, #0
 800c024:	220a      	movs	r2, #10
 800c026:	9903      	ldr	r1, [sp, #12]
 800c028:	9802      	ldr	r0, [sp, #8]
 800c02a:	f000 fd3a 	bl	800caa2 <__multadd>
 800c02e:	9506      	str	r5, [sp, #24]
 800c030:	9003      	str	r0, [sp, #12]
 800c032:	e7e8      	b.n	800c006 <_dtoa_r+0xb1a>
 800c034:	2300      	movs	r3, #0
 800c036:	9309      	str	r3, [sp, #36]	; 0x24
 800c038:	9903      	ldr	r1, [sp, #12]
 800c03a:	2201      	movs	r2, #1
 800c03c:	9802      	ldr	r0, [sp, #8]
 800c03e:	f000 fedf 	bl	800ce00 <__lshift>
 800c042:	9904      	ldr	r1, [sp, #16]
 800c044:	9003      	str	r0, [sp, #12]
 800c046:	f000 ff2d 	bl	800cea4 <__mcmp>
 800c04a:	2800      	cmp	r0, #0
 800c04c:	dc9d      	bgt.n	800bf8a <_dtoa_r+0xa9e>
 800c04e:	d101      	bne.n	800c054 <_dtoa_r+0xb68>
 800c050:	07e3      	lsls	r3, r4, #31
 800c052:	d49a      	bmi.n	800bf8a <_dtoa_r+0xa9e>
 800c054:	1e6b      	subs	r3, r5, #1
 800c056:	781a      	ldrb	r2, [r3, #0]
 800c058:	2a30      	cmp	r2, #48	; 0x30
 800c05a:	d000      	beq.n	800c05e <_dtoa_r+0xb72>
 800c05c:	e6f4      	b.n	800be48 <_dtoa_r+0x95c>
 800c05e:	001d      	movs	r5, r3
 800c060:	e7f8      	b.n	800c054 <_dtoa_r+0xb68>
 800c062:	9a08      	ldr	r2, [sp, #32]
 800c064:	429a      	cmp	r2, r3
 800c066:	d103      	bne.n	800c070 <_dtoa_r+0xb84>
 800c068:	2331      	movs	r3, #49	; 0x31
 800c06a:	3701      	adds	r7, #1
 800c06c:	7013      	strb	r3, [r2, #0]
 800c06e:	e6eb      	b.n	800be48 <_dtoa_r+0x95c>
 800c070:	001d      	movs	r5, r3
 800c072:	e78a      	b.n	800bf8a <_dtoa_r+0xa9e>
 800c074:	4b0b      	ldr	r3, [pc, #44]	; (800c0a4 <_dtoa_r+0xbb8>)
 800c076:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c078:	9308      	str	r3, [sp, #32]
 800c07a:	4b0b      	ldr	r3, [pc, #44]	; (800c0a8 <_dtoa_r+0xbbc>)
 800c07c:	2a00      	cmp	r2, #0
 800c07e:	d001      	beq.n	800c084 <_dtoa_r+0xb98>
 800c080:	f7ff fa77 	bl	800b572 <_dtoa_r+0x86>
 800c084:	f7ff fa77 	bl	800b576 <_dtoa_r+0x8a>
 800c088:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800c08a:	2b01      	cmp	r3, #1
 800c08c:	dc00      	bgt.n	800c090 <_dtoa_r+0xba4>
 800c08e:	e621      	b.n	800bcd4 <_dtoa_r+0x7e8>
 800c090:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800c092:	2001      	movs	r0, #1
 800c094:	e635      	b.n	800bd02 <_dtoa_r+0x816>
 800c096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c098:	2b00      	cmp	r3, #0
 800c09a:	dcb2      	bgt.n	800c002 <_dtoa_r+0xb16>
 800c09c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800c09e:	2b02      	cmp	r3, #2
 800c0a0:	ddaf      	ble.n	800c002 <_dtoa_r+0xb16>
 800c0a2:	e6bc      	b.n	800be1e <_dtoa_r+0x932>
 800c0a4:	0800e3f0 	.word	0x0800e3f0
 800c0a8:	0800e3f8 	.word	0x0800e3f8

0800c0ac <__sflush_r>:
 800c0ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c0ae:	898a      	ldrh	r2, [r1, #12]
 800c0b0:	0005      	movs	r5, r0
 800c0b2:	000c      	movs	r4, r1
 800c0b4:	0713      	lsls	r3, r2, #28
 800c0b6:	d460      	bmi.n	800c17a <__sflush_r+0xce>
 800c0b8:	684b      	ldr	r3, [r1, #4]
 800c0ba:	2b00      	cmp	r3, #0
 800c0bc:	dc04      	bgt.n	800c0c8 <__sflush_r+0x1c>
 800c0be:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800c0c0:	2b00      	cmp	r3, #0
 800c0c2:	dc01      	bgt.n	800c0c8 <__sflush_r+0x1c>
 800c0c4:	2000      	movs	r0, #0
 800c0c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800c0c8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c0ca:	2f00      	cmp	r7, #0
 800c0cc:	d0fa      	beq.n	800c0c4 <__sflush_r+0x18>
 800c0ce:	2300      	movs	r3, #0
 800c0d0:	682e      	ldr	r6, [r5, #0]
 800c0d2:	602b      	str	r3, [r5, #0]
 800c0d4:	2380      	movs	r3, #128	; 0x80
 800c0d6:	015b      	lsls	r3, r3, #5
 800c0d8:	6a21      	ldr	r1, [r4, #32]
 800c0da:	401a      	ands	r2, r3
 800c0dc:	d034      	beq.n	800c148 <__sflush_r+0x9c>
 800c0de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800c0e0:	89a3      	ldrh	r3, [r4, #12]
 800c0e2:	075b      	lsls	r3, r3, #29
 800c0e4:	d506      	bpl.n	800c0f4 <__sflush_r+0x48>
 800c0e6:	6863      	ldr	r3, [r4, #4]
 800c0e8:	1ac0      	subs	r0, r0, r3
 800c0ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c0ec:	2b00      	cmp	r3, #0
 800c0ee:	d001      	beq.n	800c0f4 <__sflush_r+0x48>
 800c0f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c0f2:	1ac0      	subs	r0, r0, r3
 800c0f4:	0002      	movs	r2, r0
 800c0f6:	6a21      	ldr	r1, [r4, #32]
 800c0f8:	2300      	movs	r3, #0
 800c0fa:	0028      	movs	r0, r5
 800c0fc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c0fe:	47b8      	blx	r7
 800c100:	89a1      	ldrh	r1, [r4, #12]
 800c102:	1c43      	adds	r3, r0, #1
 800c104:	d106      	bne.n	800c114 <__sflush_r+0x68>
 800c106:	682b      	ldr	r3, [r5, #0]
 800c108:	2b1d      	cmp	r3, #29
 800c10a:	d830      	bhi.n	800c16e <__sflush_r+0xc2>
 800c10c:	4a2b      	ldr	r2, [pc, #172]	; (800c1bc <__sflush_r+0x110>)
 800c10e:	40da      	lsrs	r2, r3
 800c110:	07d3      	lsls	r3, r2, #31
 800c112:	d52c      	bpl.n	800c16e <__sflush_r+0xc2>
 800c114:	2300      	movs	r3, #0
 800c116:	6063      	str	r3, [r4, #4]
 800c118:	6923      	ldr	r3, [r4, #16]
 800c11a:	6023      	str	r3, [r4, #0]
 800c11c:	04cb      	lsls	r3, r1, #19
 800c11e:	d505      	bpl.n	800c12c <__sflush_r+0x80>
 800c120:	1c43      	adds	r3, r0, #1
 800c122:	d102      	bne.n	800c12a <__sflush_r+0x7e>
 800c124:	682b      	ldr	r3, [r5, #0]
 800c126:	2b00      	cmp	r3, #0
 800c128:	d100      	bne.n	800c12c <__sflush_r+0x80>
 800c12a:	6560      	str	r0, [r4, #84]	; 0x54
 800c12c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c12e:	602e      	str	r6, [r5, #0]
 800c130:	2900      	cmp	r1, #0
 800c132:	d0c7      	beq.n	800c0c4 <__sflush_r+0x18>
 800c134:	0023      	movs	r3, r4
 800c136:	3344      	adds	r3, #68	; 0x44
 800c138:	4299      	cmp	r1, r3
 800c13a:	d002      	beq.n	800c142 <__sflush_r+0x96>
 800c13c:	0028      	movs	r0, r5
 800c13e:	f001 f863 	bl	800d208 <_free_r>
 800c142:	2000      	movs	r0, #0
 800c144:	6360      	str	r0, [r4, #52]	; 0x34
 800c146:	e7be      	b.n	800c0c6 <__sflush_r+0x1a>
 800c148:	2301      	movs	r3, #1
 800c14a:	0028      	movs	r0, r5
 800c14c:	47b8      	blx	r7
 800c14e:	1c43      	adds	r3, r0, #1
 800c150:	d1c6      	bne.n	800c0e0 <__sflush_r+0x34>
 800c152:	682b      	ldr	r3, [r5, #0]
 800c154:	2b00      	cmp	r3, #0
 800c156:	d0c3      	beq.n	800c0e0 <__sflush_r+0x34>
 800c158:	2b1d      	cmp	r3, #29
 800c15a:	d001      	beq.n	800c160 <__sflush_r+0xb4>
 800c15c:	2b16      	cmp	r3, #22
 800c15e:	d101      	bne.n	800c164 <__sflush_r+0xb8>
 800c160:	602e      	str	r6, [r5, #0]
 800c162:	e7af      	b.n	800c0c4 <__sflush_r+0x18>
 800c164:	2340      	movs	r3, #64	; 0x40
 800c166:	89a2      	ldrh	r2, [r4, #12]
 800c168:	4313      	orrs	r3, r2
 800c16a:	81a3      	strh	r3, [r4, #12]
 800c16c:	e7ab      	b.n	800c0c6 <__sflush_r+0x1a>
 800c16e:	2340      	movs	r3, #64	; 0x40
 800c170:	430b      	orrs	r3, r1
 800c172:	2001      	movs	r0, #1
 800c174:	81a3      	strh	r3, [r4, #12]
 800c176:	4240      	negs	r0, r0
 800c178:	e7a5      	b.n	800c0c6 <__sflush_r+0x1a>
 800c17a:	690f      	ldr	r7, [r1, #16]
 800c17c:	2f00      	cmp	r7, #0
 800c17e:	d0a1      	beq.n	800c0c4 <__sflush_r+0x18>
 800c180:	680b      	ldr	r3, [r1, #0]
 800c182:	600f      	str	r7, [r1, #0]
 800c184:	1bdb      	subs	r3, r3, r7
 800c186:	9301      	str	r3, [sp, #4]
 800c188:	2300      	movs	r3, #0
 800c18a:	0792      	lsls	r2, r2, #30
 800c18c:	d100      	bne.n	800c190 <__sflush_r+0xe4>
 800c18e:	694b      	ldr	r3, [r1, #20]
 800c190:	60a3      	str	r3, [r4, #8]
 800c192:	9b01      	ldr	r3, [sp, #4]
 800c194:	2b00      	cmp	r3, #0
 800c196:	dc00      	bgt.n	800c19a <__sflush_r+0xee>
 800c198:	e794      	b.n	800c0c4 <__sflush_r+0x18>
 800c19a:	9b01      	ldr	r3, [sp, #4]
 800c19c:	003a      	movs	r2, r7
 800c19e:	6a21      	ldr	r1, [r4, #32]
 800c1a0:	0028      	movs	r0, r5
 800c1a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800c1a4:	47b0      	blx	r6
 800c1a6:	2800      	cmp	r0, #0
 800c1a8:	dc03      	bgt.n	800c1b2 <__sflush_r+0x106>
 800c1aa:	2340      	movs	r3, #64	; 0x40
 800c1ac:	89a2      	ldrh	r2, [r4, #12]
 800c1ae:	4313      	orrs	r3, r2
 800c1b0:	e7df      	b.n	800c172 <__sflush_r+0xc6>
 800c1b2:	9b01      	ldr	r3, [sp, #4]
 800c1b4:	183f      	adds	r7, r7, r0
 800c1b6:	1a1b      	subs	r3, r3, r0
 800c1b8:	9301      	str	r3, [sp, #4]
 800c1ba:	e7ea      	b.n	800c192 <__sflush_r+0xe6>
 800c1bc:	20400001 	.word	0x20400001

0800c1c0 <_fflush_r>:
 800c1c0:	690b      	ldr	r3, [r1, #16]
 800c1c2:	b570      	push	{r4, r5, r6, lr}
 800c1c4:	0005      	movs	r5, r0
 800c1c6:	000c      	movs	r4, r1
 800c1c8:	2b00      	cmp	r3, #0
 800c1ca:	d101      	bne.n	800c1d0 <_fflush_r+0x10>
 800c1cc:	2000      	movs	r0, #0
 800c1ce:	bd70      	pop	{r4, r5, r6, pc}
 800c1d0:	2800      	cmp	r0, #0
 800c1d2:	d004      	beq.n	800c1de <_fflush_r+0x1e>
 800c1d4:	6983      	ldr	r3, [r0, #24]
 800c1d6:	2b00      	cmp	r3, #0
 800c1d8:	d101      	bne.n	800c1de <_fflush_r+0x1e>
 800c1da:	f7fd f8af 	bl	800933c <__sinit>
 800c1de:	4b0b      	ldr	r3, [pc, #44]	; (800c20c <_fflush_r+0x4c>)
 800c1e0:	429c      	cmp	r4, r3
 800c1e2:	d109      	bne.n	800c1f8 <_fflush_r+0x38>
 800c1e4:	686c      	ldr	r4, [r5, #4]
 800c1e6:	220c      	movs	r2, #12
 800c1e8:	5ea3      	ldrsh	r3, [r4, r2]
 800c1ea:	2b00      	cmp	r3, #0
 800c1ec:	d0ee      	beq.n	800c1cc <_fflush_r+0xc>
 800c1ee:	0021      	movs	r1, r4
 800c1f0:	0028      	movs	r0, r5
 800c1f2:	f7ff ff5b 	bl	800c0ac <__sflush_r>
 800c1f6:	e7ea      	b.n	800c1ce <_fflush_r+0xe>
 800c1f8:	4b05      	ldr	r3, [pc, #20]	; (800c210 <_fflush_r+0x50>)
 800c1fa:	429c      	cmp	r4, r3
 800c1fc:	d101      	bne.n	800c202 <_fflush_r+0x42>
 800c1fe:	68ac      	ldr	r4, [r5, #8]
 800c200:	e7f1      	b.n	800c1e6 <_fflush_r+0x26>
 800c202:	4b04      	ldr	r3, [pc, #16]	; (800c214 <_fflush_r+0x54>)
 800c204:	429c      	cmp	r4, r3
 800c206:	d1ee      	bne.n	800c1e6 <_fflush_r+0x26>
 800c208:	68ec      	ldr	r4, [r5, #12]
 800c20a:	e7ec      	b.n	800c1e6 <_fflush_r+0x26>
 800c20c:	0800e320 	.word	0x0800e320
 800c210:	0800e340 	.word	0x0800e340
 800c214:	0800e300 	.word	0x0800e300

0800c218 <rshift>:
 800c218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c21a:	0004      	movs	r4, r0
 800c21c:	6905      	ldr	r5, [r0, #16]
 800c21e:	3414      	adds	r4, #20
 800c220:	114b      	asrs	r3, r1, #5
 800c222:	0026      	movs	r6, r4
 800c224:	429d      	cmp	r5, r3
 800c226:	dd14      	ble.n	800c252 <rshift+0x3a>
 800c228:	221f      	movs	r2, #31
 800c22a:	00ad      	lsls	r5, r5, #2
 800c22c:	009b      	lsls	r3, r3, #2
 800c22e:	4011      	ands	r1, r2
 800c230:	1965      	adds	r5, r4, r5
 800c232:	18e3      	adds	r3, r4, r3
 800c234:	0022      	movs	r2, r4
 800c236:	2900      	cmp	r1, #0
 800c238:	d01e      	beq.n	800c278 <rshift+0x60>
 800c23a:	cb04      	ldmia	r3!, {r2}
 800c23c:	2720      	movs	r7, #32
 800c23e:	40ca      	lsrs	r2, r1
 800c240:	46a4      	mov	ip, r4
 800c242:	1a7f      	subs	r7, r7, r1
 800c244:	4666      	mov	r6, ip
 800c246:	429d      	cmp	r5, r3
 800c248:	d80b      	bhi.n	800c262 <rshift+0x4a>
 800c24a:	6032      	str	r2, [r6, #0]
 800c24c:	2a00      	cmp	r2, #0
 800c24e:	d000      	beq.n	800c252 <rshift+0x3a>
 800c250:	3604      	adds	r6, #4
 800c252:	1b33      	subs	r3, r6, r4
 800c254:	109b      	asrs	r3, r3, #2
 800c256:	6103      	str	r3, [r0, #16]
 800c258:	42a6      	cmp	r6, r4
 800c25a:	d101      	bne.n	800c260 <rshift+0x48>
 800c25c:	2300      	movs	r3, #0
 800c25e:	6143      	str	r3, [r0, #20]
 800c260:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c262:	681e      	ldr	r6, [r3, #0]
 800c264:	40be      	lsls	r6, r7
 800c266:	4332      	orrs	r2, r6
 800c268:	4666      	mov	r6, ip
 800c26a:	c604      	stmia	r6!, {r2}
 800c26c:	cb04      	ldmia	r3!, {r2}
 800c26e:	46b4      	mov	ip, r6
 800c270:	40ca      	lsrs	r2, r1
 800c272:	e7e7      	b.n	800c244 <rshift+0x2c>
 800c274:	cb02      	ldmia	r3!, {r1}
 800c276:	c202      	stmia	r2!, {r1}
 800c278:	0016      	movs	r6, r2
 800c27a:	429d      	cmp	r5, r3
 800c27c:	d8fa      	bhi.n	800c274 <rshift+0x5c>
 800c27e:	e7e8      	b.n	800c252 <rshift+0x3a>

0800c280 <__hexdig_fun>:
 800c280:	0003      	movs	r3, r0
 800c282:	3b30      	subs	r3, #48	; 0x30
 800c284:	2b09      	cmp	r3, #9
 800c286:	d803      	bhi.n	800c290 <__hexdig_fun+0x10>
 800c288:	3820      	subs	r0, #32
 800c28a:	b2c3      	uxtb	r3, r0
 800c28c:	0018      	movs	r0, r3
 800c28e:	4770      	bx	lr
 800c290:	0003      	movs	r3, r0
 800c292:	3b61      	subs	r3, #97	; 0x61
 800c294:	2b05      	cmp	r3, #5
 800c296:	d801      	bhi.n	800c29c <__hexdig_fun+0x1c>
 800c298:	3847      	subs	r0, #71	; 0x47
 800c29a:	e7f6      	b.n	800c28a <__hexdig_fun+0xa>
 800c29c:	0002      	movs	r2, r0
 800c29e:	3a41      	subs	r2, #65	; 0x41
 800c2a0:	2300      	movs	r3, #0
 800c2a2:	2a05      	cmp	r2, #5
 800c2a4:	d8f2      	bhi.n	800c28c <__hexdig_fun+0xc>
 800c2a6:	3827      	subs	r0, #39	; 0x27
 800c2a8:	e7ef      	b.n	800c28a <__hexdig_fun+0xa>

0800c2aa <__gethex>:
 800c2aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2ac:	b08d      	sub	sp, #52	; 0x34
 800c2ae:	9005      	str	r0, [sp, #20]
 800c2b0:	9814      	ldr	r0, [sp, #80]	; 0x50
 800c2b2:	9109      	str	r1, [sp, #36]	; 0x24
 800c2b4:	9202      	str	r2, [sp, #8]
 800c2b6:	930a      	str	r3, [sp, #40]	; 0x28
 800c2b8:	f000 fae2 	bl	800c880 <__localeconv_l>
 800c2bc:	6803      	ldr	r3, [r0, #0]
 800c2be:	0018      	movs	r0, r3
 800c2c0:	9307      	str	r3, [sp, #28]
 800c2c2:	f7f3 ff21 	bl	8000108 <strlen>
 800c2c6:	2202      	movs	r2, #2
 800c2c8:	9b07      	ldr	r3, [sp, #28]
 800c2ca:	4252      	negs	r2, r2
 800c2cc:	181b      	adds	r3, r3, r0
 800c2ce:	3b01      	subs	r3, #1
 800c2d0:	781b      	ldrb	r3, [r3, #0]
 800c2d2:	9004      	str	r0, [sp, #16]
 800c2d4:	930b      	str	r3, [sp, #44]	; 0x2c
 800c2d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2d8:	6819      	ldr	r1, [r3, #0]
 800c2da:	1c8b      	adds	r3, r1, #2
 800c2dc:	1a52      	subs	r2, r2, r1
 800c2de:	18d1      	adds	r1, r2, r3
 800c2e0:	9301      	str	r3, [sp, #4]
 800c2e2:	9108      	str	r1, [sp, #32]
 800c2e4:	9901      	ldr	r1, [sp, #4]
 800c2e6:	3301      	adds	r3, #1
 800c2e8:	7808      	ldrb	r0, [r1, #0]
 800c2ea:	2830      	cmp	r0, #48	; 0x30
 800c2ec:	d0f7      	beq.n	800c2de <__gethex+0x34>
 800c2ee:	f7ff ffc7 	bl	800c280 <__hexdig_fun>
 800c2f2:	1e07      	subs	r7, r0, #0
 800c2f4:	d000      	beq.n	800c2f8 <__gethex+0x4e>
 800c2f6:	e06f      	b.n	800c3d8 <__gethex+0x12e>
 800c2f8:	9a04      	ldr	r2, [sp, #16]
 800c2fa:	9907      	ldr	r1, [sp, #28]
 800c2fc:	9801      	ldr	r0, [sp, #4]
 800c2fe:	f001 fa7f 	bl	800d800 <strncmp>
 800c302:	2800      	cmp	r0, #0
 800c304:	d000      	beq.n	800c308 <__gethex+0x5e>
 800c306:	e06d      	b.n	800c3e4 <__gethex+0x13a>
 800c308:	9b01      	ldr	r3, [sp, #4]
 800c30a:	9a04      	ldr	r2, [sp, #16]
 800c30c:	189c      	adds	r4, r3, r2
 800c30e:	7820      	ldrb	r0, [r4, #0]
 800c310:	f7ff ffb6 	bl	800c280 <__hexdig_fun>
 800c314:	2800      	cmp	r0, #0
 800c316:	d069      	beq.n	800c3ec <__gethex+0x142>
 800c318:	9401      	str	r4, [sp, #4]
 800c31a:	9b01      	ldr	r3, [sp, #4]
 800c31c:	7818      	ldrb	r0, [r3, #0]
 800c31e:	2830      	cmp	r0, #48	; 0x30
 800c320:	d009      	beq.n	800c336 <__gethex+0x8c>
 800c322:	f7ff ffad 	bl	800c280 <__hexdig_fun>
 800c326:	4243      	negs	r3, r0
 800c328:	4143      	adcs	r3, r0
 800c32a:	9303      	str	r3, [sp, #12]
 800c32c:	2301      	movs	r3, #1
 800c32e:	0026      	movs	r6, r4
 800c330:	9308      	str	r3, [sp, #32]
 800c332:	9c01      	ldr	r4, [sp, #4]
 800c334:	e004      	b.n	800c340 <__gethex+0x96>
 800c336:	9b01      	ldr	r3, [sp, #4]
 800c338:	3301      	adds	r3, #1
 800c33a:	9301      	str	r3, [sp, #4]
 800c33c:	e7ed      	b.n	800c31a <__gethex+0x70>
 800c33e:	3401      	adds	r4, #1
 800c340:	7820      	ldrb	r0, [r4, #0]
 800c342:	f7ff ff9d 	bl	800c280 <__hexdig_fun>
 800c346:	2800      	cmp	r0, #0
 800c348:	d1f9      	bne.n	800c33e <__gethex+0x94>
 800c34a:	9a04      	ldr	r2, [sp, #16]
 800c34c:	9907      	ldr	r1, [sp, #28]
 800c34e:	0020      	movs	r0, r4
 800c350:	f001 fa56 	bl	800d800 <strncmp>
 800c354:	2800      	cmp	r0, #0
 800c356:	d109      	bne.n	800c36c <__gethex+0xc2>
 800c358:	2e00      	cmp	r6, #0
 800c35a:	d10a      	bne.n	800c372 <__gethex+0xc8>
 800c35c:	9b04      	ldr	r3, [sp, #16]
 800c35e:	18e4      	adds	r4, r4, r3
 800c360:	0026      	movs	r6, r4
 800c362:	7820      	ldrb	r0, [r4, #0]
 800c364:	f7ff ff8c 	bl	800c280 <__hexdig_fun>
 800c368:	2800      	cmp	r0, #0
 800c36a:	d139      	bne.n	800c3e0 <__gethex+0x136>
 800c36c:	2700      	movs	r7, #0
 800c36e:	42be      	cmp	r6, r7
 800c370:	d001      	beq.n	800c376 <__gethex+0xcc>
 800c372:	1b37      	subs	r7, r6, r4
 800c374:	00bf      	lsls	r7, r7, #2
 800c376:	7823      	ldrb	r3, [r4, #0]
 800c378:	2b50      	cmp	r3, #80	; 0x50
 800c37a:	d001      	beq.n	800c380 <__gethex+0xd6>
 800c37c:	2b70      	cmp	r3, #112	; 0x70
 800c37e:	d142      	bne.n	800c406 <__gethex+0x15c>
 800c380:	7863      	ldrb	r3, [r4, #1]
 800c382:	2b2b      	cmp	r3, #43	; 0x2b
 800c384:	d034      	beq.n	800c3f0 <__gethex+0x146>
 800c386:	2b2d      	cmp	r3, #45	; 0x2d
 800c388:	d036      	beq.n	800c3f8 <__gethex+0x14e>
 800c38a:	2300      	movs	r3, #0
 800c38c:	1c66      	adds	r6, r4, #1
 800c38e:	9306      	str	r3, [sp, #24]
 800c390:	7830      	ldrb	r0, [r6, #0]
 800c392:	f7ff ff75 	bl	800c280 <__hexdig_fun>
 800c396:	1e43      	subs	r3, r0, #1
 800c398:	b2db      	uxtb	r3, r3
 800c39a:	2b18      	cmp	r3, #24
 800c39c:	d833      	bhi.n	800c406 <__gethex+0x15c>
 800c39e:	3810      	subs	r0, #16
 800c3a0:	0005      	movs	r5, r0
 800c3a2:	3601      	adds	r6, #1
 800c3a4:	7830      	ldrb	r0, [r6, #0]
 800c3a6:	f7ff ff6b 	bl	800c280 <__hexdig_fun>
 800c3aa:	1e43      	subs	r3, r0, #1
 800c3ac:	b2db      	uxtb	r3, r3
 800c3ae:	2b18      	cmp	r3, #24
 800c3b0:	d924      	bls.n	800c3fc <__gethex+0x152>
 800c3b2:	9b06      	ldr	r3, [sp, #24]
 800c3b4:	2b00      	cmp	r3, #0
 800c3b6:	d000      	beq.n	800c3ba <__gethex+0x110>
 800c3b8:	426d      	negs	r5, r5
 800c3ba:	197f      	adds	r7, r7, r5
 800c3bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c3be:	601e      	str	r6, [r3, #0]
 800c3c0:	9b03      	ldr	r3, [sp, #12]
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	d021      	beq.n	800c40a <__gethex+0x160>
 800c3c6:	9b08      	ldr	r3, [sp, #32]
 800c3c8:	2606      	movs	r6, #6
 800c3ca:	425a      	negs	r2, r3
 800c3cc:	4153      	adcs	r3, r2
 800c3ce:	425b      	negs	r3, r3
 800c3d0:	401e      	ands	r6, r3
 800c3d2:	0030      	movs	r0, r6
 800c3d4:	b00d      	add	sp, #52	; 0x34
 800c3d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3d8:	2300      	movs	r3, #0
 800c3da:	9303      	str	r3, [sp, #12]
 800c3dc:	001e      	movs	r6, r3
 800c3de:	e7a8      	b.n	800c332 <__gethex+0x88>
 800c3e0:	3401      	adds	r4, #1
 800c3e2:	e7be      	b.n	800c362 <__gethex+0xb8>
 800c3e4:	9c01      	ldr	r4, [sp, #4]
 800c3e6:	2301      	movs	r3, #1
 800c3e8:	9303      	str	r3, [sp, #12]
 800c3ea:	e7c4      	b.n	800c376 <__gethex+0xcc>
 800c3ec:	0007      	movs	r7, r0
 800c3ee:	e7fa      	b.n	800c3e6 <__gethex+0x13c>
 800c3f0:	2300      	movs	r3, #0
 800c3f2:	9306      	str	r3, [sp, #24]
 800c3f4:	1ca6      	adds	r6, r4, #2
 800c3f6:	e7cb      	b.n	800c390 <__gethex+0xe6>
 800c3f8:	2301      	movs	r3, #1
 800c3fa:	e7fa      	b.n	800c3f2 <__gethex+0x148>
 800c3fc:	230a      	movs	r3, #10
 800c3fe:	435d      	muls	r5, r3
 800c400:	182d      	adds	r5, r5, r0
 800c402:	3d10      	subs	r5, #16
 800c404:	e7cd      	b.n	800c3a2 <__gethex+0xf8>
 800c406:	0026      	movs	r6, r4
 800c408:	e7d8      	b.n	800c3bc <__gethex+0x112>
 800c40a:	9b01      	ldr	r3, [sp, #4]
 800c40c:	9903      	ldr	r1, [sp, #12]
 800c40e:	1ae3      	subs	r3, r4, r3
 800c410:	3b01      	subs	r3, #1
 800c412:	2b07      	cmp	r3, #7
 800c414:	dc47      	bgt.n	800c4a6 <__gethex+0x1fc>
 800c416:	9805      	ldr	r0, [sp, #20]
 800c418:	f000 faf2 	bl	800ca00 <_Balloc>
 800c41c:	0003      	movs	r3, r0
 800c41e:	3314      	adds	r3, #20
 800c420:	9303      	str	r3, [sp, #12]
 800c422:	9308      	str	r3, [sp, #32]
 800c424:	2300      	movs	r3, #0
 800c426:	0005      	movs	r5, r0
 800c428:	001e      	movs	r6, r3
 800c42a:	9306      	str	r3, [sp, #24]
 800c42c:	9b01      	ldr	r3, [sp, #4]
 800c42e:	42a3      	cmp	r3, r4
 800c430:	d33c      	bcc.n	800c4ac <__gethex+0x202>
 800c432:	9c08      	ldr	r4, [sp, #32]
 800c434:	9b03      	ldr	r3, [sp, #12]
 800c436:	c440      	stmia	r4!, {r6}
 800c438:	1ae4      	subs	r4, r4, r3
 800c43a:	10a4      	asrs	r4, r4, #2
 800c43c:	612c      	str	r4, [r5, #16]
 800c43e:	0030      	movs	r0, r6
 800c440:	f000 fbab 	bl	800cb9a <__hi0bits>
 800c444:	9b02      	ldr	r3, [sp, #8]
 800c446:	0164      	lsls	r4, r4, #5
 800c448:	681b      	ldr	r3, [r3, #0]
 800c44a:	1a26      	subs	r6, r4, r0
 800c44c:	9301      	str	r3, [sp, #4]
 800c44e:	429e      	cmp	r6, r3
 800c450:	dd5f      	ble.n	800c512 <__gethex+0x268>
 800c452:	1af6      	subs	r6, r6, r3
 800c454:	0031      	movs	r1, r6
 800c456:	0028      	movs	r0, r5
 800c458:	f000 fea5 	bl	800d1a6 <__any_on>
 800c45c:	1e04      	subs	r4, r0, #0
 800c45e:	d00f      	beq.n	800c480 <__gethex+0x1d6>
 800c460:	2401      	movs	r4, #1
 800c462:	211f      	movs	r1, #31
 800c464:	0020      	movs	r0, r4
 800c466:	1e73      	subs	r3, r6, #1
 800c468:	4019      	ands	r1, r3
 800c46a:	4088      	lsls	r0, r1
 800c46c:	0001      	movs	r1, r0
 800c46e:	115a      	asrs	r2, r3, #5
 800c470:	9803      	ldr	r0, [sp, #12]
 800c472:	0092      	lsls	r2, r2, #2
 800c474:	5812      	ldr	r2, [r2, r0]
 800c476:	420a      	tst	r2, r1
 800c478:	d002      	beq.n	800c480 <__gethex+0x1d6>
 800c47a:	42a3      	cmp	r3, r4
 800c47c:	dc41      	bgt.n	800c502 <__gethex+0x258>
 800c47e:	2402      	movs	r4, #2
 800c480:	0031      	movs	r1, r6
 800c482:	0028      	movs	r0, r5
 800c484:	f7ff fec8 	bl	800c218 <rshift>
 800c488:	19bf      	adds	r7, r7, r6
 800c48a:	9b02      	ldr	r3, [sp, #8]
 800c48c:	689b      	ldr	r3, [r3, #8]
 800c48e:	9304      	str	r3, [sp, #16]
 800c490:	42bb      	cmp	r3, r7
 800c492:	da4e      	bge.n	800c532 <__gethex+0x288>
 800c494:	0029      	movs	r1, r5
 800c496:	9805      	ldr	r0, [sp, #20]
 800c498:	f000 faea 	bl	800ca70 <_Bfree>
 800c49c:	2300      	movs	r3, #0
 800c49e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c4a0:	26a3      	movs	r6, #163	; 0xa3
 800c4a2:	6013      	str	r3, [r2, #0]
 800c4a4:	e795      	b.n	800c3d2 <__gethex+0x128>
 800c4a6:	3101      	adds	r1, #1
 800c4a8:	105b      	asrs	r3, r3, #1
 800c4aa:	e7b2      	b.n	800c412 <__gethex+0x168>
 800c4ac:	1e63      	subs	r3, r4, #1
 800c4ae:	9309      	str	r3, [sp, #36]	; 0x24
 800c4b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c4b2:	781b      	ldrb	r3, [r3, #0]
 800c4b4:	4293      	cmp	r3, r2
 800c4b6:	d015      	beq.n	800c4e4 <__gethex+0x23a>
 800c4b8:	9b06      	ldr	r3, [sp, #24]
 800c4ba:	2b20      	cmp	r3, #32
 800c4bc:	d105      	bne.n	800c4ca <__gethex+0x220>
 800c4be:	9b08      	ldr	r3, [sp, #32]
 800c4c0:	601e      	str	r6, [r3, #0]
 800c4c2:	2600      	movs	r6, #0
 800c4c4:	3304      	adds	r3, #4
 800c4c6:	9308      	str	r3, [sp, #32]
 800c4c8:	9606      	str	r6, [sp, #24]
 800c4ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4cc:	7818      	ldrb	r0, [r3, #0]
 800c4ce:	f7ff fed7 	bl	800c280 <__hexdig_fun>
 800c4d2:	230f      	movs	r3, #15
 800c4d4:	4018      	ands	r0, r3
 800c4d6:	9b06      	ldr	r3, [sp, #24]
 800c4d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c4da:	4098      	lsls	r0, r3
 800c4dc:	3304      	adds	r3, #4
 800c4de:	4306      	orrs	r6, r0
 800c4e0:	9306      	str	r3, [sp, #24]
 800c4e2:	e7a3      	b.n	800c42c <__gethex+0x182>
 800c4e4:	2301      	movs	r3, #1
 800c4e6:	9a04      	ldr	r2, [sp, #16]
 800c4e8:	1a9c      	subs	r4, r3, r2
 800c4ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4ec:	191c      	adds	r4, r3, r4
 800c4ee:	9b01      	ldr	r3, [sp, #4]
 800c4f0:	429c      	cmp	r4, r3
 800c4f2:	d3e1      	bcc.n	800c4b8 <__gethex+0x20e>
 800c4f4:	9907      	ldr	r1, [sp, #28]
 800c4f6:	0020      	movs	r0, r4
 800c4f8:	f001 f982 	bl	800d800 <strncmp>
 800c4fc:	2800      	cmp	r0, #0
 800c4fe:	d1db      	bne.n	800c4b8 <__gethex+0x20e>
 800c500:	e794      	b.n	800c42c <__gethex+0x182>
 800c502:	1eb1      	subs	r1, r6, #2
 800c504:	0028      	movs	r0, r5
 800c506:	f000 fe4e 	bl	800d1a6 <__any_on>
 800c50a:	2800      	cmp	r0, #0
 800c50c:	d0b7      	beq.n	800c47e <__gethex+0x1d4>
 800c50e:	2403      	movs	r4, #3
 800c510:	e7b6      	b.n	800c480 <__gethex+0x1d6>
 800c512:	9b01      	ldr	r3, [sp, #4]
 800c514:	2400      	movs	r4, #0
 800c516:	429e      	cmp	r6, r3
 800c518:	dab7      	bge.n	800c48a <__gethex+0x1e0>
 800c51a:	1b9e      	subs	r6, r3, r6
 800c51c:	0029      	movs	r1, r5
 800c51e:	0032      	movs	r2, r6
 800c520:	9805      	ldr	r0, [sp, #20]
 800c522:	f000 fc6d 	bl	800ce00 <__lshift>
 800c526:	0003      	movs	r3, r0
 800c528:	3314      	adds	r3, #20
 800c52a:	0005      	movs	r5, r0
 800c52c:	1bbf      	subs	r7, r7, r6
 800c52e:	9303      	str	r3, [sp, #12]
 800c530:	e7ab      	b.n	800c48a <__gethex+0x1e0>
 800c532:	9b02      	ldr	r3, [sp, #8]
 800c534:	685e      	ldr	r6, [r3, #4]
 800c536:	42be      	cmp	r6, r7
 800c538:	dd6b      	ble.n	800c612 <__gethex+0x368>
 800c53a:	9b01      	ldr	r3, [sp, #4]
 800c53c:	1bf6      	subs	r6, r6, r7
 800c53e:	42b3      	cmp	r3, r6
 800c540:	dc32      	bgt.n	800c5a8 <__gethex+0x2fe>
 800c542:	9b02      	ldr	r3, [sp, #8]
 800c544:	68db      	ldr	r3, [r3, #12]
 800c546:	2b02      	cmp	r3, #2
 800c548:	d026      	beq.n	800c598 <__gethex+0x2ee>
 800c54a:	2b03      	cmp	r3, #3
 800c54c:	d028      	beq.n	800c5a0 <__gethex+0x2f6>
 800c54e:	2b01      	cmp	r3, #1
 800c550:	d119      	bne.n	800c586 <__gethex+0x2dc>
 800c552:	9b01      	ldr	r3, [sp, #4]
 800c554:	42b3      	cmp	r3, r6
 800c556:	d116      	bne.n	800c586 <__gethex+0x2dc>
 800c558:	2b01      	cmp	r3, #1
 800c55a:	dc0d      	bgt.n	800c578 <__gethex+0x2ce>
 800c55c:	9b02      	ldr	r3, [sp, #8]
 800c55e:	2662      	movs	r6, #98	; 0x62
 800c560:	685b      	ldr	r3, [r3, #4]
 800c562:	9301      	str	r3, [sp, #4]
 800c564:	9a01      	ldr	r2, [sp, #4]
 800c566:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c568:	601a      	str	r2, [r3, #0]
 800c56a:	2301      	movs	r3, #1
 800c56c:	9a03      	ldr	r2, [sp, #12]
 800c56e:	612b      	str	r3, [r5, #16]
 800c570:	6013      	str	r3, [r2, #0]
 800c572:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c574:	601d      	str	r5, [r3, #0]
 800c576:	e72c      	b.n	800c3d2 <__gethex+0x128>
 800c578:	9901      	ldr	r1, [sp, #4]
 800c57a:	0028      	movs	r0, r5
 800c57c:	3901      	subs	r1, #1
 800c57e:	f000 fe12 	bl	800d1a6 <__any_on>
 800c582:	2800      	cmp	r0, #0
 800c584:	d1ea      	bne.n	800c55c <__gethex+0x2b2>
 800c586:	0029      	movs	r1, r5
 800c588:	9805      	ldr	r0, [sp, #20]
 800c58a:	f000 fa71 	bl	800ca70 <_Bfree>
 800c58e:	2300      	movs	r3, #0
 800c590:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c592:	2650      	movs	r6, #80	; 0x50
 800c594:	6013      	str	r3, [r2, #0]
 800c596:	e71c      	b.n	800c3d2 <__gethex+0x128>
 800c598:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c59a:	2b00      	cmp	r3, #0
 800c59c:	d0de      	beq.n	800c55c <__gethex+0x2b2>
 800c59e:	e7f2      	b.n	800c586 <__gethex+0x2dc>
 800c5a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c5a2:	2b00      	cmp	r3, #0
 800c5a4:	d1da      	bne.n	800c55c <__gethex+0x2b2>
 800c5a6:	e7ee      	b.n	800c586 <__gethex+0x2dc>
 800c5a8:	1e77      	subs	r7, r6, #1
 800c5aa:	2c00      	cmp	r4, #0
 800c5ac:	d12f      	bne.n	800c60e <__gethex+0x364>
 800c5ae:	2f00      	cmp	r7, #0
 800c5b0:	d004      	beq.n	800c5bc <__gethex+0x312>
 800c5b2:	0039      	movs	r1, r7
 800c5b4:	0028      	movs	r0, r5
 800c5b6:	f000 fdf6 	bl	800d1a6 <__any_on>
 800c5ba:	0004      	movs	r4, r0
 800c5bc:	231f      	movs	r3, #31
 800c5be:	117a      	asrs	r2, r7, #5
 800c5c0:	401f      	ands	r7, r3
 800c5c2:	3b1e      	subs	r3, #30
 800c5c4:	40bb      	lsls	r3, r7
 800c5c6:	9903      	ldr	r1, [sp, #12]
 800c5c8:	0092      	lsls	r2, r2, #2
 800c5ca:	5852      	ldr	r2, [r2, r1]
 800c5cc:	421a      	tst	r2, r3
 800c5ce:	d001      	beq.n	800c5d4 <__gethex+0x32a>
 800c5d0:	2302      	movs	r3, #2
 800c5d2:	431c      	orrs	r4, r3
 800c5d4:	9b01      	ldr	r3, [sp, #4]
 800c5d6:	0031      	movs	r1, r6
 800c5d8:	1b9b      	subs	r3, r3, r6
 800c5da:	2602      	movs	r6, #2
 800c5dc:	0028      	movs	r0, r5
 800c5de:	9301      	str	r3, [sp, #4]
 800c5e0:	f7ff fe1a 	bl	800c218 <rshift>
 800c5e4:	9b02      	ldr	r3, [sp, #8]
 800c5e6:	685f      	ldr	r7, [r3, #4]
 800c5e8:	2c00      	cmp	r4, #0
 800c5ea:	d040      	beq.n	800c66e <__gethex+0x3c4>
 800c5ec:	9b02      	ldr	r3, [sp, #8]
 800c5ee:	68db      	ldr	r3, [r3, #12]
 800c5f0:	2b02      	cmp	r3, #2
 800c5f2:	d010      	beq.n	800c616 <__gethex+0x36c>
 800c5f4:	2b03      	cmp	r3, #3
 800c5f6:	d012      	beq.n	800c61e <__gethex+0x374>
 800c5f8:	2b01      	cmp	r3, #1
 800c5fa:	d106      	bne.n	800c60a <__gethex+0x360>
 800c5fc:	07a2      	lsls	r2, r4, #30
 800c5fe:	d504      	bpl.n	800c60a <__gethex+0x360>
 800c600:	9a03      	ldr	r2, [sp, #12]
 800c602:	6812      	ldr	r2, [r2, #0]
 800c604:	4314      	orrs	r4, r2
 800c606:	421c      	tst	r4, r3
 800c608:	d10c      	bne.n	800c624 <__gethex+0x37a>
 800c60a:	2310      	movs	r3, #16
 800c60c:	e02e      	b.n	800c66c <__gethex+0x3c2>
 800c60e:	2401      	movs	r4, #1
 800c610:	e7d4      	b.n	800c5bc <__gethex+0x312>
 800c612:	2601      	movs	r6, #1
 800c614:	e7e8      	b.n	800c5e8 <__gethex+0x33e>
 800c616:	2301      	movs	r3, #1
 800c618:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c61a:	1a9b      	subs	r3, r3, r2
 800c61c:	9313      	str	r3, [sp, #76]	; 0x4c
 800c61e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c620:	2b00      	cmp	r3, #0
 800c622:	d0f2      	beq.n	800c60a <__gethex+0x360>
 800c624:	692c      	ldr	r4, [r5, #16]
 800c626:	00a3      	lsls	r3, r4, #2
 800c628:	9304      	str	r3, [sp, #16]
 800c62a:	002b      	movs	r3, r5
 800c62c:	00a2      	lsls	r2, r4, #2
 800c62e:	3314      	adds	r3, #20
 800c630:	1899      	adds	r1, r3, r2
 800c632:	2200      	movs	r2, #0
 800c634:	4694      	mov	ip, r2
 800c636:	681a      	ldr	r2, [r3, #0]
 800c638:	1c50      	adds	r0, r2, #1
 800c63a:	d01d      	beq.n	800c678 <__gethex+0x3ce>
 800c63c:	3201      	adds	r2, #1
 800c63e:	601a      	str	r2, [r3, #0]
 800c640:	002b      	movs	r3, r5
 800c642:	3314      	adds	r3, #20
 800c644:	2e02      	cmp	r6, #2
 800c646:	d13a      	bne.n	800c6be <__gethex+0x414>
 800c648:	9a02      	ldr	r2, [sp, #8]
 800c64a:	9901      	ldr	r1, [sp, #4]
 800c64c:	6812      	ldr	r2, [r2, #0]
 800c64e:	3a01      	subs	r2, #1
 800c650:	428a      	cmp	r2, r1
 800c652:	d10a      	bne.n	800c66a <__gethex+0x3c0>
 800c654:	114a      	asrs	r2, r1, #5
 800c656:	211f      	movs	r1, #31
 800c658:	9801      	ldr	r0, [sp, #4]
 800c65a:	0092      	lsls	r2, r2, #2
 800c65c:	4001      	ands	r1, r0
 800c65e:	2001      	movs	r0, #1
 800c660:	0004      	movs	r4, r0
 800c662:	408c      	lsls	r4, r1
 800c664:	58d3      	ldr	r3, [r2, r3]
 800c666:	4223      	tst	r3, r4
 800c668:	d148      	bne.n	800c6fc <__gethex+0x452>
 800c66a:	2320      	movs	r3, #32
 800c66c:	431e      	orrs	r6, r3
 800c66e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c670:	601d      	str	r5, [r3, #0]
 800c672:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c674:	601f      	str	r7, [r3, #0]
 800c676:	e6ac      	b.n	800c3d2 <__gethex+0x128>
 800c678:	4662      	mov	r2, ip
 800c67a:	c304      	stmia	r3!, {r2}
 800c67c:	4299      	cmp	r1, r3
 800c67e:	d8da      	bhi.n	800c636 <__gethex+0x38c>
 800c680:	68ab      	ldr	r3, [r5, #8]
 800c682:	429c      	cmp	r4, r3
 800c684:	db12      	blt.n	800c6ac <__gethex+0x402>
 800c686:	686b      	ldr	r3, [r5, #4]
 800c688:	9805      	ldr	r0, [sp, #20]
 800c68a:	1c59      	adds	r1, r3, #1
 800c68c:	f000 f9b8 	bl	800ca00 <_Balloc>
 800c690:	0029      	movs	r1, r5
 800c692:	692b      	ldr	r3, [r5, #16]
 800c694:	9003      	str	r0, [sp, #12]
 800c696:	1c9a      	adds	r2, r3, #2
 800c698:	0092      	lsls	r2, r2, #2
 800c69a:	310c      	adds	r1, #12
 800c69c:	300c      	adds	r0, #12
 800c69e:	f000 f9a4 	bl	800c9ea <memcpy>
 800c6a2:	0029      	movs	r1, r5
 800c6a4:	9805      	ldr	r0, [sp, #20]
 800c6a6:	f000 f9e3 	bl	800ca70 <_Bfree>
 800c6aa:	9d03      	ldr	r5, [sp, #12]
 800c6ac:	692b      	ldr	r3, [r5, #16]
 800c6ae:	1c5a      	adds	r2, r3, #1
 800c6b0:	612a      	str	r2, [r5, #16]
 800c6b2:	2201      	movs	r2, #1
 800c6b4:	3304      	adds	r3, #4
 800c6b6:	009b      	lsls	r3, r3, #2
 800c6b8:	18eb      	adds	r3, r5, r3
 800c6ba:	605a      	str	r2, [r3, #4]
 800c6bc:	e7c0      	b.n	800c640 <__gethex+0x396>
 800c6be:	692a      	ldr	r2, [r5, #16]
 800c6c0:	42a2      	cmp	r2, r4
 800c6c2:	dd0a      	ble.n	800c6da <__gethex+0x430>
 800c6c4:	2101      	movs	r1, #1
 800c6c6:	0028      	movs	r0, r5
 800c6c8:	f7ff fda6 	bl	800c218 <rshift>
 800c6cc:	9b02      	ldr	r3, [sp, #8]
 800c6ce:	3701      	adds	r7, #1
 800c6d0:	689b      	ldr	r3, [r3, #8]
 800c6d2:	2601      	movs	r6, #1
 800c6d4:	42bb      	cmp	r3, r7
 800c6d6:	dac8      	bge.n	800c66a <__gethex+0x3c0>
 800c6d8:	e6dc      	b.n	800c494 <__gethex+0x1ea>
 800c6da:	241f      	movs	r4, #31
 800c6dc:	9a01      	ldr	r2, [sp, #4]
 800c6de:	2601      	movs	r6, #1
 800c6e0:	4022      	ands	r2, r4
 800c6e2:	1e14      	subs	r4, r2, #0
 800c6e4:	d0c1      	beq.n	800c66a <__gethex+0x3c0>
 800c6e6:	9a04      	ldr	r2, [sp, #16]
 800c6e8:	189b      	adds	r3, r3, r2
 800c6ea:	3b04      	subs	r3, #4
 800c6ec:	6818      	ldr	r0, [r3, #0]
 800c6ee:	f000 fa54 	bl	800cb9a <__hi0bits>
 800c6f2:	2120      	movs	r1, #32
 800c6f4:	1b0c      	subs	r4, r1, r4
 800c6f6:	42a0      	cmp	r0, r4
 800c6f8:	dbe4      	blt.n	800c6c4 <__gethex+0x41a>
 800c6fa:	e7b6      	b.n	800c66a <__gethex+0x3c0>
 800c6fc:	0006      	movs	r6, r0
 800c6fe:	e7b4      	b.n	800c66a <__gethex+0x3c0>

0800c700 <L_shift>:
 800c700:	2308      	movs	r3, #8
 800c702:	b570      	push	{r4, r5, r6, lr}
 800c704:	2520      	movs	r5, #32
 800c706:	1a9a      	subs	r2, r3, r2
 800c708:	0092      	lsls	r2, r2, #2
 800c70a:	1aad      	subs	r5, r5, r2
 800c70c:	6843      	ldr	r3, [r0, #4]
 800c70e:	6806      	ldr	r6, [r0, #0]
 800c710:	001c      	movs	r4, r3
 800c712:	40ac      	lsls	r4, r5
 800c714:	40d3      	lsrs	r3, r2
 800c716:	4334      	orrs	r4, r6
 800c718:	6004      	str	r4, [r0, #0]
 800c71a:	6043      	str	r3, [r0, #4]
 800c71c:	3004      	adds	r0, #4
 800c71e:	4288      	cmp	r0, r1
 800c720:	d3f4      	bcc.n	800c70c <L_shift+0xc>
 800c722:	bd70      	pop	{r4, r5, r6, pc}

0800c724 <__match>:
 800c724:	b530      	push	{r4, r5, lr}
 800c726:	6803      	ldr	r3, [r0, #0]
 800c728:	780c      	ldrb	r4, [r1, #0]
 800c72a:	3301      	adds	r3, #1
 800c72c:	2c00      	cmp	r4, #0
 800c72e:	d102      	bne.n	800c736 <__match+0x12>
 800c730:	6003      	str	r3, [r0, #0]
 800c732:	2001      	movs	r0, #1
 800c734:	bd30      	pop	{r4, r5, pc}
 800c736:	781a      	ldrb	r2, [r3, #0]
 800c738:	0015      	movs	r5, r2
 800c73a:	3d41      	subs	r5, #65	; 0x41
 800c73c:	2d19      	cmp	r5, #25
 800c73e:	d800      	bhi.n	800c742 <__match+0x1e>
 800c740:	3220      	adds	r2, #32
 800c742:	3101      	adds	r1, #1
 800c744:	42a2      	cmp	r2, r4
 800c746:	d0ef      	beq.n	800c728 <__match+0x4>
 800c748:	2000      	movs	r0, #0
 800c74a:	e7f3      	b.n	800c734 <__match+0x10>

0800c74c <__hexnan>:
 800c74c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c74e:	b08b      	sub	sp, #44	; 0x2c
 800c750:	9201      	str	r2, [sp, #4]
 800c752:	680a      	ldr	r2, [r1, #0]
 800c754:	9901      	ldr	r1, [sp, #4]
 800c756:	1153      	asrs	r3, r2, #5
 800c758:	009b      	lsls	r3, r3, #2
 800c75a:	18cb      	adds	r3, r1, r3
 800c75c:	9304      	str	r3, [sp, #16]
 800c75e:	231f      	movs	r3, #31
 800c760:	401a      	ands	r2, r3
 800c762:	9008      	str	r0, [sp, #32]
 800c764:	9206      	str	r2, [sp, #24]
 800c766:	d002      	beq.n	800c76e <__hexnan+0x22>
 800c768:	9b04      	ldr	r3, [sp, #16]
 800c76a:	3304      	adds	r3, #4
 800c76c:	9304      	str	r3, [sp, #16]
 800c76e:	9b04      	ldr	r3, [sp, #16]
 800c770:	2500      	movs	r5, #0
 800c772:	1f1e      	subs	r6, r3, #4
 800c774:	0037      	movs	r7, r6
 800c776:	0034      	movs	r4, r6
 800c778:	9b08      	ldr	r3, [sp, #32]
 800c77a:	6035      	str	r5, [r6, #0]
 800c77c:	681b      	ldr	r3, [r3, #0]
 800c77e:	9507      	str	r5, [sp, #28]
 800c780:	9305      	str	r3, [sp, #20]
 800c782:	9502      	str	r5, [sp, #8]
 800c784:	9b05      	ldr	r3, [sp, #20]
 800c786:	3301      	adds	r3, #1
 800c788:	9309      	str	r3, [sp, #36]	; 0x24
 800c78a:	9b05      	ldr	r3, [sp, #20]
 800c78c:	785b      	ldrb	r3, [r3, #1]
 800c78e:	9303      	str	r3, [sp, #12]
 800c790:	2b00      	cmp	r3, #0
 800c792:	d028      	beq.n	800c7e6 <__hexnan+0x9a>
 800c794:	9803      	ldr	r0, [sp, #12]
 800c796:	f7ff fd73 	bl	800c280 <__hexdig_fun>
 800c79a:	2800      	cmp	r0, #0
 800c79c:	d145      	bne.n	800c82a <__hexnan+0xde>
 800c79e:	9b03      	ldr	r3, [sp, #12]
 800c7a0:	2b20      	cmp	r3, #32
 800c7a2:	d819      	bhi.n	800c7d8 <__hexnan+0x8c>
 800c7a4:	9b02      	ldr	r3, [sp, #8]
 800c7a6:	9a07      	ldr	r2, [sp, #28]
 800c7a8:	4293      	cmp	r3, r2
 800c7aa:	dd12      	ble.n	800c7d2 <__hexnan+0x86>
 800c7ac:	42bc      	cmp	r4, r7
 800c7ae:	d206      	bcs.n	800c7be <__hexnan+0x72>
 800c7b0:	2d07      	cmp	r5, #7
 800c7b2:	dc04      	bgt.n	800c7be <__hexnan+0x72>
 800c7b4:	002a      	movs	r2, r5
 800c7b6:	0039      	movs	r1, r7
 800c7b8:	0020      	movs	r0, r4
 800c7ba:	f7ff ffa1 	bl	800c700 <L_shift>
 800c7be:	9b01      	ldr	r3, [sp, #4]
 800c7c0:	2508      	movs	r5, #8
 800c7c2:	429c      	cmp	r4, r3
 800c7c4:	d905      	bls.n	800c7d2 <__hexnan+0x86>
 800c7c6:	1f27      	subs	r7, r4, #4
 800c7c8:	2500      	movs	r5, #0
 800c7ca:	003c      	movs	r4, r7
 800c7cc:	9b02      	ldr	r3, [sp, #8]
 800c7ce:	603d      	str	r5, [r7, #0]
 800c7d0:	9307      	str	r3, [sp, #28]
 800c7d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c7d4:	9305      	str	r3, [sp, #20]
 800c7d6:	e7d5      	b.n	800c784 <__hexnan+0x38>
 800c7d8:	9b03      	ldr	r3, [sp, #12]
 800c7da:	2b29      	cmp	r3, #41	; 0x29
 800c7dc:	d14a      	bne.n	800c874 <__hexnan+0x128>
 800c7de:	9b05      	ldr	r3, [sp, #20]
 800c7e0:	9a08      	ldr	r2, [sp, #32]
 800c7e2:	3302      	adds	r3, #2
 800c7e4:	6013      	str	r3, [r2, #0]
 800c7e6:	9b02      	ldr	r3, [sp, #8]
 800c7e8:	2b00      	cmp	r3, #0
 800c7ea:	d043      	beq.n	800c874 <__hexnan+0x128>
 800c7ec:	42bc      	cmp	r4, r7
 800c7ee:	d206      	bcs.n	800c7fe <__hexnan+0xb2>
 800c7f0:	2d07      	cmp	r5, #7
 800c7f2:	dc04      	bgt.n	800c7fe <__hexnan+0xb2>
 800c7f4:	002a      	movs	r2, r5
 800c7f6:	0039      	movs	r1, r7
 800c7f8:	0020      	movs	r0, r4
 800c7fa:	f7ff ff81 	bl	800c700 <L_shift>
 800c7fe:	9b01      	ldr	r3, [sp, #4]
 800c800:	429c      	cmp	r4, r3
 800c802:	d926      	bls.n	800c852 <__hexnan+0x106>
 800c804:	cc04      	ldmia	r4!, {r2}
 800c806:	601a      	str	r2, [r3, #0]
 800c808:	3304      	adds	r3, #4
 800c80a:	42a6      	cmp	r6, r4
 800c80c:	d2fa      	bcs.n	800c804 <__hexnan+0xb8>
 800c80e:	2200      	movs	r2, #0
 800c810:	c304      	stmia	r3!, {r2}
 800c812:	429e      	cmp	r6, r3
 800c814:	d2fc      	bcs.n	800c810 <__hexnan+0xc4>
 800c816:	6833      	ldr	r3, [r6, #0]
 800c818:	2b00      	cmp	r3, #0
 800c81a:	d104      	bne.n	800c826 <__hexnan+0xda>
 800c81c:	9b01      	ldr	r3, [sp, #4]
 800c81e:	429e      	cmp	r6, r3
 800c820:	d126      	bne.n	800c870 <__hexnan+0x124>
 800c822:	2301      	movs	r3, #1
 800c824:	6033      	str	r3, [r6, #0]
 800c826:	2005      	movs	r0, #5
 800c828:	e025      	b.n	800c876 <__hexnan+0x12a>
 800c82a:	9b02      	ldr	r3, [sp, #8]
 800c82c:	3501      	adds	r5, #1
 800c82e:	3301      	adds	r3, #1
 800c830:	9302      	str	r3, [sp, #8]
 800c832:	2d08      	cmp	r5, #8
 800c834:	dd06      	ble.n	800c844 <__hexnan+0xf8>
 800c836:	9b01      	ldr	r3, [sp, #4]
 800c838:	429c      	cmp	r4, r3
 800c83a:	d9ca      	bls.n	800c7d2 <__hexnan+0x86>
 800c83c:	2300      	movs	r3, #0
 800c83e:	2501      	movs	r5, #1
 800c840:	3c04      	subs	r4, #4
 800c842:	6023      	str	r3, [r4, #0]
 800c844:	220f      	movs	r2, #15
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	4010      	ands	r0, r2
 800c84a:	011b      	lsls	r3, r3, #4
 800c84c:	4318      	orrs	r0, r3
 800c84e:	6020      	str	r0, [r4, #0]
 800c850:	e7bf      	b.n	800c7d2 <__hexnan+0x86>
 800c852:	9b06      	ldr	r3, [sp, #24]
 800c854:	2b00      	cmp	r3, #0
 800c856:	d0de      	beq.n	800c816 <__hexnan+0xca>
 800c858:	2120      	movs	r1, #32
 800c85a:	9a06      	ldr	r2, [sp, #24]
 800c85c:	9b04      	ldr	r3, [sp, #16]
 800c85e:	1a89      	subs	r1, r1, r2
 800c860:	2201      	movs	r2, #1
 800c862:	4252      	negs	r2, r2
 800c864:	40ca      	lsrs	r2, r1
 800c866:	3b04      	subs	r3, #4
 800c868:	6819      	ldr	r1, [r3, #0]
 800c86a:	400a      	ands	r2, r1
 800c86c:	601a      	str	r2, [r3, #0]
 800c86e:	e7d2      	b.n	800c816 <__hexnan+0xca>
 800c870:	3e04      	subs	r6, #4
 800c872:	e7d0      	b.n	800c816 <__hexnan+0xca>
 800c874:	2004      	movs	r0, #4
 800c876:	b00b      	add	sp, #44	; 0x2c
 800c878:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c87a <__locale_ctype_ptr_l>:
 800c87a:	30ec      	adds	r0, #236	; 0xec
 800c87c:	6800      	ldr	r0, [r0, #0]
 800c87e:	4770      	bx	lr

0800c880 <__localeconv_l>:
 800c880:	30f0      	adds	r0, #240	; 0xf0
 800c882:	4770      	bx	lr

0800c884 <_localeconv_r>:
 800c884:	4b03      	ldr	r3, [pc, #12]	; (800c894 <_localeconv_r+0x10>)
 800c886:	681b      	ldr	r3, [r3, #0]
 800c888:	6a18      	ldr	r0, [r3, #32]
 800c88a:	2800      	cmp	r0, #0
 800c88c:	d100      	bne.n	800c890 <_localeconv_r+0xc>
 800c88e:	4802      	ldr	r0, [pc, #8]	; (800c898 <_localeconv_r+0x14>)
 800c890:	30f0      	adds	r0, #240	; 0xf0
 800c892:	4770      	bx	lr
 800c894:	20000108 	.word	0x20000108
 800c898:	2000016c 	.word	0x2000016c

0800c89c <_lseek_r>:
 800c89c:	b570      	push	{r4, r5, r6, lr}
 800c89e:	0005      	movs	r5, r0
 800c8a0:	0008      	movs	r0, r1
 800c8a2:	0011      	movs	r1, r2
 800c8a4:	2200      	movs	r2, #0
 800c8a6:	4c06      	ldr	r4, [pc, #24]	; (800c8c0 <_lseek_r+0x24>)
 800c8a8:	6022      	str	r2, [r4, #0]
 800c8aa:	001a      	movs	r2, r3
 800c8ac:	f7fc faf9 	bl	8008ea2 <_lseek>
 800c8b0:	1c43      	adds	r3, r0, #1
 800c8b2:	d103      	bne.n	800c8bc <_lseek_r+0x20>
 800c8b4:	6823      	ldr	r3, [r4, #0]
 800c8b6:	2b00      	cmp	r3, #0
 800c8b8:	d000      	beq.n	800c8bc <_lseek_r+0x20>
 800c8ba:	602b      	str	r3, [r5, #0]
 800c8bc:	bd70      	pop	{r4, r5, r6, pc}
 800c8be:	46c0      	nop			; (mov r8, r8)
 800c8c0:	2000446c 	.word	0x2000446c

0800c8c4 <__swhatbuf_r>:
 800c8c4:	b570      	push	{r4, r5, r6, lr}
 800c8c6:	000e      	movs	r6, r1
 800c8c8:	001d      	movs	r5, r3
 800c8ca:	230e      	movs	r3, #14
 800c8cc:	5ec9      	ldrsh	r1, [r1, r3]
 800c8ce:	b096      	sub	sp, #88	; 0x58
 800c8d0:	0014      	movs	r4, r2
 800c8d2:	2900      	cmp	r1, #0
 800c8d4:	da07      	bge.n	800c8e6 <__swhatbuf_r+0x22>
 800c8d6:	2300      	movs	r3, #0
 800c8d8:	602b      	str	r3, [r5, #0]
 800c8da:	89b3      	ldrh	r3, [r6, #12]
 800c8dc:	061b      	lsls	r3, r3, #24
 800c8de:	d411      	bmi.n	800c904 <__swhatbuf_r+0x40>
 800c8e0:	2380      	movs	r3, #128	; 0x80
 800c8e2:	00db      	lsls	r3, r3, #3
 800c8e4:	e00f      	b.n	800c906 <__swhatbuf_r+0x42>
 800c8e6:	466a      	mov	r2, sp
 800c8e8:	f000 ffa8 	bl	800d83c <_fstat_r>
 800c8ec:	2800      	cmp	r0, #0
 800c8ee:	dbf2      	blt.n	800c8d6 <__swhatbuf_r+0x12>
 800c8f0:	22f0      	movs	r2, #240	; 0xf0
 800c8f2:	9b01      	ldr	r3, [sp, #4]
 800c8f4:	0212      	lsls	r2, r2, #8
 800c8f6:	4013      	ands	r3, r2
 800c8f8:	4a05      	ldr	r2, [pc, #20]	; (800c910 <__swhatbuf_r+0x4c>)
 800c8fa:	189b      	adds	r3, r3, r2
 800c8fc:	425a      	negs	r2, r3
 800c8fe:	4153      	adcs	r3, r2
 800c900:	602b      	str	r3, [r5, #0]
 800c902:	e7ed      	b.n	800c8e0 <__swhatbuf_r+0x1c>
 800c904:	2340      	movs	r3, #64	; 0x40
 800c906:	2000      	movs	r0, #0
 800c908:	6023      	str	r3, [r4, #0]
 800c90a:	b016      	add	sp, #88	; 0x58
 800c90c:	bd70      	pop	{r4, r5, r6, pc}
 800c90e:	46c0      	nop			; (mov r8, r8)
 800c910:	ffffe000 	.word	0xffffe000

0800c914 <__smakebuf_r>:
 800c914:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c916:	2602      	movs	r6, #2
 800c918:	898b      	ldrh	r3, [r1, #12]
 800c91a:	0005      	movs	r5, r0
 800c91c:	000c      	movs	r4, r1
 800c91e:	4233      	tst	r3, r6
 800c920:	d006      	beq.n	800c930 <__smakebuf_r+0x1c>
 800c922:	0023      	movs	r3, r4
 800c924:	3347      	adds	r3, #71	; 0x47
 800c926:	6023      	str	r3, [r4, #0]
 800c928:	6123      	str	r3, [r4, #16]
 800c92a:	2301      	movs	r3, #1
 800c92c:	6163      	str	r3, [r4, #20]
 800c92e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800c930:	ab01      	add	r3, sp, #4
 800c932:	466a      	mov	r2, sp
 800c934:	f7ff ffc6 	bl	800c8c4 <__swhatbuf_r>
 800c938:	9900      	ldr	r1, [sp, #0]
 800c93a:	0007      	movs	r7, r0
 800c93c:	0028      	movs	r0, r5
 800c93e:	f7fc fdbd 	bl	80094bc <_malloc_r>
 800c942:	2800      	cmp	r0, #0
 800c944:	d108      	bne.n	800c958 <__smakebuf_r+0x44>
 800c946:	220c      	movs	r2, #12
 800c948:	5ea3      	ldrsh	r3, [r4, r2]
 800c94a:	059a      	lsls	r2, r3, #22
 800c94c:	d4ef      	bmi.n	800c92e <__smakebuf_r+0x1a>
 800c94e:	2203      	movs	r2, #3
 800c950:	4393      	bics	r3, r2
 800c952:	431e      	orrs	r6, r3
 800c954:	81a6      	strh	r6, [r4, #12]
 800c956:	e7e4      	b.n	800c922 <__smakebuf_r+0xe>
 800c958:	4b0f      	ldr	r3, [pc, #60]	; (800c998 <__smakebuf_r+0x84>)
 800c95a:	62ab      	str	r3, [r5, #40]	; 0x28
 800c95c:	2380      	movs	r3, #128	; 0x80
 800c95e:	89a2      	ldrh	r2, [r4, #12]
 800c960:	6020      	str	r0, [r4, #0]
 800c962:	4313      	orrs	r3, r2
 800c964:	81a3      	strh	r3, [r4, #12]
 800c966:	9b00      	ldr	r3, [sp, #0]
 800c968:	6120      	str	r0, [r4, #16]
 800c96a:	6163      	str	r3, [r4, #20]
 800c96c:	9b01      	ldr	r3, [sp, #4]
 800c96e:	2b00      	cmp	r3, #0
 800c970:	d00d      	beq.n	800c98e <__smakebuf_r+0x7a>
 800c972:	230e      	movs	r3, #14
 800c974:	5ee1      	ldrsh	r1, [r4, r3]
 800c976:	0028      	movs	r0, r5
 800c978:	f000 ff72 	bl	800d860 <_isatty_r>
 800c97c:	2800      	cmp	r0, #0
 800c97e:	d006      	beq.n	800c98e <__smakebuf_r+0x7a>
 800c980:	2203      	movs	r2, #3
 800c982:	89a3      	ldrh	r3, [r4, #12]
 800c984:	4393      	bics	r3, r2
 800c986:	001a      	movs	r2, r3
 800c988:	2301      	movs	r3, #1
 800c98a:	4313      	orrs	r3, r2
 800c98c:	81a3      	strh	r3, [r4, #12]
 800c98e:	89a0      	ldrh	r0, [r4, #12]
 800c990:	4338      	orrs	r0, r7
 800c992:	81a0      	strh	r0, [r4, #12]
 800c994:	e7cb      	b.n	800c92e <__smakebuf_r+0x1a>
 800c996:	46c0      	nop			; (mov r8, r8)
 800c998:	08009301 	.word	0x08009301

0800c99c <malloc>:
 800c99c:	b510      	push	{r4, lr}
 800c99e:	4b03      	ldr	r3, [pc, #12]	; (800c9ac <malloc+0x10>)
 800c9a0:	0001      	movs	r1, r0
 800c9a2:	6818      	ldr	r0, [r3, #0]
 800c9a4:	f7fc fd8a 	bl	80094bc <_malloc_r>
 800c9a8:	bd10      	pop	{r4, pc}
 800c9aa:	46c0      	nop			; (mov r8, r8)
 800c9ac:	20000108 	.word	0x20000108

0800c9b0 <__ascii_mbtowc>:
 800c9b0:	b082      	sub	sp, #8
 800c9b2:	2900      	cmp	r1, #0
 800c9b4:	d100      	bne.n	800c9b8 <__ascii_mbtowc+0x8>
 800c9b6:	a901      	add	r1, sp, #4
 800c9b8:	1e10      	subs	r0, r2, #0
 800c9ba:	d006      	beq.n	800c9ca <__ascii_mbtowc+0x1a>
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	d006      	beq.n	800c9ce <__ascii_mbtowc+0x1e>
 800c9c0:	7813      	ldrb	r3, [r2, #0]
 800c9c2:	600b      	str	r3, [r1, #0]
 800c9c4:	7810      	ldrb	r0, [r2, #0]
 800c9c6:	1e43      	subs	r3, r0, #1
 800c9c8:	4198      	sbcs	r0, r3
 800c9ca:	b002      	add	sp, #8
 800c9cc:	4770      	bx	lr
 800c9ce:	2002      	movs	r0, #2
 800c9d0:	4240      	negs	r0, r0
 800c9d2:	e7fa      	b.n	800c9ca <__ascii_mbtowc+0x1a>

0800c9d4 <memchr>:
 800c9d4:	b2c9      	uxtb	r1, r1
 800c9d6:	1882      	adds	r2, r0, r2
 800c9d8:	4290      	cmp	r0, r2
 800c9da:	d101      	bne.n	800c9e0 <memchr+0xc>
 800c9dc:	2000      	movs	r0, #0
 800c9de:	4770      	bx	lr
 800c9e0:	7803      	ldrb	r3, [r0, #0]
 800c9e2:	428b      	cmp	r3, r1
 800c9e4:	d0fb      	beq.n	800c9de <memchr+0xa>
 800c9e6:	3001      	adds	r0, #1
 800c9e8:	e7f6      	b.n	800c9d8 <memchr+0x4>

0800c9ea <memcpy>:
 800c9ea:	2300      	movs	r3, #0
 800c9ec:	b510      	push	{r4, lr}
 800c9ee:	429a      	cmp	r2, r3
 800c9f0:	d100      	bne.n	800c9f4 <memcpy+0xa>
 800c9f2:	bd10      	pop	{r4, pc}
 800c9f4:	5ccc      	ldrb	r4, [r1, r3]
 800c9f6:	54c4      	strb	r4, [r0, r3]
 800c9f8:	3301      	adds	r3, #1
 800c9fa:	e7f8      	b.n	800c9ee <memcpy+0x4>

0800c9fc <__malloc_lock>:
 800c9fc:	4770      	bx	lr

0800c9fe <__malloc_unlock>:
 800c9fe:	4770      	bx	lr

0800ca00 <_Balloc>:
 800ca00:	b570      	push	{r4, r5, r6, lr}
 800ca02:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800ca04:	0004      	movs	r4, r0
 800ca06:	000d      	movs	r5, r1
 800ca08:	2e00      	cmp	r6, #0
 800ca0a:	d107      	bne.n	800ca1c <_Balloc+0x1c>
 800ca0c:	2010      	movs	r0, #16
 800ca0e:	f7ff ffc5 	bl	800c99c <malloc>
 800ca12:	6260      	str	r0, [r4, #36]	; 0x24
 800ca14:	6046      	str	r6, [r0, #4]
 800ca16:	6086      	str	r6, [r0, #8]
 800ca18:	6006      	str	r6, [r0, #0]
 800ca1a:	60c6      	str	r6, [r0, #12]
 800ca1c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800ca1e:	68f3      	ldr	r3, [r6, #12]
 800ca20:	2b00      	cmp	r3, #0
 800ca22:	d013      	beq.n	800ca4c <_Balloc+0x4c>
 800ca24:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca26:	00aa      	lsls	r2, r5, #2
 800ca28:	68db      	ldr	r3, [r3, #12]
 800ca2a:	189b      	adds	r3, r3, r2
 800ca2c:	6818      	ldr	r0, [r3, #0]
 800ca2e:	2800      	cmp	r0, #0
 800ca30:	d118      	bne.n	800ca64 <_Balloc+0x64>
 800ca32:	2101      	movs	r1, #1
 800ca34:	000e      	movs	r6, r1
 800ca36:	40ae      	lsls	r6, r5
 800ca38:	1d72      	adds	r2, r6, #5
 800ca3a:	0092      	lsls	r2, r2, #2
 800ca3c:	0020      	movs	r0, r4
 800ca3e:	f000 fbd4 	bl	800d1ea <_calloc_r>
 800ca42:	2800      	cmp	r0, #0
 800ca44:	d00c      	beq.n	800ca60 <_Balloc+0x60>
 800ca46:	6045      	str	r5, [r0, #4]
 800ca48:	6086      	str	r6, [r0, #8]
 800ca4a:	e00d      	b.n	800ca68 <_Balloc+0x68>
 800ca4c:	2221      	movs	r2, #33	; 0x21
 800ca4e:	2104      	movs	r1, #4
 800ca50:	0020      	movs	r0, r4
 800ca52:	f000 fbca 	bl	800d1ea <_calloc_r>
 800ca56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca58:	60f0      	str	r0, [r6, #12]
 800ca5a:	68db      	ldr	r3, [r3, #12]
 800ca5c:	2b00      	cmp	r3, #0
 800ca5e:	d1e1      	bne.n	800ca24 <_Balloc+0x24>
 800ca60:	2000      	movs	r0, #0
 800ca62:	bd70      	pop	{r4, r5, r6, pc}
 800ca64:	6802      	ldr	r2, [r0, #0]
 800ca66:	601a      	str	r2, [r3, #0]
 800ca68:	2300      	movs	r3, #0
 800ca6a:	6103      	str	r3, [r0, #16]
 800ca6c:	60c3      	str	r3, [r0, #12]
 800ca6e:	e7f8      	b.n	800ca62 <_Balloc+0x62>

0800ca70 <_Bfree>:
 800ca70:	b570      	push	{r4, r5, r6, lr}
 800ca72:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800ca74:	0006      	movs	r6, r0
 800ca76:	000d      	movs	r5, r1
 800ca78:	2c00      	cmp	r4, #0
 800ca7a:	d107      	bne.n	800ca8c <_Bfree+0x1c>
 800ca7c:	2010      	movs	r0, #16
 800ca7e:	f7ff ff8d 	bl	800c99c <malloc>
 800ca82:	6270      	str	r0, [r6, #36]	; 0x24
 800ca84:	6044      	str	r4, [r0, #4]
 800ca86:	6084      	str	r4, [r0, #8]
 800ca88:	6004      	str	r4, [r0, #0]
 800ca8a:	60c4      	str	r4, [r0, #12]
 800ca8c:	2d00      	cmp	r5, #0
 800ca8e:	d007      	beq.n	800caa0 <_Bfree+0x30>
 800ca90:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ca92:	686a      	ldr	r2, [r5, #4]
 800ca94:	68db      	ldr	r3, [r3, #12]
 800ca96:	0092      	lsls	r2, r2, #2
 800ca98:	189b      	adds	r3, r3, r2
 800ca9a:	681a      	ldr	r2, [r3, #0]
 800ca9c:	602a      	str	r2, [r5, #0]
 800ca9e:	601d      	str	r5, [r3, #0]
 800caa0:	bd70      	pop	{r4, r5, r6, pc}

0800caa2 <__multadd>:
 800caa2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800caa4:	001e      	movs	r6, r3
 800caa6:	2314      	movs	r3, #20
 800caa8:	469c      	mov	ip, r3
 800caaa:	0007      	movs	r7, r0
 800caac:	000c      	movs	r4, r1
 800caae:	2000      	movs	r0, #0
 800cab0:	690d      	ldr	r5, [r1, #16]
 800cab2:	448c      	add	ip, r1
 800cab4:	4663      	mov	r3, ip
 800cab6:	681b      	ldr	r3, [r3, #0]
 800cab8:	3001      	adds	r0, #1
 800caba:	b299      	uxth	r1, r3
 800cabc:	4663      	mov	r3, ip
 800cabe:	681b      	ldr	r3, [r3, #0]
 800cac0:	4351      	muls	r1, r2
 800cac2:	0c1b      	lsrs	r3, r3, #16
 800cac4:	4353      	muls	r3, r2
 800cac6:	1989      	adds	r1, r1, r6
 800cac8:	0c0e      	lsrs	r6, r1, #16
 800caca:	199b      	adds	r3, r3, r6
 800cacc:	b289      	uxth	r1, r1
 800cace:	0c1e      	lsrs	r6, r3, #16
 800cad0:	041b      	lsls	r3, r3, #16
 800cad2:	185b      	adds	r3, r3, r1
 800cad4:	4661      	mov	r1, ip
 800cad6:	c108      	stmia	r1!, {r3}
 800cad8:	468c      	mov	ip, r1
 800cada:	4285      	cmp	r5, r0
 800cadc:	dcea      	bgt.n	800cab4 <__multadd+0x12>
 800cade:	2e00      	cmp	r6, #0
 800cae0:	d01b      	beq.n	800cb1a <__multadd+0x78>
 800cae2:	68a3      	ldr	r3, [r4, #8]
 800cae4:	42ab      	cmp	r3, r5
 800cae6:	dc12      	bgt.n	800cb0e <__multadd+0x6c>
 800cae8:	6863      	ldr	r3, [r4, #4]
 800caea:	0038      	movs	r0, r7
 800caec:	1c59      	adds	r1, r3, #1
 800caee:	f7ff ff87 	bl	800ca00 <_Balloc>
 800caf2:	0021      	movs	r1, r4
 800caf4:	6923      	ldr	r3, [r4, #16]
 800caf6:	9001      	str	r0, [sp, #4]
 800caf8:	1c9a      	adds	r2, r3, #2
 800cafa:	0092      	lsls	r2, r2, #2
 800cafc:	310c      	adds	r1, #12
 800cafe:	300c      	adds	r0, #12
 800cb00:	f7ff ff73 	bl	800c9ea <memcpy>
 800cb04:	0021      	movs	r1, r4
 800cb06:	0038      	movs	r0, r7
 800cb08:	f7ff ffb2 	bl	800ca70 <_Bfree>
 800cb0c:	9c01      	ldr	r4, [sp, #4]
 800cb0e:	1d2b      	adds	r3, r5, #4
 800cb10:	009b      	lsls	r3, r3, #2
 800cb12:	18e3      	adds	r3, r4, r3
 800cb14:	3501      	adds	r5, #1
 800cb16:	605e      	str	r6, [r3, #4]
 800cb18:	6125      	str	r5, [r4, #16]
 800cb1a:	0020      	movs	r0, r4
 800cb1c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800cb1e <__s2b>:
 800cb1e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb20:	0006      	movs	r6, r0
 800cb22:	0018      	movs	r0, r3
 800cb24:	000c      	movs	r4, r1
 800cb26:	3008      	adds	r0, #8
 800cb28:	2109      	movs	r1, #9
 800cb2a:	9301      	str	r3, [sp, #4]
 800cb2c:	0015      	movs	r5, r2
 800cb2e:	f7f3 fb87 	bl	8000240 <__divsi3>
 800cb32:	2301      	movs	r3, #1
 800cb34:	2100      	movs	r1, #0
 800cb36:	4283      	cmp	r3, r0
 800cb38:	db1f      	blt.n	800cb7a <__s2b+0x5c>
 800cb3a:	0030      	movs	r0, r6
 800cb3c:	f7ff ff60 	bl	800ca00 <_Balloc>
 800cb40:	9b08      	ldr	r3, [sp, #32]
 800cb42:	6143      	str	r3, [r0, #20]
 800cb44:	2301      	movs	r3, #1
 800cb46:	6103      	str	r3, [r0, #16]
 800cb48:	2d09      	cmp	r5, #9
 800cb4a:	dd19      	ble.n	800cb80 <__s2b+0x62>
 800cb4c:	0023      	movs	r3, r4
 800cb4e:	3309      	adds	r3, #9
 800cb50:	001f      	movs	r7, r3
 800cb52:	9300      	str	r3, [sp, #0]
 800cb54:	1964      	adds	r4, r4, r5
 800cb56:	783b      	ldrb	r3, [r7, #0]
 800cb58:	0001      	movs	r1, r0
 800cb5a:	3b30      	subs	r3, #48	; 0x30
 800cb5c:	220a      	movs	r2, #10
 800cb5e:	0030      	movs	r0, r6
 800cb60:	3701      	adds	r7, #1
 800cb62:	f7ff ff9e 	bl	800caa2 <__multadd>
 800cb66:	42a7      	cmp	r7, r4
 800cb68:	d1f5      	bne.n	800cb56 <__s2b+0x38>
 800cb6a:	9b00      	ldr	r3, [sp, #0]
 800cb6c:	195c      	adds	r4, r3, r5
 800cb6e:	3c08      	subs	r4, #8
 800cb70:	002f      	movs	r7, r5
 800cb72:	9b01      	ldr	r3, [sp, #4]
 800cb74:	429f      	cmp	r7, r3
 800cb76:	db06      	blt.n	800cb86 <__s2b+0x68>
 800cb78:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800cb7a:	005b      	lsls	r3, r3, #1
 800cb7c:	3101      	adds	r1, #1
 800cb7e:	e7da      	b.n	800cb36 <__s2b+0x18>
 800cb80:	340a      	adds	r4, #10
 800cb82:	2509      	movs	r5, #9
 800cb84:	e7f4      	b.n	800cb70 <__s2b+0x52>
 800cb86:	1b63      	subs	r3, r4, r5
 800cb88:	5ddb      	ldrb	r3, [r3, r7]
 800cb8a:	0001      	movs	r1, r0
 800cb8c:	3b30      	subs	r3, #48	; 0x30
 800cb8e:	220a      	movs	r2, #10
 800cb90:	0030      	movs	r0, r6
 800cb92:	f7ff ff86 	bl	800caa2 <__multadd>
 800cb96:	3701      	adds	r7, #1
 800cb98:	e7eb      	b.n	800cb72 <__s2b+0x54>

0800cb9a <__hi0bits>:
 800cb9a:	0003      	movs	r3, r0
 800cb9c:	0c02      	lsrs	r2, r0, #16
 800cb9e:	2000      	movs	r0, #0
 800cba0:	4282      	cmp	r2, r0
 800cba2:	d101      	bne.n	800cba8 <__hi0bits+0xe>
 800cba4:	041b      	lsls	r3, r3, #16
 800cba6:	3010      	adds	r0, #16
 800cba8:	0e1a      	lsrs	r2, r3, #24
 800cbaa:	d101      	bne.n	800cbb0 <__hi0bits+0x16>
 800cbac:	3008      	adds	r0, #8
 800cbae:	021b      	lsls	r3, r3, #8
 800cbb0:	0f1a      	lsrs	r2, r3, #28
 800cbb2:	d101      	bne.n	800cbb8 <__hi0bits+0x1e>
 800cbb4:	3004      	adds	r0, #4
 800cbb6:	011b      	lsls	r3, r3, #4
 800cbb8:	0f9a      	lsrs	r2, r3, #30
 800cbba:	d101      	bne.n	800cbc0 <__hi0bits+0x26>
 800cbbc:	3002      	adds	r0, #2
 800cbbe:	009b      	lsls	r3, r3, #2
 800cbc0:	2b00      	cmp	r3, #0
 800cbc2:	db03      	blt.n	800cbcc <__hi0bits+0x32>
 800cbc4:	3001      	adds	r0, #1
 800cbc6:	005b      	lsls	r3, r3, #1
 800cbc8:	d400      	bmi.n	800cbcc <__hi0bits+0x32>
 800cbca:	2020      	movs	r0, #32
 800cbcc:	4770      	bx	lr

0800cbce <__lo0bits>:
 800cbce:	2207      	movs	r2, #7
 800cbd0:	6803      	ldr	r3, [r0, #0]
 800cbd2:	b510      	push	{r4, lr}
 800cbd4:	0001      	movs	r1, r0
 800cbd6:	401a      	ands	r2, r3
 800cbd8:	d00d      	beq.n	800cbf6 <__lo0bits+0x28>
 800cbda:	2401      	movs	r4, #1
 800cbdc:	2000      	movs	r0, #0
 800cbde:	4223      	tst	r3, r4
 800cbe0:	d105      	bne.n	800cbee <__lo0bits+0x20>
 800cbe2:	3002      	adds	r0, #2
 800cbe4:	4203      	tst	r3, r0
 800cbe6:	d003      	beq.n	800cbf0 <__lo0bits+0x22>
 800cbe8:	40e3      	lsrs	r3, r4
 800cbea:	0020      	movs	r0, r4
 800cbec:	600b      	str	r3, [r1, #0]
 800cbee:	bd10      	pop	{r4, pc}
 800cbf0:	089b      	lsrs	r3, r3, #2
 800cbf2:	600b      	str	r3, [r1, #0]
 800cbf4:	e7fb      	b.n	800cbee <__lo0bits+0x20>
 800cbf6:	b29c      	uxth	r4, r3
 800cbf8:	0010      	movs	r0, r2
 800cbfa:	2c00      	cmp	r4, #0
 800cbfc:	d101      	bne.n	800cc02 <__lo0bits+0x34>
 800cbfe:	2010      	movs	r0, #16
 800cc00:	0c1b      	lsrs	r3, r3, #16
 800cc02:	b2da      	uxtb	r2, r3
 800cc04:	2a00      	cmp	r2, #0
 800cc06:	d101      	bne.n	800cc0c <__lo0bits+0x3e>
 800cc08:	3008      	adds	r0, #8
 800cc0a:	0a1b      	lsrs	r3, r3, #8
 800cc0c:	071a      	lsls	r2, r3, #28
 800cc0e:	d101      	bne.n	800cc14 <__lo0bits+0x46>
 800cc10:	3004      	adds	r0, #4
 800cc12:	091b      	lsrs	r3, r3, #4
 800cc14:	079a      	lsls	r2, r3, #30
 800cc16:	d101      	bne.n	800cc1c <__lo0bits+0x4e>
 800cc18:	3002      	adds	r0, #2
 800cc1a:	089b      	lsrs	r3, r3, #2
 800cc1c:	07da      	lsls	r2, r3, #31
 800cc1e:	d4e8      	bmi.n	800cbf2 <__lo0bits+0x24>
 800cc20:	085b      	lsrs	r3, r3, #1
 800cc22:	d001      	beq.n	800cc28 <__lo0bits+0x5a>
 800cc24:	3001      	adds	r0, #1
 800cc26:	e7e4      	b.n	800cbf2 <__lo0bits+0x24>
 800cc28:	2020      	movs	r0, #32
 800cc2a:	e7e0      	b.n	800cbee <__lo0bits+0x20>

0800cc2c <__i2b>:
 800cc2c:	b510      	push	{r4, lr}
 800cc2e:	000c      	movs	r4, r1
 800cc30:	2101      	movs	r1, #1
 800cc32:	f7ff fee5 	bl	800ca00 <_Balloc>
 800cc36:	2301      	movs	r3, #1
 800cc38:	6144      	str	r4, [r0, #20]
 800cc3a:	6103      	str	r3, [r0, #16]
 800cc3c:	bd10      	pop	{r4, pc}

0800cc3e <__multiply>:
 800cc3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc40:	690b      	ldr	r3, [r1, #16]
 800cc42:	0014      	movs	r4, r2
 800cc44:	6912      	ldr	r2, [r2, #16]
 800cc46:	b089      	sub	sp, #36	; 0x24
 800cc48:	000d      	movs	r5, r1
 800cc4a:	4293      	cmp	r3, r2
 800cc4c:	da01      	bge.n	800cc52 <__multiply+0x14>
 800cc4e:	0025      	movs	r5, r4
 800cc50:	000c      	movs	r4, r1
 800cc52:	692f      	ldr	r7, [r5, #16]
 800cc54:	6926      	ldr	r6, [r4, #16]
 800cc56:	6869      	ldr	r1, [r5, #4]
 800cc58:	19bb      	adds	r3, r7, r6
 800cc5a:	9302      	str	r3, [sp, #8]
 800cc5c:	68ab      	ldr	r3, [r5, #8]
 800cc5e:	19ba      	adds	r2, r7, r6
 800cc60:	4293      	cmp	r3, r2
 800cc62:	da00      	bge.n	800cc66 <__multiply+0x28>
 800cc64:	3101      	adds	r1, #1
 800cc66:	f7ff fecb 	bl	800ca00 <_Balloc>
 800cc6a:	0002      	movs	r2, r0
 800cc6c:	19bb      	adds	r3, r7, r6
 800cc6e:	3214      	adds	r2, #20
 800cc70:	009b      	lsls	r3, r3, #2
 800cc72:	18d3      	adds	r3, r2, r3
 800cc74:	469c      	mov	ip, r3
 800cc76:	2100      	movs	r1, #0
 800cc78:	0013      	movs	r3, r2
 800cc7a:	9004      	str	r0, [sp, #16]
 800cc7c:	4563      	cmp	r3, ip
 800cc7e:	d31d      	bcc.n	800ccbc <__multiply+0x7e>
 800cc80:	3514      	adds	r5, #20
 800cc82:	00bf      	lsls	r7, r7, #2
 800cc84:	19eb      	adds	r3, r5, r7
 800cc86:	3414      	adds	r4, #20
 800cc88:	00b6      	lsls	r6, r6, #2
 800cc8a:	9305      	str	r3, [sp, #20]
 800cc8c:	19a3      	adds	r3, r4, r6
 800cc8e:	9503      	str	r5, [sp, #12]
 800cc90:	9401      	str	r4, [sp, #4]
 800cc92:	9307      	str	r3, [sp, #28]
 800cc94:	9b07      	ldr	r3, [sp, #28]
 800cc96:	9901      	ldr	r1, [sp, #4]
 800cc98:	4299      	cmp	r1, r3
 800cc9a:	d311      	bcc.n	800ccc0 <__multiply+0x82>
 800cc9c:	9b02      	ldr	r3, [sp, #8]
 800cc9e:	2b00      	cmp	r3, #0
 800cca0:	dd06      	ble.n	800ccb0 <__multiply+0x72>
 800cca2:	2304      	movs	r3, #4
 800cca4:	425b      	negs	r3, r3
 800cca6:	449c      	add	ip, r3
 800cca8:	4663      	mov	r3, ip
 800ccaa:	681b      	ldr	r3, [r3, #0]
 800ccac:	2b00      	cmp	r3, #0
 800ccae:	d051      	beq.n	800cd54 <__multiply+0x116>
 800ccb0:	9b04      	ldr	r3, [sp, #16]
 800ccb2:	9a02      	ldr	r2, [sp, #8]
 800ccb4:	0018      	movs	r0, r3
 800ccb6:	611a      	str	r2, [r3, #16]
 800ccb8:	b009      	add	sp, #36	; 0x24
 800ccba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ccbc:	c302      	stmia	r3!, {r1}
 800ccbe:	e7dd      	b.n	800cc7c <__multiply+0x3e>
 800ccc0:	9b01      	ldr	r3, [sp, #4]
 800ccc2:	681b      	ldr	r3, [r3, #0]
 800ccc4:	b298      	uxth	r0, r3
 800ccc6:	2800      	cmp	r0, #0
 800ccc8:	d01c      	beq.n	800cd04 <__multiply+0xc6>
 800ccca:	0015      	movs	r5, r2
 800cccc:	2600      	movs	r6, #0
 800ccce:	9f03      	ldr	r7, [sp, #12]
 800ccd0:	cf02      	ldmia	r7!, {r1}
 800ccd2:	682c      	ldr	r4, [r5, #0]
 800ccd4:	b28b      	uxth	r3, r1
 800ccd6:	4343      	muls	r3, r0
 800ccd8:	0c09      	lsrs	r1, r1, #16
 800ccda:	4341      	muls	r1, r0
 800ccdc:	b2a4      	uxth	r4, r4
 800ccde:	191b      	adds	r3, r3, r4
 800cce0:	199b      	adds	r3, r3, r6
 800cce2:	000e      	movs	r6, r1
 800cce4:	6829      	ldr	r1, [r5, #0]
 800cce6:	9506      	str	r5, [sp, #24]
 800cce8:	0c09      	lsrs	r1, r1, #16
 800ccea:	1871      	adds	r1, r6, r1
 800ccec:	0c1e      	lsrs	r6, r3, #16
 800ccee:	1989      	adds	r1, r1, r6
 800ccf0:	0c0e      	lsrs	r6, r1, #16
 800ccf2:	b29b      	uxth	r3, r3
 800ccf4:	0409      	lsls	r1, r1, #16
 800ccf6:	430b      	orrs	r3, r1
 800ccf8:	c508      	stmia	r5!, {r3}
 800ccfa:	9b05      	ldr	r3, [sp, #20]
 800ccfc:	42bb      	cmp	r3, r7
 800ccfe:	d8e7      	bhi.n	800ccd0 <__multiply+0x92>
 800cd00:	9b06      	ldr	r3, [sp, #24]
 800cd02:	605e      	str	r6, [r3, #4]
 800cd04:	9b01      	ldr	r3, [sp, #4]
 800cd06:	681b      	ldr	r3, [r3, #0]
 800cd08:	0c1d      	lsrs	r5, r3, #16
 800cd0a:	d01e      	beq.n	800cd4a <__multiply+0x10c>
 800cd0c:	0010      	movs	r0, r2
 800cd0e:	2700      	movs	r7, #0
 800cd10:	6813      	ldr	r3, [r2, #0]
 800cd12:	9e03      	ldr	r6, [sp, #12]
 800cd14:	6831      	ldr	r1, [r6, #0]
 800cd16:	6804      	ldr	r4, [r0, #0]
 800cd18:	b289      	uxth	r1, r1
 800cd1a:	4369      	muls	r1, r5
 800cd1c:	0c24      	lsrs	r4, r4, #16
 800cd1e:	1909      	adds	r1, r1, r4
 800cd20:	19c9      	adds	r1, r1, r7
 800cd22:	040f      	lsls	r7, r1, #16
 800cd24:	b29b      	uxth	r3, r3
 800cd26:	433b      	orrs	r3, r7
 800cd28:	6003      	str	r3, [r0, #0]
 800cd2a:	ce80      	ldmia	r6!, {r7}
 800cd2c:	6843      	ldr	r3, [r0, #4]
 800cd2e:	0c3f      	lsrs	r7, r7, #16
 800cd30:	436f      	muls	r7, r5
 800cd32:	b29b      	uxth	r3, r3
 800cd34:	18fb      	adds	r3, r7, r3
 800cd36:	0c09      	lsrs	r1, r1, #16
 800cd38:	185b      	adds	r3, r3, r1
 800cd3a:	9905      	ldr	r1, [sp, #20]
 800cd3c:	9006      	str	r0, [sp, #24]
 800cd3e:	0c1f      	lsrs	r7, r3, #16
 800cd40:	3004      	adds	r0, #4
 800cd42:	42b1      	cmp	r1, r6
 800cd44:	d8e6      	bhi.n	800cd14 <__multiply+0xd6>
 800cd46:	9906      	ldr	r1, [sp, #24]
 800cd48:	604b      	str	r3, [r1, #4]
 800cd4a:	9b01      	ldr	r3, [sp, #4]
 800cd4c:	3204      	adds	r2, #4
 800cd4e:	3304      	adds	r3, #4
 800cd50:	9301      	str	r3, [sp, #4]
 800cd52:	e79f      	b.n	800cc94 <__multiply+0x56>
 800cd54:	9b02      	ldr	r3, [sp, #8]
 800cd56:	3b01      	subs	r3, #1
 800cd58:	9302      	str	r3, [sp, #8]
 800cd5a:	e79f      	b.n	800cc9c <__multiply+0x5e>

0800cd5c <__pow5mult>:
 800cd5c:	2303      	movs	r3, #3
 800cd5e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd60:	4013      	ands	r3, r2
 800cd62:	0005      	movs	r5, r0
 800cd64:	000e      	movs	r6, r1
 800cd66:	0014      	movs	r4, r2
 800cd68:	2b00      	cmp	r3, #0
 800cd6a:	d008      	beq.n	800cd7e <__pow5mult+0x22>
 800cd6c:	4922      	ldr	r1, [pc, #136]	; (800cdf8 <__pow5mult+0x9c>)
 800cd6e:	3b01      	subs	r3, #1
 800cd70:	009a      	lsls	r2, r3, #2
 800cd72:	5852      	ldr	r2, [r2, r1]
 800cd74:	2300      	movs	r3, #0
 800cd76:	0031      	movs	r1, r6
 800cd78:	f7ff fe93 	bl	800caa2 <__multadd>
 800cd7c:	0006      	movs	r6, r0
 800cd7e:	10a3      	asrs	r3, r4, #2
 800cd80:	9301      	str	r3, [sp, #4]
 800cd82:	d036      	beq.n	800cdf2 <__pow5mult+0x96>
 800cd84:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800cd86:	2c00      	cmp	r4, #0
 800cd88:	d107      	bne.n	800cd9a <__pow5mult+0x3e>
 800cd8a:	2010      	movs	r0, #16
 800cd8c:	f7ff fe06 	bl	800c99c <malloc>
 800cd90:	6268      	str	r0, [r5, #36]	; 0x24
 800cd92:	6044      	str	r4, [r0, #4]
 800cd94:	6084      	str	r4, [r0, #8]
 800cd96:	6004      	str	r4, [r0, #0]
 800cd98:	60c4      	str	r4, [r0, #12]
 800cd9a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 800cd9c:	68bc      	ldr	r4, [r7, #8]
 800cd9e:	2c00      	cmp	r4, #0
 800cda0:	d107      	bne.n	800cdb2 <__pow5mult+0x56>
 800cda2:	4916      	ldr	r1, [pc, #88]	; (800cdfc <__pow5mult+0xa0>)
 800cda4:	0028      	movs	r0, r5
 800cda6:	f7ff ff41 	bl	800cc2c <__i2b>
 800cdaa:	2300      	movs	r3, #0
 800cdac:	0004      	movs	r4, r0
 800cdae:	60b8      	str	r0, [r7, #8]
 800cdb0:	6003      	str	r3, [r0, #0]
 800cdb2:	2201      	movs	r2, #1
 800cdb4:	9b01      	ldr	r3, [sp, #4]
 800cdb6:	4213      	tst	r3, r2
 800cdb8:	d00a      	beq.n	800cdd0 <__pow5mult+0x74>
 800cdba:	0031      	movs	r1, r6
 800cdbc:	0022      	movs	r2, r4
 800cdbe:	0028      	movs	r0, r5
 800cdc0:	f7ff ff3d 	bl	800cc3e <__multiply>
 800cdc4:	0007      	movs	r7, r0
 800cdc6:	0031      	movs	r1, r6
 800cdc8:	0028      	movs	r0, r5
 800cdca:	f7ff fe51 	bl	800ca70 <_Bfree>
 800cdce:	003e      	movs	r6, r7
 800cdd0:	9b01      	ldr	r3, [sp, #4]
 800cdd2:	105b      	asrs	r3, r3, #1
 800cdd4:	9301      	str	r3, [sp, #4]
 800cdd6:	d00c      	beq.n	800cdf2 <__pow5mult+0x96>
 800cdd8:	6820      	ldr	r0, [r4, #0]
 800cdda:	2800      	cmp	r0, #0
 800cddc:	d107      	bne.n	800cdee <__pow5mult+0x92>
 800cdde:	0022      	movs	r2, r4
 800cde0:	0021      	movs	r1, r4
 800cde2:	0028      	movs	r0, r5
 800cde4:	f7ff ff2b 	bl	800cc3e <__multiply>
 800cde8:	2300      	movs	r3, #0
 800cdea:	6020      	str	r0, [r4, #0]
 800cdec:	6003      	str	r3, [r0, #0]
 800cdee:	0004      	movs	r4, r0
 800cdf0:	e7df      	b.n	800cdb2 <__pow5mult+0x56>
 800cdf2:	0030      	movs	r0, r6
 800cdf4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800cdf6:	46c0      	nop			; (mov r8, r8)
 800cdf8:	0800e4f8 	.word	0x0800e4f8
 800cdfc:	00000271 	.word	0x00000271

0800ce00 <__lshift>:
 800ce00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce02:	000d      	movs	r5, r1
 800ce04:	0017      	movs	r7, r2
 800ce06:	692b      	ldr	r3, [r5, #16]
 800ce08:	1154      	asrs	r4, r2, #5
 800ce0a:	b085      	sub	sp, #20
 800ce0c:	18e3      	adds	r3, r4, r3
 800ce0e:	9301      	str	r3, [sp, #4]
 800ce10:	3301      	adds	r3, #1
 800ce12:	9300      	str	r3, [sp, #0]
 800ce14:	6849      	ldr	r1, [r1, #4]
 800ce16:	68ab      	ldr	r3, [r5, #8]
 800ce18:	9002      	str	r0, [sp, #8]
 800ce1a:	9a00      	ldr	r2, [sp, #0]
 800ce1c:	4293      	cmp	r3, r2
 800ce1e:	db35      	blt.n	800ce8c <__lshift+0x8c>
 800ce20:	9802      	ldr	r0, [sp, #8]
 800ce22:	f7ff fded 	bl	800ca00 <_Balloc>
 800ce26:	2300      	movs	r3, #0
 800ce28:	0002      	movs	r2, r0
 800ce2a:	0006      	movs	r6, r0
 800ce2c:	0019      	movs	r1, r3
 800ce2e:	3214      	adds	r2, #20
 800ce30:	42a3      	cmp	r3, r4
 800ce32:	db2e      	blt.n	800ce92 <__lshift+0x92>
 800ce34:	43e3      	mvns	r3, r4
 800ce36:	17db      	asrs	r3, r3, #31
 800ce38:	401c      	ands	r4, r3
 800ce3a:	002b      	movs	r3, r5
 800ce3c:	00a4      	lsls	r4, r4, #2
 800ce3e:	1914      	adds	r4, r2, r4
 800ce40:	692a      	ldr	r2, [r5, #16]
 800ce42:	3314      	adds	r3, #20
 800ce44:	0092      	lsls	r2, r2, #2
 800ce46:	189a      	adds	r2, r3, r2
 800ce48:	4694      	mov	ip, r2
 800ce4a:	221f      	movs	r2, #31
 800ce4c:	4017      	ands	r7, r2
 800ce4e:	d024      	beq.n	800ce9a <__lshift+0x9a>
 800ce50:	3201      	adds	r2, #1
 800ce52:	1bd2      	subs	r2, r2, r7
 800ce54:	9203      	str	r2, [sp, #12]
 800ce56:	2200      	movs	r2, #0
 800ce58:	6819      	ldr	r1, [r3, #0]
 800ce5a:	0020      	movs	r0, r4
 800ce5c:	40b9      	lsls	r1, r7
 800ce5e:	430a      	orrs	r2, r1
 800ce60:	c404      	stmia	r4!, {r2}
 800ce62:	cb04      	ldmia	r3!, {r2}
 800ce64:	9903      	ldr	r1, [sp, #12]
 800ce66:	40ca      	lsrs	r2, r1
 800ce68:	459c      	cmp	ip, r3
 800ce6a:	d8f5      	bhi.n	800ce58 <__lshift+0x58>
 800ce6c:	6042      	str	r2, [r0, #4]
 800ce6e:	2a00      	cmp	r2, #0
 800ce70:	d002      	beq.n	800ce78 <__lshift+0x78>
 800ce72:	9b01      	ldr	r3, [sp, #4]
 800ce74:	3302      	adds	r3, #2
 800ce76:	9300      	str	r3, [sp, #0]
 800ce78:	9b00      	ldr	r3, [sp, #0]
 800ce7a:	9802      	ldr	r0, [sp, #8]
 800ce7c:	3b01      	subs	r3, #1
 800ce7e:	6133      	str	r3, [r6, #16]
 800ce80:	0029      	movs	r1, r5
 800ce82:	f7ff fdf5 	bl	800ca70 <_Bfree>
 800ce86:	0030      	movs	r0, r6
 800ce88:	b005      	add	sp, #20
 800ce8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce8c:	3101      	adds	r1, #1
 800ce8e:	005b      	lsls	r3, r3, #1
 800ce90:	e7c3      	b.n	800ce1a <__lshift+0x1a>
 800ce92:	0098      	lsls	r0, r3, #2
 800ce94:	5011      	str	r1, [r2, r0]
 800ce96:	3301      	adds	r3, #1
 800ce98:	e7ca      	b.n	800ce30 <__lshift+0x30>
 800ce9a:	cb04      	ldmia	r3!, {r2}
 800ce9c:	c404      	stmia	r4!, {r2}
 800ce9e:	459c      	cmp	ip, r3
 800cea0:	d8fb      	bhi.n	800ce9a <__lshift+0x9a>
 800cea2:	e7e9      	b.n	800ce78 <__lshift+0x78>

0800cea4 <__mcmp>:
 800cea4:	690a      	ldr	r2, [r1, #16]
 800cea6:	6903      	ldr	r3, [r0, #16]
 800cea8:	b530      	push	{r4, r5, lr}
 800ceaa:	1a9b      	subs	r3, r3, r2
 800ceac:	d10d      	bne.n	800ceca <__mcmp+0x26>
 800ceae:	0092      	lsls	r2, r2, #2
 800ceb0:	3014      	adds	r0, #20
 800ceb2:	3114      	adds	r1, #20
 800ceb4:	1884      	adds	r4, r0, r2
 800ceb6:	1889      	adds	r1, r1, r2
 800ceb8:	3c04      	subs	r4, #4
 800ceba:	3904      	subs	r1, #4
 800cebc:	6825      	ldr	r5, [r4, #0]
 800cebe:	680a      	ldr	r2, [r1, #0]
 800cec0:	4295      	cmp	r5, r2
 800cec2:	d004      	beq.n	800cece <__mcmp+0x2a>
 800cec4:	2301      	movs	r3, #1
 800cec6:	4295      	cmp	r5, r2
 800cec8:	d304      	bcc.n	800ced4 <__mcmp+0x30>
 800ceca:	0018      	movs	r0, r3
 800cecc:	bd30      	pop	{r4, r5, pc}
 800cece:	42a0      	cmp	r0, r4
 800ced0:	d3f2      	bcc.n	800ceb8 <__mcmp+0x14>
 800ced2:	e7fa      	b.n	800ceca <__mcmp+0x26>
 800ced4:	425b      	negs	r3, r3
 800ced6:	e7f8      	b.n	800ceca <__mcmp+0x26>

0800ced8 <__mdiff>:
 800ced8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ceda:	000d      	movs	r5, r1
 800cedc:	b085      	sub	sp, #20
 800cede:	0007      	movs	r7, r0
 800cee0:	0011      	movs	r1, r2
 800cee2:	0028      	movs	r0, r5
 800cee4:	0014      	movs	r4, r2
 800cee6:	f7ff ffdd 	bl	800cea4 <__mcmp>
 800ceea:	1e06      	subs	r6, r0, #0
 800ceec:	d108      	bne.n	800cf00 <__mdiff+0x28>
 800ceee:	0001      	movs	r1, r0
 800cef0:	0038      	movs	r0, r7
 800cef2:	f7ff fd85 	bl	800ca00 <_Balloc>
 800cef6:	2301      	movs	r3, #1
 800cef8:	6146      	str	r6, [r0, #20]
 800cefa:	6103      	str	r3, [r0, #16]
 800cefc:	b005      	add	sp, #20
 800cefe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf00:	2301      	movs	r3, #1
 800cf02:	9301      	str	r3, [sp, #4]
 800cf04:	2800      	cmp	r0, #0
 800cf06:	db04      	blt.n	800cf12 <__mdiff+0x3a>
 800cf08:	0023      	movs	r3, r4
 800cf0a:	002c      	movs	r4, r5
 800cf0c:	001d      	movs	r5, r3
 800cf0e:	2300      	movs	r3, #0
 800cf10:	9301      	str	r3, [sp, #4]
 800cf12:	6861      	ldr	r1, [r4, #4]
 800cf14:	0038      	movs	r0, r7
 800cf16:	f7ff fd73 	bl	800ca00 <_Balloc>
 800cf1a:	002f      	movs	r7, r5
 800cf1c:	2200      	movs	r2, #0
 800cf1e:	9b01      	ldr	r3, [sp, #4]
 800cf20:	6926      	ldr	r6, [r4, #16]
 800cf22:	60c3      	str	r3, [r0, #12]
 800cf24:	3414      	adds	r4, #20
 800cf26:	00b3      	lsls	r3, r6, #2
 800cf28:	18e3      	adds	r3, r4, r3
 800cf2a:	9302      	str	r3, [sp, #8]
 800cf2c:	692b      	ldr	r3, [r5, #16]
 800cf2e:	3714      	adds	r7, #20
 800cf30:	009b      	lsls	r3, r3, #2
 800cf32:	18fb      	adds	r3, r7, r3
 800cf34:	9303      	str	r3, [sp, #12]
 800cf36:	0003      	movs	r3, r0
 800cf38:	4694      	mov	ip, r2
 800cf3a:	3314      	adds	r3, #20
 800cf3c:	cc20      	ldmia	r4!, {r5}
 800cf3e:	cf04      	ldmia	r7!, {r2}
 800cf40:	9201      	str	r2, [sp, #4]
 800cf42:	b2aa      	uxth	r2, r5
 800cf44:	4494      	add	ip, r2
 800cf46:	466a      	mov	r2, sp
 800cf48:	4661      	mov	r1, ip
 800cf4a:	8892      	ldrh	r2, [r2, #4]
 800cf4c:	0c2d      	lsrs	r5, r5, #16
 800cf4e:	1a8a      	subs	r2, r1, r2
 800cf50:	9901      	ldr	r1, [sp, #4]
 800cf52:	0c09      	lsrs	r1, r1, #16
 800cf54:	1a69      	subs	r1, r5, r1
 800cf56:	1415      	asrs	r5, r2, #16
 800cf58:	1949      	adds	r1, r1, r5
 800cf5a:	140d      	asrs	r5, r1, #16
 800cf5c:	b292      	uxth	r2, r2
 800cf5e:	0409      	lsls	r1, r1, #16
 800cf60:	430a      	orrs	r2, r1
 800cf62:	601a      	str	r2, [r3, #0]
 800cf64:	9a03      	ldr	r2, [sp, #12]
 800cf66:	46ac      	mov	ip, r5
 800cf68:	3304      	adds	r3, #4
 800cf6a:	42ba      	cmp	r2, r7
 800cf6c:	d8e6      	bhi.n	800cf3c <__mdiff+0x64>
 800cf6e:	9902      	ldr	r1, [sp, #8]
 800cf70:	001a      	movs	r2, r3
 800cf72:	428c      	cmp	r4, r1
 800cf74:	d305      	bcc.n	800cf82 <__mdiff+0xaa>
 800cf76:	3a04      	subs	r2, #4
 800cf78:	6813      	ldr	r3, [r2, #0]
 800cf7a:	2b00      	cmp	r3, #0
 800cf7c:	d00e      	beq.n	800cf9c <__mdiff+0xc4>
 800cf7e:	6106      	str	r6, [r0, #16]
 800cf80:	e7bc      	b.n	800cefc <__mdiff+0x24>
 800cf82:	cc04      	ldmia	r4!, {r2}
 800cf84:	b291      	uxth	r1, r2
 800cf86:	4461      	add	r1, ip
 800cf88:	140d      	asrs	r5, r1, #16
 800cf8a:	0c12      	lsrs	r2, r2, #16
 800cf8c:	1952      	adds	r2, r2, r5
 800cf8e:	1415      	asrs	r5, r2, #16
 800cf90:	b289      	uxth	r1, r1
 800cf92:	0412      	lsls	r2, r2, #16
 800cf94:	430a      	orrs	r2, r1
 800cf96:	46ac      	mov	ip, r5
 800cf98:	c304      	stmia	r3!, {r2}
 800cf9a:	e7e8      	b.n	800cf6e <__mdiff+0x96>
 800cf9c:	3e01      	subs	r6, #1
 800cf9e:	e7ea      	b.n	800cf76 <__mdiff+0x9e>

0800cfa0 <__ulp>:
 800cfa0:	000b      	movs	r3, r1
 800cfa2:	4910      	ldr	r1, [pc, #64]	; (800cfe4 <__ulp+0x44>)
 800cfa4:	b510      	push	{r4, lr}
 800cfa6:	4019      	ands	r1, r3
 800cfa8:	4b0f      	ldr	r3, [pc, #60]	; (800cfe8 <__ulp+0x48>)
 800cfaa:	18c9      	adds	r1, r1, r3
 800cfac:	2900      	cmp	r1, #0
 800cfae:	dd04      	ble.n	800cfba <__ulp+0x1a>
 800cfb0:	2200      	movs	r2, #0
 800cfb2:	000b      	movs	r3, r1
 800cfb4:	0010      	movs	r0, r2
 800cfb6:	0019      	movs	r1, r3
 800cfb8:	bd10      	pop	{r4, pc}
 800cfba:	4249      	negs	r1, r1
 800cfbc:	1509      	asrs	r1, r1, #20
 800cfbe:	2200      	movs	r2, #0
 800cfc0:	2300      	movs	r3, #0
 800cfc2:	2913      	cmp	r1, #19
 800cfc4:	dc04      	bgt.n	800cfd0 <__ulp+0x30>
 800cfc6:	2080      	movs	r0, #128	; 0x80
 800cfc8:	0300      	lsls	r0, r0, #12
 800cfca:	4108      	asrs	r0, r1
 800cfcc:	0003      	movs	r3, r0
 800cfce:	e7f1      	b.n	800cfb4 <__ulp+0x14>
 800cfd0:	3914      	subs	r1, #20
 800cfd2:	2001      	movs	r0, #1
 800cfd4:	291e      	cmp	r1, #30
 800cfd6:	dc02      	bgt.n	800cfde <__ulp+0x3e>
 800cfd8:	241f      	movs	r4, #31
 800cfda:	1a61      	subs	r1, r4, r1
 800cfdc:	4088      	lsls	r0, r1
 800cfde:	0002      	movs	r2, r0
 800cfe0:	e7e8      	b.n	800cfb4 <__ulp+0x14>
 800cfe2:	46c0      	nop			; (mov r8, r8)
 800cfe4:	7ff00000 	.word	0x7ff00000
 800cfe8:	fcc00000 	.word	0xfcc00000

0800cfec <__b2d>:
 800cfec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cfee:	0006      	movs	r6, r0
 800cff0:	6903      	ldr	r3, [r0, #16]
 800cff2:	3614      	adds	r6, #20
 800cff4:	009b      	lsls	r3, r3, #2
 800cff6:	18f3      	adds	r3, r6, r3
 800cff8:	1f1d      	subs	r5, r3, #4
 800cffa:	682c      	ldr	r4, [r5, #0]
 800cffc:	000f      	movs	r7, r1
 800cffe:	0020      	movs	r0, r4
 800d000:	9301      	str	r3, [sp, #4]
 800d002:	f7ff fdca 	bl	800cb9a <__hi0bits>
 800d006:	2320      	movs	r3, #32
 800d008:	1a1b      	subs	r3, r3, r0
 800d00a:	603b      	str	r3, [r7, #0]
 800d00c:	491c      	ldr	r1, [pc, #112]	; (800d080 <__b2d+0x94>)
 800d00e:	280a      	cmp	r0, #10
 800d010:	dc16      	bgt.n	800d040 <__b2d+0x54>
 800d012:	230b      	movs	r3, #11
 800d014:	0027      	movs	r7, r4
 800d016:	1a1b      	subs	r3, r3, r0
 800d018:	40df      	lsrs	r7, r3
 800d01a:	4339      	orrs	r1, r7
 800d01c:	469c      	mov	ip, r3
 800d01e:	000b      	movs	r3, r1
 800d020:	2100      	movs	r1, #0
 800d022:	42ae      	cmp	r6, r5
 800d024:	d202      	bcs.n	800d02c <__b2d+0x40>
 800d026:	9901      	ldr	r1, [sp, #4]
 800d028:	3908      	subs	r1, #8
 800d02a:	6809      	ldr	r1, [r1, #0]
 800d02c:	3015      	adds	r0, #21
 800d02e:	4084      	lsls	r4, r0
 800d030:	4660      	mov	r0, ip
 800d032:	40c1      	lsrs	r1, r0
 800d034:	430c      	orrs	r4, r1
 800d036:	0022      	movs	r2, r4
 800d038:	0010      	movs	r0, r2
 800d03a:	0019      	movs	r1, r3
 800d03c:	b003      	add	sp, #12
 800d03e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d040:	2700      	movs	r7, #0
 800d042:	42ae      	cmp	r6, r5
 800d044:	d202      	bcs.n	800d04c <__b2d+0x60>
 800d046:	9d01      	ldr	r5, [sp, #4]
 800d048:	3d08      	subs	r5, #8
 800d04a:	682f      	ldr	r7, [r5, #0]
 800d04c:	380b      	subs	r0, #11
 800d04e:	4684      	mov	ip, r0
 800d050:	1e03      	subs	r3, r0, #0
 800d052:	d012      	beq.n	800d07a <__b2d+0x8e>
 800d054:	409c      	lsls	r4, r3
 800d056:	2020      	movs	r0, #32
 800d058:	4321      	orrs	r1, r4
 800d05a:	003c      	movs	r4, r7
 800d05c:	1ac0      	subs	r0, r0, r3
 800d05e:	40c4      	lsrs	r4, r0
 800d060:	4321      	orrs	r1, r4
 800d062:	000b      	movs	r3, r1
 800d064:	2100      	movs	r1, #0
 800d066:	42b5      	cmp	r5, r6
 800d068:	d901      	bls.n	800d06e <__b2d+0x82>
 800d06a:	3d04      	subs	r5, #4
 800d06c:	6829      	ldr	r1, [r5, #0]
 800d06e:	4664      	mov	r4, ip
 800d070:	40c1      	lsrs	r1, r0
 800d072:	40a7      	lsls	r7, r4
 800d074:	430f      	orrs	r7, r1
 800d076:	003a      	movs	r2, r7
 800d078:	e7de      	b.n	800d038 <__b2d+0x4c>
 800d07a:	4321      	orrs	r1, r4
 800d07c:	000b      	movs	r3, r1
 800d07e:	e7fa      	b.n	800d076 <__b2d+0x8a>
 800d080:	3ff00000 	.word	0x3ff00000

0800d084 <__d2b>:
 800d084:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d086:	001d      	movs	r5, r3
 800d088:	2101      	movs	r1, #1
 800d08a:	0014      	movs	r4, r2
 800d08c:	9f08      	ldr	r7, [sp, #32]
 800d08e:	f7ff fcb7 	bl	800ca00 <_Balloc>
 800d092:	032b      	lsls	r3, r5, #12
 800d094:	006d      	lsls	r5, r5, #1
 800d096:	0006      	movs	r6, r0
 800d098:	0b1b      	lsrs	r3, r3, #12
 800d09a:	0d6d      	lsrs	r5, r5, #21
 800d09c:	d124      	bne.n	800d0e8 <__d2b+0x64>
 800d09e:	9301      	str	r3, [sp, #4]
 800d0a0:	2c00      	cmp	r4, #0
 800d0a2:	d027      	beq.n	800d0f4 <__d2b+0x70>
 800d0a4:	4668      	mov	r0, sp
 800d0a6:	9400      	str	r4, [sp, #0]
 800d0a8:	f7ff fd91 	bl	800cbce <__lo0bits>
 800d0ac:	9c00      	ldr	r4, [sp, #0]
 800d0ae:	2800      	cmp	r0, #0
 800d0b0:	d01e      	beq.n	800d0f0 <__d2b+0x6c>
 800d0b2:	9b01      	ldr	r3, [sp, #4]
 800d0b4:	2120      	movs	r1, #32
 800d0b6:	001a      	movs	r2, r3
 800d0b8:	1a09      	subs	r1, r1, r0
 800d0ba:	408a      	lsls	r2, r1
 800d0bc:	40c3      	lsrs	r3, r0
 800d0be:	4322      	orrs	r2, r4
 800d0c0:	6172      	str	r2, [r6, #20]
 800d0c2:	9301      	str	r3, [sp, #4]
 800d0c4:	9c01      	ldr	r4, [sp, #4]
 800d0c6:	61b4      	str	r4, [r6, #24]
 800d0c8:	1e63      	subs	r3, r4, #1
 800d0ca:	419c      	sbcs	r4, r3
 800d0cc:	3401      	adds	r4, #1
 800d0ce:	6134      	str	r4, [r6, #16]
 800d0d0:	2d00      	cmp	r5, #0
 800d0d2:	d018      	beq.n	800d106 <__d2b+0x82>
 800d0d4:	4b12      	ldr	r3, [pc, #72]	; (800d120 <__d2b+0x9c>)
 800d0d6:	18ed      	adds	r5, r5, r3
 800d0d8:	2335      	movs	r3, #53	; 0x35
 800d0da:	182d      	adds	r5, r5, r0
 800d0dc:	603d      	str	r5, [r7, #0]
 800d0de:	1a18      	subs	r0, r3, r0
 800d0e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d0e2:	6018      	str	r0, [r3, #0]
 800d0e4:	0030      	movs	r0, r6
 800d0e6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800d0e8:	2280      	movs	r2, #128	; 0x80
 800d0ea:	0352      	lsls	r2, r2, #13
 800d0ec:	4313      	orrs	r3, r2
 800d0ee:	e7d6      	b.n	800d09e <__d2b+0x1a>
 800d0f0:	6174      	str	r4, [r6, #20]
 800d0f2:	e7e7      	b.n	800d0c4 <__d2b+0x40>
 800d0f4:	a801      	add	r0, sp, #4
 800d0f6:	f7ff fd6a 	bl	800cbce <__lo0bits>
 800d0fa:	2401      	movs	r4, #1
 800d0fc:	9b01      	ldr	r3, [sp, #4]
 800d0fe:	6134      	str	r4, [r6, #16]
 800d100:	6173      	str	r3, [r6, #20]
 800d102:	3020      	adds	r0, #32
 800d104:	e7e4      	b.n	800d0d0 <__d2b+0x4c>
 800d106:	4b07      	ldr	r3, [pc, #28]	; (800d124 <__d2b+0xa0>)
 800d108:	18c0      	adds	r0, r0, r3
 800d10a:	4b07      	ldr	r3, [pc, #28]	; (800d128 <__d2b+0xa4>)
 800d10c:	6038      	str	r0, [r7, #0]
 800d10e:	18e3      	adds	r3, r4, r3
 800d110:	009b      	lsls	r3, r3, #2
 800d112:	18f3      	adds	r3, r6, r3
 800d114:	6958      	ldr	r0, [r3, #20]
 800d116:	f7ff fd40 	bl	800cb9a <__hi0bits>
 800d11a:	0164      	lsls	r4, r4, #5
 800d11c:	1a20      	subs	r0, r4, r0
 800d11e:	e7df      	b.n	800d0e0 <__d2b+0x5c>
 800d120:	fffffbcd 	.word	0xfffffbcd
 800d124:	fffffbce 	.word	0xfffffbce
 800d128:	3fffffff 	.word	0x3fffffff

0800d12c <__ratio>:
 800d12c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d12e:	b085      	sub	sp, #20
 800d130:	000f      	movs	r7, r1
 800d132:	a902      	add	r1, sp, #8
 800d134:	0006      	movs	r6, r0
 800d136:	f7ff ff59 	bl	800cfec <__b2d>
 800d13a:	0004      	movs	r4, r0
 800d13c:	000d      	movs	r5, r1
 800d13e:	0038      	movs	r0, r7
 800d140:	a903      	add	r1, sp, #12
 800d142:	9400      	str	r4, [sp, #0]
 800d144:	9501      	str	r5, [sp, #4]
 800d146:	f7ff ff51 	bl	800cfec <__b2d>
 800d14a:	6936      	ldr	r6, [r6, #16]
 800d14c:	693f      	ldr	r7, [r7, #16]
 800d14e:	0002      	movs	r2, r0
 800d150:	1bf7      	subs	r7, r6, r7
 800d152:	017e      	lsls	r6, r7, #5
 800d154:	46b4      	mov	ip, r6
 800d156:	9f03      	ldr	r7, [sp, #12]
 800d158:	9e02      	ldr	r6, [sp, #8]
 800d15a:	000b      	movs	r3, r1
 800d15c:	1bf6      	subs	r6, r6, r7
 800d15e:	4466      	add	r6, ip
 800d160:	0537      	lsls	r7, r6, #20
 800d162:	2e00      	cmp	r6, #0
 800d164:	dd07      	ble.n	800d176 <__ratio+0x4a>
 800d166:	1979      	adds	r1, r7, r5
 800d168:	9101      	str	r1, [sp, #4]
 800d16a:	9800      	ldr	r0, [sp, #0]
 800d16c:	9901      	ldr	r1, [sp, #4]
 800d16e:	f7f4 fc19 	bl	80019a4 <__aeabi_ddiv>
 800d172:	b005      	add	sp, #20
 800d174:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d176:	1bcb      	subs	r3, r1, r7
 800d178:	e7f7      	b.n	800d16a <__ratio+0x3e>

0800d17a <__copybits>:
 800d17a:	0013      	movs	r3, r2
 800d17c:	3901      	subs	r1, #1
 800d17e:	b510      	push	{r4, lr}
 800d180:	1149      	asrs	r1, r1, #5
 800d182:	6912      	ldr	r2, [r2, #16]
 800d184:	3101      	adds	r1, #1
 800d186:	0089      	lsls	r1, r1, #2
 800d188:	3314      	adds	r3, #20
 800d18a:	0092      	lsls	r2, r2, #2
 800d18c:	1841      	adds	r1, r0, r1
 800d18e:	189a      	adds	r2, r3, r2
 800d190:	429a      	cmp	r2, r3
 800d192:	d803      	bhi.n	800d19c <__copybits+0x22>
 800d194:	2300      	movs	r3, #0
 800d196:	4281      	cmp	r1, r0
 800d198:	d803      	bhi.n	800d1a2 <__copybits+0x28>
 800d19a:	bd10      	pop	{r4, pc}
 800d19c:	cb10      	ldmia	r3!, {r4}
 800d19e:	c010      	stmia	r0!, {r4}
 800d1a0:	e7f6      	b.n	800d190 <__copybits+0x16>
 800d1a2:	c008      	stmia	r0!, {r3}
 800d1a4:	e7f7      	b.n	800d196 <__copybits+0x1c>

0800d1a6 <__any_on>:
 800d1a6:	0002      	movs	r2, r0
 800d1a8:	6900      	ldr	r0, [r0, #16]
 800d1aa:	b510      	push	{r4, lr}
 800d1ac:	3214      	adds	r2, #20
 800d1ae:	114b      	asrs	r3, r1, #5
 800d1b0:	4298      	cmp	r0, r3
 800d1b2:	db12      	blt.n	800d1da <__any_on+0x34>
 800d1b4:	dd0b      	ble.n	800d1ce <__any_on+0x28>
 800d1b6:	201f      	movs	r0, #31
 800d1b8:	4001      	ands	r1, r0
 800d1ba:	d008      	beq.n	800d1ce <__any_on+0x28>
 800d1bc:	0098      	lsls	r0, r3, #2
 800d1be:	5884      	ldr	r4, [r0, r2]
 800d1c0:	0020      	movs	r0, r4
 800d1c2:	40c8      	lsrs	r0, r1
 800d1c4:	4088      	lsls	r0, r1
 800d1c6:	0001      	movs	r1, r0
 800d1c8:	2001      	movs	r0, #1
 800d1ca:	428c      	cmp	r4, r1
 800d1cc:	d104      	bne.n	800d1d8 <__any_on+0x32>
 800d1ce:	009b      	lsls	r3, r3, #2
 800d1d0:	18d3      	adds	r3, r2, r3
 800d1d2:	4293      	cmp	r3, r2
 800d1d4:	d803      	bhi.n	800d1de <__any_on+0x38>
 800d1d6:	2000      	movs	r0, #0
 800d1d8:	bd10      	pop	{r4, pc}
 800d1da:	0003      	movs	r3, r0
 800d1dc:	e7f7      	b.n	800d1ce <__any_on+0x28>
 800d1de:	3b04      	subs	r3, #4
 800d1e0:	6819      	ldr	r1, [r3, #0]
 800d1e2:	2900      	cmp	r1, #0
 800d1e4:	d0f5      	beq.n	800d1d2 <__any_on+0x2c>
 800d1e6:	2001      	movs	r0, #1
 800d1e8:	e7f6      	b.n	800d1d8 <__any_on+0x32>

0800d1ea <_calloc_r>:
 800d1ea:	434a      	muls	r2, r1
 800d1ec:	b570      	push	{r4, r5, r6, lr}
 800d1ee:	0011      	movs	r1, r2
 800d1f0:	0014      	movs	r4, r2
 800d1f2:	f7fc f963 	bl	80094bc <_malloc_r>
 800d1f6:	1e05      	subs	r5, r0, #0
 800d1f8:	d003      	beq.n	800d202 <_calloc_r+0x18>
 800d1fa:	0022      	movs	r2, r4
 800d1fc:	2100      	movs	r1, #0
 800d1fe:	f7fc f955 	bl	80094ac <memset>
 800d202:	0028      	movs	r0, r5
 800d204:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d208 <_free_r>:
 800d208:	b570      	push	{r4, r5, r6, lr}
 800d20a:	0005      	movs	r5, r0
 800d20c:	2900      	cmp	r1, #0
 800d20e:	d010      	beq.n	800d232 <_free_r+0x2a>
 800d210:	1f0c      	subs	r4, r1, #4
 800d212:	6823      	ldr	r3, [r4, #0]
 800d214:	2b00      	cmp	r3, #0
 800d216:	da00      	bge.n	800d21a <_free_r+0x12>
 800d218:	18e4      	adds	r4, r4, r3
 800d21a:	0028      	movs	r0, r5
 800d21c:	f7ff fbee 	bl	800c9fc <__malloc_lock>
 800d220:	4a1d      	ldr	r2, [pc, #116]	; (800d298 <_free_r+0x90>)
 800d222:	6813      	ldr	r3, [r2, #0]
 800d224:	2b00      	cmp	r3, #0
 800d226:	d105      	bne.n	800d234 <_free_r+0x2c>
 800d228:	6063      	str	r3, [r4, #4]
 800d22a:	6014      	str	r4, [r2, #0]
 800d22c:	0028      	movs	r0, r5
 800d22e:	f7ff fbe6 	bl	800c9fe <__malloc_unlock>
 800d232:	bd70      	pop	{r4, r5, r6, pc}
 800d234:	42a3      	cmp	r3, r4
 800d236:	d909      	bls.n	800d24c <_free_r+0x44>
 800d238:	6821      	ldr	r1, [r4, #0]
 800d23a:	1860      	adds	r0, r4, r1
 800d23c:	4283      	cmp	r3, r0
 800d23e:	d1f3      	bne.n	800d228 <_free_r+0x20>
 800d240:	6818      	ldr	r0, [r3, #0]
 800d242:	685b      	ldr	r3, [r3, #4]
 800d244:	1841      	adds	r1, r0, r1
 800d246:	6021      	str	r1, [r4, #0]
 800d248:	e7ee      	b.n	800d228 <_free_r+0x20>
 800d24a:	0013      	movs	r3, r2
 800d24c:	685a      	ldr	r2, [r3, #4]
 800d24e:	2a00      	cmp	r2, #0
 800d250:	d001      	beq.n	800d256 <_free_r+0x4e>
 800d252:	42a2      	cmp	r2, r4
 800d254:	d9f9      	bls.n	800d24a <_free_r+0x42>
 800d256:	6819      	ldr	r1, [r3, #0]
 800d258:	1858      	adds	r0, r3, r1
 800d25a:	42a0      	cmp	r0, r4
 800d25c:	d10b      	bne.n	800d276 <_free_r+0x6e>
 800d25e:	6820      	ldr	r0, [r4, #0]
 800d260:	1809      	adds	r1, r1, r0
 800d262:	1858      	adds	r0, r3, r1
 800d264:	6019      	str	r1, [r3, #0]
 800d266:	4282      	cmp	r2, r0
 800d268:	d1e0      	bne.n	800d22c <_free_r+0x24>
 800d26a:	6810      	ldr	r0, [r2, #0]
 800d26c:	6852      	ldr	r2, [r2, #4]
 800d26e:	1841      	adds	r1, r0, r1
 800d270:	6019      	str	r1, [r3, #0]
 800d272:	605a      	str	r2, [r3, #4]
 800d274:	e7da      	b.n	800d22c <_free_r+0x24>
 800d276:	42a0      	cmp	r0, r4
 800d278:	d902      	bls.n	800d280 <_free_r+0x78>
 800d27a:	230c      	movs	r3, #12
 800d27c:	602b      	str	r3, [r5, #0]
 800d27e:	e7d5      	b.n	800d22c <_free_r+0x24>
 800d280:	6821      	ldr	r1, [r4, #0]
 800d282:	1860      	adds	r0, r4, r1
 800d284:	4282      	cmp	r2, r0
 800d286:	d103      	bne.n	800d290 <_free_r+0x88>
 800d288:	6810      	ldr	r0, [r2, #0]
 800d28a:	6852      	ldr	r2, [r2, #4]
 800d28c:	1841      	adds	r1, r0, r1
 800d28e:	6021      	str	r1, [r4, #0]
 800d290:	6062      	str	r2, [r4, #4]
 800d292:	605c      	str	r4, [r3, #4]
 800d294:	e7ca      	b.n	800d22c <_free_r+0x24>
 800d296:	46c0      	nop			; (mov r8, r8)
 800d298:	200003ac 	.word	0x200003ac

0800d29c <__ssputs_r>:
 800d29c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d29e:	688e      	ldr	r6, [r1, #8]
 800d2a0:	b085      	sub	sp, #20
 800d2a2:	0007      	movs	r7, r0
 800d2a4:	000c      	movs	r4, r1
 800d2a6:	9203      	str	r2, [sp, #12]
 800d2a8:	9301      	str	r3, [sp, #4]
 800d2aa:	429e      	cmp	r6, r3
 800d2ac:	d83c      	bhi.n	800d328 <__ssputs_r+0x8c>
 800d2ae:	2390      	movs	r3, #144	; 0x90
 800d2b0:	898a      	ldrh	r2, [r1, #12]
 800d2b2:	00db      	lsls	r3, r3, #3
 800d2b4:	421a      	tst	r2, r3
 800d2b6:	d034      	beq.n	800d322 <__ssputs_r+0x86>
 800d2b8:	2503      	movs	r5, #3
 800d2ba:	6909      	ldr	r1, [r1, #16]
 800d2bc:	6823      	ldr	r3, [r4, #0]
 800d2be:	1a5b      	subs	r3, r3, r1
 800d2c0:	9302      	str	r3, [sp, #8]
 800d2c2:	6963      	ldr	r3, [r4, #20]
 800d2c4:	9802      	ldr	r0, [sp, #8]
 800d2c6:	435d      	muls	r5, r3
 800d2c8:	0feb      	lsrs	r3, r5, #31
 800d2ca:	195d      	adds	r5, r3, r5
 800d2cc:	9b01      	ldr	r3, [sp, #4]
 800d2ce:	106d      	asrs	r5, r5, #1
 800d2d0:	3301      	adds	r3, #1
 800d2d2:	181b      	adds	r3, r3, r0
 800d2d4:	42ab      	cmp	r3, r5
 800d2d6:	d900      	bls.n	800d2da <__ssputs_r+0x3e>
 800d2d8:	001d      	movs	r5, r3
 800d2da:	0553      	lsls	r3, r2, #21
 800d2dc:	d532      	bpl.n	800d344 <__ssputs_r+0xa8>
 800d2de:	0029      	movs	r1, r5
 800d2e0:	0038      	movs	r0, r7
 800d2e2:	f7fc f8eb 	bl	80094bc <_malloc_r>
 800d2e6:	1e06      	subs	r6, r0, #0
 800d2e8:	d109      	bne.n	800d2fe <__ssputs_r+0x62>
 800d2ea:	230c      	movs	r3, #12
 800d2ec:	603b      	str	r3, [r7, #0]
 800d2ee:	2340      	movs	r3, #64	; 0x40
 800d2f0:	2001      	movs	r0, #1
 800d2f2:	89a2      	ldrh	r2, [r4, #12]
 800d2f4:	4240      	negs	r0, r0
 800d2f6:	4313      	orrs	r3, r2
 800d2f8:	81a3      	strh	r3, [r4, #12]
 800d2fa:	b005      	add	sp, #20
 800d2fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2fe:	9a02      	ldr	r2, [sp, #8]
 800d300:	6921      	ldr	r1, [r4, #16]
 800d302:	f7ff fb72 	bl	800c9ea <memcpy>
 800d306:	89a3      	ldrh	r3, [r4, #12]
 800d308:	4a14      	ldr	r2, [pc, #80]	; (800d35c <__ssputs_r+0xc0>)
 800d30a:	401a      	ands	r2, r3
 800d30c:	2380      	movs	r3, #128	; 0x80
 800d30e:	4313      	orrs	r3, r2
 800d310:	81a3      	strh	r3, [r4, #12]
 800d312:	9b02      	ldr	r3, [sp, #8]
 800d314:	6126      	str	r6, [r4, #16]
 800d316:	18f6      	adds	r6, r6, r3
 800d318:	6026      	str	r6, [r4, #0]
 800d31a:	6165      	str	r5, [r4, #20]
 800d31c:	9e01      	ldr	r6, [sp, #4]
 800d31e:	1aed      	subs	r5, r5, r3
 800d320:	60a5      	str	r5, [r4, #8]
 800d322:	9b01      	ldr	r3, [sp, #4]
 800d324:	429e      	cmp	r6, r3
 800d326:	d900      	bls.n	800d32a <__ssputs_r+0x8e>
 800d328:	9e01      	ldr	r6, [sp, #4]
 800d32a:	0032      	movs	r2, r6
 800d32c:	9903      	ldr	r1, [sp, #12]
 800d32e:	6820      	ldr	r0, [r4, #0]
 800d330:	f000 faa8 	bl	800d884 <memmove>
 800d334:	68a3      	ldr	r3, [r4, #8]
 800d336:	2000      	movs	r0, #0
 800d338:	1b9b      	subs	r3, r3, r6
 800d33a:	60a3      	str	r3, [r4, #8]
 800d33c:	6823      	ldr	r3, [r4, #0]
 800d33e:	199e      	adds	r6, r3, r6
 800d340:	6026      	str	r6, [r4, #0]
 800d342:	e7da      	b.n	800d2fa <__ssputs_r+0x5e>
 800d344:	002a      	movs	r2, r5
 800d346:	0038      	movs	r0, r7
 800d348:	f000 faaf 	bl	800d8aa <_realloc_r>
 800d34c:	1e06      	subs	r6, r0, #0
 800d34e:	d1e0      	bne.n	800d312 <__ssputs_r+0x76>
 800d350:	6921      	ldr	r1, [r4, #16]
 800d352:	0038      	movs	r0, r7
 800d354:	f7ff ff58 	bl	800d208 <_free_r>
 800d358:	e7c7      	b.n	800d2ea <__ssputs_r+0x4e>
 800d35a:	46c0      	nop			; (mov r8, r8)
 800d35c:	fffffb7f 	.word	0xfffffb7f

0800d360 <_svfiprintf_r>:
 800d360:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d362:	b0a1      	sub	sp, #132	; 0x84
 800d364:	9003      	str	r0, [sp, #12]
 800d366:	001d      	movs	r5, r3
 800d368:	898b      	ldrh	r3, [r1, #12]
 800d36a:	000f      	movs	r7, r1
 800d36c:	0016      	movs	r6, r2
 800d36e:	061b      	lsls	r3, r3, #24
 800d370:	d511      	bpl.n	800d396 <_svfiprintf_r+0x36>
 800d372:	690b      	ldr	r3, [r1, #16]
 800d374:	2b00      	cmp	r3, #0
 800d376:	d10e      	bne.n	800d396 <_svfiprintf_r+0x36>
 800d378:	2140      	movs	r1, #64	; 0x40
 800d37a:	f7fc f89f 	bl	80094bc <_malloc_r>
 800d37e:	6038      	str	r0, [r7, #0]
 800d380:	6138      	str	r0, [r7, #16]
 800d382:	2800      	cmp	r0, #0
 800d384:	d105      	bne.n	800d392 <_svfiprintf_r+0x32>
 800d386:	230c      	movs	r3, #12
 800d388:	9a03      	ldr	r2, [sp, #12]
 800d38a:	3801      	subs	r0, #1
 800d38c:	6013      	str	r3, [r2, #0]
 800d38e:	b021      	add	sp, #132	; 0x84
 800d390:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d392:	2340      	movs	r3, #64	; 0x40
 800d394:	617b      	str	r3, [r7, #20]
 800d396:	2300      	movs	r3, #0
 800d398:	ac08      	add	r4, sp, #32
 800d39a:	6163      	str	r3, [r4, #20]
 800d39c:	3320      	adds	r3, #32
 800d39e:	7663      	strb	r3, [r4, #25]
 800d3a0:	3310      	adds	r3, #16
 800d3a2:	76a3      	strb	r3, [r4, #26]
 800d3a4:	9507      	str	r5, [sp, #28]
 800d3a6:	0035      	movs	r5, r6
 800d3a8:	782b      	ldrb	r3, [r5, #0]
 800d3aa:	2b00      	cmp	r3, #0
 800d3ac:	d001      	beq.n	800d3b2 <_svfiprintf_r+0x52>
 800d3ae:	2b25      	cmp	r3, #37	; 0x25
 800d3b0:	d146      	bne.n	800d440 <_svfiprintf_r+0xe0>
 800d3b2:	1bab      	subs	r3, r5, r6
 800d3b4:	9305      	str	r3, [sp, #20]
 800d3b6:	d00c      	beq.n	800d3d2 <_svfiprintf_r+0x72>
 800d3b8:	0032      	movs	r2, r6
 800d3ba:	0039      	movs	r1, r7
 800d3bc:	9803      	ldr	r0, [sp, #12]
 800d3be:	f7ff ff6d 	bl	800d29c <__ssputs_r>
 800d3c2:	1c43      	adds	r3, r0, #1
 800d3c4:	d100      	bne.n	800d3c8 <_svfiprintf_r+0x68>
 800d3c6:	e0ae      	b.n	800d526 <_svfiprintf_r+0x1c6>
 800d3c8:	6962      	ldr	r2, [r4, #20]
 800d3ca:	9b05      	ldr	r3, [sp, #20]
 800d3cc:	4694      	mov	ip, r2
 800d3ce:	4463      	add	r3, ip
 800d3d0:	6163      	str	r3, [r4, #20]
 800d3d2:	782b      	ldrb	r3, [r5, #0]
 800d3d4:	2b00      	cmp	r3, #0
 800d3d6:	d100      	bne.n	800d3da <_svfiprintf_r+0x7a>
 800d3d8:	e0a5      	b.n	800d526 <_svfiprintf_r+0x1c6>
 800d3da:	2201      	movs	r2, #1
 800d3dc:	2300      	movs	r3, #0
 800d3de:	4252      	negs	r2, r2
 800d3e0:	6062      	str	r2, [r4, #4]
 800d3e2:	a904      	add	r1, sp, #16
 800d3e4:	3254      	adds	r2, #84	; 0x54
 800d3e6:	1852      	adds	r2, r2, r1
 800d3e8:	1c6e      	adds	r6, r5, #1
 800d3ea:	6023      	str	r3, [r4, #0]
 800d3ec:	60e3      	str	r3, [r4, #12]
 800d3ee:	60a3      	str	r3, [r4, #8]
 800d3f0:	7013      	strb	r3, [r2, #0]
 800d3f2:	65a3      	str	r3, [r4, #88]	; 0x58
 800d3f4:	7831      	ldrb	r1, [r6, #0]
 800d3f6:	2205      	movs	r2, #5
 800d3f8:	4853      	ldr	r0, [pc, #332]	; (800d548 <_svfiprintf_r+0x1e8>)
 800d3fa:	f7ff faeb 	bl	800c9d4 <memchr>
 800d3fe:	1c75      	adds	r5, r6, #1
 800d400:	2800      	cmp	r0, #0
 800d402:	d11f      	bne.n	800d444 <_svfiprintf_r+0xe4>
 800d404:	6822      	ldr	r2, [r4, #0]
 800d406:	06d3      	lsls	r3, r2, #27
 800d408:	d504      	bpl.n	800d414 <_svfiprintf_r+0xb4>
 800d40a:	2353      	movs	r3, #83	; 0x53
 800d40c:	a904      	add	r1, sp, #16
 800d40e:	185b      	adds	r3, r3, r1
 800d410:	2120      	movs	r1, #32
 800d412:	7019      	strb	r1, [r3, #0]
 800d414:	0713      	lsls	r3, r2, #28
 800d416:	d504      	bpl.n	800d422 <_svfiprintf_r+0xc2>
 800d418:	2353      	movs	r3, #83	; 0x53
 800d41a:	a904      	add	r1, sp, #16
 800d41c:	185b      	adds	r3, r3, r1
 800d41e:	212b      	movs	r1, #43	; 0x2b
 800d420:	7019      	strb	r1, [r3, #0]
 800d422:	7833      	ldrb	r3, [r6, #0]
 800d424:	2b2a      	cmp	r3, #42	; 0x2a
 800d426:	d016      	beq.n	800d456 <_svfiprintf_r+0xf6>
 800d428:	0035      	movs	r5, r6
 800d42a:	2100      	movs	r1, #0
 800d42c:	200a      	movs	r0, #10
 800d42e:	68e3      	ldr	r3, [r4, #12]
 800d430:	782a      	ldrb	r2, [r5, #0]
 800d432:	1c6e      	adds	r6, r5, #1
 800d434:	3a30      	subs	r2, #48	; 0x30
 800d436:	2a09      	cmp	r2, #9
 800d438:	d94e      	bls.n	800d4d8 <_svfiprintf_r+0x178>
 800d43a:	2900      	cmp	r1, #0
 800d43c:	d018      	beq.n	800d470 <_svfiprintf_r+0x110>
 800d43e:	e010      	b.n	800d462 <_svfiprintf_r+0x102>
 800d440:	3501      	adds	r5, #1
 800d442:	e7b1      	b.n	800d3a8 <_svfiprintf_r+0x48>
 800d444:	4b40      	ldr	r3, [pc, #256]	; (800d548 <_svfiprintf_r+0x1e8>)
 800d446:	6822      	ldr	r2, [r4, #0]
 800d448:	1ac0      	subs	r0, r0, r3
 800d44a:	2301      	movs	r3, #1
 800d44c:	4083      	lsls	r3, r0
 800d44e:	4313      	orrs	r3, r2
 800d450:	6023      	str	r3, [r4, #0]
 800d452:	002e      	movs	r6, r5
 800d454:	e7ce      	b.n	800d3f4 <_svfiprintf_r+0x94>
 800d456:	9b07      	ldr	r3, [sp, #28]
 800d458:	1d19      	adds	r1, r3, #4
 800d45a:	681b      	ldr	r3, [r3, #0]
 800d45c:	9107      	str	r1, [sp, #28]
 800d45e:	2b00      	cmp	r3, #0
 800d460:	db01      	blt.n	800d466 <_svfiprintf_r+0x106>
 800d462:	930b      	str	r3, [sp, #44]	; 0x2c
 800d464:	e004      	b.n	800d470 <_svfiprintf_r+0x110>
 800d466:	425b      	negs	r3, r3
 800d468:	60e3      	str	r3, [r4, #12]
 800d46a:	2302      	movs	r3, #2
 800d46c:	4313      	orrs	r3, r2
 800d46e:	6023      	str	r3, [r4, #0]
 800d470:	782b      	ldrb	r3, [r5, #0]
 800d472:	2b2e      	cmp	r3, #46	; 0x2e
 800d474:	d10a      	bne.n	800d48c <_svfiprintf_r+0x12c>
 800d476:	786b      	ldrb	r3, [r5, #1]
 800d478:	2b2a      	cmp	r3, #42	; 0x2a
 800d47a:	d135      	bne.n	800d4e8 <_svfiprintf_r+0x188>
 800d47c:	9b07      	ldr	r3, [sp, #28]
 800d47e:	3502      	adds	r5, #2
 800d480:	1d1a      	adds	r2, r3, #4
 800d482:	681b      	ldr	r3, [r3, #0]
 800d484:	9207      	str	r2, [sp, #28]
 800d486:	2b00      	cmp	r3, #0
 800d488:	db2b      	blt.n	800d4e2 <_svfiprintf_r+0x182>
 800d48a:	9309      	str	r3, [sp, #36]	; 0x24
 800d48c:	4e2f      	ldr	r6, [pc, #188]	; (800d54c <_svfiprintf_r+0x1ec>)
 800d48e:	7829      	ldrb	r1, [r5, #0]
 800d490:	2203      	movs	r2, #3
 800d492:	0030      	movs	r0, r6
 800d494:	f7ff fa9e 	bl	800c9d4 <memchr>
 800d498:	2800      	cmp	r0, #0
 800d49a:	d006      	beq.n	800d4aa <_svfiprintf_r+0x14a>
 800d49c:	2340      	movs	r3, #64	; 0x40
 800d49e:	1b80      	subs	r0, r0, r6
 800d4a0:	4083      	lsls	r3, r0
 800d4a2:	6822      	ldr	r2, [r4, #0]
 800d4a4:	3501      	adds	r5, #1
 800d4a6:	4313      	orrs	r3, r2
 800d4a8:	6023      	str	r3, [r4, #0]
 800d4aa:	7829      	ldrb	r1, [r5, #0]
 800d4ac:	2206      	movs	r2, #6
 800d4ae:	4828      	ldr	r0, [pc, #160]	; (800d550 <_svfiprintf_r+0x1f0>)
 800d4b0:	1c6e      	adds	r6, r5, #1
 800d4b2:	7621      	strb	r1, [r4, #24]
 800d4b4:	f7ff fa8e 	bl	800c9d4 <memchr>
 800d4b8:	2800      	cmp	r0, #0
 800d4ba:	d03c      	beq.n	800d536 <_svfiprintf_r+0x1d6>
 800d4bc:	4b25      	ldr	r3, [pc, #148]	; (800d554 <_svfiprintf_r+0x1f4>)
 800d4be:	2b00      	cmp	r3, #0
 800d4c0:	d125      	bne.n	800d50e <_svfiprintf_r+0x1ae>
 800d4c2:	2207      	movs	r2, #7
 800d4c4:	9b07      	ldr	r3, [sp, #28]
 800d4c6:	3307      	adds	r3, #7
 800d4c8:	4393      	bics	r3, r2
 800d4ca:	3308      	adds	r3, #8
 800d4cc:	9307      	str	r3, [sp, #28]
 800d4ce:	6963      	ldr	r3, [r4, #20]
 800d4d0:	9a04      	ldr	r2, [sp, #16]
 800d4d2:	189b      	adds	r3, r3, r2
 800d4d4:	6163      	str	r3, [r4, #20]
 800d4d6:	e766      	b.n	800d3a6 <_svfiprintf_r+0x46>
 800d4d8:	4343      	muls	r3, r0
 800d4da:	2101      	movs	r1, #1
 800d4dc:	189b      	adds	r3, r3, r2
 800d4de:	0035      	movs	r5, r6
 800d4e0:	e7a6      	b.n	800d430 <_svfiprintf_r+0xd0>
 800d4e2:	2301      	movs	r3, #1
 800d4e4:	425b      	negs	r3, r3
 800d4e6:	e7d0      	b.n	800d48a <_svfiprintf_r+0x12a>
 800d4e8:	2300      	movs	r3, #0
 800d4ea:	200a      	movs	r0, #10
 800d4ec:	001a      	movs	r2, r3
 800d4ee:	3501      	adds	r5, #1
 800d4f0:	6063      	str	r3, [r4, #4]
 800d4f2:	7829      	ldrb	r1, [r5, #0]
 800d4f4:	1c6e      	adds	r6, r5, #1
 800d4f6:	3930      	subs	r1, #48	; 0x30
 800d4f8:	2909      	cmp	r1, #9
 800d4fa:	d903      	bls.n	800d504 <_svfiprintf_r+0x1a4>
 800d4fc:	2b00      	cmp	r3, #0
 800d4fe:	d0c5      	beq.n	800d48c <_svfiprintf_r+0x12c>
 800d500:	9209      	str	r2, [sp, #36]	; 0x24
 800d502:	e7c3      	b.n	800d48c <_svfiprintf_r+0x12c>
 800d504:	4342      	muls	r2, r0
 800d506:	2301      	movs	r3, #1
 800d508:	1852      	adds	r2, r2, r1
 800d50a:	0035      	movs	r5, r6
 800d50c:	e7f1      	b.n	800d4f2 <_svfiprintf_r+0x192>
 800d50e:	ab07      	add	r3, sp, #28
 800d510:	9300      	str	r3, [sp, #0]
 800d512:	003a      	movs	r2, r7
 800d514:	4b10      	ldr	r3, [pc, #64]	; (800d558 <_svfiprintf_r+0x1f8>)
 800d516:	0021      	movs	r1, r4
 800d518:	9803      	ldr	r0, [sp, #12]
 800d51a:	f7fc f8c9 	bl	80096b0 <_printf_float>
 800d51e:	9004      	str	r0, [sp, #16]
 800d520:	9b04      	ldr	r3, [sp, #16]
 800d522:	3301      	adds	r3, #1
 800d524:	d1d3      	bne.n	800d4ce <_svfiprintf_r+0x16e>
 800d526:	89bb      	ldrh	r3, [r7, #12]
 800d528:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d52a:	065b      	lsls	r3, r3, #25
 800d52c:	d400      	bmi.n	800d530 <_svfiprintf_r+0x1d0>
 800d52e:	e72e      	b.n	800d38e <_svfiprintf_r+0x2e>
 800d530:	2001      	movs	r0, #1
 800d532:	4240      	negs	r0, r0
 800d534:	e72b      	b.n	800d38e <_svfiprintf_r+0x2e>
 800d536:	ab07      	add	r3, sp, #28
 800d538:	9300      	str	r3, [sp, #0]
 800d53a:	003a      	movs	r2, r7
 800d53c:	4b06      	ldr	r3, [pc, #24]	; (800d558 <_svfiprintf_r+0x1f8>)
 800d53e:	0021      	movs	r1, r4
 800d540:	9803      	ldr	r0, [sp, #12]
 800d542:	f7fc fb6f 	bl	8009c24 <_printf_i>
 800d546:	e7ea      	b.n	800d51e <_svfiprintf_r+0x1be>
 800d548:	0800e504 	.word	0x0800e504
 800d54c:	0800e50a 	.word	0x0800e50a
 800d550:	0800e50e 	.word	0x0800e50e
 800d554:	080096b1 	.word	0x080096b1
 800d558:	0800d29d 	.word	0x0800d29d

0800d55c <__sfputc_r>:
 800d55c:	6893      	ldr	r3, [r2, #8]
 800d55e:	b510      	push	{r4, lr}
 800d560:	3b01      	subs	r3, #1
 800d562:	6093      	str	r3, [r2, #8]
 800d564:	2b00      	cmp	r3, #0
 800d566:	da04      	bge.n	800d572 <__sfputc_r+0x16>
 800d568:	6994      	ldr	r4, [r2, #24]
 800d56a:	42a3      	cmp	r3, r4
 800d56c:	db07      	blt.n	800d57e <__sfputc_r+0x22>
 800d56e:	290a      	cmp	r1, #10
 800d570:	d005      	beq.n	800d57e <__sfputc_r+0x22>
 800d572:	6813      	ldr	r3, [r2, #0]
 800d574:	1c58      	adds	r0, r3, #1
 800d576:	6010      	str	r0, [r2, #0]
 800d578:	7019      	strb	r1, [r3, #0]
 800d57a:	0008      	movs	r0, r1
 800d57c:	bd10      	pop	{r4, pc}
 800d57e:	f7fd fe3d 	bl	800b1fc <__swbuf_r>
 800d582:	0001      	movs	r1, r0
 800d584:	e7f9      	b.n	800d57a <__sfputc_r+0x1e>

0800d586 <__sfputs_r>:
 800d586:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d588:	0006      	movs	r6, r0
 800d58a:	000f      	movs	r7, r1
 800d58c:	0014      	movs	r4, r2
 800d58e:	18d5      	adds	r5, r2, r3
 800d590:	42ac      	cmp	r4, r5
 800d592:	d101      	bne.n	800d598 <__sfputs_r+0x12>
 800d594:	2000      	movs	r0, #0
 800d596:	e007      	b.n	800d5a8 <__sfputs_r+0x22>
 800d598:	7821      	ldrb	r1, [r4, #0]
 800d59a:	003a      	movs	r2, r7
 800d59c:	0030      	movs	r0, r6
 800d59e:	f7ff ffdd 	bl	800d55c <__sfputc_r>
 800d5a2:	3401      	adds	r4, #1
 800d5a4:	1c43      	adds	r3, r0, #1
 800d5a6:	d1f3      	bne.n	800d590 <__sfputs_r+0xa>
 800d5a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d5ac <_vfiprintf_r>:
 800d5ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5ae:	b0a1      	sub	sp, #132	; 0x84
 800d5b0:	9003      	str	r0, [sp, #12]
 800d5b2:	000f      	movs	r7, r1
 800d5b4:	0016      	movs	r6, r2
 800d5b6:	001d      	movs	r5, r3
 800d5b8:	2800      	cmp	r0, #0
 800d5ba:	d005      	beq.n	800d5c8 <_vfiprintf_r+0x1c>
 800d5bc:	6983      	ldr	r3, [r0, #24]
 800d5be:	9305      	str	r3, [sp, #20]
 800d5c0:	2b00      	cmp	r3, #0
 800d5c2:	d101      	bne.n	800d5c8 <_vfiprintf_r+0x1c>
 800d5c4:	f7fb feba 	bl	800933c <__sinit>
 800d5c8:	4b7b      	ldr	r3, [pc, #492]	; (800d7b8 <_vfiprintf_r+0x20c>)
 800d5ca:	429f      	cmp	r7, r3
 800d5cc:	d15c      	bne.n	800d688 <_vfiprintf_r+0xdc>
 800d5ce:	9b03      	ldr	r3, [sp, #12]
 800d5d0:	685f      	ldr	r7, [r3, #4]
 800d5d2:	89bb      	ldrh	r3, [r7, #12]
 800d5d4:	071b      	lsls	r3, r3, #28
 800d5d6:	d563      	bpl.n	800d6a0 <_vfiprintf_r+0xf4>
 800d5d8:	693b      	ldr	r3, [r7, #16]
 800d5da:	2b00      	cmp	r3, #0
 800d5dc:	d060      	beq.n	800d6a0 <_vfiprintf_r+0xf4>
 800d5de:	2300      	movs	r3, #0
 800d5e0:	ac08      	add	r4, sp, #32
 800d5e2:	6163      	str	r3, [r4, #20]
 800d5e4:	3320      	adds	r3, #32
 800d5e6:	7663      	strb	r3, [r4, #25]
 800d5e8:	3310      	adds	r3, #16
 800d5ea:	76a3      	strb	r3, [r4, #26]
 800d5ec:	9507      	str	r5, [sp, #28]
 800d5ee:	0035      	movs	r5, r6
 800d5f0:	782b      	ldrb	r3, [r5, #0]
 800d5f2:	2b00      	cmp	r3, #0
 800d5f4:	d001      	beq.n	800d5fa <_vfiprintf_r+0x4e>
 800d5f6:	2b25      	cmp	r3, #37	; 0x25
 800d5f8:	d15c      	bne.n	800d6b4 <_vfiprintf_r+0x108>
 800d5fa:	1bab      	subs	r3, r5, r6
 800d5fc:	9305      	str	r3, [sp, #20]
 800d5fe:	d00c      	beq.n	800d61a <_vfiprintf_r+0x6e>
 800d600:	0032      	movs	r2, r6
 800d602:	0039      	movs	r1, r7
 800d604:	9803      	ldr	r0, [sp, #12]
 800d606:	f7ff ffbe 	bl	800d586 <__sfputs_r>
 800d60a:	1c43      	adds	r3, r0, #1
 800d60c:	d100      	bne.n	800d610 <_vfiprintf_r+0x64>
 800d60e:	e0c4      	b.n	800d79a <_vfiprintf_r+0x1ee>
 800d610:	6962      	ldr	r2, [r4, #20]
 800d612:	9b05      	ldr	r3, [sp, #20]
 800d614:	4694      	mov	ip, r2
 800d616:	4463      	add	r3, ip
 800d618:	6163      	str	r3, [r4, #20]
 800d61a:	782b      	ldrb	r3, [r5, #0]
 800d61c:	2b00      	cmp	r3, #0
 800d61e:	d100      	bne.n	800d622 <_vfiprintf_r+0x76>
 800d620:	e0bb      	b.n	800d79a <_vfiprintf_r+0x1ee>
 800d622:	2201      	movs	r2, #1
 800d624:	2300      	movs	r3, #0
 800d626:	4252      	negs	r2, r2
 800d628:	6062      	str	r2, [r4, #4]
 800d62a:	a904      	add	r1, sp, #16
 800d62c:	3254      	adds	r2, #84	; 0x54
 800d62e:	1852      	adds	r2, r2, r1
 800d630:	1c6e      	adds	r6, r5, #1
 800d632:	6023      	str	r3, [r4, #0]
 800d634:	60e3      	str	r3, [r4, #12]
 800d636:	60a3      	str	r3, [r4, #8]
 800d638:	7013      	strb	r3, [r2, #0]
 800d63a:	65a3      	str	r3, [r4, #88]	; 0x58
 800d63c:	7831      	ldrb	r1, [r6, #0]
 800d63e:	2205      	movs	r2, #5
 800d640:	485e      	ldr	r0, [pc, #376]	; (800d7bc <_vfiprintf_r+0x210>)
 800d642:	f7ff f9c7 	bl	800c9d4 <memchr>
 800d646:	1c75      	adds	r5, r6, #1
 800d648:	2800      	cmp	r0, #0
 800d64a:	d135      	bne.n	800d6b8 <_vfiprintf_r+0x10c>
 800d64c:	6822      	ldr	r2, [r4, #0]
 800d64e:	06d3      	lsls	r3, r2, #27
 800d650:	d504      	bpl.n	800d65c <_vfiprintf_r+0xb0>
 800d652:	2353      	movs	r3, #83	; 0x53
 800d654:	a904      	add	r1, sp, #16
 800d656:	185b      	adds	r3, r3, r1
 800d658:	2120      	movs	r1, #32
 800d65a:	7019      	strb	r1, [r3, #0]
 800d65c:	0713      	lsls	r3, r2, #28
 800d65e:	d504      	bpl.n	800d66a <_vfiprintf_r+0xbe>
 800d660:	2353      	movs	r3, #83	; 0x53
 800d662:	a904      	add	r1, sp, #16
 800d664:	185b      	adds	r3, r3, r1
 800d666:	212b      	movs	r1, #43	; 0x2b
 800d668:	7019      	strb	r1, [r3, #0]
 800d66a:	7833      	ldrb	r3, [r6, #0]
 800d66c:	2b2a      	cmp	r3, #42	; 0x2a
 800d66e:	d02c      	beq.n	800d6ca <_vfiprintf_r+0x11e>
 800d670:	0035      	movs	r5, r6
 800d672:	2100      	movs	r1, #0
 800d674:	200a      	movs	r0, #10
 800d676:	68e3      	ldr	r3, [r4, #12]
 800d678:	782a      	ldrb	r2, [r5, #0]
 800d67a:	1c6e      	adds	r6, r5, #1
 800d67c:	3a30      	subs	r2, #48	; 0x30
 800d67e:	2a09      	cmp	r2, #9
 800d680:	d964      	bls.n	800d74c <_vfiprintf_r+0x1a0>
 800d682:	2900      	cmp	r1, #0
 800d684:	d02e      	beq.n	800d6e4 <_vfiprintf_r+0x138>
 800d686:	e026      	b.n	800d6d6 <_vfiprintf_r+0x12a>
 800d688:	4b4d      	ldr	r3, [pc, #308]	; (800d7c0 <_vfiprintf_r+0x214>)
 800d68a:	429f      	cmp	r7, r3
 800d68c:	d102      	bne.n	800d694 <_vfiprintf_r+0xe8>
 800d68e:	9b03      	ldr	r3, [sp, #12]
 800d690:	689f      	ldr	r7, [r3, #8]
 800d692:	e79e      	b.n	800d5d2 <_vfiprintf_r+0x26>
 800d694:	4b4b      	ldr	r3, [pc, #300]	; (800d7c4 <_vfiprintf_r+0x218>)
 800d696:	429f      	cmp	r7, r3
 800d698:	d19b      	bne.n	800d5d2 <_vfiprintf_r+0x26>
 800d69a:	9b03      	ldr	r3, [sp, #12]
 800d69c:	68df      	ldr	r7, [r3, #12]
 800d69e:	e798      	b.n	800d5d2 <_vfiprintf_r+0x26>
 800d6a0:	0039      	movs	r1, r7
 800d6a2:	9803      	ldr	r0, [sp, #12]
 800d6a4:	f7fd fe14 	bl	800b2d0 <__swsetup_r>
 800d6a8:	2800      	cmp	r0, #0
 800d6aa:	d098      	beq.n	800d5de <_vfiprintf_r+0x32>
 800d6ac:	2001      	movs	r0, #1
 800d6ae:	4240      	negs	r0, r0
 800d6b0:	b021      	add	sp, #132	; 0x84
 800d6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d6b4:	3501      	adds	r5, #1
 800d6b6:	e79b      	b.n	800d5f0 <_vfiprintf_r+0x44>
 800d6b8:	4b40      	ldr	r3, [pc, #256]	; (800d7bc <_vfiprintf_r+0x210>)
 800d6ba:	6822      	ldr	r2, [r4, #0]
 800d6bc:	1ac0      	subs	r0, r0, r3
 800d6be:	2301      	movs	r3, #1
 800d6c0:	4083      	lsls	r3, r0
 800d6c2:	4313      	orrs	r3, r2
 800d6c4:	6023      	str	r3, [r4, #0]
 800d6c6:	002e      	movs	r6, r5
 800d6c8:	e7b8      	b.n	800d63c <_vfiprintf_r+0x90>
 800d6ca:	9b07      	ldr	r3, [sp, #28]
 800d6cc:	1d19      	adds	r1, r3, #4
 800d6ce:	681b      	ldr	r3, [r3, #0]
 800d6d0:	9107      	str	r1, [sp, #28]
 800d6d2:	2b00      	cmp	r3, #0
 800d6d4:	db01      	blt.n	800d6da <_vfiprintf_r+0x12e>
 800d6d6:	930b      	str	r3, [sp, #44]	; 0x2c
 800d6d8:	e004      	b.n	800d6e4 <_vfiprintf_r+0x138>
 800d6da:	425b      	negs	r3, r3
 800d6dc:	60e3      	str	r3, [r4, #12]
 800d6de:	2302      	movs	r3, #2
 800d6e0:	4313      	orrs	r3, r2
 800d6e2:	6023      	str	r3, [r4, #0]
 800d6e4:	782b      	ldrb	r3, [r5, #0]
 800d6e6:	2b2e      	cmp	r3, #46	; 0x2e
 800d6e8:	d10a      	bne.n	800d700 <_vfiprintf_r+0x154>
 800d6ea:	786b      	ldrb	r3, [r5, #1]
 800d6ec:	2b2a      	cmp	r3, #42	; 0x2a
 800d6ee:	d135      	bne.n	800d75c <_vfiprintf_r+0x1b0>
 800d6f0:	9b07      	ldr	r3, [sp, #28]
 800d6f2:	3502      	adds	r5, #2
 800d6f4:	1d1a      	adds	r2, r3, #4
 800d6f6:	681b      	ldr	r3, [r3, #0]
 800d6f8:	9207      	str	r2, [sp, #28]
 800d6fa:	2b00      	cmp	r3, #0
 800d6fc:	db2b      	blt.n	800d756 <_vfiprintf_r+0x1aa>
 800d6fe:	9309      	str	r3, [sp, #36]	; 0x24
 800d700:	4e31      	ldr	r6, [pc, #196]	; (800d7c8 <_vfiprintf_r+0x21c>)
 800d702:	7829      	ldrb	r1, [r5, #0]
 800d704:	2203      	movs	r2, #3
 800d706:	0030      	movs	r0, r6
 800d708:	f7ff f964 	bl	800c9d4 <memchr>
 800d70c:	2800      	cmp	r0, #0
 800d70e:	d006      	beq.n	800d71e <_vfiprintf_r+0x172>
 800d710:	2340      	movs	r3, #64	; 0x40
 800d712:	1b80      	subs	r0, r0, r6
 800d714:	4083      	lsls	r3, r0
 800d716:	6822      	ldr	r2, [r4, #0]
 800d718:	3501      	adds	r5, #1
 800d71a:	4313      	orrs	r3, r2
 800d71c:	6023      	str	r3, [r4, #0]
 800d71e:	7829      	ldrb	r1, [r5, #0]
 800d720:	2206      	movs	r2, #6
 800d722:	482a      	ldr	r0, [pc, #168]	; (800d7cc <_vfiprintf_r+0x220>)
 800d724:	1c6e      	adds	r6, r5, #1
 800d726:	7621      	strb	r1, [r4, #24]
 800d728:	f7ff f954 	bl	800c9d4 <memchr>
 800d72c:	2800      	cmp	r0, #0
 800d72e:	d03a      	beq.n	800d7a6 <_vfiprintf_r+0x1fa>
 800d730:	4b27      	ldr	r3, [pc, #156]	; (800d7d0 <_vfiprintf_r+0x224>)
 800d732:	2b00      	cmp	r3, #0
 800d734:	d125      	bne.n	800d782 <_vfiprintf_r+0x1d6>
 800d736:	2207      	movs	r2, #7
 800d738:	9b07      	ldr	r3, [sp, #28]
 800d73a:	3307      	adds	r3, #7
 800d73c:	4393      	bics	r3, r2
 800d73e:	3308      	adds	r3, #8
 800d740:	9307      	str	r3, [sp, #28]
 800d742:	6963      	ldr	r3, [r4, #20]
 800d744:	9a04      	ldr	r2, [sp, #16]
 800d746:	189b      	adds	r3, r3, r2
 800d748:	6163      	str	r3, [r4, #20]
 800d74a:	e750      	b.n	800d5ee <_vfiprintf_r+0x42>
 800d74c:	4343      	muls	r3, r0
 800d74e:	2101      	movs	r1, #1
 800d750:	189b      	adds	r3, r3, r2
 800d752:	0035      	movs	r5, r6
 800d754:	e790      	b.n	800d678 <_vfiprintf_r+0xcc>
 800d756:	2301      	movs	r3, #1
 800d758:	425b      	negs	r3, r3
 800d75a:	e7d0      	b.n	800d6fe <_vfiprintf_r+0x152>
 800d75c:	2300      	movs	r3, #0
 800d75e:	200a      	movs	r0, #10
 800d760:	001a      	movs	r2, r3
 800d762:	3501      	adds	r5, #1
 800d764:	6063      	str	r3, [r4, #4]
 800d766:	7829      	ldrb	r1, [r5, #0]
 800d768:	1c6e      	adds	r6, r5, #1
 800d76a:	3930      	subs	r1, #48	; 0x30
 800d76c:	2909      	cmp	r1, #9
 800d76e:	d903      	bls.n	800d778 <_vfiprintf_r+0x1cc>
 800d770:	2b00      	cmp	r3, #0
 800d772:	d0c5      	beq.n	800d700 <_vfiprintf_r+0x154>
 800d774:	9209      	str	r2, [sp, #36]	; 0x24
 800d776:	e7c3      	b.n	800d700 <_vfiprintf_r+0x154>
 800d778:	4342      	muls	r2, r0
 800d77a:	2301      	movs	r3, #1
 800d77c:	1852      	adds	r2, r2, r1
 800d77e:	0035      	movs	r5, r6
 800d780:	e7f1      	b.n	800d766 <_vfiprintf_r+0x1ba>
 800d782:	ab07      	add	r3, sp, #28
 800d784:	9300      	str	r3, [sp, #0]
 800d786:	003a      	movs	r2, r7
 800d788:	4b12      	ldr	r3, [pc, #72]	; (800d7d4 <_vfiprintf_r+0x228>)
 800d78a:	0021      	movs	r1, r4
 800d78c:	9803      	ldr	r0, [sp, #12]
 800d78e:	f7fb ff8f 	bl	80096b0 <_printf_float>
 800d792:	9004      	str	r0, [sp, #16]
 800d794:	9b04      	ldr	r3, [sp, #16]
 800d796:	3301      	adds	r3, #1
 800d798:	d1d3      	bne.n	800d742 <_vfiprintf_r+0x196>
 800d79a:	89bb      	ldrh	r3, [r7, #12]
 800d79c:	065b      	lsls	r3, r3, #25
 800d79e:	d500      	bpl.n	800d7a2 <_vfiprintf_r+0x1f6>
 800d7a0:	e784      	b.n	800d6ac <_vfiprintf_r+0x100>
 800d7a2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d7a4:	e784      	b.n	800d6b0 <_vfiprintf_r+0x104>
 800d7a6:	ab07      	add	r3, sp, #28
 800d7a8:	9300      	str	r3, [sp, #0]
 800d7aa:	003a      	movs	r2, r7
 800d7ac:	4b09      	ldr	r3, [pc, #36]	; (800d7d4 <_vfiprintf_r+0x228>)
 800d7ae:	0021      	movs	r1, r4
 800d7b0:	9803      	ldr	r0, [sp, #12]
 800d7b2:	f7fc fa37 	bl	8009c24 <_printf_i>
 800d7b6:	e7ec      	b.n	800d792 <_vfiprintf_r+0x1e6>
 800d7b8:	0800e320 	.word	0x0800e320
 800d7bc:	0800e504 	.word	0x0800e504
 800d7c0:	0800e340 	.word	0x0800e340
 800d7c4:	0800e300 	.word	0x0800e300
 800d7c8:	0800e50a 	.word	0x0800e50a
 800d7cc:	0800e50e 	.word	0x0800e50e
 800d7d0:	080096b1 	.word	0x080096b1
 800d7d4:	0800d587 	.word	0x0800d587

0800d7d8 <_read_r>:
 800d7d8:	b570      	push	{r4, r5, r6, lr}
 800d7da:	0005      	movs	r5, r0
 800d7dc:	0008      	movs	r0, r1
 800d7de:	0011      	movs	r1, r2
 800d7e0:	2200      	movs	r2, #0
 800d7e2:	4c06      	ldr	r4, [pc, #24]	; (800d7fc <_read_r+0x24>)
 800d7e4:	6022      	str	r2, [r4, #0]
 800d7e6:	001a      	movs	r2, r3
 800d7e8:	f7fb fb06 	bl	8008df8 <_read>
 800d7ec:	1c43      	adds	r3, r0, #1
 800d7ee:	d103      	bne.n	800d7f8 <_read_r+0x20>
 800d7f0:	6823      	ldr	r3, [r4, #0]
 800d7f2:	2b00      	cmp	r3, #0
 800d7f4:	d000      	beq.n	800d7f8 <_read_r+0x20>
 800d7f6:	602b      	str	r3, [r5, #0]
 800d7f8:	bd70      	pop	{r4, r5, r6, pc}
 800d7fa:	46c0      	nop			; (mov r8, r8)
 800d7fc:	2000446c 	.word	0x2000446c

0800d800 <strncmp>:
 800d800:	2300      	movs	r3, #0
 800d802:	b530      	push	{r4, r5, lr}
 800d804:	429a      	cmp	r2, r3
 800d806:	d00a      	beq.n	800d81e <strncmp+0x1e>
 800d808:	3a01      	subs	r2, #1
 800d80a:	5cc4      	ldrb	r4, [r0, r3]
 800d80c:	5ccd      	ldrb	r5, [r1, r3]
 800d80e:	42ac      	cmp	r4, r5
 800d810:	d104      	bne.n	800d81c <strncmp+0x1c>
 800d812:	4293      	cmp	r3, r2
 800d814:	d002      	beq.n	800d81c <strncmp+0x1c>
 800d816:	3301      	adds	r3, #1
 800d818:	2c00      	cmp	r4, #0
 800d81a:	d1f6      	bne.n	800d80a <strncmp+0xa>
 800d81c:	1b63      	subs	r3, r4, r5
 800d81e:	0018      	movs	r0, r3
 800d820:	bd30      	pop	{r4, r5, pc}

0800d822 <__ascii_wctomb>:
 800d822:	1e0b      	subs	r3, r1, #0
 800d824:	d004      	beq.n	800d830 <__ascii_wctomb+0xe>
 800d826:	2aff      	cmp	r2, #255	; 0xff
 800d828:	d904      	bls.n	800d834 <__ascii_wctomb+0x12>
 800d82a:	238a      	movs	r3, #138	; 0x8a
 800d82c:	6003      	str	r3, [r0, #0]
 800d82e:	3b8b      	subs	r3, #139	; 0x8b
 800d830:	0018      	movs	r0, r3
 800d832:	4770      	bx	lr
 800d834:	700a      	strb	r2, [r1, #0]
 800d836:	2301      	movs	r3, #1
 800d838:	e7fa      	b.n	800d830 <__ascii_wctomb+0xe>
	...

0800d83c <_fstat_r>:
 800d83c:	2300      	movs	r3, #0
 800d83e:	b570      	push	{r4, r5, r6, lr}
 800d840:	4c06      	ldr	r4, [pc, #24]	; (800d85c <_fstat_r+0x20>)
 800d842:	0005      	movs	r5, r0
 800d844:	0008      	movs	r0, r1
 800d846:	0011      	movs	r1, r2
 800d848:	6023      	str	r3, [r4, #0]
 800d84a:	f7fb fbb1 	bl	8008fb0 <_fstat>
 800d84e:	1c43      	adds	r3, r0, #1
 800d850:	d103      	bne.n	800d85a <_fstat_r+0x1e>
 800d852:	6823      	ldr	r3, [r4, #0]
 800d854:	2b00      	cmp	r3, #0
 800d856:	d000      	beq.n	800d85a <_fstat_r+0x1e>
 800d858:	602b      	str	r3, [r5, #0]
 800d85a:	bd70      	pop	{r4, r5, r6, pc}
 800d85c:	2000446c 	.word	0x2000446c

0800d860 <_isatty_r>:
 800d860:	2300      	movs	r3, #0
 800d862:	b570      	push	{r4, r5, r6, lr}
 800d864:	4c06      	ldr	r4, [pc, #24]	; (800d880 <_isatty_r+0x20>)
 800d866:	0005      	movs	r5, r0
 800d868:	0008      	movs	r0, r1
 800d86a:	6023      	str	r3, [r4, #0]
 800d86c:	f7fb fd00 	bl	8009270 <_isatty>
 800d870:	1c43      	adds	r3, r0, #1
 800d872:	d103      	bne.n	800d87c <_isatty_r+0x1c>
 800d874:	6823      	ldr	r3, [r4, #0]
 800d876:	2b00      	cmp	r3, #0
 800d878:	d000      	beq.n	800d87c <_isatty_r+0x1c>
 800d87a:	602b      	str	r3, [r5, #0]
 800d87c:	bd70      	pop	{r4, r5, r6, pc}
 800d87e:	46c0      	nop			; (mov r8, r8)
 800d880:	2000446c 	.word	0x2000446c

0800d884 <memmove>:
 800d884:	b510      	push	{r4, lr}
 800d886:	4288      	cmp	r0, r1
 800d888:	d902      	bls.n	800d890 <memmove+0xc>
 800d88a:	188b      	adds	r3, r1, r2
 800d88c:	4298      	cmp	r0, r3
 800d88e:	d303      	bcc.n	800d898 <memmove+0x14>
 800d890:	2300      	movs	r3, #0
 800d892:	e007      	b.n	800d8a4 <memmove+0x20>
 800d894:	5c8b      	ldrb	r3, [r1, r2]
 800d896:	5483      	strb	r3, [r0, r2]
 800d898:	3a01      	subs	r2, #1
 800d89a:	d2fb      	bcs.n	800d894 <memmove+0x10>
 800d89c:	bd10      	pop	{r4, pc}
 800d89e:	5ccc      	ldrb	r4, [r1, r3]
 800d8a0:	54c4      	strb	r4, [r0, r3]
 800d8a2:	3301      	adds	r3, #1
 800d8a4:	429a      	cmp	r2, r3
 800d8a6:	d1fa      	bne.n	800d89e <memmove+0x1a>
 800d8a8:	e7f8      	b.n	800d89c <memmove+0x18>

0800d8aa <_realloc_r>:
 800d8aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d8ac:	0007      	movs	r7, r0
 800d8ae:	000d      	movs	r5, r1
 800d8b0:	0016      	movs	r6, r2
 800d8b2:	2900      	cmp	r1, #0
 800d8b4:	d105      	bne.n	800d8c2 <_realloc_r+0x18>
 800d8b6:	0011      	movs	r1, r2
 800d8b8:	f7fb fe00 	bl	80094bc <_malloc_r>
 800d8bc:	0004      	movs	r4, r0
 800d8be:	0020      	movs	r0, r4
 800d8c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8c2:	2a00      	cmp	r2, #0
 800d8c4:	d103      	bne.n	800d8ce <_realloc_r+0x24>
 800d8c6:	f7ff fc9f 	bl	800d208 <_free_r>
 800d8ca:	0034      	movs	r4, r6
 800d8cc:	e7f7      	b.n	800d8be <_realloc_r+0x14>
 800d8ce:	f000 f812 	bl	800d8f6 <_malloc_usable_size_r>
 800d8d2:	002c      	movs	r4, r5
 800d8d4:	42b0      	cmp	r0, r6
 800d8d6:	d2f2      	bcs.n	800d8be <_realloc_r+0x14>
 800d8d8:	0031      	movs	r1, r6
 800d8da:	0038      	movs	r0, r7
 800d8dc:	f7fb fdee 	bl	80094bc <_malloc_r>
 800d8e0:	1e04      	subs	r4, r0, #0
 800d8e2:	d0ec      	beq.n	800d8be <_realloc_r+0x14>
 800d8e4:	0029      	movs	r1, r5
 800d8e6:	0032      	movs	r2, r6
 800d8e8:	f7ff f87f 	bl	800c9ea <memcpy>
 800d8ec:	0029      	movs	r1, r5
 800d8ee:	0038      	movs	r0, r7
 800d8f0:	f7ff fc8a 	bl	800d208 <_free_r>
 800d8f4:	e7e3      	b.n	800d8be <_realloc_r+0x14>

0800d8f6 <_malloc_usable_size_r>:
 800d8f6:	1f0b      	subs	r3, r1, #4
 800d8f8:	681b      	ldr	r3, [r3, #0]
 800d8fa:	1f18      	subs	r0, r3, #4
 800d8fc:	2b00      	cmp	r3, #0
 800d8fe:	da01      	bge.n	800d904 <_malloc_usable_size_r+0xe>
 800d900:	580b      	ldr	r3, [r1, r0]
 800d902:	18c0      	adds	r0, r0, r3
 800d904:	4770      	bx	lr
	...

0800d908 <sqrtf>:
 800d908:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d90a:	2500      	movs	r5, #0
 800d90c:	b08d      	sub	sp, #52	; 0x34
 800d90e:	1c04      	adds	r4, r0, #0
 800d910:	f000 f84a 	bl	800d9a8 <__ieee754_sqrtf>
 800d914:	4b22      	ldr	r3, [pc, #136]	; (800d9a0 <sqrtf+0x98>)
 800d916:	1c06      	adds	r6, r0, #0
 800d918:	575d      	ldrsb	r5, [r3, r5]
 800d91a:	1c6b      	adds	r3, r5, #1
 800d91c:	d030      	beq.n	800d980 <sqrtf+0x78>
 800d91e:	1c21      	adds	r1, r4, #0
 800d920:	1c20      	adds	r0, r4, #0
 800d922:	f7f3 fcad 	bl	8001280 <__aeabi_fcmpun>
 800d926:	1e07      	subs	r7, r0, #0
 800d928:	d12a      	bne.n	800d980 <sqrtf+0x78>
 800d92a:	2100      	movs	r1, #0
 800d92c:	1c20      	adds	r0, r4, #0
 800d92e:	f7f2 fdc3 	bl	80004b8 <__aeabi_fcmplt>
 800d932:	2800      	cmp	r0, #0
 800d934:	d024      	beq.n	800d980 <sqrtf+0x78>
 800d936:	2301      	movs	r3, #1
 800d938:	9302      	str	r3, [sp, #8]
 800d93a:	4b1a      	ldr	r3, [pc, #104]	; (800d9a4 <sqrtf+0x9c>)
 800d93c:	1c20      	adds	r0, r4, #0
 800d93e:	9303      	str	r3, [sp, #12]
 800d940:	970a      	str	r7, [sp, #40]	; 0x28
 800d942:	f7f5 fab1 	bl	8002ea8 <__aeabi_f2d>
 800d946:	2200      	movs	r2, #0
 800d948:	9006      	str	r0, [sp, #24]
 800d94a:	9107      	str	r1, [sp, #28]
 800d94c:	9004      	str	r0, [sp, #16]
 800d94e:	9105      	str	r1, [sp, #20]
 800d950:	2300      	movs	r3, #0
 800d952:	2d00      	cmp	r5, #0
 800d954:	d117      	bne.n	800d986 <sqrtf+0x7e>
 800d956:	9208      	str	r2, [sp, #32]
 800d958:	9309      	str	r3, [sp, #36]	; 0x24
 800d95a:	a802      	add	r0, sp, #8
 800d95c:	f000 f87c 	bl	800da58 <matherr>
 800d960:	2800      	cmp	r0, #0
 800d962:	d018      	beq.n	800d996 <sqrtf+0x8e>
 800d964:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d966:	9301      	str	r3, [sp, #4]
 800d968:	2b00      	cmp	r3, #0
 800d96a:	d004      	beq.n	800d976 <sqrtf+0x6e>
 800d96c:	f7fb fc9e 	bl	80092ac <__errno>
 800d970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d972:	9301      	str	r3, [sp, #4]
 800d974:	6003      	str	r3, [r0, #0]
 800d976:	9808      	ldr	r0, [sp, #32]
 800d978:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d97a:	f7f5 fae7 	bl	8002f4c <__aeabi_d2f>
 800d97e:	1c06      	adds	r6, r0, #0
 800d980:	1c30      	adds	r0, r6, #0
 800d982:	b00d      	add	sp, #52	; 0x34
 800d984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d986:	0010      	movs	r0, r2
 800d988:	0019      	movs	r1, r3
 800d98a:	f7f4 f80b 	bl	80019a4 <__aeabi_ddiv>
 800d98e:	9008      	str	r0, [sp, #32]
 800d990:	9109      	str	r1, [sp, #36]	; 0x24
 800d992:	2d02      	cmp	r5, #2
 800d994:	d1e1      	bne.n	800d95a <sqrtf+0x52>
 800d996:	f7fb fc89 	bl	80092ac <__errno>
 800d99a:	2321      	movs	r3, #33	; 0x21
 800d99c:	6003      	str	r3, [r0, #0]
 800d99e:	e7e1      	b.n	800d964 <sqrtf+0x5c>
 800d9a0:	200002d8 	.word	0x200002d8
 800d9a4:	0800e616 	.word	0x0800e616

0800d9a8 <__ieee754_sqrtf>:
 800d9a8:	4929      	ldr	r1, [pc, #164]	; (800da50 <__ieee754_sqrtf+0xa8>)
 800d9aa:	0043      	lsls	r3, r0, #1
 800d9ac:	b570      	push	{r4, r5, r6, lr}
 800d9ae:	0002      	movs	r2, r0
 800d9b0:	1c04      	adds	r4, r0, #0
 800d9b2:	085b      	lsrs	r3, r3, #1
 800d9b4:	428b      	cmp	r3, r1
 800d9b6:	d909      	bls.n	800d9cc <__ieee754_sqrtf+0x24>
 800d9b8:	1c01      	adds	r1, r0, #0
 800d9ba:	f7f3 f96b 	bl	8000c94 <__aeabi_fmul>
 800d9be:	1c01      	adds	r1, r0, #0
 800d9c0:	1c20      	adds	r0, r4, #0
 800d9c2:	f7f2 fdf5 	bl	80005b0 <__aeabi_fadd>
 800d9c6:	1c04      	adds	r4, r0, #0
 800d9c8:	1c20      	adds	r0, r4, #0
 800d9ca:	bd70      	pop	{r4, r5, r6, pc}
 800d9cc:	2b00      	cmp	r3, #0
 800d9ce:	d0fb      	beq.n	800d9c8 <__ieee754_sqrtf+0x20>
 800d9d0:	2800      	cmp	r0, #0
 800d9d2:	da06      	bge.n	800d9e2 <__ieee754_sqrtf+0x3a>
 800d9d4:	1c01      	adds	r1, r0, #0
 800d9d6:	f7f3 fa8f 	bl	8000ef8 <__aeabi_fsub>
 800d9da:	1c01      	adds	r1, r0, #0
 800d9dc:	f7f2 ff82 	bl	80008e4 <__aeabi_fdiv>
 800d9e0:	e7f1      	b.n	800d9c6 <__ieee754_sqrtf+0x1e>
 800d9e2:	491c      	ldr	r1, [pc, #112]	; (800da54 <__ieee754_sqrtf+0xac>)
 800d9e4:	15c4      	asrs	r4, r0, #23
 800d9e6:	428b      	cmp	r3, r1
 800d9e8:	d92d      	bls.n	800da46 <__ieee754_sqrtf+0x9e>
 800d9ea:	0252      	lsls	r2, r2, #9
 800d9ec:	0a53      	lsrs	r3, r2, #9
 800d9ee:	2280      	movs	r2, #128	; 0x80
 800d9f0:	3c7f      	subs	r4, #127	; 0x7f
 800d9f2:	0412      	lsls	r2, r2, #16
 800d9f4:	431a      	orrs	r2, r3
 800d9f6:	07e3      	lsls	r3, r4, #31
 800d9f8:	d500      	bpl.n	800d9fc <__ieee754_sqrtf+0x54>
 800d9fa:	0052      	lsls	r2, r2, #1
 800d9fc:	2300      	movs	r3, #0
 800d9fe:	2180      	movs	r1, #128	; 0x80
 800da00:	2019      	movs	r0, #25
 800da02:	001e      	movs	r6, r3
 800da04:	1064      	asrs	r4, r4, #1
 800da06:	0052      	lsls	r2, r2, #1
 800da08:	0449      	lsls	r1, r1, #17
 800da0a:	1875      	adds	r5, r6, r1
 800da0c:	4295      	cmp	r5, r2
 800da0e:	dc02      	bgt.n	800da16 <__ieee754_sqrtf+0x6e>
 800da10:	186e      	adds	r6, r5, r1
 800da12:	1b52      	subs	r2, r2, r5
 800da14:	185b      	adds	r3, r3, r1
 800da16:	3801      	subs	r0, #1
 800da18:	0052      	lsls	r2, r2, #1
 800da1a:	0849      	lsrs	r1, r1, #1
 800da1c:	2800      	cmp	r0, #0
 800da1e:	d1f4      	bne.n	800da0a <__ieee754_sqrtf+0x62>
 800da20:	2a00      	cmp	r2, #0
 800da22:	d002      	beq.n	800da2a <__ieee754_sqrtf+0x82>
 800da24:	2201      	movs	r2, #1
 800da26:	3301      	adds	r3, #1
 800da28:	4393      	bics	r3, r2
 800da2a:	22fc      	movs	r2, #252	; 0xfc
 800da2c:	105b      	asrs	r3, r3, #1
 800da2e:	0592      	lsls	r2, r2, #22
 800da30:	189b      	adds	r3, r3, r2
 800da32:	05e4      	lsls	r4, r4, #23
 800da34:	18e4      	adds	r4, r4, r3
 800da36:	e7c7      	b.n	800d9c8 <__ieee754_sqrtf+0x20>
 800da38:	0052      	lsls	r2, r2, #1
 800da3a:	3301      	adds	r3, #1
 800da3c:	420a      	tst	r2, r1
 800da3e:	d0fb      	beq.n	800da38 <__ieee754_sqrtf+0x90>
 800da40:	3b01      	subs	r3, #1
 800da42:	1ae4      	subs	r4, r4, r3
 800da44:	e7d1      	b.n	800d9ea <__ieee754_sqrtf+0x42>
 800da46:	2180      	movs	r1, #128	; 0x80
 800da48:	2300      	movs	r3, #0
 800da4a:	0409      	lsls	r1, r1, #16
 800da4c:	e7f6      	b.n	800da3c <__ieee754_sqrtf+0x94>
 800da4e:	46c0      	nop			; (mov r8, r8)
 800da50:	7f7fffff 	.word	0x7f7fffff
 800da54:	007fffff 	.word	0x007fffff

0800da58 <matherr>:
 800da58:	2000      	movs	r0, #0
 800da5a:	4770      	bx	lr

0800da5c <_init>:
 800da5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da5e:	46c0      	nop			; (mov r8, r8)
 800da60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800da62:	bc08      	pop	{r3}
 800da64:	469e      	mov	lr, r3
 800da66:	4770      	bx	lr

0800da68 <_fini>:
 800da68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da6a:	46c0      	nop			; (mov r8, r8)
 800da6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800da6e:	bc08      	pop	{r3}
 800da70:	469e      	mov	lr, r3
 800da72:	4770      	bx	lr
